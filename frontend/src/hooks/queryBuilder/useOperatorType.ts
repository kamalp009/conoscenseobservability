import { OPERATORS } from 'constants/queryBuilder';

export type OperatorType =
	| 'SINGLE_VALUE'
	| 'MULTIPLY_VALUE'
	| 'NON_VALUE'
	| 'NOT_VALID';

const operatorTypeMapper: Record<string, OperatorType> = {
	[OPERATORS.IN]: 'MULTIPLY_VALUE',
	[OPERATORS.in]: 'MULTIPLY_VALUE',
	[OPERATORS.NIN]: 'MULTIPLY_VALUE',
	[OPERATORS.not_in]: 'MULTIPLY_VALUE',
	[OPERATORS.EXISTS]: 'NON_VALUE',
	[OPERATORS.exists]: 'NON_VALUE',
	[OPERATORS.NOT_EXISTS]: 'NON_VALUE',
	[OPERATORS.not_exists]: 'NON_VALUE',
	[OPERATORS['<=']]: 'SINGLE_VALUE',
	[OPERATORS['<']]: 'SINGLE_VALUE',
	[OPERATORS['>=']]: 'SINGLE_VALUE',
	[OPERATORS['>']]: 'SINGLE_VALUE',
	[OPERATORS.LIKE]: 'SINGLE_VALUE',
	[OPERATORS.like]: 'SINGLE_VALUE',
	[OPERATORS.NLIKE]: 'SINGLE_VALUE',
	[OPERATORS.not_like]: 'SINGLE_VALUE',
	[OPERATORS.REGEX]: 'SINGLE_VALUE',
	[OPERATORS.regex]: 'SINGLE_VALUE',
	[OPERATORS.NREGEX]: 'SINGLE_VALUE',
	[OPERATORS.nregex]: 'SINGLE_VALUE',
	[OPERATORS.CONTAINS]: 'SINGLE_VALUE',
	[OPERATORS.contains]: 'SINGLE_VALUE',
	[OPERATORS.NOT_CONTAINS]: 'SINGLE_VALUE',
	[OPERATORS.not_contains]: 'SINGLE_VALUE',
	[OPERATORS['=']]: 'SINGLE_VALUE',
	[OPERATORS['!=']]: 'SINGLE_VALUE',
	[OPERATORS.HAS]: 'SINGLE_VALUE',
	[OPERATORS.has]: 'SINGLE_VALUE',
	[OPERATORS.NHAS]: 'SINGLE_VALUE',
	[OPERATORS.nhas]: 'SINGLE_VALUE',
};

export const useOperatorType = (operator: string): OperatorType =>
	operatorTypeMapper[operator] || 'NOT_VALID';
