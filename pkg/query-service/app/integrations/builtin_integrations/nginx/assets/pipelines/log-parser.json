{
  "id": "parse-default-nginx-access-log",
  "name": "Parse default nginx access log",
  "alias": "parse-default-nginx-access-log",
  "description": "Parse standard nginx access log",
  "enabled": true,
  "filter": {
    "op": "AND",
    "items": [
      {
        "key": {
          "type": "tag",
          "key": "source",
          "dataType": "string"
        },
        "op": "=",
        "value": "nginx"
      }
    ]
  },
  "config": [
    {
      "type": "grok_parser",
      "id": "parse-body-grok",
      "enabled": true,
      "orderId": 1,
      "name": "Parse Body",
      "parse_to": "attributes",
      "pattern": "%{IP:client.address} - %{USERNAME:enduser.id} \\[%{HTTPDATE:time.local}\\] \"((%{WORD:http.method} %{DATA:http.path}(\\?%{DATA:http.query})? %{WORD:network.protocol.name}/%{NOTSPACE:network.protocol.version})|%{DATA})\" %{INT:http.response.status_code:int} %{INT:http.request.body.bytes:int} \"%{NOTSPACE:http.referer}\" \"%{DATA:http.user.agent}\" %{INT:http.request.bytes:int} %{NUMBER:http.request.time:float} \\[%{DATA:proxy.upstream.name}?\\] \\[%{DATA:proxy.alternative.upstream.name}?\\] ((%{IP:network.peer.address}:%{INT:network.peer.port:int})|%{DATA})? (%{INT:http.response.bytes:int}|-)? (%{NUMBER:http.response.time:float}|-)? (%{NUMBER:network.peer.status.code:int}|-)? %{NOTSPACE:request.id}",
      "parse_from": "body"
    },
    {
      "type": "severity_parser",
      "id": "parse-sev",
      "enabled": true,
      "orderId": 2,
      "name": "Set Severity",
      "parse_from": "attributes[\"http.response.status_code\"]",
      "mapping": {
        "debug": [
          "1xx"
        ],
        "error": [
          "4xx"
        ],
        "fatal": [
          "5xx"
        ],
        "info": [
          "2xx"
        ],
        "trace": [
          "trace"
        ],
        "warn": [
          "3xx"
        ]
      },
      "overwrite_text": true
    }
  ]
}