{"version":3,"file":"New DashboardPage.3ee4a7d83c15abb0a001.js","mappings":"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","sources":["webpack://frontend/./src/container/GridCardLayout/DashboardEmptyState/DashboardEmptyState.tsx","webpack://frontend/./src/container/GridCardLayout/GridCardLayout.tsx","webpack://frontend/./src/container/GridCardLayout/WidgetRow.tsx","webpack://frontend/./src/container/GridCardLayout/index.tsx","webpack://frontend/./src/container/NewDashboard/GridGraphs/index.tsx","webpack://frontend/./src/container/NewDashboard/GridGraphs/styles.ts","webpack://frontend/./src/container/NewDashboard/index.tsx","webpack://frontend/./src/pages/NewDashboard/DashboardPage.tsx","webpack://frontend/./src/pages/NewDashboard/index.tsx","webpack://frontend/./src/types/common/index.ts","webpack://frontend/./src/container/GridCardLayout/DashboardEmptyState/DashboardEmptyState.styles.scss","webpack://frontend/./src/container/GridCardLayout/DashboardEmptyState/DashboardEmptyState.styles.scss?8025"],"sourcesContent":["/* eslint-disable jsx-a11y/img-redundant-alt */\nimport './DashboardEmptyState.styles.scss';\n\nimport { PlusOutlined } from '@ant-design/icons';\nimport { Button, Typography } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport SettingsDrawer from 'container/NewDashboard/DashboardDescription/SettingsDrawer';\nimport useComponentPermission from 'hooks/useComponentPermission';\nimport { useAppContext } from 'providers/App/App';\nimport { useDashboard } from 'providers/Dashboard/Dashboard';\nimport { useCallback } from 'react';\nimport { ROLES, USER_ROLES } from 'types/roles';\nimport { ComponentTypes } from 'utils/permission';\n\nexport default function DashboardEmptyState(): JSX.Element {\n\tconst {\n\t\tselectedDashboard,\n\t\tisDashboardLocked,\n\t\thandleToggleDashboardSlider,\n\t\tsetSelectedRowWidgetId,\n\t} = useDashboard();\n\n\tconst { user } = useAppContext();\n\tlet permissions: ComponentTypes[] = ['add_panel'];\n\n\tif (isDashboardLocked) {\n\t\tpermissions = ['add_panel_locked_dashboard'];\n\t}\n\n\tconst userRole: ROLES | null =\n\t\tselectedDashboard?.createdBy === user?.email\n\t\t\t? (USER_ROLES.AUTHOR as ROLES)\n\t\t\t: user.role;\n\n\tconst [addPanelPermission] = useComponentPermission(permissions, userRole);\n\n\tconst onEmptyWidgetHandler = useCallback(() => {\n\t\tsetSelectedRowWidgetId(null);\n\t\thandleToggleDashboardSlider(true);\n\t\tlogEvent('Dashboard Detail: Add new panel clicked', {\n\t\t\tdashboardId: selectedDashboard?.id,\n\t\t\tdashboardName: selectedDashboard?.data.title,\n\t\t\tnumberOfPanels: selectedDashboard?.data.widgets?.length,\n\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [handleToggleDashboardSlider]);\n\treturn (\n\t\t<section className=\"dashboard-empty-state\">\n\t\t\t<div className=\"dashboard-content\">\n\t\t\t\t<section className=\"heading\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"/Icons/dashboard_emoji.svg\"\n\t\t\t\t\t\talt=\"header-image\"\n\t\t\t\t\t\tstyle={{ height: '32px', width: '32px' }}\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography.Text className=\"welcome\">\n\t\t\t\t\t\tWelcome to your new dashboard\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t<Typography.Text className=\"welcome-info\">\n\t\t\t\t\t\tFollow the steps to populate it with data and share with your teammates\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t</section>\n\t\t\t\t<section className=\"actions\">\n\t\t\t\t\t<div className=\"actions-1\">\n\t\t\t\t\t\t<div className=\"actions-configure\">\n\t\t\t\t\t\t\t<div className=\"actions-configure-text\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc=\"/Icons/tools.svg\"\n\t\t\t\t\t\t\t\t\talt=\"header-image\"\n\t\t\t\t\t\t\t\t\tstyle={{ height: '14px', width: '14px' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography.Text className=\"configure\">\n\t\t\t\t\t\t\t\t\tConfigure your new dashboard\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Typography.Text className=\"configure-info\">\n\t\t\t\t\t\t\t\tGive it a name, add description, tags and variables\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<SettingsDrawer drawerTitle=\"Dashboard Configuration\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"actions-1\">\n\t\t\t\t\t\t<div className=\"actions-add-panel\">\n\t\t\t\t\t\t\t<div className=\"actions-panel-text\">\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc=\"/Icons/landscape.svg\"\n\t\t\t\t\t\t\t\t\talt=\"header-image\"\n\t\t\t\t\t\t\t\t\tstyle={{ height: '14px', width: '14px' }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Typography.Text className=\"panel\">Add panels</Typography.Text>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<Typography.Text className=\"panel-info\">\n\t\t\t\t\t\t\t\tAdd panels to visualize your data\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{!isDashboardLocked && addPanelPermission && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"add-panel-btn\"\n\t\t\t\t\t\t\t\tonClick={onEmptyWidgetHandler}\n\t\t\t\t\t\t\t\ticon={<PlusOutlined />}\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\tdata-testid=\"add-panel\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNew Panel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n","import './GridCardLayout.styles.scss';\n\nimport * as Sentry from '@sentry/react';\nimport { Color } from '@signozhq/design-tokens';\nimport { Button, Form, Input, Modal, Typography } from 'antd';\nimport { useForm } from 'antd/es/form/Form';\nimport logEvent from 'api/common/logEvent';\nimport cx from 'classnames';\nimport { QueryParams } from 'constants/query';\nimport { PANEL_GROUP_TYPES, PANEL_TYPES } from 'constants/queryBuilder';\nimport { themeColors } from 'constants/theme';\nimport { DEFAULT_ROW_NAME } from 'container/NewDashboard/DashboardDescription/utils';\nimport { useUpdateDashboard } from 'hooks/dashboard/useUpdateDashboard';\nimport useComponentPermission from 'hooks/useComponentPermission';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport { defaultTo, isUndefined } from 'lodash-es';\nimport isEqual from 'lodash-es/isEqual';\nimport {\n\tCheck,\n\tChevronDown,\n\tChevronUp,\n\tGripVertical,\n\tLockKeyhole,\n\tX,\n} from 'lucide-react';\nimport { useAppContext } from 'providers/App/App';\nimport { useDashboard } from 'providers/Dashboard/Dashboard';\nimport { sortLayout } from 'providers/Dashboard/util';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { FullScreen, FullScreenHandle } from 'react-full-screen';\nimport { ItemCallback, Layout } from 'react-grid-layout';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { UpdateTimeInterval } from 'store/actions';\nimport { Widgets } from 'types/api/dashboard/getAll';\nimport { Props } from 'types/api/dashboard/update';\nimport { ROLES, USER_ROLES } from 'types/roles';\nimport { ComponentTypes } from 'utils/permission';\n\nimport { EditMenuAction, ViewMenuAction } from './config';\nimport DashboardEmptyState from './DashboardEmptyState/DashboardEmptyState';\nimport GridCard from './GridCard';\nimport { Card, CardContainer, ReactGridLayout } from './styles';\nimport {\n\thasColumnWidthsChanged,\n\tremoveUndefinedValuesFromLayout,\n} from './utils';\nimport { MenuItemKeys } from './WidgetHeader/contants';\nimport { WidgetRowHeader } from './WidgetRow';\n\ninterface GraphLayoutProps {\n\thandle: FullScreenHandle;\n}\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nfunction GraphLayout(props: GraphLayoutProps): JSX.Element {\n\tconst { handle } = props;\n\tconst { safeNavigate } = useSafeNavigate();\n\tconst {\n\t\tselectedDashboard,\n\t\tlayouts,\n\t\tsetLayouts,\n\t\tpanelMap,\n\t\tsetPanelMap,\n\t\tsetSelectedDashboard,\n\t\tisDashboardLocked,\n\t\tdashboardQueryRangeCalled,\n\t\tsetDashboardQueryRangeCalled,\n\t\tsetSelectedRowWidgetId,\n\t\tisDashboardFetching,\n\t\tcolumnWidths,\n\t} = useDashboard();\n\tconst { data } = selectedDashboard || {};\n\tconst { pathname } = useLocation();\n\tconst dispatch = useDispatch();\n\n\tconst { widgets, variables } = data || {};\n\n\tconst { user } = useAppContext();\n\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst [dashboardLayout, setDashboardLayout] = useState<Layout[]>([]);\n\n\tconst [isSettingsModalOpen, setIsSettingsModalOpen] = useState<boolean>(false);\n\n\tconst [isDeleteModalOpen, setIsDeleteModalOpen] = useState<boolean>(false);\n\n\tconst [currentSelectRowId, setCurrentSelectRowId] = useState<string | null>(\n\t\tnull,\n\t);\n\n\tconst [currentPanelMap, setCurrentPanelMap] = useState<\n\t\tRecord<string, { widgets: Layout[]; collapsed: boolean }>\n\t>({});\n\n\tuseEffect(() => {\n\t\tsetCurrentPanelMap(panelMap);\n\t}, [panelMap]);\n\n\tconst [form] = useForm<{\n\t\ttitle: string;\n\t}>();\n\n\tconst updateDashboardMutation = useUpdateDashboard();\n\n\tconst urlQuery = useUrlQuery();\n\n\tlet permissions: ComponentTypes[] = ['save_layout', 'add_panel'];\n\n\tif (isDashboardLocked) {\n\t\tpermissions = ['edit_locked_dashboard', 'add_panel_locked_dashboard'];\n\t}\n\n\tconst userRole: ROLES | null =\n\t\tselectedDashboard?.createdBy === user?.email\n\t\t\t? (USER_ROLES.AUTHOR as ROLES)\n\t\t\t: user.role;\n\n\tconst [saveLayoutPermission, addPanelPermission] = useComponentPermission(\n\t\tpermissions,\n\t\tuserRole,\n\t);\n\n\tconst [deleteWidget, editWidget] = useComponentPermission(\n\t\t['delete_widget', 'edit_widget'],\n\t\tuser.role,\n\t);\n\n\tuseEffect(() => {\n\t\tsetDashboardLayout(sortLayout(layouts));\n\t}, [layouts]);\n\n\tuseEffect(() => {\n\t\tsetDashboardQueryRangeCalled(false);\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\t// Send Sentry event if query_range is not called within expected timeframe (2 mins) when there are widgets\n\t\t\tif (!dashboardQueryRangeCalled && data?.widgets?.length) {\n\t\t\t\tSentry.captureEvent({\n\t\t\t\t\tmessage: `Dashboard query range not called within expected timeframe even when there are ${data?.widgets?.length} widgets`,\n\t\t\t\t\tlevel: 'warning',\n\t\t\t\t});\n\t\t\t}\n\t\t}, 120000);\n\n\t\treturn (): void => clearTimeout(timeoutId);\n\t}, [dashboardQueryRangeCalled, data?.widgets?.length]);\n\n\tconst logEventCalledRef = useRef(false);\n\tuseEffect(() => {\n\t\tif (!logEventCalledRef.current && !isUndefined(data)) {\n\t\t\tlogEvent('Dashboard Detail: Opened', {\n\t\t\t\tdashboardId: selectedDashboard?.id,\n\t\t\t\tdashboardName: data.title,\n\t\t\t\tnumberOfPanels: data.widgets?.length,\n\t\t\t\tnumberOfVariables: Object.keys(data?.variables || {}).length || 0,\n\t\t\t});\n\t\t\tlogEventCalledRef.current = true;\n\t\t}\n\t}, [data, selectedDashboard?.id]);\n\n\tconst onSaveHandler = (): void => {\n\t\tif (!selectedDashboard) return;\n\n\t\tconst updatedDashboard: Props = {\n\t\t\tid: selectedDashboard.id,\n\t\t\tdata: {\n\t\t\t\t...selectedDashboard.data,\n\t\t\t\tpanelMap: { ...currentPanelMap },\n\t\t\t\tlayout: dashboardLayout.filter((e) => e.i !== PANEL_TYPES.EMPTY_WIDGET),\n\t\t\t\twidgets: selectedDashboard?.data?.widgets?.map((widget) => {\n\t\t\t\t\tif (columnWidths?.[widget.id]) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...widget,\n\t\t\t\t\t\t\tcolumnWidths: columnWidths[widget.id],\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\treturn widget;\n\t\t\t\t}),\n\t\t\t},\n\t\t};\n\n\t\tupdateDashboardMutation.mutate(updatedDashboard, {\n\t\t\tonSuccess: (updatedDashboard) => {\n\t\t\t\tsetSelectedRowWidgetId(null);\n\t\t\t\tif (updatedDashboard.data) {\n\t\t\t\t\tif (updatedDashboard.data.data.layout)\n\t\t\t\t\t\tsetLayouts(sortLayout(updatedDashboard.data.data.layout));\n\t\t\t\t\tsetSelectedDashboard(updatedDashboard.data);\n\t\t\t\t\tsetPanelMap(updatedDashboard.data?.data?.panelMap || {});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t};\n\n\tconst widgetActions = !isDashboardLocked\n\t\t? [...ViewMenuAction, ...EditMenuAction]\n\t\t: [...ViewMenuAction, MenuItemKeys.CreateAlerts];\n\n\tconst handleLayoutChange = (layout: Layout[]): void => {\n\t\tconst filterLayout = removeUndefinedValuesFromLayout(layout);\n\t\tconst filterDashboardLayout = removeUndefinedValuesFromLayout(\n\t\t\tdashboardLayout,\n\t\t);\n\t\tif (!isEqual(filterLayout, filterDashboardLayout)) {\n\t\t\tconst updatedLayout = sortLayout(layout);\n\t\t\tsetDashboardLayout(updatedLayout);\n\t\t}\n\t};\n\n\tconst onDragSelect = useCallback(\n\t\t(start: number, end: number) => {\n\t\t\tconst startTimestamp = Math.trunc(start);\n\t\t\tconst endTimestamp = Math.trunc(end);\n\n\t\t\turlQuery.set(QueryParams.startTime, startTimestamp.toString());\n\t\t\turlQuery.set(QueryParams.endTime, endTimestamp.toString());\n\t\t\tconst generatedUrl = `${pathname}?${urlQuery.toString()}`;\n\t\t\tsafeNavigate(generatedUrl);\n\n\t\t\tif (startTimestamp !== endTimestamp) {\n\t\t\t\tdispatch(UpdateTimeInterval('custom', [startTimestamp, endTimestamp]));\n\t\t\t}\n\t\t},\n\t\t[dispatch, pathname, safeNavigate, urlQuery],\n\t);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\tisDashboardLocked ||\n\t\t\t!saveLayoutPermission ||\n\t\t\tupdateDashboardMutation.isLoading ||\n\t\t\tisDashboardFetching\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst shouldSaveLayout =\n\t\t\tdashboardLayout &&\n\t\t\tArray.isArray(dashboardLayout) &&\n\t\t\tdashboardLayout.length > 0 &&\n\t\t\t!isEqual(layouts, dashboardLayout);\n\n\t\tconst shouldSaveColumnWidths =\n\t\t\tdashboardLayout &&\n\t\t\tArray.isArray(dashboardLayout) &&\n\t\t\tdashboardLayout.length > 0 &&\n\t\t\thasColumnWidthsChanged(columnWidths, selectedDashboard);\n\n\t\tif (shouldSaveLayout || shouldSaveColumnWidths) {\n\t\t\tonSaveHandler();\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dashboardLayout, columnWidths]);\n\n\tconst onSettingsModalSubmit = (): void => {\n\t\tconst newTitle = form.getFieldValue('title');\n\t\tif (!selectedDashboard) return;\n\n\t\tif (!currentSelectRowId) return;\n\n\t\tconst currentWidget = selectedDashboard?.data?.widgets?.find(\n\t\t\t(e) => e.id === currentSelectRowId,\n\t\t);\n\n\t\tif (!currentWidget) return;\n\n\t\tcurrentWidget.title = newTitle;\n\t\tconst updatedWidgets = selectedDashboard?.data?.widgets?.filter(\n\t\t\t(e) => e.id !== currentSelectRowId,\n\t\t);\n\n\t\tupdatedWidgets?.push(currentWidget);\n\n\t\tconst updatedSelectedDashboard: Props = {\n\t\t\tid: selectedDashboard.id,\n\t\t\tdata: {\n\t\t\t\t...selectedDashboard.data,\n\t\t\t\twidgets: updatedWidgets,\n\t\t\t},\n\t\t};\n\n\t\tupdateDashboardMutation.mutateAsync(updatedSelectedDashboard, {\n\t\t\tonSuccess: (updatedDashboard) => {\n\t\t\t\tif (setLayouts) setLayouts(updatedDashboard.data?.data?.layout || []);\n\t\t\t\tif (setSelectedDashboard && updatedDashboard.data) {\n\t\t\t\t\tsetSelectedDashboard(updatedDashboard.data);\n\t\t\t\t}\n\t\t\t\tif (setPanelMap) setPanelMap(updatedDashboard.data?.data?.panelMap || {});\n\t\t\t\tform.setFieldValue('title', '');\n\t\t\t\tsetIsSettingsModalOpen(false);\n\t\t\t\tsetCurrentSelectRowId(null);\n\t\t\t},\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tif (!currentSelectRowId) return;\n\t\tform.setFieldValue(\n\t\t\t'title',\n\t\t\t(widgets?.find((widget) => widget.id === currentSelectRowId)\n\t\t\t\t?.title as string) || DEFAULT_ROW_NAME,\n\t\t);\n\t}, [currentSelectRowId, form, widgets]);\n\n\t// eslint-disable-next-line sonarjs/cognitive-complexity\n\tconst handleRowCollapse = (id: string): void => {\n\t\tif (!selectedDashboard) return;\n\t\tconst rowProperties = { ...currentPanelMap[id] };\n\t\tconst updatedPanelMap = { ...currentPanelMap };\n\n\t\tlet updatedDashboardLayout = [...dashboardLayout];\n\t\tif (rowProperties.collapsed === true) {\n\t\t\trowProperties.collapsed = false;\n\t\t\tconst widgetsInsideTheRow = rowProperties.widgets;\n\t\t\tlet maxY = 0;\n\t\t\twidgetsInsideTheRow.forEach((w) => {\n\t\t\t\tmaxY = Math.max(maxY, w.y + w.h);\n\t\t\t});\n\t\t\tconst currentRowWidget = dashboardLayout.find((w) => w.i === id);\n\t\t\tif (currentRowWidget && widgetsInsideTheRow.length) {\n\t\t\t\tmaxY -= currentRowWidget.h + currentRowWidget.y;\n\t\t\t}\n\n\t\t\tconst idxCurrentRow = dashboardLayout.findIndex((w) => w.i === id);\n\n\t\t\tfor (let j = idxCurrentRow + 1; j < dashboardLayout.length; j++) {\n\t\t\t\tupdatedDashboardLayout[j].y += maxY;\n\t\t\t\tif (updatedPanelMap[updatedDashboardLayout[j].i]) {\n\t\t\t\t\tupdatedPanelMap[updatedDashboardLayout[j].i].widgets = updatedPanelMap[\n\t\t\t\t\t\tupdatedDashboardLayout[j].i\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-loop-func\n\t\t\t\t\t].widgets.map((w) => ({\n\t\t\t\t\t\t...w,\n\t\t\t\t\t\ty: w.y + maxY,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\t\t\tupdatedDashboardLayout = [...updatedDashboardLayout, ...widgetsInsideTheRow];\n\t\t} else {\n\t\t\trowProperties.collapsed = true;\n\t\t\tconst currentIdx = dashboardLayout.findIndex((w) => w.i === id);\n\n\t\t\tlet widgetsInsideTheRow: Layout[] = [];\n\t\t\tlet isPanelMapUpdated = false;\n\t\t\tfor (let j = currentIdx + 1; j < dashboardLayout.length; j++) {\n\t\t\t\tif (currentPanelMap[dashboardLayout[j].i]) {\n\t\t\t\t\trowProperties.widgets = widgetsInsideTheRow;\n\t\t\t\t\twidgetsInsideTheRow = [];\n\t\t\t\t\tisPanelMapUpdated = true;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\twidgetsInsideTheRow.push(dashboardLayout[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!isPanelMapUpdated) {\n\t\t\t\trowProperties.widgets = widgetsInsideTheRow;\n\t\t\t}\n\t\t\tlet maxY = 0;\n\t\t\twidgetsInsideTheRow.forEach((w) => {\n\t\t\t\tmaxY = Math.max(maxY, w.y + w.h);\n\t\t\t});\n\t\t\tconst currentRowWidget = dashboardLayout[currentIdx];\n\t\t\tif (currentRowWidget && widgetsInsideTheRow.length) {\n\t\t\t\tmaxY -= currentRowWidget.h + currentRowWidget.y;\n\t\t\t}\n\t\t\tfor (let j = currentIdx + 1; j < updatedDashboardLayout.length; j++) {\n\t\t\t\tupdatedDashboardLayout[j].y += maxY;\n\t\t\t\tif (updatedPanelMap[updatedDashboardLayout[j].i]) {\n\t\t\t\t\tupdatedPanelMap[updatedDashboardLayout[j].i].widgets = updatedPanelMap[\n\t\t\t\t\t\tupdatedDashboardLayout[j].i\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-loop-func\n\t\t\t\t\t].widgets.map((w) => ({\n\t\t\t\t\t\t...w,\n\t\t\t\t\t\ty: w.y + maxY,\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tupdatedDashboardLayout = updatedDashboardLayout.filter(\n\t\t\t\t(widget) => !rowProperties.widgets.some((w: Layout) => w.i === widget.i),\n\t\t\t);\n\t\t}\n\t\tsetCurrentPanelMap((prev) => ({\n\t\t\t...prev,\n\t\t\t...updatedPanelMap,\n\t\t\t[id]: {\n\t\t\t\t...rowProperties,\n\t\t\t},\n\t\t}));\n\n\t\tsetDashboardLayout(sortLayout(updatedDashboardLayout));\n\t};\n\n\tconst handleDragStop: ItemCallback = (_, oldItem, newItem): void => {\n\t\tif (oldItem?.i && currentPanelMap?.[oldItem.i]) {\n\t\t\tconst differenceY = newItem.y - oldItem.y;\n\t\t\tconst widgetsInsideRow = (currentPanelMap[oldItem.i]?.widgets ?? []).map(\n\t\t\t\t(w) => ({\n\t\t\t\t\t...w,\n\t\t\t\t\ty: w.y + differenceY,\n\t\t\t\t}),\n\t\t\t);\n\t\t\tsetCurrentPanelMap((prev) => ({\n\t\t\t\t...prev,\n\t\t\t\t[oldItem.i]: {\n\t\t\t\t\t...prev[oldItem.i],\n\t\t\t\t\twidgets: widgetsInsideRow,\n\t\t\t\t},\n\t\t\t}));\n\t\t}\n\t};\n\n\tconst handleRowDelete = (): void => {\n\t\tif (!selectedDashboard) return;\n\n\t\tif (!currentSelectRowId) return;\n\n\t\tconst updatedWidgets = selectedDashboard?.data?.widgets?.filter(\n\t\t\t(e) => e.id !== currentSelectRowId,\n\t\t);\n\n\t\tconst updatedLayout =\n\t\t\tselectedDashboard.data.layout?.filter((e) => e.i !== currentSelectRowId) ||\n\t\t\t[];\n\n\t\tconst updatedPanelMap = { ...currentPanelMap };\n\t\tdelete updatedPanelMap[currentSelectRowId];\n\n\t\tconst updatedSelectedDashboard: Props = {\n\t\t\tid: selectedDashboard.id,\n\t\t\tdata: {\n\t\t\t\t...selectedDashboard.data,\n\t\t\t\twidgets: updatedWidgets,\n\t\t\t\tlayout: updatedLayout,\n\t\t\t\tpanelMap: updatedPanelMap,\n\t\t\t},\n\t\t};\n\n\t\tupdateDashboardMutation.mutateAsync(updatedSelectedDashboard, {\n\t\t\tonSuccess: (updatedDashboard) => {\n\t\t\t\tif (setLayouts) setLayouts(updatedDashboard.data?.data?.layout || []);\n\t\t\t\tif (setSelectedDashboard && updatedDashboard.data) {\n\t\t\t\t\tsetSelectedDashboard(updatedDashboard.data);\n\t\t\t\t}\n\t\t\t\tif (setPanelMap) setPanelMap(updatedDashboard.data?.data?.panelMap || {});\n\t\t\t\tsetIsDeleteModalOpen(false);\n\t\t\t\tsetCurrentSelectRowId(null);\n\t\t\t},\n\t\t});\n\t};\n\tconst isDashboardEmpty = useMemo(\n\t\t() =>\n\t\t\tselectedDashboard?.data.layout\n\t\t\t\t? selectedDashboard?.data.layout?.length === 0\n\t\t\t\t: true,\n\t\t[selectedDashboard],\n\t);\n\n\tlet isDataAvailableInAnyWidget = false;\n\tconst isLogEventCalled = useRef<boolean>(false);\n\n\treturn isDashboardEmpty ? (\n\t\t<DashboardEmptyState />\n\t) : (\n\t\t<FullScreen\n\t\t\thandle={handle}\n\t\t\tclassName=\"fullscreen-grid-container\"\n\t\t\tdata-overlayscrollbars-initialize\n\t\t>\n\t\t\t<ReactGridLayout\n\t\t\t\tcols={12}\n\t\t\t\trowHeight={45}\n\t\t\t\tautoSize\n\t\t\t\twidth={100}\n\t\t\t\tuseCSSTransforms\n\t\t\t\tisDraggable={!isDashboardLocked && addPanelPermission}\n\t\t\t\tisDroppable={!isDashboardLocked && addPanelPermission}\n\t\t\t\tisResizable={!isDashboardLocked && addPanelPermission}\n\t\t\t\tallowOverlap={false}\n\t\t\t\tonLayoutChange={handleLayoutChange}\n\t\t\t\tonDragStop={handleDragStop}\n\t\t\t\tdraggableHandle=\".drag-handle\"\n\t\t\t\tlayout={dashboardLayout}\n\t\t\t\tstyle={{ backgroundColor: isDarkMode ? '' : themeColors.snowWhite }}\n\t\t\t>\n\t\t\t\t{dashboardLayout.map((layout) => {\n\t\t\t\t\tconst { i: id } = layout;\n\t\t\t\t\tconst currentWidget = (widgets || [])?.find((e) => e.id === id);\n\n\t\t\t\t\tif (currentWidget?.panelTypes === PANEL_GROUP_TYPES.ROW) {\n\t\t\t\t\t\tconst rowWidgetProperties = currentPanelMap[id] || {};\n\t\t\t\t\t\tlet { title } = currentWidget;\n\t\t\t\t\t\tif (rowWidgetProperties.collapsed) {\n\t\t\t\t\t\t\tconst widgetCount = rowWidgetProperties.widgets?.length || 0;\n\t\t\t\t\t\t\tconst collapsedText = `(${widgetCount} widget${\n\t\t\t\t\t\t\t\twidgetCount > 1 ? 's' : ''\n\t\t\t\t\t\t\t})`;\n\t\t\t\t\t\t\ttitle += ` ${collapsedText}`;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<CardContainer\n\t\t\t\t\t\t\t\tclassName=\"row-card\"\n\t\t\t\t\t\t\t\tisDarkMode={isDarkMode}\n\t\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\t\tdata-grid={JSON.stringify(currentWidget)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className={cx('row-panel')}>\n\t\t\t\t\t\t\t\t\t<div style={{ display: 'flex', gap: '6px', alignItems: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t{rowWidgetProperties.collapsed && (\n\t\t\t\t\t\t\t\t\t\t\t<GripVertical\n\t\t\t\t\t\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"drag-handle\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={isDarkMode ? Color.BG_VANILLA_100 : Color.BG_INK_300}\n\t\t\t\t\t\t\t\t\t\t\t\tcursor=\"move\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t<Typography.Text className=\"section-title\">{title}</Typography.Text>\n\t\t\t\t\t\t\t\t\t\t{rowWidgetProperties.collapsed ? (\n\t\t\t\t\t\t\t\t\t\t\t<ChevronDown\n\t\t\t\t\t\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(): void => handleRowCollapse(id)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"row-icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<ChevronUp\n\t\t\t\t\t\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(): void => handleRowCollapse(id)}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"row-icon\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<WidgetRowHeader\n\t\t\t\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\t\t\t\trowWidgetProperties={rowWidgetProperties}\n\t\t\t\t\t\t\t\t\t\tsetCurrentSelectRowId={setCurrentSelectRowId}\n\t\t\t\t\t\t\t\t\t\tsetIsDeleteModalOpen={setIsDeleteModalOpen}\n\t\t\t\t\t\t\t\t\t\tsetIsSettingsModalOpen={setIsSettingsModalOpen}\n\t\t\t\t\t\t\t\t\t\teditWidget={editWidget}\n\t\t\t\t\t\t\t\t\t\tdeleteWidget={deleteWidget}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</CardContainer>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst checkIfDataExists = (isDataAvailable: boolean): void => {\n\t\t\t\t\t\tif (!isDataAvailableInAnyWidget && isDataAvailable) {\n\t\t\t\t\t\t\tisDataAvailableInAnyWidget = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!isLogEventCalled.current && isDataAvailableInAnyWidget) {\n\t\t\t\t\t\t\tisLogEventCalled.current = true;\n\t\t\t\t\t\t\tlogEvent('Dashboard Detail: Panel data fetched', {\n\t\t\t\t\t\t\t\tisDataAvailableInAnyWidget,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<CardContainer\n\t\t\t\t\t\t\tclassName={isDashboardLocked ? '' : 'enable-resize'}\n\t\t\t\t\t\t\tisDarkMode={isDarkMode}\n\t\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\t\tdata-grid={JSON.stringify(currentWidget)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\tclassName=\"grid-item\"\n\t\t\t\t\t\t\t\tisDarkMode={isDarkMode}\n\t\t\t\t\t\t\t\t$panelType={currentWidget?.panelTypes || PANEL_TYPES.TIME_SERIES}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<GridCard\n\t\t\t\t\t\t\t\t\twidget={(currentWidget as Widgets) || ({ id, query: {} } as Widgets)}\n\t\t\t\t\t\t\t\t\theaderMenuList={widgetActions}\n\t\t\t\t\t\t\t\t\tvariables={variables}\n\t\t\t\t\t\t\t\t\tversion={selectedDashboard?.data?.version}\n\t\t\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\t\t\tdataAvailable={checkIfDataExists}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</CardContainer>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</ReactGridLayout>\n\t\t\t{isDashboardLocked && (\n\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\ticon={<LockKeyhole size={14} />}\n\t\t\t\t\t\tclassName=\"locked-text\"\n\t\t\t\t\t>\n\t\t\t\t\t\tLocked\n\t\t\t\t\t</Button>\n\t\t\t\t\t<div className=\"locked-bar\" />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Modal\n\t\t\t\topen={isSettingsModalOpen}\n\t\t\t\ttitle=\"Rename Section\"\n\t\t\t\trootClassName=\"rename-section\"\n\t\t\t\tdestroyOnClose\n\t\t\t\tfooter={null}\n\t\t\t\tonCancel={(): void => {\n\t\t\t\t\tsetIsSettingsModalOpen(false);\n\t\t\t\t\tsetCurrentSelectRowId(null);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Form form={form} onFinish={onSettingsModalSubmit} requiredMark>\n\t\t\t\t\t<Typography.Text className=\"typography\">\n\t\t\t\t\t\tEnter section name\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t<Form.Item required name={['title']}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tplaceholder=\"Enter row name here...\"\n\t\t\t\t\t\t\tdefaultValue={defaultTo(\n\t\t\t\t\t\t\t\twidgets?.find((widget) => widget.id === currentSelectRowId)\n\t\t\t\t\t\t\t\t\t?.title as string,\n\t\t\t\t\t\t\t\t'Sample Title',\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t<div className=\"action-btns\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"ok-btn\"\n\t\t\t\t\t\t\t\ticon={<Check size={14} />}\n\t\t\t\t\t\t\t\tdisabled={updateDashboardMutation.isLoading}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tApply Changes\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"cancel-btn\"\n\t\t\t\t\t\t\t\ticon={<X size={14} />}\n\t\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\t\tsetIsSettingsModalOpen(false);\n\t\t\t\t\t\t\t\t\tsetCurrentSelectRowId(null);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Form>\n\t\t\t</Modal>\n\t\t\t<Modal\n\t\t\t\topen={isDeleteModalOpen}\n\t\t\t\ttitle=\"Delete Row\"\n\t\t\t\tdestroyOnClose\n\t\t\t\tonCancel={(): void => {\n\t\t\t\t\tsetIsDeleteModalOpen(false);\n\t\t\t\t\tsetCurrentSelectRowId(null);\n\t\t\t\t}}\n\t\t\t\tonOk={(): void => handleRowDelete()}\n\t\t\t>\n\t\t\t\t<Typography.Text>Are you sure you want to delete this row</Typography.Text>\n\t\t\t</Modal>\n\t\t</FullScreen>\n\t);\n}\n\nexport default GraphLayout;\n","import { Button, Popover } from 'antd';\nimport useComponentPermission from 'hooks/useComponentPermission';\nimport { EllipsisIcon, PenLine, Plus, X } from 'lucide-react';\nimport { useAppContext } from 'providers/App/App';\nimport { useDashboard } from 'providers/Dashboard/Dashboard';\nimport { useState } from 'react';\nimport { Layout } from 'react-grid-layout';\nimport { ROLES, USER_ROLES } from 'types/roles';\nimport { ComponentTypes } from 'utils/permission';\n\ninterface WidgetRowHeaderProps {\n\trowWidgetProperties: {\n\t\twidgets: Layout[];\n\t\tcollapsed: boolean;\n\t};\n\teditWidget: boolean;\n\tdeleteWidget: boolean;\n\tsetIsSettingsModalOpen: (value: React.SetStateAction<boolean>) => void;\n\tsetCurrentSelectRowId: (value: React.SetStateAction<string | null>) => void;\n\tsetIsDeleteModalOpen: (value: React.SetStateAction<boolean>) => void;\n\tid: string;\n}\n\nexport function WidgetRowHeader(props: WidgetRowHeaderProps): JSX.Element {\n\tconst {\n\t\trowWidgetProperties,\n\t\teditWidget,\n\t\tdeleteWidget,\n\t\tsetCurrentSelectRowId,\n\t\tsetIsDeleteModalOpen,\n\t\tsetIsSettingsModalOpen,\n\t\tid,\n\t} = props;\n\tconst [isRowSettingsOpen, setIsRowSettingsOpen] = useState<boolean>(false);\n\n\tconst {\n\t\thandleToggleDashboardSlider,\n\t\tselectedDashboard,\n\t\tisDashboardLocked,\n\t\tsetSelectedRowWidgetId,\n\t} = useDashboard();\n\n\tconst permissions: ComponentTypes[] = ['add_panel'];\n\tconst { user } = useAppContext();\n\n\tconst userRole: ROLES | null =\n\t\tselectedDashboard?.createdBy === user?.email\n\t\t\t? (USER_ROLES.AUTHOR as ROLES)\n\t\t\t: user.role;\n\tconst [addPanelPermission] = useComponentPermission(permissions, userRole);\n\n\treturn (\n\t\t<Popover\n\t\t\topen={isRowSettingsOpen}\n\t\t\tarrow={false}\n\t\t\tonOpenChange={(visible): void => setIsRowSettingsOpen(visible)}\n\t\t\trootClassName=\"row-settings\"\n\t\t\ttrigger=\"hover\"\n\t\t\tplacement=\"bottomRight\"\n\t\t\tcontent={\n\t\t\t\t<div className=\"menu-content\">\n\t\t\t\t\t<section className=\"section-1\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"rename-btn\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdisabled={!editWidget}\n\t\t\t\t\t\t\ticon={<PenLine size={14} />}\n\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\tsetIsSettingsModalOpen(true);\n\t\t\t\t\t\t\t\tsetCurrentSelectRowId(id);\n\t\t\t\t\t\t\t\tsetIsRowSettingsOpen(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRename\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"section-1\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"new-panel-btn\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tdisabled={!editWidget && addPanelPermission && !isDashboardLocked}\n\t\t\t\t\t\t\ticon={<Plus size={14} />}\n\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\tsetSelectedRowWidgetId(id);\n\t\t\t\t\t\t\t\thandleToggleDashboardSlider(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNew Panel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</section>\n\t\t\t\t\t{!rowWidgetProperties.collapsed && (\n\t\t\t\t\t\t<section className=\"section-2\">\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"remove-section\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\ticon={<X size={14} />}\n\t\t\t\t\t\t\t\tdisabled={!deleteWidget}\n\t\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\t\tsetIsDeleteModalOpen(true);\n\t\t\t\t\t\t\t\t\tsetCurrentSelectRowId(id);\n\t\t\t\t\t\t\t\t\tsetIsRowSettingsOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRemove Section\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</section>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t>\n\t\t\t<EllipsisIcon\n\t\t\t\tsize={14}\n\t\t\t\tclassName=\"settings-icon\"\n\t\t\t\tonClick={(): void => setIsRowSettingsOpen(!isRowSettingsOpen)}\n\t\t\t/>\n\t\t</Popover>\n\t);\n}\n","import { FullScreenHandle } from 'react-full-screen';\n\nimport GraphLayoutContainer from './GridCardLayout';\n\ninterface GridGraphProps {\n\thandle: FullScreenHandle;\n}\nfunction GridGraph(props: GridGraphProps): JSX.Element {\n\tconst { handle } = props;\n\treturn <GraphLayoutContainer handle={handle} />;\n}\n\nexport default GridGraph;\n","import GridGraphLayout from 'container/GridCardLayout';\nimport { FullScreenHandle } from 'react-full-screen';\n\nimport { GridComponentSliderContainer } from './styles';\n\ninterface GridGraphsProps {\n\thandle: FullScreenHandle;\n}\n\nfunction GridGraphs(props: GridGraphsProps): JSX.Element {\n\tconst { handle } = props;\n\treturn (\n\t\t<GridComponentSliderContainer>\n\t\t\t<GridGraphLayout handle={handle} />\n\t\t</GridComponentSliderContainer>\n\t);\n}\n\nexport default GridGraphs;\n","import { Card as CardComponent, Row } from 'antd';\nimport styled from 'styled-components';\n\nexport const CardContainer = styled(Row)`\n\t&&& {\n\t\tmargin-top: 1rem;\n\t}\n`;\n\nexport const Card = styled(CardComponent)`\n\t&&& {\n\t\tcursor: pointer;\n\t}\n\t.ant-card-body {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\n\t\t> span {\n\t\t\tmargin-right: 0.5rem;\n\t\t}\n\t}\n`;\n\nexport const GridComponentSliderContainer = styled.div`\n\tmargin-top: 1rem;\n`;\n","import { useFullScreenHandle } from 'react-full-screen';\n\nimport Description from './DashboardDescription';\nimport GridGraphs from './GridGraphs';\n\nfunction NewDashboard(): JSX.Element {\n\tconst handle = useFullScreenHandle();\n\treturn (\n\t\t<div>\n\t\t\t<Description handle={handle} />\n\t\t\t<GridGraphs handle={handle} />\n\t\t</div>\n\t);\n}\n\nexport default NewDashboard;\n","import { Typography } from 'antd';\nimport { AxiosError } from 'axios';\nimport NotFound from 'components/NotFound';\nimport Spinner from 'components/Spinner';\nimport NewDashboard from 'container/NewDashboard';\nimport { useDashboard } from 'providers/Dashboard/Dashboard';\nimport { useEffect } from 'react';\nimport { ErrorType } from 'types/common';\n\nfunction DashboardPage(): JSX.Element {\n\tconst { dashboardResponse } = useDashboard();\n\n\tconst { isFetching, isError, isLoading } = dashboardResponse;\n\n\tconst errorMessage = isError\n\t\t? // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t  // @ts-ignore\n\t\t  (dashboardResponse?.error as AxiosError)?.response?.data?.errorType\n\t\t: 'Something went wrong';\n\n\tuseEffect(() => {\n\t\tconst dashboardTitle = dashboardResponse.data?.data.data.title;\n\t\tdocument.title = dashboardTitle || document.title;\n\t}, [dashboardResponse.data?.data.data.title, isFetching]);\n\n\tif (isError && !isFetching && errorMessage === ErrorType.NotFound) {\n\t\treturn <NotFound />;\n\t}\n\n\tif (isError && errorMessage) {\n\t\treturn <Typography>{errorMessage}</Typography>;\n\t}\n\n\tif (isLoading) {\n\t\treturn <Spinner tip=\"Loading..\" />;\n\t}\n\n\treturn <NewDashboard />;\n}\n\nexport default DashboardPage;\n","import DashboardPage from './DashboardPage';\n\nexport default DashboardPage;\n","export type Created = 201;\n\nexport type Success = 200;\n\nexport type SuccessNoContent = 204;\n\nexport type Forbidden = 403;\n\nexport type BadRequest = 400;\n\nexport type Unauthorized = 401;\n\nexport type NotFound = 404;\n\nexport type Conflict = 409;\n\nexport type ServerError = 500;\n\nexport type SuccessStatusCode = Created | Success | SuccessNoContent;\n\nexport type ErrorStatusCode =\n\t| Forbidden\n\t| Forbidden\n\t| Unauthorized\n\t| NotFound\n\t| ServerError\n\t| BadRequest\n\t| Conflict;\n\nexport enum ErrorType {\n\tNotFound = 'not_found',\n}\n\nexport type StatusCode = SuccessStatusCode | ErrorStatusCode;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dashboard-empty-state{display:flex;flex-direction:column;align-items:center;justify-content:center;height:500px}.dashboard-empty-state .dashboard-content{display:flex;flex-direction:column;align-items:flex-start;gap:12px}.dashboard-empty-state .dashboard-content .heading{display:flex;flex-direction:column;gap:4px}.dashboard-empty-state .dashboard-content .heading .icons{color:#fff}.dashboard-empty-state .dashboard-content .heading .welcome{color:var(--bg-vanilla-400);font-family:Inter;font-size:14px;font-style:normal;font-weight:400;line-height:24px;letter-spacing:-0.07px}.dashboard-empty-state .dashboard-content .heading .welcome-info{color:var(--bg-vanilla-100);font-family:Inter;font-size:14px;font-style:normal;font-weight:500;line-height:24px;letter-spacing:-0.07px}.dashboard-empty-state .dashboard-content .actions{display:flex;flex-direction:column}.dashboard-empty-state .dashboard-content .actions .actions-1{display:flex;width:560px;padding:12px;justify-content:space-between;align-items:flex-start;border-radius:4px 4px 0px 0px;border:1px solid var(--bg-slate-500);background:var(--bg-ink-400)}.dashboard-empty-state .dashboard-content .actions .actions-1 .configure-button{display:flex;width:113px;height:32px;padding:6px;justify-content:center;align-items:center;flex-shrink:0;border-radius:2px;border:1px solid var(--bg-slate-400);background:var(--bg-ink-300);color:var(--bg-vanilla-400);font-family:Inter;font-size:12px;font-style:normal;font-weight:500;line-height:10px;letter-spacing:.12px}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure{display:flex;flex-direction:column;gap:6px}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .actions-configure-text{display:flex;gap:8px;align-items:center}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .actions-configure-text .icons{color:#fff}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .actions-configure-text .configure{color:var(--bg-vanilla-100);font-family:Inter;font-size:14px;font-style:normal;font-weight:400;line-height:20px;letter-spacing:-0.07px}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .configure-info{color:var(--bg-vanilla-400);font-family:Inter;font-size:12px;font-style:normal;font-weight:400;line-height:20px;letter-spacing:-0.06px;padding-left:22px}.dashboard-empty-state .dashboard-content .actions .actions-1 .add-panel-btn{display:flex;width:113px;height:32px;padding:6px;justify-content:center;align-items:center;flex-shrink:0;border-radius:2px;border:1px solid var(--bg-slate-400);background:var(--bg-ink-300);box-shadow:none;color:var(--bg-vanilla-400);font-family:Inter;font-size:12px;font-style:normal;font-weight:500;line-height:10px;letter-spacing:.12px}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel{display:flex;flex-direction:column;gap:6px}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .actions-panel-text{display:flex;gap:8px;align-items:center}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .actions-panel-text .icons{color:#fff}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .actions-panel-text .panel{color:var(--bg-vanilla-100);font-family:Inter;font-size:14px;font-style:normal;font-weight:400;line-height:20px;letter-spacing:-0.07px}.dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .panel-info{color:var(--bg-vanilla-400);font-family:Inter;font-size:12px;font-style:normal;font-weight:400;line-height:20px;letter-spacing:-0.06px;padding-left:22px}.lightMode .dashboard-empty-state .dashboard-content .heading .icons{color:var(--bg-ink-300)}.lightMode .dashboard-empty-state .dashboard-content .heading .welcome{color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .heading .welcome-info{color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1{border:1px solid var(--bg-vanilla-300);background:var(--bg-vanilla-100)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .configure-button{border:1px solid var(--bg-vanilla-300);background:var(--bg-vanilla-300);color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .actions-configure-text .icons{color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .actions-configure-text .configure{color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .actions-configure .configure-info{color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .add-panel-btn{border:1px solid var(--bg-vanilla-300);background:var(--bg-vanilla-300);color:var(--bg-ink-400)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .actions-panel-text .icons{color:var(--bg-ink-300)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .actions-panel-text .panel{color:var(--bg-ink-300)}.lightMode .dashboard-empty-state .dashboard-content .actions .actions-1 .actions-add-panel .panel-info{color:var(--bg-ink-300)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/GridCardLayout/DashboardEmptyState/DashboardEmptyState.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,uBACC,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,YAAA,CAEA,0CACC,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,QAAA,CAEA,mDACC,YAAA,CACA,qBAAA,CACA,OAAA,CAEA,0DACC,UAAA,CAGD,4DACC,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAGD,iEACC,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAIF,mDACC,YAAA,CACA,qBAAA,CAEA,8DACC,YAAA,CACA,WAAA,CACA,YAAA,CACA,6BAAA,CACA,sBAAA,CACA,6BAAA,CACA,oCAAA,CACA,4BAAA,CAEA,gFACC,YAAA,CACA,WAAA,CACA,WAAA,CACA,WAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CACA,iBAAA,CACA,oCAAA,CACA,4BAAA,CACA,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,oBAAA,CAGD,iFACC,YAAA,CACA,qBAAA,CACA,OAAA,CAEA,yGACC,YAAA,CACA,OAAA,CACA,kBAAA,CAEA,gHACC,UAAA,CAGD,oHACC,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAGF,iGACC,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CACA,iBAAA,CAIF,6EACC,YAAA,CACA,WAAA,CACA,WAAA,CACA,WAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CACA,iBAAA,CACA,oCAAA,CACA,4BAAA,CACA,eAAA,CACA,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,oBAAA,CAGD,iFACC,YAAA,CACA,qBAAA,CACA,OAAA,CAEA,qGACC,YAAA,CACA,OAAA,CACA,kBAAA,CAEA,4GACC,UAAA,CAGD,4GACC,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAIF,6FACC,2BAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CACA,iBAAA,CAYF,qEACC,uBAAA,CAGD,uEACC,uBAAA,CAGD,4EACC,uBAAA,CAKD,yEACC,sCAAA,CACA,gCAAA,CAEA,2FACC,sCAAA,CACA,gCAAA,CACA,uBAAA,CAKC,2HACC,uBAAA,CAGD,+HACC,uBAAA,CAGF,4GACC,uBAAA,CAIF,wFACC,sCAAA,CACA,gCAAA,CACA,uBAAA,CAKC,uHACC,uBAAA,CAGD,uHACC,uBAAA,CAIF,wGACC,uBAAA\",\"sourcesContent\":[\".dashboard-empty-state {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\talign-items: center;\\n\\tjustify-content: center;\\n\\theight: 500px;\\n\\n\\t.dashboard-content {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: flex-start;\\n\\t\\tgap: 12px;\\n\\n\\t\\t.heading {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\tgap: 4px;\\n\\n\\t\\t\\t.icons {\\n\\t\\t\\t\\tcolor: white;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.welcome {\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\tfont-size: 14px;\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t\\tline-height: 24px; /* 171.429% */\\n\\t\\t\\t\\tletter-spacing: -0.07px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.welcome-info {\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\tfont-size: 14px;\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\tfont-weight: 500;\\n\\t\\t\\t\\tline-height: 24px;\\n\\t\\t\\t\\tletter-spacing: -0.07px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.actions {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\n\\t\\t\\t.actions-1 {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\twidth: 560px;\\n\\t\\t\\t\\tpadding: 12px;\\n\\t\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\t\\talign-items: flex-start;\\n\\t\\t\\t\\tborder-radius: 4px 4px 0px 0px;\\n\\t\\t\\t\\tborder: 1px solid var(--bg-slate-500);\\n\\t\\t\\t\\tbackground: var(--bg-ink-400);\\n\\n\\t\\t\\t\\t.configure-button {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\twidth: 113px;\\n\\t\\t\\t\\t\\theight: 32px;\\n\\t\\t\\t\\t\\tpadding: 6px;\\n\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\tflex-shrink: 0;\\n\\t\\t\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\t\\t\\tborder: 1px solid var(--bg-slate-400);\\n\\t\\t\\t\\t\\tbackground: var(--bg-ink-300);\\n\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\t\\tfont-weight: 500;\\n\\t\\t\\t\\t\\tline-height: 10px; /* 83.333% */\\n\\t\\t\\t\\t\\tletter-spacing: 0.12px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.actions-configure {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\tgap: 6px;\\n\\n\\t\\t\\t\\t\\t.actions-configure-text {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\n\\t\\t\\t\\t\\t\\t.icons {\\n\\t\\t\\t\\t\\t\\t\\tcolor: white;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.configure {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\t\\t\\t\\tfont-size: 14px;\\n\\t\\t\\t\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\t\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t\\t\\t\\t\\tline-height: 20px; /* 142.857% */\\n\\t\\t\\t\\t\\t\\t\\tletter-spacing: -0.07px;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t.configure-info {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t\\t\\t\\tline-height: 20px; /* 166.667% */\\n\\t\\t\\t\\t\\t\\tletter-spacing: -0.06px;\\n\\t\\t\\t\\t\\t\\tpadding-left: 22px;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.add-panel-btn {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\twidth: 113px;\\n\\t\\t\\t\\t\\theight: 32px;\\n\\t\\t\\t\\t\\tpadding: 6px;\\n\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\tflex-shrink: 0;\\n\\t\\t\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\t\\t\\tborder: 1px solid var(--bg-slate-400);\\n\\t\\t\\t\\t\\tbackground: var(--bg-ink-300);\\n\\t\\t\\t\\t\\tbox-shadow: none;\\n\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\t\\tfont-weight: 500;\\n\\t\\t\\t\\t\\tline-height: 10px; /* 83.333% */\\n\\t\\t\\t\\t\\tletter-spacing: 0.12px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.actions-add-panel {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\tgap: 6px;\\n\\n\\t\\t\\t\\t\\t.actions-panel-text {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\n\\t\\t\\t\\t\\t\\t.icons {\\n\\t\\t\\t\\t\\t\\t\\tcolor: white;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.panel {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\t\\t\\t\\tfont-size: 14px;\\n\\t\\t\\t\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\t\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t\\t\\t\\t\\tline-height: 20px; /* 142.857% */\\n\\t\\t\\t\\t\\t\\t\\tletter-spacing: -0.07px;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.panel-info {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t\\t\\t\\tline-height: 20px; /* 166.667% */\\n\\t\\t\\t\\t\\t\\tletter-spacing: -0.06px;\\n\\t\\t\\t\\t\\t\\tpadding-left: 22px;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.dashboard-empty-state {\\n\\t\\t.dashboard-content {\\n\\t\\t\\t.heading {\\n\\t\\t\\t\\t.icons {\\n\\t\\t\\t\\t\\tcolor: var(--bg-ink-300);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.welcome {\\n\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.welcome-info {\\n\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.actions {\\n\\t\\t\\t\\t.actions-1 {\\n\\t\\t\\t\\t\\tborder: 1px solid var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\n\\t\\t\\t\\t\\t.configure-button {\\n\\t\\t\\t\\t\\t\\tborder: 1px solid var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\t\\tbackground: var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.actions-configure {\\n\\t\\t\\t\\t\\t\\t.actions-configure-text {\\n\\t\\t\\t\\t\\t\\t\\t.icons {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t.configure {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t.configure-info {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.add-panel-btn {\\n\\t\\t\\t\\t\\t\\tborder: 1px solid var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\t\\tbackground: var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-400);\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.actions-add-panel {\\n\\t\\t\\t\\t\\t\\t.actions-panel-text {\\n\\t\\t\\t\\t\\t\\t\\t.icons {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-300);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t.panel {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-300);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.panel-info {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-300);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./DashboardEmptyState.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["reactHotLoader","leaveModule","DashboardEmptyState","selectedDashboard","isDashboardLocked","handleToggleDashboardSlider","setSelectedRowWidgetId","useDashboard","user","useAppContext","permissions","userRole","createdBy","email","USER_ROLES","AUTHOR","role","addPanelPermission","useComponentPermission","onEmptyWidgetHandler","useCallback","_selectedDashboard$da","logEvent","dashboardId","id","dashboardName","data","title","numberOfPanels","widgets","length","_jsx","className","children","_jsxs","src","alt","style","height","width","Typography","Text","SettingsDrawer","drawerTitle","Button","onClick","icon","PlusOutlined","type","reactHotLoaderGlobal","default","undefined","register","module","GraphLayout","props","_data$widgets3","_widgets$find2","handle","safeNavigate","useSafeNavigate","layouts","setLayouts","panelMap","setPanelMap","setSelectedDashboard","dashboardQueryRangeCalled","setDashboardQueryRangeCalled","isDashboardFetching","columnWidths","pathname","useLocation","dispatch","useDispatch","variables","isDarkMode","useIsDarkMode","dashboardLayout","setDashboardLayout","useState","isSettingsModalOpen","setIsSettingsModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","currentSelectRowId","setCurrentSelectRowId","currentPanelMap","setCurrentPanelMap","useEffect","form","useForm","updateDashboardMutation","useUpdateDashboard","urlQuery","useUrlQuery","saveLayoutPermission","deleteWidget","editWidget","sortLayout","timeoutId","setTimeout","_data$widgets","_data$widgets2","Sentry","message","concat","level","clearTimeout","logEventCalledRef","useRef","_data$widgets4","current","isUndefined","numberOfVariables","Object","keys","widgetActions","ViewMenuAction","MenuItemKeys","CreateAlerts","EditMenuAction","onDragSelect","start","end","startTimestamp","Math","trunc","endTimestamp","set","QueryParams","startTime","toString","endTime","generatedUrl","UpdateTimeInterval","isLoading","shouldSaveLayout","Array","isArray","isEqual","shouldSaveColumnWidths","hasColumnWidthsChanged","onSaveHandler","updatedDashboard","layout","filter","e","i","PANEL_TYPES","EMPTY_WIDGET","map","widget","mutate","onSuccess","_updatedDashboard$dat","_widgets$find","setFieldValue","find","DEFAULT_ROW_NAME","handleRowCollapse","rowProperties","updatedPanelMap","updatedDashboardLayout","collapsed","widgetsInsideTheRow","maxY","forEach","w","max","y","h","currentRowWidget","j","findIndex","currentIdx","isPanelMapUpdated","push","some","prev","isDashboardEmpty","useMemo","_selectedDashboard$da6","isDataAvailableInAnyWidget","isLogEventCalled","FullScreen","ReactGridLayout","cols","rowHeight","autoSize","useCSSTransforms","isDraggable","isDroppable","isResizable","allowOverlap","onLayoutChange","filterLayout","removeUndefinedValuesFromLayout","filterDashboardLayout","updatedLayout","onDragStop","handleDragStop","_","oldItem","newItem","_currentPanelMap$oldI","_currentPanelMap$oldI2","differenceY","widgetsInsideRow","draggableHandle","backgroundColor","themeColors","snowWhite","_ref","_selectedDashboard$da7","currentWidget","panelTypes","PANEL_GROUP_TYPES","ROW","rowWidgetProperties","_rowWidgetProperties$","widgetCount","collapsedText","CardContainer","JSON","stringify","cx","display","gap","alignItems","GripVertical","size","color","Color","BG_VANILLA_100","BG_INK_300","cursor","ChevronDown","ChevronUp","WidgetRowHeader","Card","$panelType","TIME_SERIES","GridCard","query","headerMenuList","version","dataAvailable","isDataAvailable","LockKeyhole","Modal","open","rootClassName","destroyOnClose","footer","onCancel","Form","onFinish","onSettingsModalSubmit","_selectedDashboard$da2","_selectedDashboard$da3","newTitle","getFieldValue","updatedWidgets","updatedSelectedDashboard","mutateAsync","_updatedDashboard$dat2","_updatedDashboard$dat3","requiredMark","Item","required","name","Input","placeholder","defaultValue","defaultTo","htmlType","Check","disabled","X","onOk","handleRowDelete","_selectedDashboard$da4","_selectedDashboard$da5","_updatedDashboard$dat4","_updatedDashboard$dat5","_default","isRowSettingsOpen","setIsRowSettingsOpen","Popover","arrow","onOpenChange","visible","trigger","placement","content","PenLine","Plus","EllipsisIcon","GridGraph","GraphLayoutContainer","GridGraphs","GridComponentSliderContainer","GridGraphLayout","styled","Row","_templateObject","_taggedTemplateLiteral","CardComponent","_templateObject2","div","_templateObject3","NewDashboard","useFullScreenHandle","Description","DashboardPage","_dashboardResponse$er","_dashboardResponse$da2","dashboardResponse","isFetching","isError","errorMessage","error","response","errorType","_dashboardResponse$da","dashboardTitle","document","ErrorType","NotFound","Spinner","tip","___CSS_LOADER_EXPORT___","api","__esModule","options","exports","locals"],"sourceRoot":""}