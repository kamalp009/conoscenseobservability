{"version":3,"file":"LogsIndexToFields Page.3dbf60212a71d457716d.js","mappings":"i2BAEA,SAASA,IACR,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,SAAC,qBACpB,CAAC,MAAAC,EAEcJ,EAAf,IAAiC,IAAAK,EAJPC,GAIOD,EAAA,oBAAAE,qBAAAA,qBAAAC,aAAAC,KAAAJ,EAAAK,SAJxBV,EAAiB,uGAAAK,EAAAK,SAAAN,EAAA,+FAAAE,EAAA,oBAAAC,qBAAAA,qBAAAD,iBAAAG,IAAAH,EAAAK,E,6ECG1B,SAASC,EAAQC,GAA+C,IAA9C,SAAEC,EAAQ,MAAEC,GAAmBF,EAChD,MAAM,SAAEG,IAAaC,EAAAA,EAAAA,MAErB,OAAID,IAAaF,GAAiBb,EAAAA,EAAAA,KAACC,EAAAA,EAAWgB,KAAI,CAAAf,SAAEY,KAE7Cd,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAAAC,SAAEY,GACrB,C,8MANSH,EAAQ,kCACKK,EAAAA,MAAW,MAAAb,EAOlBQ,EAAf,IAAwB,IAAAP,EARPC,GAQOD,EAAA,oBAAAE,qBAAAA,qBAAAC,aAAAC,KAAAJ,EAAAK,SARfE,EAAQ,mGAAAP,EAAAK,SAAAN,EAAA,oGAAAE,EAAA,oBAAAC,qBAAAA,qBAAAD,iBAAAG,IAAAH,EAAAK,E,4RCGV,MAAMQ,EAAwBC,GAA0C,CAC9E,CACCC,UAAWrB,EAAAA,EACXsB,MACCrB,EAAAA,EAAAA,KAACW,EAAAA,EAAQ,CACRG,OAAOQ,EAAAA,EAAAA,GAAWH,GAAGI,EAAAA,EAASC,mBAC9BX,SAAUY,EAAAA,EAAOD,oBAGnBE,MAAOD,EAAAA,EAAOD,kBACdG,IAAKF,EAAAA,EAAOD,oBAEZ,IAAApB,EAZ+BC,GAY/BD,EAAA,oBAAAE,qBAAAA,qBAAAC,aAAAC,IAAAJ,EAAAK,SAZWS,EAAoB,mGAAAb,EAAA,oBAAAC,qBAAAA,qBAAAD,iBAAAG,IAAAH,EAAAK,E,yOCN1B,MAAMa,EAAW,CACvBC,kBAAmB,oBACnBI,cAAe,iBAGHN,EAAcH,IAAY,CACtC,CAACI,EAASC,mBAAoBL,EAAE,uBAChC,CAACI,EAASK,eAAgBT,EAAE,qBAC1B,IAAAf,EAHoBC,GAGpBD,EAAA,oBAAAE,qBAAAA,qBAAAC,aAAAC,KAAAJ,EAAAK,SARUc,EAAQ,uFAAAnB,EAAAK,SAKRa,EAAU,2FAAAjB,EAAA,oBAAAC,qBAAAA,qBAAAD,iBAAAG,IAAAH,EAAAK,E,2ICCvB,SAASmB,IACR,MAAM,SAAEd,IAAaC,EAAAA,EAAAA,OACf,EAAEG,IAAMW,EAAAA,EAAAA,KAERC,GAASC,EAAAA,EAAAA,UAAQ,KAAMd,EAAAA,EAAAA,GAAqBC,IAAI,CAACA,IAEvD,OAAOnB,EAAAA,EAAAA,KAACiC,EAAAA,EAAQ,CAACC,UAAWnB,EAAUgB,OAAQA,EAAQI,QAASA,EAAAA,GAChE,C,8MAPSN,EAAY,0EACCb,EAAAA,GACPc,EAAAA,KAAc,MAAA3B,EAOd0B,EAAf,IAA4B,IAAAzB,EATPC,GASOD,EAAA,oBAAAE,qBAAAA,qBAAAC,aAAAC,KAAAJ,EAAAK,SATnBoB,EAAY,yFAAAzB,EAAAK,SAAAN,EAAA,sFAAAE,EAAA,oBAAAC,qBAAAA,qBAAAD,iBAAAG,IAAAH,EAAAK,E","sources":["webpack://frontend/./src/container/LogsIndexToFields/index.tsx","webpack://frontend/./src/pages/LogsSettings/components/TabLabel.tsx","webpack://frontend/./src/pages/LogsSettings/config.tsx","webpack://frontend/./src/pages/LogsSettings/constant.ts","webpack://frontend/./src/pages/LogsSettings/index.tsx"],"sourcesContent":["import { Typography } from 'antd';\n\nfunction LogsIndexToFields(): JSX.Element {\n\treturn <Typography>LogsIndexToFields</Typography>;\n}\n\nexport default LogsIndexToFields;\n","import { Typography } from 'antd';\nimport { useLocation } from 'react-router-dom';\n\nimport { TableLabel } from '../types';\n\nfunction TabLabel({ routeKey, label }: TableLabel): JSX.Element {\n\tconst { pathname } = useLocation();\n\n\tif (pathname === routeKey) return <Typography.Link>{label}</Typography.Link>;\n\n\treturn <Typography>{label}</Typography>;\n}\n\nexport default TabLabel;\n","import { RouteTabProps } from 'components/RouteTab/types';\nimport ROUTES from 'constants/routes';\nimport LogsIndexToFields from 'container/LogsIndexToFields';\nimport { TFunction } from 'react-i18next';\n\nimport TabLabel from './components/TabLabel';\nimport { TABS_KEY, TABS_TITLE } from './constant';\n\nexport const getLogsSettingsRoute = (t: TFunction): RouteTabProps['routes'] => [\n\t{\n\t\tComponent: LogsIndexToFields,\n\t\tname: (\n\t\t\t<TabLabel\n\t\t\t\tlabel={TABS_TITLE(t)[TABS_KEY.LOGS_INDEX_FIELDS]}\n\t\t\t\trouteKey={ROUTES.LOGS_INDEX_FIELDS}\n\t\t\t/>\n\t\t),\n\t\troute: ROUTES.LOGS_INDEX_FIELDS,\n\t\tkey: ROUTES.LOGS_INDEX_FIELDS,\n\t},\n];\n","import { TFunction } from 'i18next';\n\nexport const TABS_KEY = {\n\tLOGS_INDEX_FIELDS: 'LOGS_INDEX_FIELDS',\n\tLOGS_PIPELINE: 'LOGS_PIPELINE',\n};\n\nexport const TABS_TITLE = (t: TFunction): Record<string, string> => ({\n\t[TABS_KEY.LOGS_INDEX_FIELDS]: t('routes.index_fields'),\n\t[TABS_KEY.LOGS_PIPELINE]: t('routes.pipeline'),\n});\n","import RouteTab from 'components/RouteTab';\nimport history from 'lib/history';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\n\nimport { getLogsSettingsRoute } from './config';\n\nfunction LogsSettings(): JSX.Element {\n\tconst { pathname } = useLocation();\n\tconst { t } = useTranslation();\n\n\tconst routes = useMemo(() => getLogsSettingsRoute(t), [t]);\n\n\treturn <RouteTab activeKey={pathname} routes={routes} history={history} />;\n}\n\nexport default LogsSettings;\n"],"names":["LogsIndexToFields","_jsx","Typography","children","_default","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","TabLabel","_ref","routeKey","label","pathname","useLocation","Link","getLogsSettingsRoute","t","Component","name","TABS_TITLE","TABS_KEY","LOGS_INDEX_FIELDS","ROUTES","route","key","LOGS_PIPELINE","LogsSettings","useTranslation","routes","useMemo","RouteTab","activeKey","history"],"sourceRoot":""}