{"version":3,"file":"ServicesTablePage.cb62bb6bb47d2c33ccac.js","mappings":"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","sources":["webpack://frontend/./node_modules/@ant-design/icons-svg/es/asn/WarningFilled.js","webpack://frontend/./node_modules/@ant-design/icons/es/icons/WarningFilled.js","webpack://frontend/./node_modules/antd/es/popconfirm/PurePanel.js","webpack://frontend/./node_modules/antd/es/popconfirm/index.js","webpack://frontend/./node_modules/antd/es/popconfirm/style/index.js","webpack://frontend/./src/components/Modal.tsx","webpack://frontend/./src/components/TableRenderer/utils.ts","webpack://frontend/./src/constants/global.ts","webpack://frontend/./src/container/ServiceApplication/Columns/BaseColumnOptions.ts","webpack://frontend/./src/container/ServiceApplication/Columns/GetColumnSearchProps.tsx","webpack://frontend/./src/container/ServiceApplication/Columns/ServiceColumn.ts","webpack://frontend/./src/container/ServiceApplication/ServiceMetrics/ServiceMetricTable.tsx","webpack://frontend/./src/container/ServiceApplication/ServiceMetrics/ServiceMetricsApplication.tsx","webpack://frontend/./src/container/ServiceApplication/ServiceMetrics/ServiceMetricsQuery.ts","webpack://frontend/./src/container/ServiceApplication/ServiceMetrics/index.tsx","webpack://frontend/./src/container/ServiceApplication/ServiceTraces/ServiceTracesTable.tsx","webpack://frontend/./src/container/ServiceApplication/ServiceTraces/index.tsx","webpack://frontend/./src/container/ServiceApplication/SkipOnBoardModal/index.tsx","webpack://frontend/./src/container/ServiceApplication/index.tsx","webpack://frontend/./src/container/ServiceApplication/styles.ts","webpack://frontend/./src/container/ServiceApplication/utils.ts","webpack://frontend/./src/hooks/queryBuilder/useGetQueriesRange.ts","webpack://frontend/./src/hooks/useGetTopLevelOperations.ts","webpack://frontend/./src/pages/Services/index.tsx","webpack://frontend/./src/utils/services.ts","webpack://frontend/./src/container/ServiceApplication/ServiceApplication.styles.scss","webpack://frontend/./src/container/ServiceApplication/ServiceApplication.styles.scss?7ba8"],"sourcesContent":["// This icon file is generated automatically.\nvar WarningFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M955.7 856l-416-720c-6.2-10.7-16.9-16-27.7-16s-21.6 5.3-27.7 16l-416 720C56 877.4 71.4 904 96 904h832c24.6 0 40-26.6 27.7-48zM480 416c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v184c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V416zm32 352a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"warning\", \"theme\": \"filled\" };\nexport default WarningFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport WarningFilledSvg from \"@ant-design/icons-svg/es/asn/WarningFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar WarningFilled = function WarningFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: WarningFilledSvg\n  }));\n};\nWarningFilled.displayName = 'WarningFilled';\nexport default /*#__PURE__*/React.forwardRef(WarningFilled);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport ActionButton from '../_util/ActionButton';\nimport { getRenderPropValue } from '../_util/getRenderPropValue';\nimport Button from '../button';\nimport { convertLegacyProps } from '../button/buttonHelpers';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport defaultLocale from '../locale/en_US';\nimport PopoverPurePanel from '../popover/PurePanel';\nimport useStyle from './style';\nexport const Overlay = props => {\n  const {\n    prefixCls,\n    okButtonProps,\n    cancelButtonProps,\n    title,\n    description,\n    cancelText,\n    okText,\n    okType = 'primary',\n    icon = /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n    showCancel = true,\n    close,\n    onConfirm,\n    onCancel,\n    onPopupClick\n  } = props;\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const [contextLocale] = useLocale('Popconfirm', defaultLocale.Popconfirm);\n  const theTitle = getRenderPropValue(title);\n  const theDescription = getRenderPropValue(description);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-inner-content`,\n    onClick: onPopupClick\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-message`\n  }, icon && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-message-icon`\n  }, icon), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-message-text`\n  }, theTitle && /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-title`)\n  }, theTitle), theDescription && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-description`\n  }, theDescription))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-buttons`\n  }, showCancel && /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: onCancel,\n    size: \"small\"\n  }, cancelButtonProps), cancelText !== null && cancelText !== void 0 ? cancelText : contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.cancelText), /*#__PURE__*/React.createElement(ActionButton, {\n    buttonProps: Object.assign(Object.assign({\n      size: 'small'\n    }, convertLegacyProps(okType)), okButtonProps),\n    actionFn: onConfirm,\n    close: close,\n    prefixCls: getPrefixCls('btn'),\n    quitOnNullishReturnValue: true,\n    emitEvent: true\n  }, okText !== null && okText !== void 0 ? okText : contextLocale === null || contextLocale === void 0 ? void 0 : contextLocale.okText)));\n};\nconst PurePanel = props => {\n  const {\n      prefixCls: customizePrefixCls,\n      placement,\n      className,\n      style\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"placement\", \"className\", \"style\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('popconfirm', customizePrefixCls);\n  const [wrapSSR] = useStyle(prefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(PopoverPurePanel, {\n    placement: placement,\n    className: classNames(prefixCls, className),\n    style: style,\n    content: /*#__PURE__*/React.createElement(Overlay, Object.assign({\n      prefixCls: prefixCls\n    }, restProps))\n  }));\n};\nexport default PurePanel;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport omit from \"rc-util/es/omit\";\nimport { cloneElement } from '../_util/reactNode';\nimport { ConfigContext } from '../config-provider';\nimport Popover from '../popover';\nimport PurePanel, { Overlay } from './PurePanel';\nimport usePopconfirmStyle from './style';\nconst Popconfirm = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      placement = 'top',\n      trigger = 'click',\n      okType = 'primary',\n      icon = /*#__PURE__*/React.createElement(ExclamationCircleFilled, null),\n      children,\n      overlayClassName,\n      onOpenChange,\n      onVisibleChange\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"placement\", \"trigger\", \"okType\", \"icon\", \"children\", \"overlayClassName\", \"onOpenChange\", \"onVisibleChange\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const [open, setOpen] = useMergedState(false, {\n    value: props.open,\n    defaultValue: props.defaultOpen\n  });\n  const settingOpen = (value, e) => {\n    setOpen(value, true);\n    onVisibleChange === null || onVisibleChange === void 0 ? void 0 : onVisibleChange(value);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(value, e);\n  };\n  const close = e => {\n    settingOpen(false, e);\n  };\n  const onConfirm = e => {\n    var _a;\n    return (_a = props.onConfirm) === null || _a === void 0 ? void 0 : _a.call(this, e);\n  };\n  const onCancel = e => {\n    var _a;\n    settingOpen(false, e);\n    (_a = props.onCancel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n  };\n  const onKeyDown = e => {\n    if (e.keyCode === KeyCode.ESC && open) {\n      settingOpen(false, e);\n    }\n  };\n  const onInternalOpenChange = value => {\n    const {\n      disabled = false\n    } = props;\n    if (disabled) {\n      return;\n    }\n    settingOpen(value);\n  };\n  const prefixCls = getPrefixCls('popconfirm', customizePrefixCls);\n  const overlayClassNames = classNames(prefixCls, overlayClassName);\n  const [wrapSSR] = usePopconfirmStyle(prefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(Popover, Object.assign({}, omit(restProps, ['title']), {\n    trigger: trigger,\n    placement: placement,\n    onOpenChange: onInternalOpenChange,\n    open: open,\n    ref: ref,\n    overlayClassName: overlayClassNames,\n    content: /*#__PURE__*/React.createElement(Overlay, Object.assign({\n      okType: okType,\n      icon: icon\n    }, props, {\n      prefixCls: prefixCls,\n      close: close,\n      onConfirm: onConfirm,\n      onCancel: onCancel\n    })),\n    \"data-popover-inject\": true\n  }), cloneElement(children, {\n    onKeyDown: e => {\n      var _a, _b;\n      if ( /*#__PURE__*/React.isValidElement(children)) {\n        (_b = children === null || children === void 0 ? void 0 : (_a = children.props).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      }\n      onKeyDown(e);\n    }\n  })));\n});\n// We don't care debug panel\n/* istanbul ignore next */\nPopconfirm._InternalPanelDoNotUseOrYouWillBeFired = PurePanel;\nif (process.env.NODE_ENV !== 'production') {\n  Popconfirm.displayName = 'Popconfirm';\n}\nexport default Popconfirm;","\"use client\";\n\nimport { genComponentStyleHook } from '../../theme/internal';\n// =============================== Base ===============================\nconst genBaseStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    zIndexPopup,\n    colorText,\n    colorWarning,\n    marginXXS,\n    marginXS,\n    fontSize,\n    fontWeightStrong,\n    colorTextHeading\n  } = token;\n  return {\n    [componentCls]: {\n      zIndex: zIndexPopup,\n      [`&${antCls}-popover`]: {\n        fontSize\n      },\n      [`${componentCls}-message`]: {\n        marginBottom: marginXS,\n        display: 'flex',\n        flexWrap: 'nowrap',\n        alignItems: 'start',\n        [`> ${componentCls}-message-icon ${iconCls}`]: {\n          color: colorWarning,\n          fontSize,\n          lineHeight: 1,\n          marginInlineEnd: marginXS\n        },\n        [`${componentCls}-title`]: {\n          fontWeight: fontWeightStrong,\n          color: colorTextHeading,\n          '&:only-child': {\n            fontWeight: 'normal'\n          }\n        },\n        [`${componentCls}-description`]: {\n          marginTop: marginXXS,\n          color: colorText\n        }\n      },\n      [`${componentCls}-buttons`]: {\n        textAlign: 'end',\n        whiteSpace: 'nowrap',\n        button: {\n          marginInlineStart: marginXS\n        }\n      }\n    }\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Popconfirm', token => genBaseStyle(token), token => {\n  const {\n    zIndexPopupBase\n  } = token;\n  return {\n    zIndexPopup: zIndexPopupBase + 60\n  };\n}, {\n  resetStyle: false\n});","import { Modal, ModalProps as Props } from 'antd';\nimport { ReactElement } from 'react';\n\nfunction CustomModal({\n\ttitle,\n\tchildren,\n\tisModalVisible,\n\tfooter,\n\tclosable = true,\n}: ModalProps): JSX.Element {\n\treturn (\n\t\t<Modal\n\t\t\ttitle={title}\n\t\t\topen={isModalVisible}\n\t\t\tfooter={footer}\n\t\t\tclosable={closable}\n\t\t>\n\t\t\t{children}\n\t\t</Modal>\n\t);\n}\n\ninterface ModalProps {\n\tisModalVisible: boolean;\n\tclosable?: boolean;\n\tfooter?: Props['footer'];\n\ttitle: string;\n\tchildren: ReactElement;\n}\n\nCustomModal.defaultProps = {\n\tclosable: undefined,\n\tfooter: undefined,\n};\n\nexport default CustomModal;\n","import { ColumnType } from 'antd/es/table';\nimport { ColumnsType } from 'antd/lib/table';\n\nexport const generatorResizeTableColumns = <T>({\n\tbaseColumnOptions,\n\tdynamicColumnOption,\n}: GeneratorResizeTableColumnsProp<T>): ColumnsType<T> =>\n\tbaseColumnOptions.map((config: ColumnType<T>) => {\n\t\tconst { key } = config;\n\t\tconst extraConfig = dynamicColumnOption.find(\n\t\t\t(dynamicConfigItem) => dynamicConfigItem.key === key,\n\t\t);\n\t\treturn {\n\t\t\t...config,\n\t\t\t...extraConfig?.columnOption,\n\t\t};\n\t});\n\nexport const getLabelRenderingValue = (\n\tlabel: string,\n\tvalue?: string,\n): string => {\n\tconst maxLength = 20;\n\n\tif (label.length > maxLength) {\n\t\treturn `${label.slice(0, maxLength)}...`;\n\t}\n\n\tif (value) {\n\t\tconst remainingSpace = maxLength - label.length;\n\t\tlet newValue = value;\n\t\tif (value.length > remainingSpace) {\n\t\t\tnewValue = `${value.slice(0, remainingSpace)}...`;\n\t\t}\n\t\treturn `${label}: ${newValue}`;\n\t}\n\n\treturn label;\n};\n\nexport const getLabelAndValueContent = (\n\tlabel: string,\n\tvalue?: string,\n): string => {\n\tif (value) {\n\t\treturn `${label}: ${value}`;\n\t}\n\treturn `${label}`;\n};\n\ninterface GeneratorResizeTableColumnsProp<T> {\n\tbaseColumnOptions: ColumnsType<T>;\n\tdynamicColumnOption: { key: string; columnOption: ColumnType<T> }[];\n}\n","import { ManipulateType } from 'dayjs';\n\nconst MAX_RPS_LIMIT = 100;\nexport { MAX_RPS_LIMIT };\n\nexport const LEGEND = 'legend';\n\nexport const DAYJS_MANIPULATE_TYPES: { [key: string]: ManipulateType } = {\n\tDAY: 'day',\n\tWEEK: 'week',\n\tMONTH: 'month',\n\tYEAR: 'year',\n\tHOUR: 'hour',\n\tMINUTE: 'minute',\n\tSECOND: 'second',\n\tMILLISECOND: 'millisecond',\n};\n","import { ColumnsType } from 'antd/es/table';\nimport { ServicesList } from 'types/api/metrics/getService';\n\nimport {\n\tColumnKey,\n\tColumnTitle,\n\tColumnWidth,\n\tSORTING_ORDER,\n} from './ColumnContants';\n\nexport const baseColumnOptions: ColumnsType<ServicesList> = [\n\t{\n\t\ttitle: ColumnTitle[ColumnKey.Application],\n\t\tdataIndex: ColumnKey.Application,\n\t\twidth: ColumnWidth.Application,\n\t\tkey: ColumnKey.Application,\n\t},\n\t{\n\t\tdataIndex: ColumnKey.P99,\n\t\tkey: ColumnKey.P99,\n\t\twidth: ColumnWidth.P99,\n\t\tdefaultSortOrder: SORTING_ORDER,\n\t},\n\t{\n\t\ttitle: ColumnTitle[ColumnKey.ErrorRate],\n\t\tdataIndex: ColumnKey.ErrorRate,\n\t\tkey: ColumnKey.ErrorRate,\n\t\twidth: 150,\n\t},\n\t{\n\t\ttitle: ColumnTitle[ColumnKey.Operations],\n\t\tdataIndex: ColumnKey.Operations,\n\t\tkey: ColumnKey.Operations,\n\t\twidth: ColumnWidth.Operations,\n\t},\n];\n","import '../ServiceApplication.styles.scss';\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Popconfirm, PopconfirmProps } from 'antd';\nimport type { ColumnType } from 'antd/es/table';\nimport ROUTES from 'constants/routes';\nimport { routeConfig } from 'container/SideNav/config';\nimport { getQueryString } from 'container/SideNav/helper';\nimport history from 'lib/history';\nimport { Info } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { ServicesList } from 'types/api/metrics/getService';\n\nimport { filterDropdown } from '../Filter/FilterDropdown';\n\nconst MAX_TOP_LEVEL_OPERATIONS = 2500;\n\nconst highTopLevelOperationsPopoverDesc = (metrics: string): JSX.Element => (\n\t<div className=\"popover-description\">\n\t\tThe service `{metrics}` has too many top level operations. It makes the\n\t\tdashboard slow to load.\n\t</div>\n);\n\nexport const getColumnSearchProps = (\n\tdataIndex: keyof ServicesList,\n\tsearch: string,\n): ColumnType<ServicesList> => ({\n\tfilterDropdown,\n\tfilterIcon: <SearchOutlined />,\n\tonFilter: (\n\t\tvalue: string | number | boolean,\n\t\trecord: ServicesList,\n\t): boolean => {\n\t\tif (record[dataIndex]) {\n\t\t\treturn (\n\t\t\t\trecord[dataIndex]\n\t\t\t\t\t?.toString()\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.includes(value.toString().toLowerCase()) || false\n\t\t\t);\n\t\t}\n\n\t\treturn false;\n\t},\n\trender: (metrics: string, record: ServicesList): JSX.Element => {\n\t\tconst urlParams = new URLSearchParams(search);\n\t\tconst avialableParams = routeConfig[ROUTES.SERVICE_METRICS];\n\t\tconst queryString = getQueryString(avialableParams, urlParams);\n\t\tconst topLevelOperations = record?.dataWarning?.topLevelOps || [];\n\n\t\tconst handleShowTopLevelOperations: PopconfirmProps['onConfirm'] = () => {\n\t\t\thistory.push(\n\t\t\t\t`${ROUTES.APPLICATION}/${encodeURIComponent(metrics)}/top-level-operations`,\n\t\t\t);\n\t\t};\n\n\t\tconst hasHighTopLevelOperations =\n\t\t\ttopLevelOperations &&\n\t\t\tArray.isArray(topLevelOperations) &&\n\t\t\ttopLevelOperations.length > MAX_TOP_LEVEL_OPERATIONS;\n\n\t\treturn (\n\t\t\t<div className={`serviceName ${hasHighTopLevelOperations ? 'error' : ''} `}>\n\t\t\t\t{hasHighTopLevelOperations && (\n\t\t\t\t\t<Popconfirm\n\t\t\t\t\t\ttitle=\"Too Many Top Level Operations\"\n\t\t\t\t\t\tdescription={highTopLevelOperationsPopoverDesc(metrics)}\n\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\toverlayClassName=\"service-high-top-level-operations\"\n\t\t\t\t\t\tonConfirm={handleShowTopLevelOperations}\n\t\t\t\t\t\ttrigger={['hover']}\n\t\t\t\t\t\tshowCancel={false}\n\t\t\t\t\t\tokText=\"Show Top Level Operations\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Info size={14} />\n\t\t\t\t\t</Popconfirm>\n\t\t\t\t)}\n\n\t\t\t\t<Link\n\t\t\t\t\tto={`${ROUTES.APPLICATION}/${encodeURIComponent(\n\t\t\t\t\t\tmetrics,\n\t\t\t\t\t)}?${queryString.join('')}`}\n\t\t\t\t>\n\t\t\t\t\t{metrics}\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t);\n\t},\n});\n","import type { ColumnsType, ColumnType } from 'antd/es/table';\nimport { generatorResizeTableColumns } from 'components/TableRenderer/utils';\nimport { ServicesList } from 'types/api/metrics/getService';\n\nimport { baseColumnOptions } from './BaseColumnOptions';\nimport { ColumnKey, ColumnTitle } from './ColumnContants';\nimport { getColumnSearchProps } from './GetColumnSearchProps';\n\nexport const getColumns = (\n\tsearch: string,\n\tisMetricData: boolean,\n): ColumnsType<ServicesList> => {\n\tconst dynamicColumnOption: {\n\t\tkey: string;\n\t\tcolumnOption: ColumnType<ServicesList>;\n\t}[] = [\n\t\t{\n\t\t\tkey: ColumnKey.Application,\n\t\t\tcolumnOption: {\n\t\t\t\t...getColumnSearchProps('serviceName', search),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tkey: ColumnKey.P99,\n\t\t\tcolumnOption: {\n\t\t\t\ttitle: `${ColumnTitle[ColumnKey.P99]}${\n\t\t\t\t\tisMetricData ? ' (in ns)' : ' (in ms)'\n\t\t\t\t}`,\n\t\t\t\tsorter: (a: ServicesList, b: ServicesList): number => a.p99 - b.p99,\n\t\t\t\trender: (value: number): string => {\n\t\t\t\t\tif (Number.isNaN(value)) return '0.00';\n\t\t\t\t\treturn isMetricData ? value.toFixed(2) : (value / 1000000).toFixed(2);\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tkey: ColumnKey.ErrorRate,\n\t\t\tcolumnOption: {\n\t\t\t\tsorter: (a: ServicesList, b: ServicesList): number =>\n\t\t\t\t\ta.errorRate - b.errorRate,\n\t\t\t\trender: (value: number): string => value.toFixed(2),\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tkey: ColumnKey.Operations,\n\t\t\tcolumnOption: {\n\t\t\t\tsorter: (a: ServicesList, b: ServicesList): number =>\n\t\t\t\t\ta.callRate - b.callRate,\n\t\t\t\trender: (value: number): string => value.toFixed(2),\n\t\t\t},\n\t\t},\n\t];\n\n\treturn generatorResizeTableColumns<ServicesList>({\n\t\tbaseColumnOptions,\n\t\tdynamicColumnOption,\n\t});\n};\n","import { WarningFilled } from '@ant-design/icons';\nimport { Flex, Typography } from 'antd';\nimport { ResizeTable } from 'components/ResizeTable';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport { MAX_RPS_LIMIT } from 'constants/global';\nimport ResourceAttributesFilter from 'container/ResourceAttributesFilter';\nimport { useGetQueriesRange } from 'hooks/queryBuilder/useGetQueriesRange';\nimport { useGetTenantLicense } from 'hooks/useGetTenantLicense';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { useAppContext } from 'providers/App/App';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { AppState } from 'store/reducers';\nimport { ServicesList } from 'types/api/metrics/getService';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { getTotalRPS } from 'utils/services';\n\nimport { getColumns } from '../Columns/ServiceColumn';\nimport { ServiceMetricsTableProps } from '../types';\nimport { getServiceListFromQuery } from '../utils';\n\nfunction ServiceMetricTable({\n\ttopLevelOperations,\n\tqueryRangeRequestData,\n}: ServiceMetricsTableProps): JSX.Element {\n\tconst { minTime, maxTime, selectedTime: globalSelectedInterval } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\n\tconst { notifications } = useNotifications();\n\tconst { t: getText } = useTranslation(['services']);\n\n\tconst { isFetchingActiveLicense, trialInfo } = useAppContext();\n\tconst { isCloudUser: isCloudUserVal } = useGetTenantLicense();\n\n\tconst queries = useGetQueriesRange(queryRangeRequestData, ENTITY_VERSION_V4, {\n\t\tqueryKey: [\n\t\t\t`GetMetricsQueryRange-${queryRangeRequestData[0].selectedTime}-${globalSelectedInterval}`,\n\t\t\tmaxTime,\n\t\t\tminTime,\n\t\t\tglobalSelectedInterval,\n\t\t],\n\t\tkeepPreviousData: true,\n\t\tenabled: true,\n\t\trefetchOnMount: false,\n\t\tonError: (error) => {\n\t\t\tnotifications.error({\n\t\t\t\tmessage: error.message,\n\t\t\t});\n\t\t},\n\t});\n\n\tconst isLoading = queries.some((query) => query.isLoading);\n\tconst services: ServicesList[] = useMemo(\n\t\t() =>\n\t\t\tgetServiceListFromQuery({\n\t\t\t\tqueries,\n\t\t\t\ttopLevelOperations,\n\t\t\t\tisLoading,\n\t\t\t}),\n\t\t[isLoading, queries, topLevelOperations],\n\t);\n\n\tconst { search } = useLocation();\n\tconst tableColumns = useMemo(() => getColumns(search, true), [search]);\n\tconst [RPS, setRPS] = useState(0);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!isFetchingActiveLicense &&\n\t\t\ttrialInfo?.onTrial &&\n\t\t\t!trialInfo?.trialConvertedToSubscription &&\n\t\t\tisCloudUserVal\n\t\t) {\n\t\t\tif (services.length > 0) {\n\t\t\t\tconst rps = getTotalRPS(services);\n\t\t\t\tsetRPS(rps);\n\t\t\t} else {\n\t\t\t\tsetRPS(0);\n\t\t\t}\n\t\t}\n\t}, [\n\t\tservices,\n\t\tisCloudUserVal,\n\t\tisFetchingActiveLicense,\n\t\ttrialInfo?.onTrial,\n\t\ttrialInfo?.trialConvertedToSubscription,\n\t]);\n\n\tconst paginationConfig = {\n\t\tdefaultPageSize: 10,\n\t\tshowTotal: (total: number, range: number[]): string =>\n\t\t\t`${range[0]}-${range[1]} of ${total} items`,\n\t};\n\treturn (\n\t\t<>\n\t\t\t{RPS > MAX_RPS_LIMIT && (\n\t\t\t\t<Flex justify=\"left\">\n\t\t\t\t\t<Typography.Title level={5} type=\"warning\" style={{ marginTop: 0 }}>\n\t\t\t\t\t\t<WarningFilled /> {getText('rps_over_100')}\n\t\t\t\t\t\t<a href=\"mailto:cloud-support@signoz.io\">email</a>\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t</Flex>\n\t\t\t)}\n\n\t\t\t<ResourceAttributesFilter />\n\n\t\t\t<ResizeTable\n\t\t\t\tpagination={paginationConfig}\n\t\t\t\tcolumns={tableColumns}\n\t\t\t\tloading={isLoading}\n\t\t\t\tdataSource={services}\n\t\t\t\trowKey=\"serviceName\"\n\t\t\t\tclassName=\"service-metrics-table\"\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ServiceMetricTable;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'store/reducers';\nimport { GlobalReducer } from 'types/reducer/globalTime';\n\nimport { FeatureKeys } from '../../../constants/features';\nimport { useAppContext } from '../../../providers/App/App';\nimport { ServiceMetricsProps } from '../types';\nimport { getQueryRangeRequestData } from '../utils';\nimport ServiceMetricTable from './ServiceMetricTable';\n\nfunction ServiceMetricsApplication({\n\ttopLevelOperations,\n}: ServiceMetricsProps): JSX.Element {\n\tconst { minTime, maxTime, selectedTime: globalSelectedInterval } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\n\tconst { featureFlags } = useAppContext();\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tconst queryRangeRequestData = useMemo(\n\t\t() =>\n\t\t\tgetQueryRangeRequestData({\n\t\t\t\ttopLevelOperations,\n\t\t\t\tminTime,\n\t\t\t\tmaxTime,\n\t\t\t\tglobalSelectedInterval,\n\t\t\t\tdotMetricsEnabled,\n\t\t\t}),\n\t\t[\n\t\t\tglobalSelectedInterval,\n\t\t\tmaxTime,\n\t\t\tminTime,\n\t\t\ttopLevelOperations,\n\t\t\tdotMetricsEnabled,\n\t\t],\n\t);\n\treturn (\n\t\t<ServiceMetricTable\n\t\t\ttopLevelOperations={topLevelOperations}\n\t\t\tqueryRangeRequestData={queryRangeRequestData}\n\t\t/>\n\t);\n}\n\nexport default ServiceMetricsApplication;\n","import { ServiceDataProps } from 'api/metrics/getTopLevelOperations';\nimport { OPERATORS } from 'constants/queryBuilder';\nimport {\n\tKeyOperationTableHeader,\n\tMetricsType,\n\tWidgetKeys,\n} from 'container/MetricsApplication/constant';\nimport { getQueryBuilderQuerieswithFormula } from 'container/MetricsApplication/MetricsPageQueries/MetricsPageQueriesFactory';\nimport {\n\tBaseAutocompleteData,\n\tDataTypes,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport {\n\tDataSource,\n\tMetricAggregateOperator,\n\tQueryBuilderData,\n} from 'types/common/queryBuilder';\n\nexport const serviceMetricsQuery = (\n\ttopLevelOperation: [keyof ServiceDataProps, string[]],\n\tdotMetricsEnabled: boolean,\n): QueryBuilderData => {\n\tconst p99AutoCompleteData: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: dotMetricsEnabled\n\t\t\t? WidgetKeys.Signoz_latency_bucket\n\t\t\t: WidgetKeys.Signoz_latency_bucket_norm,\n\t\ttype: '',\n\t};\n\n\tconst errorRateAutoCompleteData: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: WidgetKeys.SignozCallsTotal,\n\t\ttype: '',\n\t};\n\n\tconst operationPrSecondAutoCompleteData: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: WidgetKeys.SignozCallsTotal,\n\t\ttype: '',\n\t};\n\n\tconst autocompleteData = [\n\t\tp99AutoCompleteData,\n\t\terrorRateAutoCompleteData,\n\t\terrorRateAutoCompleteData,\n\t\toperationPrSecondAutoCompleteData,\n\t];\n\n\tconst p99AdditionalItems: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [topLevelOperation[0].toString()],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperation[1]],\n\t\t},\n\t];\n\n\tconst errorRateAdditionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [topLevelOperation[0].toString()],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.Int64,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled ? WidgetKeys.StatusCode : WidgetKeys.StatusCodeNorm,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: ['STATUS_CODE_ERROR'],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperation[1]],\n\t\t},\n\t];\n\n\tconst errorRateAdditionalItemsB: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [topLevelOperation[0].toString()],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperation[1]],\n\t\t},\n\t];\n\n\tconst operationPrSecondAdditionalItems: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [topLevelOperation[0].toString()],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperation[1]],\n\t\t},\n\t];\n\n\tconst additionalItems = [\n\t\tp99AdditionalItems,\n\t\terrorRateAdditionalItemsA,\n\t\terrorRateAdditionalItemsB,\n\t\toperationPrSecondAdditionalItems,\n\t];\n\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.P99,\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\n\tconst disabled = [false, true, true, false];\n\tconst legends = [\n\t\tKeyOperationTableHeader.P99,\n\t\tKeyOperationTableHeader.ERROR_RATE,\n\t\tKeyOperationTableHeader.ERROR_RATE,\n\t\tKeyOperationTableHeader.OPERATION_PR_SECOND,\n\t];\n\n\tconst expressions = ['B*100/C'];\n\n\tconst legendFormulas = ['Error Rate'];\n\n\tconst groupBy: BaseAutocompleteData[] = [\n\t\t{\n\t\t\tdataType: DataTypes.String,\n\t\t\tisColumn: false,\n\t\t\tkey: dotMetricsEnabled\n\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\ttype: MetricsType.Tag,\n\t\t},\n\t];\n\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tdisabled,\n\t\tlegends,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\tgroupBy,\n\t\tdataSource,\n\t});\n};\n","import localStorageGet from 'api/browser/localstorage/get';\nimport localStorageSet from 'api/browser/localstorage/set';\nimport Spinner from 'components/Spinner';\nimport { SKIP_ONBOARDING } from 'constants/onboarding';\nimport useGetTopLevelOperations from 'hooks/useGetTopLevelOperations';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport { convertRawQueriesToTraceSelectedTags } from 'hooks/useResourceAttribute/utils';\nimport { useMemo, useState } from 'react';\nimport { QueryKey } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'store/reducers';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { Tags } from 'types/reducer/trace';\n\nimport SkipOnBoardingModal from '../SkipOnBoardModal';\nimport ServiceMetricsApplication from './ServiceMetricsApplication';\n\nfunction ServicesUsingMetrics(): JSX.Element {\n\tconst { maxTime, minTime, selectedTime: globalSelectedInterval } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\tconst { queries } = useResourceAttribute();\n\tconst selectedTags = useMemo(\n\t\t() => (convertRawQueriesToTraceSelectedTags(queries) as Tags[]) || [],\n\t\t[queries],\n\t);\n\n\tconst queryKey: QueryKey = [\n\t\tminTime,\n\t\tmaxTime,\n\t\tselectedTags,\n\t\tglobalSelectedInterval,\n\t];\n\tconst { data, isLoading, isError } = useGetTopLevelOperations(queryKey, {\n\t\tstart: minTime,\n\t\tend: maxTime,\n\t});\n\n\tconst [skipOnboarding, setSkipOnboarding] = useState(\n\t\tlocalStorageGet(SKIP_ONBOARDING) === 'true',\n\t);\n\n\tconst onContinueClick = (): void => {\n\t\tlocalStorageSet(SKIP_ONBOARDING, 'true');\n\t\tsetSkipOnboarding(true);\n\t};\n\n\tconst topLevelOperations = Object.entries(data || {});\n\n\tif (isLoading === false && !skipOnboarding && isError === true) {\n\t\treturn <SkipOnBoardingModal onContinueClick={onContinueClick} />;\n\t}\n\n\tif (isLoading) {\n\t\treturn <Spinner tip=\"Loading...\" />;\n\t}\n\n\treturn <ServiceMetricsApplication topLevelOperations={topLevelOperations} />;\n}\n\nexport default ServicesUsingMetrics;\n","import { WarningFilled } from '@ant-design/icons';\nimport { Flex, Typography } from 'antd';\nimport { ResizeTable } from 'components/ResizeTable';\nimport { MAX_RPS_LIMIT } from 'constants/global';\nimport ResourceAttributesFilter from 'container/ResourceAttributesFilter';\nimport { useGetTenantLicense } from 'hooks/useGetTenantLicense';\nimport { useAppContext } from 'providers/App/App';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { getTotalRPS } from 'utils/services';\n\nimport { getColumns } from '../Columns/ServiceColumn';\nimport ServiceTableProps from '../types';\n\nfunction ServiceTraceTable({\n\tservices,\n\tloading,\n}: ServiceTableProps): JSX.Element {\n\tconst { search } = useLocation();\n\tconst [RPS, setRPS] = useState(0);\n\tconst { t: getText } = useTranslation(['services']);\n\n\tconst { isFetchingActiveLicense, trialInfo } = useAppContext();\n\tconst { isCloudUser: isCloudUserVal } = useGetTenantLicense();\n\tconst tableColumns = useMemo(() => getColumns(search, false), [search]);\n\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!isFetchingActiveLicense &&\n\t\t\ttrialInfo?.onTrial &&\n\t\t\t!trialInfo?.trialConvertedToSubscription &&\n\t\t\tisCloudUserVal\n\t\t) {\n\t\t\tif (services.length > 0) {\n\t\t\t\tconst rps = getTotalRPS(services);\n\t\t\t\tsetRPS(rps);\n\t\t\t} else {\n\t\t\t\tsetRPS(0);\n\t\t\t}\n\t\t}\n\t}, [\n\t\tservices,\n\t\tisCloudUserVal,\n\t\tisFetchingActiveLicense,\n\t\ttrialInfo?.onTrial,\n\t\ttrialInfo?.trialConvertedToSubscription,\n\t]);\n\n\tconst paginationConfig = {\n\t\tdefaultPageSize: 10,\n\t\tshowTotal: (total: number, range: number[]): string =>\n\t\t\t`${range[0]}-${range[1]} of ${total} items`,\n\t};\n\treturn (\n\t\t<>\n\t\t\t{RPS > MAX_RPS_LIMIT && (\n\t\t\t\t<Flex justify=\"left\">\n\t\t\t\t\t<Typography.Title level={5} type=\"warning\" style={{ marginTop: 0 }}>\n\t\t\t\t\t\t<WarningFilled /> {getText('rps_over_100')}\n\t\t\t\t\t\t<a href=\"mailto:cloud-support@signoz.io\">email</a>\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t</Flex>\n\t\t\t)}\n\n\t\t\t<ResourceAttributesFilter />\n\n\t\t\t<ResizeTable\n\t\t\t\tpagination={paginationConfig}\n\t\t\t\tcolumns={tableColumns}\n\t\t\t\tloading={loading}\n\t\t\t\tdataSource={services}\n\t\t\t\trowKey=\"serviceName\"\n\t\t\t\tclassName=\"service-traces-table\"\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default ServiceTraceTable;\n","import localStorageGet from 'api/browser/localstorage/get';\nimport localStorageSet from 'api/browser/localstorage/set';\nimport logEvent from 'api/common/logEvent';\nimport { SKIP_ONBOARDING } from 'constants/onboarding';\nimport useErrorNotification from 'hooks/useErrorNotification';\nimport { useQueryService } from 'hooks/useQueryService';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport {\n\tconvertRawQueriesToTraceSelectedTags,\n\tgetResourceDeploymentKeys,\n} from 'hooks/useResourceAttribute/utils';\nimport { isUndefined } from 'lodash-es';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'store/reducers';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { Tags } from 'types/reducer/trace';\n\nimport { FeatureKeys } from '../../../constants/features';\nimport { useAppContext } from '../../../providers/App/App';\nimport SkipOnBoardingModal from '../SkipOnBoardModal';\nimport ServiceTraceTable from './ServiceTracesTable';\n\nfunction ServiceTraces(): JSX.Element {\n\tconst { maxTime, minTime, selectedTime } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\tconst { queries } = useResourceAttribute();\n\tconst selectedTags = useMemo(\n\t\t() => (convertRawQueriesToTraceSelectedTags(queries) as Tags[]) || [],\n\t\t[queries],\n\t);\n\n\tconst { data, error, isLoading, isError } = useQueryService({\n\t\tminTime,\n\t\tmaxTime,\n\t\tselectedTime,\n\t\tselectedTags,\n\t});\n\n\tconst { featureFlags } = useAppContext();\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tuseErrorNotification(error);\n\n\tconst services = data || [];\n\n\tconst [skipOnboarding, setSkipOnboarding] = useState(\n\t\tlocalStorageGet(SKIP_ONBOARDING) === 'true',\n\t);\n\n\tconst onContinueClick = (): void => {\n\t\tlocalStorageSet(SKIP_ONBOARDING, 'true');\n\t\tsetSkipOnboarding(true);\n\t};\n\n\tconst logEventCalledRef = useRef(false);\n\tuseEffect(() => {\n\t\tif (!logEventCalledRef.current && !isUndefined(data)) {\n\t\t\tconst selectedEnvironments = queries.find(\n\t\t\t\t(val) => val.tagKey === getResourceDeploymentKeys(dotMetricsEnabled),\n\t\t\t)?.tagValue;\n\n\t\t\tconst rps = data.reduce((total, service) => total + service.callRate, 0);\n\n\t\t\tlogEvent('APM: List page visited', {\n\t\t\t\tnumberOfServices: data?.length,\n\t\t\t\tselectedEnvironments,\n\t\t\t\tresourceAttributeUsed: !!queries?.length,\n\t\t\t\trps,\n\t\t\t});\n\t\t\tlogEventCalledRef.current = true;\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [data]);\n\n\tif (\n\t\tservices.length === 0 &&\n\t\tisLoading === false &&\n\t\t!skipOnboarding &&\n\t\tisError === true\n\t) {\n\t\treturn <SkipOnBoardingModal onContinueClick={onContinueClick} />;\n\t}\n\n\treturn <ServiceTraceTable services={services} loading={isLoading} />;\n}\n\nexport default ServiceTraces;\n","import { Button, Typography } from 'antd';\nimport Modal from 'components/Modal';\n\nfunction SkipOnBoardingModal({ onContinueClick }: Props): JSX.Element {\n\treturn (\n\t\t<Modal\n\t\t\ttitle=\"Setup instrumentation\"\n\t\t\tisModalVisible\n\t\t\tclosable={false}\n\t\t\tfooter={[\n\t\t\t\t<Button key=\"submit\" type=\"primary\" onClick={onContinueClick}>\n\t\t\t\t\tContinue without instrumentation\n\t\t\t\t</Button>,\n\t\t\t]}\n\t\t>\n\t\t\t<>\n\t\t\t\t<iframe\n\t\t\t\t\twidth=\"100%\"\n\t\t\t\t\theight=\"265\"\n\t\t\t\t\tsrc=\"https://www.youtube.com/embed/J1Bof55DOb4\"\n\t\t\t\t\tframeBorder=\"0\"\n\t\t\t\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n\t\t\t\t\tallowFullScreen\n\t\t\t\t\ttitle=\"youtube_video\"\n\t\t\t\t/>\n\t\t\t\t<div>\n\t\t\t\t\t<Typography>No instrumentation data.</Typography>\n\t\t\t\t\t<Typography>\n\t\t\t\t\t\tPlease instrument your application as mentioned&nbsp;\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://signoz.io/docs/instrumentation/overview\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t</Modal>\n\t);\n}\n\ninterface Props {\n\tonContinueClick: () => void;\n}\n\nexport default SkipOnBoardingModal;\n","import * as Sentry from '@sentry/react';\nimport { FeatureKeys } from 'constants/features';\nimport ErrorBoundaryFallback from 'pages/ErrorBoundaryFallback/ErrorBoundaryFallback';\nimport { useAppContext } from 'providers/App/App';\n\nimport ServiceMetrics from './ServiceMetrics';\nimport ServiceTraces from './ServiceTraces';\nimport { Container } from './styles';\n\nfunction Services(): JSX.Element {\n\tconst { featureFlags } = useAppContext();\n\tconst isSpanMetricEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.USE_SPAN_METRICS)\n\t\t\t?.active || false;\n\n\treturn (\n\t\t<Sentry.ErrorBoundary fallback={<ErrorBoundaryFallback />}>\n\t\t\t<Container style={{ marginTop: 0 }}>\n\t\t\t\t{isSpanMetricEnabled ? <ServiceMetrics /> : <ServiceTraces />}\n\t\t\t</Container>\n\t\t</Sentry.ErrorBoundary>\n\t);\n}\n\nexport default Services;\n","import { Typography } from 'antd';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n\tmargin-top: 2rem;\n`;\n\nexport const Name = styled(Typography)`\n\t&&& {\n\t\tfont-weight: 600;\n\t\tcolor: #4e74f8;\n\t\tcursor: pointer;\n\t}\n`;\n","import { PANEL_TYPES } from 'constants/queryBuilder';\nimport { getWidgetQueryBuilder } from 'container/MetricsApplication/MetricsApplication.factory';\nimport { updateStepInterval } from 'hooks/queryBuilder/useStepInterval';\nimport { getDashboardVariables } from 'lib/dashbaordVariables/getDashboardVariables';\nimport { GetQueryResultsProps } from 'lib/dashboard/getQueryResults';\nimport { ServicesList } from 'types/api/metrics/getService';\nimport { QueryDataV3 } from 'types/api/widgets/getQuery';\nimport { EQueryType } from 'types/common/dashboard';\nimport { v4 as uuid } from 'uuid';\n\nimport { serviceMetricsQuery } from './ServiceMetrics/ServiceMetricsQuery';\nimport {\n\tGetQueryRangeRequestDataProps,\n\tGetServiceListFromQueryProps,\n} from './types';\n\nexport function getSeriesValue(\n\tqueryArray: QueryDataV3[],\n\tqueryName: string,\n): string {\n\tconst queryObject = queryArray.find((item) => item.queryName === queryName);\n\tconst series = queryObject ? queryObject.series : 0;\n\treturn series ? series[0].values[0].value : '0';\n}\n\nexport const getQueryRangeRequestData = ({\n\ttopLevelOperations,\n\tmaxTime,\n\tminTime,\n\tglobalSelectedInterval,\n\tdotMetricsEnabled,\n}: GetQueryRangeRequestDataProps): GetQueryResultsProps[] => {\n\tconst requestData: GetQueryResultsProps[] = [];\n\ttopLevelOperations.forEach((operation) => {\n\t\tconst serviceMetricsWidget = getWidgetQueryBuilder({\n\t\t\tquery: {\n\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\tpromql: [],\n\t\t\t\tbuilder: serviceMetricsQuery(operation, dotMetricsEnabled),\n\t\t\t\tclickhouse_sql: [],\n\t\t\t\tid: uuid(),\n\t\t\t},\n\t\t\tpanelTypes: PANEL_TYPES.TABLE,\n\t\t});\n\n\t\tconst updatedQuery = updateStepInterval(\n\t\t\tserviceMetricsWidget.query,\n\t\t\tmaxTime,\n\t\t\tminTime,\n\t\t);\n\n\t\trequestData.push({\n\t\t\tselectedTime: serviceMetricsWidget?.timePreferance,\n\t\t\tgraphType: serviceMetricsWidget?.panelTypes,\n\t\t\tquery: updatedQuery,\n\t\t\tglobalSelectedInterval,\n\t\t\tvariables: getDashboardVariables(),\n\t\t});\n\t});\n\treturn requestData;\n};\n\nexport const getServiceListFromQuery = ({\n\tqueries,\n\ttopLevelOperations,\n\tisLoading,\n}: GetServiceListFromQueryProps): ServicesList[] => {\n\tconst services: ServicesList[] = [];\n\tif (!isLoading) {\n\t\tqueries.forEach((query, index) => {\n\t\t\t// handling error case if query fails\n\t\t\tif (query.isError) {\n\t\t\t\tconst serviceData: ServicesList = {\n\t\t\t\t\tserviceName: topLevelOperations[index][0].toString(),\n\t\t\t\t\tp99: 0,\n\t\t\t\t\tcallRate: 0,\n\t\t\t\t\terrorRate: 0,\n\t\t\t\t\tavgDuration: 0,\n\t\t\t\t\tnumCalls: 0,\n\t\t\t\t\tnumErrors: 0,\n\t\t\t\t};\n\t\t\t\tservices.push(serviceData);\n\t\t\t}\n\t\t\tif (query.data) {\n\t\t\t\tconst queryArray = query.data?.payload?.data?.newResult?.data?.result;\n\t\t\t\tconst serviceData: ServicesList = {\n\t\t\t\t\tserviceName: topLevelOperations[index][0].toString(),\n\t\t\t\t\tp99: parseFloat(getSeriesValue(queryArray, 'A')),\n\t\t\t\t\tcallRate: parseFloat(getSeriesValue(queryArray, 'D')),\n\t\t\t\t\terrorRate: parseFloat(getSeriesValue(queryArray, 'F1')),\n\t\t\t\t\tavgDuration: 0,\n\t\t\t\t\tnumCalls: 0,\n\t\t\t\t\tnumErrors: 0,\n\t\t\t\t};\n\t\t\t\tservices.push(serviceData);\n\t\t\t}\n\t\t});\n\t}\n\treturn services;\n};\n","import { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport {\n\tGetMetricQueryRange,\n\tGetQueryResultsProps,\n} from 'lib/dashboard/getQueryResults';\nimport { useMemo } from 'react';\nimport {\n\tQueryKey,\n\tuseQueries,\n\tUseQueryOptions,\n\tUseQueryResult,\n} from 'react-query';\nimport { SuccessResponse } from 'types/api';\nimport { MetricRangePayloadProps } from 'types/api/metrics/getQueryRange';\n\nexport const useGetQueriesRange = (\n\trequestData: GetQueryResultsProps[],\n\tversion: string,\n\toptions: UseQueryOptions<SuccessResponse<MetricRangePayloadProps>, Error>,\n): UseQueryResult<SuccessResponse<MetricRangePayloadProps>, Error>[] => {\n\tconst queryKey = useMemo(() => {\n\t\tif (options?.queryKey) {\n\t\t\treturn [...options.queryKey];\n\t\t}\n\t\treturn [REACT_QUERY_KEY.GET_QUERY_RANGE, requestData];\n\t}, [options?.queryKey, requestData]);\n\n\tconst queryData = requestData.map((request, index) => ({\n\t\tqueryFn: async (): Promise<SuccessResponse<MetricRangePayloadProps>> =>\n\t\t\tGetMetricQueryRange(request, version),\n\t\t...options,\n\t\tqueryKey: [...queryKey, index] as QueryKey,\n\t}));\n\n\treturn useQueries(queryData);\n};\n","import getTopLevelOperations, {\n\tServiceDataProps,\n} from 'api/metrics/getTopLevelOperations';\nimport { QueryKey, useQuery, UseQueryResult } from 'react-query';\n\ninterface UseGetTopLevelOperationsParams {\n\tstart: number;\n\tend: number;\n}\n\ntype UseGetTopLevelOperations = (\n\tqueryKey: QueryKey,\n\tparams: UseGetTopLevelOperationsParams,\n) => UseQueryResult<ServiceDataProps>;\n\nconst useGetTopLevelOperations: UseGetTopLevelOperations = (queryKey, params) =>\n\tuseQuery<ServiceDataProps>({\n\t\tqueryKey,\n\t\tqueryFn: (): Promise<ServiceDataProps> =>\n\t\t\tgetTopLevelOperations({ start: params.start, end: params.end }),\n\t});\n\nexport default useGetTopLevelOperations;\n","import { Space } from 'antd';\nimport ServicesApplication from 'container/ServiceApplication';\n\nfunction Metrics(): JSX.Element {\n\treturn (\n\t\t<Space direction=\"vertical\" style={{ width: '100%' }}>\n\t\t\t<ServicesApplication />\n\t\t</Space>\n\t);\n}\n\nexport default Metrics;\n","import { ServicesList } from 'types/api/metrics/getService';\n\nexport const getTotalRPS = (services: ServicesList[]): number =>\n\tservices.reduce((accumulator, service) => accumulator + service.callRate, 0);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".serviceName{color:#4e74f8;font-weight:600;cursor:pointer;display:flex;align-items:center;gap:8px}.error{color:var(--bg-cherry-500)}.error a{color:var(--bg-cherry-500)}.service-high-top-level-operations{width:300px}.service-high-top-level-operations .popover-description{padding:16px 0}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/ServiceApplication/ServiceApplication.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,aACC,aAAA,CACA,eAAA,CACA,cAAA,CAEA,YAAA,CACA,kBAAA,CACA,OAAA,CAGD,OACC,0BAAA,CAEA,SACC,0BAAA,CAIF,mCACC,WAAA,CAEA,wDACC,cAAA\",\"sourcesContent\":[\".serviceName {\\n\\tcolor: #4e74f8;\\n\\tfont-weight: 600;\\n\\tcursor: pointer;\\n\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tgap: 8px;\\n}\\n\\n.error {\\n\\tcolor: var(--bg-cherry-500);\\n\\n\\ta {\\n\\t\\tcolor: var(--bg-cherry-500);\\n\\t}\\n}\\n\\n.service-high-top-level-operations {\\n\\twidth: 300px;\\n\\n\\t.popover-description {\\n\\t\\tpadding: 16px 0;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ServiceApplication.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["WarningFilled","props","ref","A","icon","displayName","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Overlay","prefixCls","okButtonProps","cancelButtonProps","title","description","cancelText","okText","okType","showCancel","close","onConfirm","onCancel","onPopupClick","getPrefixCls","contextLocale","Popconfirm","theTitle","theDescription","className","onClick","assign","size","buttonProps","actionFn","quitOnNullishReturnValue","emitEvent","customizePrefixCls","placement","style","restProps","wrapSSR","content","trigger","children","overlayClassName","onOpenChange","onVisibleChange","open","setOpen","value","defaultValue","defaultOpen","settingOpen","overlayClassNames","disabled","_a","onKeyDown","_b","keyCode","ESC","_InternalPanelDoNotUseOrYouWillBeFired","token","componentCls","iconCls","antCls","zIndexPopup","colorText","colorWarning","marginXXS","marginXS","fontSize","fontWeightStrong","colorTextHeading","zIndex","marginBottom","display","flexWrap","alignItems","color","lineHeight","marginInlineEnd","fontWeight","marginTop","textAlign","whiteSpace","button","marginInlineStart","genBaseStyle","zIndexPopupBase","resetStyle","CustomModal","_ref","isModalVisible","footer","closable","_jsx","Modal","defaultProps","undefined","_default","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","register","module","generatorResizeTableColumns","baseColumnOptions","dynamicColumnOption","map","config","key","extraConfig","find","dynamicConfigItem","columnOption","getLabelRenderingValue","label","concat","slice","remainingSpace","newValue","getLabelAndValueContent","MAX_RPS_LIMIT","LEGEND","DAYJS_MANIPULATE_TYPES","DAY","WEEK","MONTH","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","ColumnTitle","ColumnKey","Application","dataIndex","width","ColumnWidth","P99","defaultSortOrder","SORTING_ORDER","ErrorRate","Operations","highTopLevelOperationsPopoverDesc","metrics","_jsxs","getColumnSearchProps","search","filterDropdown","filterIcon","SearchOutlined","onFilter","record","_record$dataIndex","toString","toLowerCase","includes","render","_record$dataWarning","urlParams","URLSearchParams","avialableParams","routeConfig","ROUTES","SERVICE_METRICS","queryString","getQueryString","topLevelOperations","dataWarning","topLevelOps","hasHighTopLevelOperations","Array","isArray","handleShowTopLevelOperations","history","push","APPLICATION","encodeURIComponent","Info","Link","to","join","getColumns","isMetricData","sorter","a","b","p99","Number","isNaN","toFixed","errorRate","callRate","ServiceMetricTable","queryRangeRequestData","minTime","maxTime","selectedTime","globalSelectedInterval","useSelector","state","globalTime","notifications","useNotifications","getText","useTranslation","isFetchingActiveLicense","trialInfo","useAppContext","isCloudUser","isCloudUserVal","useGetTenantLicense","queries","useGetQueriesRange","ENTITY_VERSION_V4","queryKey","keepPreviousData","enabled","refetchOnMount","onError","error","message","isLoading","some","query","services","useMemo","getServiceListFromQuery","useLocation","tableColumns","RPS","setRPS","useState","useEffect","onTrial","trialConvertedToSubscription","rps","getTotalRPS","_Fragment","Flex","justify","Typography","Title","level","type","href","ResourceAttributesFilter","ResizeTable","pagination","defaultPageSize","showTotal","total","range","columns","loading","dataSource","rowKey","ServiceMetricsApplication","_featureFlags$find","featureFlags","dotMetricsEnabled","flag","name","FeatureKeys","DOT_METRICS_ENABLED","active","getQueryRangeRequestData","serviceMetricsQuery","topLevelOperation","p99AutoCompleteData","dataType","DataTypes","Float64","isColumn","WidgetKeys","Signoz_latency_bucket","Signoz_latency_bucket_norm","errorRateAutoCompleteData","SignozCallsTotal","autocompleteData","additionalItems","id","String","Service_name","Service_name_norm","MetricsType","Resource","op","OPERATORS","IN","Operation","Tag","Int64","StatusCode","StatusCodeNorm","timeAggregateOperators","MetricAggregateOperator","EMPTY","RATE","spaceAggregateOperators","SUM","legends","KeyOperationTableHeader","ERROR_RATE","OPERATION_PR_SECOND","groupBy","DataSource","METRICS","getQueryBuilderQuerieswithFormula","expressions","legendFormulas","ServicesUsingMetrics","useResourceAttribute","convertRawQueriesToTraceSelectedTags","data","isError","useGetTopLevelOperations","start","end","skipOnboarding","setSkipOnboarding","localStorageGet","SKIP_ONBOARDING","onContinueClick","localStorageSet","entries","Spinner","tip","SkipOnBoardingModal","ServiceTraceTable","ServiceTraces","selectedTags","useQueryService","useErrorNotification","logEventCalledRef","useRef","current","isUndefined","_queries$find","selectedEnvironments","val","tagKey","getResourceDeploymentKeys","tagValue","reduce","service","logEvent","numberOfServices","resourceAttributeUsed","Button","height","src","frameBorder","allow","allowFullScreen","target","rel","Services","isSpanMetricEnabled","USE_SPAN_METRICS","Sentry","fallback","ErrorBoundaryFallback","Container","ServiceMetrics","styled","div","_templateObject","_taggedTemplateLiteral","Name","_templateObject2","getSeriesValue","queryArray","queryName","queryObject","item","series","values","requestData","forEach","operation","serviceMetricsWidget","getWidgetQueryBuilder","queryType","EQueryType","QUERY_BUILDER","promql","builder","clickhouse_sql","uuid","panelTypes","PANEL_TYPES","TABLE","updatedQuery","updateStepInterval","timePreferance","graphType","variables","getDashboardVariables","_ref2","index","serviceData","serviceName","avgDuration","numCalls","numErrors","_query$data","payload","newResult","result","parseFloat","version","options","REACT_QUERY_KEY","GET_QUERY_RANGE","queryData","request","queryFn","async","GetMetricQueryRange","useQueries","__signature__","params","useQuery","getTopLevelOperations","Metrics","Space","direction","ServicesApplication","accumulator","___CSS_LOADER_EXPORT___","api","__esModule","exports","locals"],"sourceRoot":""}