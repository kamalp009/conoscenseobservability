{"version":3,"file":"src_api_channels_testEmail_ts-src_api_channels_testMsTeams_ts-src_api_channels_testOpsgenie_t-c591ae.3fe950adddcd8d405d13.js","mappings":"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","sources":["webpack://frontend/./src/api/channels/testEmail.ts","webpack://frontend/./src/api/channels/testMsTeams.ts","webpack://frontend/./src/api/channels/testOpsgenie.ts","webpack://frontend/./src/api/channels/testPager.ts","webpack://frontend/./src/api/channels/testSlack.ts","webpack://frontend/./src/api/channels/testWebhook.ts","webpack://frontend/./src/components/MarkdownRenderer/CodeCopyBtn/CodeCopyBtn.tsx","webpack://frontend/./src/components/MarkdownRenderer/MarkdownRenderer.tsx","webpack://frontend/./src/container/CreateAlertChannels/config.ts","webpack://frontend/./src/container/FormAlertChannels/Settings/Email.tsx","webpack://frontend/./src/container/FormAlertChannels/Settings/MsTeams.tsx","webpack://frontend/./src/container/FormAlertChannels/Settings/Opsgenie.tsx","webpack://frontend/./src/container/FormAlertChannels/Settings/Pager.tsx","webpack://frontend/./src/container/FormAlertChannels/Settings/Slack.tsx","webpack://frontend/./src/container/FormAlertChannels/Settings/Webhook.tsx","webpack://frontend/./src/container/FormAlertChannels/index.tsx","webpack://frontend/./src/container/FormAlertChannels/styles.ts","webpack://frontend/./src/components/MarkdownRenderer/CodeCopyBtn/CodeCopyBtn.scss","webpack://frontend/./src/components/MarkdownRenderer/CodeCopyBtn/CodeCopyBtn.scss?987d"],"sourcesContent":["import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createEmail';\n\nconst testEmail = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/testChannel', {\n\t\t\tname: props.name,\n\t\t\temail_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: true,\n\t\t\t\t\tto: props.to,\n\t\t\t\t\thtml: props.html,\n\t\t\t\t\theaders: props.headers,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default testEmail;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createMsTeams';\n\nconst testMsTeams = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/testChannel', {\n\t\t\tname: props.name,\n\t\t\tmsteamsv2_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: true,\n\t\t\t\t\twebhook_url: props.webhook_url,\n\t\t\t\t\ttitle: props.title,\n\t\t\t\t\ttext: props.text,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default testMsTeams;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createOpsgenie';\n\nconst testOpsgenie = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/testChannel', {\n\t\t\tname: props.name,\n\t\t\topsgenie_configs: [\n\t\t\t\t{\n\t\t\t\t\tapi_key: props.api_key,\n\t\t\t\t\tdescription: props.description,\n\t\t\t\t\tpriority: props.priority,\n\t\t\t\t\tmessage: props.message,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\t...props.detailsArray,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default testOpsgenie;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createPager';\n\nconst testPager = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/testChannel', {\n\t\t\tname: props.name,\n\t\t\tpagerduty_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: true,\n\t\t\t\t\trouting_key: props.routing_key,\n\t\t\t\t\tclient: props.client,\n\t\t\t\t\tclient_url: props.client_url,\n\t\t\t\t\tdescription: props.description,\n\t\t\t\t\tseverity: props.severity,\n\t\t\t\t\tclass: props.class,\n\t\t\t\t\tcomponent: props.component,\n\t\t\t\t\tgroup: props.group,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\t...props.detailsArray,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default testPager;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createSlack';\n\nconst testSlack = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/testChannel', {\n\t\t\tname: props.name,\n\t\t\tslack_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: true,\n\t\t\t\t\tapi_url: props.api_url,\n\t\t\t\t\tchannel: props.channel,\n\t\t\t\t\ttitle: props.title,\n\t\t\t\t\ttext: props.text,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default testSlack;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createWebhook';\n\nconst testWebhook = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tlet httpConfig = {};\n\t\tconst username = props.username ? props.username.trim() : '';\n\t\tconst password = props.password ? props.password.trim() : '';\n\n\t\tif (username !== '' && password !== '') {\n\t\t\thttpConfig = {\n\t\t\t\tbasic_auth: {\n\t\t\t\t\tusername,\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t};\n\t\t} else if (username === '' && password !== '') {\n\t\t\thttpConfig = {\n\t\t\t\tauthorization: {\n\t\t\t\t\ttype: 'Bearer',\n\t\t\t\t\tcredentials: password,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tconst response = await axios.post<PayloadProps>('/testChannel', {\n\t\t\tname: props.name,\n\t\t\twebhook_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: true,\n\t\t\t\t\turl: props.api_url,\n\t\t\t\t\thttp_config: httpConfig,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default testWebhook;\n","/* eslint-disable prefer-destructuring */\nimport './CodeCopyBtn.scss';\n\nimport { CheckOutlined, CopyOutlined } from '@ant-design/icons';\nimport cx from 'classnames';\nimport React, { useState } from 'react';\n\nfunction CodeCopyBtn({\n\tchildren,\n\tonCopyClick,\n}: {\n\tchildren: React.ReactNode;\n\tonCopyClick?: (additionalInfo?: Record<string, unknown>) => void;\n}): JSX.Element {\n\tconst [isSnippetCopied, setIsSnippetCopied] = useState(false);\n\n\tconst handleClick = (): void => {\n\t\tlet copiedText = '';\n\t\tif (children && Array.isArray(children)) {\n\t\t\tsetIsSnippetCopied(true);\n\t\t\tnavigator.clipboard.writeText(children[0].props.children[0]).finally(() => {\n\t\t\t\tcopiedText = (children[0].props.children[0] as string).slice(0, 200); // slicing is done due to the limitation in accepted char length in attributes\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetIsSnippetCopied(false);\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\t\tcopiedText = (children[0].props.children[0] as string).slice(0, 200);\n\t\t}\n\n\t\tonCopyClick?.({ copiedText });\n\t};\n\n\treturn (\n\t\t<div className={cx('code-copy-btn', isSnippetCopied ? 'copied' : '')}>\n\t\t\t<button type=\"button\" onClick={handleClick}>\n\t\t\t\t{!isSnippetCopied ? <CopyOutlined /> : <CheckOutlined />}\n\t\t\t</button>\n\t\t</div>\n\t);\n}\n\nCodeCopyBtn.defaultProps = {\n\tonCopyClick: (): void => {},\n};\n\nexport default CodeCopyBtn;\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\nimport logEvent from 'api/common/logEvent';\nimport { isEmpty } from 'lodash-es';\nimport ReactMarkdown from 'react-markdown';\nimport { CodeProps } from 'react-markdown/lib/ast-to-react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { a11yDark } from 'react-syntax-highlighter/dist/cjs/styles/prism';\nimport rehypeRaw from 'rehype-raw';\n\nimport CodeCopyBtn from './CodeCopyBtn/CodeCopyBtn';\n\ninterface LinkProps {\n\thref: string;\n\tchildren: React.ReactElement;\n}\n\nfunction Pre({\n\tchildren,\n\telementDetails,\n\ttrackCopyAction,\n}: {\n\tchildren: React.ReactNode;\n\ttrackCopyAction: boolean;\n\telementDetails: Record<string, unknown>;\n}): JSX.Element {\n\tconst { trackingTitle = '', ...rest } = elementDetails;\n\n\tconst handleClick = (additionalInfo?: Record<string, unknown>): void => {\n\t\tconst trackingData = { ...rest, copiedContent: additionalInfo };\n\n\t\tif (trackCopyAction && !isEmpty(trackingTitle)) {\n\t\t\tlogEvent(trackingTitle as string, trackingData);\n\t\t}\n\t};\n\n\treturn (\n\t\t<pre className=\"code-snippet-container\">\n\t\t\t<CodeCopyBtn onCopyClick={handleClick}>{children}</CodeCopyBtn>\n\t\t\t{children}\n\t\t</pre>\n\t);\n}\n\nfunction Code({\n\tnode,\n\tinline,\n\tclassName = 'blog-code',\n\tchildren,\n\t...props\n}: CodeProps): JSX.Element {\n\tconst match = /language-(\\w+)/.exec(className || '');\n\treturn !inline && match ? (\n\t\t<SyntaxHighlighter\n\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t// @ts-ignore\n\t\t\tstyle={a11yDark}\n\t\t\tlanguage={match[1]}\n\t\t\tPreTag=\"div\"\n\t\t\t{...props}\n\t\t>\n\t\t\t{String(children).replace(/\\n$/, '')}\n\t\t</SyntaxHighlighter>\n\t) : (\n\t\t<code className={className} {...props}>\n\t\t\t{children}\n\t\t</code>\n\t);\n}\n\nfunction Link({ href, children }: LinkProps): JSX.Element {\n\treturn (\n\t\t<a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t{children}\n\t\t</a>\n\t);\n}\n\nconst interpolateMarkdown = (\n\tmarkdownContent: any,\n\tvariables: { [s: string]: unknown } | ArrayLike<unknown>,\n) => {\n\tlet interpolatedContent = markdownContent;\n\n\tconst variableEntries = Object.entries(variables);\n\n\t// Loop through variables and replace placeholders with values\n\tfor (const [key, value] of variableEntries) {\n\t\tconst placeholder = `{{${key}}}`;\n\t\tconst regex = new RegExp(placeholder, 'g');\n\t\tinterpolatedContent = interpolatedContent.replace(regex, value);\n\t}\n\n\treturn interpolatedContent;\n};\n\nfunction CustomTag({ color }: { color: string }): JSX.Element {\n\treturn <h1 style={{ color }}>This is custom element</h1>;\n}\n\nfunction MarkdownRenderer({\n\tmarkdownContent,\n\tvariables,\n\ttrackCopyAction,\n\telementDetails,\n}: {\n\tmarkdownContent: any;\n\tvariables: any;\n\ttrackCopyAction?: boolean;\n\telementDetails?: Record<string, unknown>;\n}): JSX.Element {\n\tconst interpolatedMarkdown = interpolateMarkdown(markdownContent, variables);\n\n\treturn (\n\t\t<ReactMarkdown\n\t\t\trehypePlugins={[rehypeRaw as any]}\n\t\t\tcomponents={{\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t// @ts-ignore\n\t\t\t\ta: Link,\n\t\t\t\tpre: ({ children }) =>\n\t\t\t\t\tPre({\n\t\t\t\t\t\tchildren,\n\t\t\t\t\t\telementDetails: elementDetails ?? {},\n\t\t\t\t\t\ttrackCopyAction: !!trackCopyAction,\n\t\t\t\t\t}),\n\t\t\t\tcode: Code,\n\t\t\t\tcustomtag: CustomTag,\n\t\t\t}}\n\t\t>\n\t\t\t{interpolatedMarkdown}\n\t\t</ReactMarkdown>\n\t);\n}\n\nMarkdownRenderer.defaultProps = {\n\telementDetails: {},\n\ttrackCopyAction: false,\n};\n\nexport { Code, Link, MarkdownRenderer, Pre };\n","export interface Channel {\n\tsend_resolved?: boolean;\n\tname: string;\n\tfilter?: Partial<Array<LabelFilterStatement>>;\n}\n\nexport interface SlackChannel extends Channel {\n\tapi_url?: string;\n\tchannel?: string;\n\ttitle?: string;\n\ttext?: string;\n}\n\nexport interface WebhookChannel extends Channel {\n\tapi_url?: string;\n\t// basic auth\n\tusername?: string;\n\tpassword?: string;\n}\n\n// PagerChannel configures alert manager to send\n// events to pagerduty\nexport interface PagerChannel extends Channel {\n\t//  ref: https://prometheus.io/docs/alerting/latest/configuration/#pagerduty_config\n\trouting_key?: string;\n\t// displays source of the event in pager duty\n\tclient?: string;\n\tclient_url?: string;\n\t// A description of the incident\n\tdescription?: string;\n\t// Severity of the incident\n\tseverity?: string;\n\t// The part or component of the affected system that is broken\n\tcomponent?: string;\n\t//  A cluster or grouping of sources\n\tgroup?: string;\n\t// The class/type of the event.\n\tclass?: string;\n\n\tdetails?: string;\n\tdetailsArray?: Record<string, string>;\n}\n\n// OpsgenieChannel configures alert manager to send\n// events to opsgenie\nexport interface OpsgenieChannel extends Channel {\n\t//  ref: https://prometheus.io/docs/alerting/latest/configuration/#opsgenie_config\n\tapi_key: string;\n\n\tmessage?: string;\n\n\t// A description of the incident\n\tdescription?: string;\n\n\t// A backlink to the sender of the notification.\n\tsource?: string;\n\n\t// A set of arbitrary key/value pairs that provide further detail\n\t// about the alert.\n\tdetails?: string;\n\tdetailsArray?: Record<string, string>;\n\n\t// Priority level of alert. Possible values are P1, P2, P3, P4, and P5.\n\tpriority?: string;\n}\n\nexport interface EmailChannel extends Channel {\n\t// comma separated list of email addresses to send alerts to\n\tto: string;\n\t//  HTML body of the email notification.\n\thtml: string;\n\t// Further headers email header key/value pairs.\n\t// [ headers: { <string>: <tmpl_string>, ... } ]\n\theaders: Record<string, string>;\n}\n\nexport const ValidatePagerChannel = (p: PagerChannel): string => {\n\tif (!p) {\n\t\treturn 'Received unexpected input for this channel, please contact your administrator ';\n\t}\n\n\tif (!p.name || p.name === '') {\n\t\treturn 'Name is mandatory for creating a channel';\n\t}\n\n\tif (!p.routing_key || p.routing_key === '') {\n\t\treturn 'Routing Key is mandatory for creating pagerduty channel';\n\t}\n\n\t// validate details json\n\ttry {\n\t\tJSON.parse(p.details || '{}');\n\t} catch (e) {\n\t\treturn 'failed to parse additional information, please enter a valid json';\n\t}\n\n\treturn '';\n};\n\nexport enum ChannelType {\n\tSlack = 'slack',\n\tEmail = 'email',\n\tWebhook = 'webhook',\n\tPagerduty = 'pagerduty',\n\tOpsgenie = 'opsgenie',\n\tMsTeams = 'msteams',\n}\n\n// LabelFilterStatement will be used for preparing filter conditions / matchers\nexport interface LabelFilterStatement {\n\t// ref: https://prometheus.io/docs/alerting/latest/configuration/#matcher\n\n\t// label name\n\tname: string;\n\n\t// comparators supported by promql are =, !=, =~, or !~. =\n\tcomparator: string;\n\n\t// filter value\n\tvalue: string;\n}\n\nexport interface MsTeamsChannel extends Channel {\n\twebhook_url?: string;\n\ttitle?: string;\n\ttext?: string;\n}\n","import { Form, Input } from 'antd';\nimport { Dispatch, SetStateAction } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { EmailChannel } from '../../CreateAlertChannels/config';\n\nfunction EmailForm({ setSelectedConfig }: EmailFormProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\n\tconst handleInputChange = (field: string) => (\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t): void => {\n\t\tsetSelectedConfig((value) => ({\n\t\t\t...value,\n\t\t\t[field]: event.target.value,\n\t\t}));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"to\"\n\t\t\t\thelp={t('help_email_to')}\n\t\t\t\tlabel={t('field_email_to')}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={handleInputChange('to')}\n\t\t\t\t\tplaceholder={t('placeholder_email_to')}\n\t\t\t\t\tdata-testid=\"email-to-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t{/* <Form.Item name=\"html\" label={t('field_email_html')} required>\n\t\t\t\t<TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={handleInputChange('html')}\n\t\t\t\t\tplaceholder={t('placeholder_email_html')}\n\t\t\t\t/>\n\t\t\t</Form.Item> */}\n\t\t</>\n\t);\n}\n\ninterface EmailFormProps {\n\tsetSelectedConfig: Dispatch<SetStateAction<Partial<EmailChannel>>>;\n}\n\nexport default EmailForm;\n","import { Form, Input } from 'antd';\nimport { MarkdownRenderer } from 'components/MarkdownRenderer/MarkdownRenderer';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { MsTeamsChannel } from '../../CreateAlertChannels/config';\n\nfunction MsTeams({ setSelectedConfig }: MsTeamsProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"webhook_url\"\n\t\t\t\tlabel={t('field_webhook_url')}\n\t\t\t\ttooltip={{\n\t\t\t\t\ttitle: (\n\t\t\t\t\t\t<MarkdownRenderer\n\t\t\t\t\t\t\tmarkdownContent={t('tooltip_ms_teams_url')}\n\t\t\t\t\t\t\tvariables={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\toverlayInnerStyle: { maxWidth: 400 },\n\t\t\t\t\tplacement: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\twebhook_url: event.target.value,\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\tdata-testid=\"webhook-url-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item name=\"title\" label={t('field_slack_title')}>\n\t\t\t\t<Input.TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\t// value={`[{{ .Status | toUpper }}{{ if eq .Status \\\"firing\\\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}\\n{{- if gt (len .CommonLabels) (len .GroupLabels) -}}\\n{{\\\" \\\"}}(\\n{{- with .CommonLabels.Remove .GroupLabels.Names }}\\n    {{- range $index, $label := .SortedPairs -}}\\n    {{ if $index }}, {{ end }}\\n    {{- $label.Name }}=\\\"{{ $label.Value -}}\\\"\\n    {{- end }}\\n{{- end -}}\\n)\\n{{- end }}`}\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\ttitle: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"title-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item name=\"text\" label={t('field_slack_description')}>\n\t\t\t\t<Input.TextArea\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\ttext: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"description-textarea\"\n\t\t\t\t\tplaceholder={t('placeholder_slack_description')}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n}\n\ninterface MsTeamsProps {\n\tsetSelectedConfig: React.Dispatch<\n\t\tReact.SetStateAction<Partial<MsTeamsChannel>>\n\t>;\n}\n\nexport default MsTeams;\n","import { Form, Input } from 'antd';\nimport { MarkdownRenderer } from 'components/MarkdownRenderer/MarkdownRenderer';\nimport { useTranslation } from 'react-i18next';\n\nimport { OpsgenieChannel } from '../../CreateAlertChannels/config';\n\nconst { TextArea } = Input;\n\nfunction OpsgenieForm({ setSelectedConfig }: OpsgenieFormProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\n\tconst handleInputChange = (field: string) => (\n\t\tevent: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n\t): void => {\n\t\tsetSelectedConfig((value) => ({\n\t\t\t...value,\n\t\t\t[field]: event.target.value,\n\t\t}));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"api_key\"\n\t\t\t\tlabel={t('field_opsgenie_api_key')}\n\t\t\t\ttooltip={{\n\t\t\t\t\ttitle: (\n\t\t\t\t\t\t<MarkdownRenderer\n\t\t\t\t\t\t\tmarkdownContent={t('tooltip_opsgenie_api_key')}\n\t\t\t\t\t\t\tvariables={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\toverlayInnerStyle: { maxWidth: 400 },\n\t\t\t\t\tplacement: 'right',\n\t\t\t\t}}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={handleInputChange('api_key')}\n\t\t\t\t\tdata-testid=\"opsgenie-api-key-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"message\"\n\t\t\t\thelp={t('help_opsgenie_message')}\n\t\t\t\tlabel={t('field_opsgenie_message')}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={handleInputChange('message')}\n\t\t\t\t\tplaceholder={t('placeholder_opsgenie_message')}\n\t\t\t\t\tdata-testid=\"opsgenie-message-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"description\"\n\t\t\t\thelp={t('help_opsgenie_description')}\n\t\t\t\tlabel={t('field_opsgenie_description')}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={handleInputChange('description')}\n\t\t\t\t\tplaceholder={t('placeholder_opsgenie_description')}\n\t\t\t\t\tdata-testid=\"opsgenie-description-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"priority\"\n\t\t\t\thelp={t('help_opsgenie_priority')}\n\t\t\t\tlabel={t('field_opsgenie_priority')}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={handleInputChange('priority')}\n\t\t\t\t\tplaceholder={t('placeholder_opsgenie_priority')}\n\t\t\t\t\tdata-testid=\"opsgenie-priority-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n}\n\ninterface OpsgenieFormProps {\n\tsetSelectedConfig: React.Dispatch<\n\t\tReact.SetStateAction<Partial<OpsgenieChannel>>\n\t>;\n}\n\nexport default OpsgenieForm;\n","import { Form, Input } from 'antd';\nimport { MarkdownRenderer } from 'components/MarkdownRenderer/MarkdownRenderer';\nimport { Dispatch, SetStateAction } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { PagerChannel } from '../../CreateAlertChannels/config';\n\nconst { TextArea } = Input;\n\nfunction PagerForm({ setSelectedConfig }: PagerFormProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"routing_key\"\n\t\t\t\tlabel={t('field_pager_routing_key')}\n\t\t\t\ttooltip={{\n\t\t\t\t\ttitle: (\n\t\t\t\t\t\t<MarkdownRenderer\n\t\t\t\t\t\t\tmarkdownContent={t('tooltip_pager_routing_key')}\n\t\t\t\t\t\t\tvariables={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\toverlayInnerStyle: { maxWidth: 400 },\n\t\t\t\t\tplacement: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\trouting_key: event.target.value,\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\tdata-testid=\"pager-routing-key-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"description\"\n\t\t\t\thelp={t('help_pager_description')}\n\t\t\t\tlabel={t('field_pager_description')}\n\t\t\t\trequired\n\t\t\t>\n\t\t\t\t<TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tdescription: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={t('placeholder_pager_description')}\n\t\t\t\t\tdata-testid=\"pager-description-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"severity\"\n\t\t\t\thelp={t('help_pager_severity')}\n\t\t\t\tlabel={t('field_pager_severity')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tseverity: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"pager-severity-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"details\"\n\t\t\t\thelp={t('help_pager_details')}\n\t\t\t\tlabel={t('field_pager_details')}\n\t\t\t>\n\t\t\t\t<TextArea\n\t\t\t\t\trows={4}\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tdetails: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"pager-additional-details-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"component\"\n\t\t\t\thelp={t('help_pager_component')}\n\t\t\t\tlabel={t('field_pager_component')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tcomponent: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"group\"\n\t\t\t\thelp={t('help_pager_group')}\n\t\t\t\tlabel={t('field_pager_group')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tgroup: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"pager-group-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"class\"\n\t\t\t\thelp={t('help_pager_class')}\n\t\t\t\tlabel={t('field_pager_class')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tclass: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"pager-class-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tname=\"client\"\n\t\t\t\thelp={t('help_pager_client')}\n\t\t\t\tlabel={t('field_pager_client')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tclient: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"pager-client-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"client_url\"\n\t\t\t\thelp={t('help_pager_client_url')}\n\t\t\t\tlabel={t('field_pager_client_url')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tclient_url: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"pager-client-url-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n}\n\ninterface PagerFormProps {\n\tsetSelectedConfig: Dispatch<SetStateAction<Partial<PagerChannel>>>;\n}\n\nexport default PagerForm;\n","import { Form, Input } from 'antd';\nimport { MarkdownRenderer } from 'components/MarkdownRenderer/MarkdownRenderer';\nimport { Dispatch, SetStateAction } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SlackChannel } from '../../CreateAlertChannels/config';\n\nconst { TextArea } = Input;\n\nfunction Slack({ setSelectedConfig }: SlackProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"api_url\"\n\t\t\t\tlabel={t('field_webhook_url')}\n\t\t\t\ttooltip={{\n\t\t\t\t\ttitle: (\n\t\t\t\t\t\t<MarkdownRenderer\n\t\t\t\t\t\t\tmarkdownContent={t('tooltip_slack_url')}\n\t\t\t\t\t\t\tvariables={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\toverlayInnerStyle: { maxWidth: 400 },\n\t\t\t\t\tplacement: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tapi_url: event.target.value,\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\tdata-testid=\"webhook-url-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item\n\t\t\t\tname=\"channel\"\n\t\t\t\thelp={t('slack_channel_help')}\n\t\t\t\tlabel={t('field_slack_recipient')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tchannel: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tdata-testid=\"slack-channel-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item name=\"title\" label={t('field_slack_title')}>\n\t\t\t\t<TextArea\n\t\t\t\t\tdata-testid=\"title-textarea\"\n\t\t\t\t\trows={4}\n\t\t\t\t\t// value={`[{{ .Status | toUpper }}{{ if eq .Status \\\"firing\\\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}\\n{{- if gt (len .CommonLabels) (len .GroupLabels) -}}\\n{{\\\" \\\"}}(\\n{{- with .CommonLabels.Remove .GroupLabels.Names }}\\n    {{- range $index, $label := .SortedPairs -}}\\n    {{ if $index }}, {{ end }}\\n    {{- $label.Name }}=\\\"{{ $label.Value -}}\\\"\\n    {{- end }}\\n{{- end -}}\\n)\\n{{- end }}`}\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\ttitle: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\n\t\t\t<Form.Item name=\"text\" label={t('field_slack_description')}>\n\t\t\t\t<TextArea\n\t\t\t\t\tonChange={(event): void =>\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\ttext: event.target.value,\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t\tplaceholder={t('placeholder_slack_description')}\n\t\t\t\t\tdata-testid=\"description-textarea\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n}\n\ninterface SlackProps {\n\tsetSelectedConfig: Dispatch<SetStateAction<Partial<SlackChannel>>>;\n}\n\nexport default Slack;\n","import { Form, Input } from 'antd';\nimport { MarkdownRenderer } from 'components/MarkdownRenderer/MarkdownRenderer';\nimport { Dispatch, SetStateAction } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { WebhookChannel } from '../../CreateAlertChannels/config';\n\nfunction WebhookSettings({ setSelectedConfig }: WebhookProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\n\treturn (\n\t\t<>\n\t\t\t<Form.Item\n\t\t\t\tname=\"api_url\"\n\t\t\t\tlabel={t('field_webhook_url')}\n\t\t\t\ttooltip={{\n\t\t\t\t\ttitle: (\n\t\t\t\t\t\t<MarkdownRenderer\n\t\t\t\t\t\t\tmarkdownContent={t('tooltip_webhook_url')}\n\t\t\t\t\t\t\tvariables={{}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t\toverlayInnerStyle: { maxWidth: 400 },\n\t\t\t\t\tplacement: 'right',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tapi_url: event.target.value,\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\tdata-testid=\"webhook-url-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tname=\"username\"\n\t\t\t\tlabel={t('field_webhook_username')}\n\t\t\t\thelp={t('help_webhook_username')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tusername: event.target.value,\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\tdata-testid=\"webhook-username-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t\t<Form.Item\n\t\t\t\tname=\"password\"\n\t\t\t\tlabel=\"Password (optional)\"\n\t\t\t\thelp={t('help_webhook_password')}\n\t\t\t>\n\t\t\t\t<Input\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tsetSelectedConfig((value) => ({\n\t\t\t\t\t\t\t...value,\n\t\t\t\t\t\t\tpassword: event.target.value,\n\t\t\t\t\t\t}));\n\t\t\t\t\t}}\n\t\t\t\t\tdata-testid=\"webhook-password-textbox\"\n\t\t\t\t/>\n\t\t\t</Form.Item>\n\t\t</>\n\t);\n}\n\ninterface WebhookProps {\n\tsetSelectedConfig: Dispatch<SetStateAction<Partial<WebhookChannel>>>;\n}\n\nexport default WebhookSettings;\n","import { Form, FormInstance, Input, Select, Switch, Typography } from 'antd';\nimport { Store } from 'antd/lib/form/interface';\nimport ROUTES from 'constants/routes';\nimport {\n\tChannelType,\n\tEmailChannel,\n\tOpsgenieChannel,\n\tPagerChannel,\n\tSlackChannel,\n\tWebhookChannel,\n} from 'container/CreateAlertChannels/config';\nimport history from 'lib/history';\nimport { Dispatch, ReactElement, SetStateAction } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport EmailSettings from './Settings/Email';\nimport MsTeamsSettings from './Settings/MsTeams';\nimport OpsgenieSettings from './Settings/Opsgenie';\nimport PagerSettings from './Settings/Pager';\nimport SlackSettings from './Settings/Slack';\nimport WebhookSettings from './Settings/Webhook';\nimport { Button } from './styles';\n\nfunction FormAlertChannels({\n\tformInstance,\n\ttype,\n\tsetSelectedConfig,\n\tonTypeChangeHandler,\n\tonTestHandler,\n\tonSaveHandler,\n\tsavingState,\n\ttestingState,\n\ttitle,\n\tinitialValue,\n\tediting = false,\n}: FormAlertChannelsProps): JSX.Element {\n\tconst { t } = useTranslation('channels');\n\n\tconst renderSettings = (): ReactElement | null => {\n\t\tswitch (type) {\n\t\t\tcase ChannelType.Slack:\n\t\t\t\treturn <SlackSettings setSelectedConfig={setSelectedConfig} />;\n\t\t\tcase ChannelType.Webhook:\n\t\t\t\treturn <WebhookSettings setSelectedConfig={setSelectedConfig} />;\n\t\t\tcase ChannelType.Pagerduty:\n\t\t\t\treturn <PagerSettings setSelectedConfig={setSelectedConfig} />;\n\t\t\tcase ChannelType.MsTeams:\n\t\t\t\treturn <MsTeamsSettings setSelectedConfig={setSelectedConfig} />;\n\t\t\tcase ChannelType.Opsgenie:\n\t\t\t\treturn <OpsgenieSettings setSelectedConfig={setSelectedConfig} />;\n\t\t\tcase ChannelType.Email:\n\t\t\t\treturn <EmailSettings setSelectedConfig={setSelectedConfig} />;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography.Title level={3}>{title}</Typography.Title>\n\n\t\t\t<Form initialValues={initialValue} layout=\"vertical\" form={formInstance}>\n\t\t\t\t<Form.Item label={t('field_channel_name')} labelAlign=\"left\" name=\"name\">\n\t\t\t\t\t<Input\n\t\t\t\t\t\tdata-testid=\"channel-name-textbox\"\n\t\t\t\t\t\tdisabled={editing}\n\t\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\t\tsetSelectedConfig((state) => ({\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tname: event.target.value,\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item\n\t\t\t\t\tlabel={t('field_send_resolved')}\n\t\t\t\t\tlabelAlign=\"left\"\n\t\t\t\t\tname=\"send_resolved\"\n\t\t\t\t>\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tdefaultChecked={initialValue?.send_resolved}\n\t\t\t\t\t\tdata-testid=\"field-send-resolved-checkbox\"\n\t\t\t\t\t\tonChange={(value): void => {\n\t\t\t\t\t\t\tsetSelectedConfig((state) => ({\n\t\t\t\t\t\t\t\t...state,\n\t\t\t\t\t\t\t\tsend_resolved: value,\n\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label={t('field_channel_type')} labelAlign=\"left\" name=\"type\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tdisabled={editing}\n\t\t\t\t\t\tonChange={onTypeChangeHandler}\n\t\t\t\t\t\tvalue={type}\n\t\t\t\t\t\tdata-testid=\"channel-type-select\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Select.Option value=\"slack\" key=\"slack\" data-testid=\"select-option\">\n\t\t\t\t\t\t\tSlack\n\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t<Select.Option value=\"webhook\" key=\"webhook\" data-testid=\"select-option\">\n\t\t\t\t\t\t\tWebhook\n\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t<Select.Option\n\t\t\t\t\t\t\tvalue=\"pagerduty\"\n\t\t\t\t\t\t\tkey=\"pagerduty\"\n\t\t\t\t\t\t\tdata-testid=\"select-option\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tPagerduty\n\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t<Select.Option\n\t\t\t\t\t\t\tvalue=\"opsgenie\"\n\t\t\t\t\t\t\tkey=\"opsgenie\"\n\t\t\t\t\t\t\tdata-testid=\"select-option\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOpsgenie\n\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t<Select.Option value=\"email\" key=\"email\" data-testid=\"select-option\">\n\t\t\t\t\t\t\tEmail\n\t\t\t\t\t\t</Select.Option>\n\n\t\t\t\t\t\t<Select.Option value=\"msteams\" key=\"msteams\" data-testid=\"select-option\">\n\t\t\t\t\t\t\tMicrosoft Teams\n\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t</Select>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item>{renderSettings()}</Form.Item>\n\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={savingState}\n\t\t\t\t\t\tloading={savingState}\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tonClick={(): void => onSaveHandler(type)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('button_save_channel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tdisabled={testingState}\n\t\t\t\t\t\tloading={testingState}\n\t\t\t\t\t\tonClick={(): void => onTestHandler(type)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('button_test_channel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\thistory.replace(ROUTES.SETTINGS);\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{t('button_return')}\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</>\n\t);\n}\n\ninterface FormAlertChannelsProps {\n\tformInstance: FormInstance;\n\ttype: ChannelType;\n\tsetSelectedConfig: Dispatch<\n\t\tSetStateAction<\n\t\t\tPartial<\n\t\t\t\tSlackChannel &\n\t\t\t\t\tWebhookChannel &\n\t\t\t\t\tPagerChannel &\n\t\t\t\t\tOpsgenieChannel &\n\t\t\t\t\tEmailChannel\n\t\t\t>\n\t\t>\n\t>;\n\tonTypeChangeHandler: (value: ChannelType) => void;\n\tonSaveHandler: (props: ChannelType) => void;\n\tonTestHandler: (props: ChannelType) => void;\n\ttestingState: boolean;\n\tsavingState: boolean;\n\ttitle: string;\n\tinitialValue: Store;\n\t// editing indicates if the form is opened in edit mode\n\tediting?: boolean;\n}\n\nFormAlertChannels.defaultProps = {\n\tediting: undefined,\n};\n\nexport default FormAlertChannels;\n","import { Button as ButtonComponent } from 'antd';\nimport styled from 'styled-components';\n\nexport const Button = styled(ButtonComponent)`\n\t&&& {\n\t\tmargin-right: 1rem;\n\t}\n`;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".code-snippet-container{position:relative;background-color:#111a2c;border-color:#111a2c}.code-copy-btn{position:absolute;top:8px;right:8px;display:flex;justify-content:flex-end;align-items:center}.code-copy-btn button{cursor:pointer;background-color:rgba(29,29,29,.7);color:#fff;border:none;padding:8px;border-radius:3px;transition:all .1s}.code-copy-btn button:hover{background-color:#1d1d1d}.code-copy-btn.copied button{background-color:#52c41a}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/MarkdownRenderer/CodeCopyBtn/CodeCopyBtn.scss\"],\"names\":[],\"mappings\":\"AAAA,wBACC,iBAAA,CAEA,wBAAA,CACA,oBAAA,CAGD,eACC,iBAAA,CACA,OAAA,CACA,SAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CAEA,sBACC,cAAA,CAEA,kCAAA,CACA,UAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,kBAAA,CAEA,4BACC,wBAAA,CAKD,6BACC,wBAAA\",\"sourcesContent\":[\".code-snippet-container {\\n\\tposition: relative;\\n\\t// background-color: rgb(43, 43, 43);\\n\\tbackground-color: #111a2c;\\n\\tborder-color: #111a2c;\\n}\\n\\n.code-copy-btn {\\n\\tposition: absolute;\\n\\ttop: 8px;\\n\\tright: 8px;\\n\\tdisplay: flex;\\n\\tjustify-content: flex-end;\\n\\talign-items: center;\\n\\n\\tbutton {\\n\\t\\tcursor: pointer;\\n\\n\\t\\tbackground-color: rgba($color: #1d1d1d, $alpha: 0.7);\\n\\t\\tcolor: white;\\n\\t\\tborder: none;\\n\\t\\tpadding: 8px;\\n\\t\\tborder-radius: 3px;\\n\\t\\ttransition: all 0.1s;\\n\\n\\t\\t&:hover {\\n\\t\\t\\tbackground-color: rgba($color: #1d1d1d, $alpha: 1);\\n\\t\\t}\\n\\t}\\n\\n\\t&.copied {\\n\\t\\tbutton {\\n\\t\\t\\tbackground-color: rgba($color: #52c41a, $alpha: 1);\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./CodeCopyBtn.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["testEmail","async","response","axios","post","name","props","email_configs","send_resolved","to","html","headers","httpStatusCode","status","data","error","ErrorResponseHandlerV2","_default","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","testMsTeams","msteamsv2_configs","webhook_url","title","text","testOpsgenie","opsgenie_configs","api_key","description","priority","message","details","detailsArray","testPager","pagerduty_configs","routing_key","client","client_url","severity","class","component","group","testSlack","slack_configs","api_url","channel","testWebhook","httpConfig","username","trim","password","basic_auth","authorization","type","credentials","webhook_configs","url","http_config","CodeCopyBtn","_ref","children","onCopyClick","isSnippetCopied","setIsSnippetCopied","useState","_jsx","className","cx","onClick","handleClick","copiedText","Array","isArray","navigator","clipboard","writeText","finally","slice","setTimeout","CheckOutlined","CopyOutlined","defaultProps","Pre","elementDetails","trackCopyAction","trackingTitle","rest","_jsxs","additionalInfo","trackingData","copiedContent","isEmpty","logEvent","Code","_ref2","node","inline","match","exec","SyntaxHighlighter","style","a11yDark","language","PreTag","String","replace","Link","_ref3","href","target","rel","interpolateMarkdown","markdownContent","variables","interpolatedContent","variableEntries","Object","entries","key","value","placeholder","concat","regex","RegExp","CustomTag","_ref4","color","MarkdownRenderer","_ref5","interpolatedMarkdown","ReactMarkdown","rehypePlugins","rehypeRaw","components","a","pre","_ref6","code","customtag","ValidatePagerChannel","p","JSON","parse","e","ChannelType","EmailForm","setSelectedConfig","t","useTranslation","_Fragment","Form","Item","help","label","required","Input","onChange","field","event","MsTeams","tooltip","overlayInnerStyle","maxWidth","placement","TextArea","rows","OpsgenieForm","handleInputChange","__signature__","PagerForm","Slack","WebhookSettings","FormAlertChannels","formInstance","onTypeChangeHandler","onTestHandler","onSaveHandler","savingState","testingState","initialValue","editing","Typography","Title","level","initialValues","layout","form","labelAlign","disabled","state","Switch","defaultChecked","Select","Option","renderSettings","SlackSettings","Webhook","Pagerduty","PagerSettings","MsTeamsSettings","Opsgenie","OpsgenieSettings","Email","EmailSettings","Button","loading","history","ROUTES","SETTINGS","styled","ButtonComponent","_templateObject","___CSS_LOADER_EXPORT___","push","id","api","content","__esModule","options","exports","locals"],"sourceRoot":""}