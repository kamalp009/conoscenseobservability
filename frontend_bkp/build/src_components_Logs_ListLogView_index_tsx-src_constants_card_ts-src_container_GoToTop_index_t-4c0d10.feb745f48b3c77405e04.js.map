{"version":3,"file":"src_components_Logs_ListLogView_index_tsx-src_constants_card_ts-src_container_GoToTop_index_t-4c0d10.feb745f48b3c77405e04.js","mappings":"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","sources":["webpack://frontend/./src/components/Logs/ListLogView/index.tsx","webpack://frontend/./src/components/Logs/ListLogView/styles.ts","webpack://frontend/./src/components/Logs/ListLogView/util.ts","webpack://frontend/./src/components/Logs/TableView/config.ts","webpack://frontend/./src/components/Logs/TableView/styles.ts","webpack://frontend/./src/components/Logs/TableView/useTableView.tsx","webpack://frontend/./src/constants/card.ts","webpack://frontend/./src/container/GoToTop/index.tsx","webpack://frontend/./src/container/LogsExplorerChart/LogsExplorerChart.styled.ts","webpack://frontend/./src/container/LogsExplorerChart/index.tsx","webpack://frontend/./src/container/LogsExplorerChart/utils.ts","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/LogsCustomTable.tsx","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/TableRow.tsx","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/config.ts","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/index.tsx","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/styles.ts","webpack://frontend/./src/container/LogsExplorerList/styles.ts","webpack://frontend/./src/hooks/useScrollToTop/index.tsx","webpack://frontend/./src/components/Logs/ListLogView/ListLogView.styles.scss","webpack://frontend/./src/components/Logs/TableView/useTableView.styles.scss","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/TableRow.styles.scss","webpack://frontend/./src/components/Logs/ListLogView/ListLogView.styles.scss?4cfa","webpack://frontend/./src/components/Logs/TableView/useTableView.styles.scss?ddfc","webpack://frontend/./src/container/LogsExplorerList/InfinityTableView/TableRow.styles.scss?cc24"],"sourcesContent":["import './ListLogView.styles.scss';\n\nimport { blue } from '@ant-design/colors';\nimport Convert from 'ansi-to-html';\nimport { Typography } from 'antd';\nimport cx from 'classnames';\nimport LogDetail from 'components/LogDetail';\nimport { VIEW_TYPES } from 'components/LogDetail/constants';\nimport { DATE_TIME_FORMATS } from 'constants/dateTimeFormats';\nimport { escapeHtml, unescapeString } from 'container/LogDetailedView/utils';\nimport { FontSize } from 'container/OptionsMenu/types';\nimport dompurify from 'dompurify';\nimport { useActiveLog } from 'hooks/logs/useActiveLog';\nimport { useCopyLogLink } from 'hooks/logs/useCopyLogLink';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\n// utils\nimport { FlatLogData } from 'lib/logs/flatLogData';\nimport { useTimezone } from 'providers/Timezone';\nimport { useCallback, useMemo, useState } from 'react';\n// interfaces\nimport { IField } from 'types/api/logs/fields';\nimport { ILog } from 'types/api/logs/log';\nimport { FORBID_DOM_PURIFY_TAGS } from 'utils/app';\n\n// components\nimport AddToQueryHOC, { AddToQueryHOCProps } from '../AddToQueryHOC';\nimport LogLinesActionButtons from '../LogLinesActionButtons/LogLinesActionButtons';\nimport LogStateIndicator from '../LogStateIndicator/LogStateIndicator';\nimport { getLogIndicatorType } from '../LogStateIndicator/utils';\n// styles\nimport {\n\tContainer,\n\tLogContainer,\n\tLogText,\n\tText,\n\tTextContainer,\n} from './styles';\nimport { isValidLogField } from './util';\n\nconst convert = new Convert();\n\ninterface LogFieldProps {\n\tfieldKey: string;\n\tfieldValue: string;\n\tlinesPerRow?: number;\n\tfontSize: FontSize;\n}\n\ntype LogSelectedFieldProps = Omit<LogFieldProps, 'linesPerRow'> &\n\tPick<AddToQueryHOCProps, 'onAddToQuery'>;\n\nfunction LogGeneralField({\n\tfieldKey,\n\tfieldValue,\n\tlinesPerRow = 1,\n\tfontSize,\n}: LogFieldProps): JSX.Element {\n\tconst html = useMemo(\n\t\t() => ({\n\t\t\t__html: convert.toHtml(\n\t\t\t\tdompurify.sanitize(unescapeString(escapeHtml(fieldValue)), {\n\t\t\t\t\tFORBID_TAGS: [...FORBID_DOM_PURIFY_TAGS],\n\t\t\t\t}),\n\t\t\t),\n\t\t}),\n\t\t[fieldValue],\n\t);\n\n\treturn (\n\t\t<TextContainer>\n\t\t\t<Text ellipsis type=\"secondary\" className={cx('log-field-key', fontSize)}>\n\t\t\t\t{`${fieldKey} : `}\n\t\t\t</Text>\n\t\t\t<LogText\n\t\t\t\tdangerouslySetInnerHTML={html}\n\t\t\t\tclassName={cx('log-value', fontSize)}\n\t\t\t\tlinesPerRow={linesPerRow > 1 ? linesPerRow : undefined}\n\t\t\t/>\n\t\t</TextContainer>\n\t);\n}\n\nfunction LogSelectedField({\n\tfieldKey = '',\n\tfieldValue = '',\n\tonAddToQuery,\n\tfontSize,\n}: LogSelectedFieldProps): JSX.Element {\n\treturn (\n\t\t<div className=\"log-selected-fields\">\n\t\t\t<AddToQueryHOC\n\t\t\t\tfieldKey={fieldKey}\n\t\t\t\tfieldValue={fieldValue}\n\t\t\t\tonAddToQuery={onAddToQuery}\n\t\t\t\tfontSize={fontSize}\n\t\t\t>\n\t\t\t\t<Typography.Text>\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ color: blue[4] }}\n\t\t\t\t\t\tclassName={cx('selected-log-field-key', fontSize)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{fieldKey}\n\t\t\t\t\t</span>\n\t\t\t\t</Typography.Text>\n\t\t\t</AddToQueryHOC>\n\t\t\t<Typography.Text ellipsis className={cx('selected-log-kv', fontSize)}>\n\t\t\t\t<span className={cx('selected-log-field-key', fontSize)}>{': '}</span>\n\t\t\t\t<span className={cx('selected-log-value', fontSize)}>\n\t\t\t\t\t{fieldValue || \"''\"}\n\t\t\t\t</span>\n\t\t\t</Typography.Text>\n\t\t</div>\n\t);\n}\n\ntype ListLogViewProps = {\n\tlogData: ILog;\n\tselectedFields: IField[];\n\tonSetActiveLog: (log: ILog) => void;\n\tonAddToQuery: AddToQueryHOCProps['onAddToQuery'];\n\tactiveLog?: ILog | null;\n\tlinesPerRow: number;\n\tfontSize: FontSize;\n};\n\nfunction ListLogView({\n\tlogData,\n\tselectedFields,\n\tonSetActiveLog,\n\tonAddToQuery,\n\tactiveLog,\n\tlinesPerRow,\n\tfontSize,\n}: ListLogViewProps): JSX.Element {\n\tconst flattenLogData = useMemo(() => FlatLogData(logData), [logData]);\n\n\tconst [hasActionButtons, setHasActionButtons] = useState<boolean>(false);\n\tconst { isHighlighted, isLogsExplorerPage, onLogCopy } = useCopyLogLink(\n\t\tlogData.id,\n\t);\n\tconst {\n\t\tactiveLog: activeContextLog,\n\t\tonAddToQuery: handleAddToQuery,\n\t\tonSetActiveLog: handleSetActiveContextLog,\n\t\tonClearActiveLog: handleClearActiveContextLog,\n\t\tonGroupByAttribute,\n\t} = useActiveLog();\n\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst handlerClearActiveContextLog = useCallback(\n\t\t(event: React.MouseEvent | React.KeyboardEvent) => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\thandleClearActiveContextLog();\n\t\t},\n\t\t[handleClearActiveContextLog],\n\t);\n\n\tconst handleDetailedView = useCallback(() => {\n\t\tonSetActiveLog(logData);\n\t}, [logData, onSetActiveLog]);\n\n\tconst handleShowContext = useCallback(\n\t\t(event: React.MouseEvent) => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\thandleSetActiveContextLog(logData);\n\t\t},\n\t\t[logData, handleSetActiveContextLog],\n\t);\n\n\tconst updatedSelecedFields = useMemo(\n\t\t() => selectedFields.filter((e) => e.name !== 'id'),\n\t\t[selectedFields],\n\t);\n\n\tconst { formatTimezoneAdjustedTimestamp } = useTimezone();\n\n\tconst timestampValue = useMemo(\n\t\t() =>\n\t\t\ttypeof flattenLogData.timestamp === 'string'\n\t\t\t\t? formatTimezoneAdjustedTimestamp(\n\t\t\t\t\t\tflattenLogData.timestamp,\n\t\t\t\t\t\tDATE_TIME_FORMATS.ISO_DATETIME_MS,\n\t\t\t\t  )\n\t\t\t\t: formatTimezoneAdjustedTimestamp(\n\t\t\t\t\t\tflattenLogData.timestamp / 1e6,\n\t\t\t\t\t\tDATE_TIME_FORMATS.ISO_DATETIME_MS,\n\t\t\t\t  ),\n\t\t[flattenLogData.timestamp, formatTimezoneAdjustedTimestamp],\n\t);\n\n\tconst logType = getLogIndicatorType(logData);\n\n\tconst handleMouseEnter = (): void => {\n\t\tsetHasActionButtons(true);\n\t};\n\n\tconst handleMouseLeave = (): void => {\n\t\tsetHasActionButtons(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Container\n\t\t\t\t$isActiveLog={\n\t\t\t\t\tisHighlighted ||\n\t\t\t\t\tactiveLog?.id === logData.id ||\n\t\t\t\t\tactiveContextLog?.id === logData.id\n\t\t\t\t}\n\t\t\t\t$isDarkMode={isDarkMode}\n\t\t\t\t$logType={logType}\n\t\t\t\tonMouseEnter={handleMouseEnter}\n\t\t\t\tonMouseLeave={handleMouseLeave}\n\t\t\t\tonClick={handleDetailedView}\n\t\t\t\tfontSize={fontSize}\n\t\t\t>\n\t\t\t\t<div className=\"log-line\">\n\t\t\t\t\t<LogStateIndicator type={logType} fontSize={fontSize} />\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<LogContainer fontSize={fontSize}>\n\t\t\t\t\t\t\t{updatedSelecedFields.some((field) => field.name === 'body') && (\n\t\t\t\t\t\t\t\t<LogGeneralField\n\t\t\t\t\t\t\t\t\tfieldKey=\"Log\"\n\t\t\t\t\t\t\t\t\tfieldValue={flattenLogData.body}\n\t\t\t\t\t\t\t\t\tlinesPerRow={linesPerRow}\n\t\t\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{flattenLogData.stream && (\n\t\t\t\t\t\t\t\t<LogGeneralField\n\t\t\t\t\t\t\t\t\tfieldKey=\"Stream\"\n\t\t\t\t\t\t\t\t\tfieldValue={flattenLogData.stream}\n\t\t\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{updatedSelecedFields.some((field) => field.name === 'timestamp') && (\n\t\t\t\t\t\t\t\t<LogGeneralField\n\t\t\t\t\t\t\t\t\tfieldKey=\"Timestamp\"\n\t\t\t\t\t\t\t\t\tfieldValue={timestampValue}\n\t\t\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{updatedSelecedFields\n\t\t\t\t\t\t\t\t.filter((field) => !['timestamp', 'body'].includes(field.name))\n\t\t\t\t\t\t\t\t.map((field) =>\n\t\t\t\t\t\t\t\t\tisValidLogField(flattenLogData[field.name] as never) ? (\n\t\t\t\t\t\t\t\t\t\t<LogSelectedField\n\t\t\t\t\t\t\t\t\t\t\tkey={field.name}\n\t\t\t\t\t\t\t\t\t\t\tfieldKey={field.name}\n\t\t\t\t\t\t\t\t\t\t\tfieldValue={flattenLogData[field.name] as never}\n\t\t\t\t\t\t\t\t\t\t\tonAddToQuery={onAddToQuery}\n\t\t\t\t\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : null,\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</LogContainer>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t{hasActionButtons && isLogsExplorerPage && (\n\t\t\t\t\t<LogLinesActionButtons\n\t\t\t\t\t\thandleShowContext={handleShowContext}\n\t\t\t\t\t\tonLogCopy={onLogCopy}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t\t{activeContextLog && (\n\t\t\t\t<LogDetail\n\t\t\t\t\tlog={activeContextLog}\n\t\t\t\t\tonAddToQuery={handleAddToQuery}\n\t\t\t\t\tselectedTab={VIEW_TYPES.CONTEXT}\n\t\t\t\t\tonClose={handlerClearActiveContextLog}\n\t\t\t\t\tonGroupByAttribute={onGroupByAttribute}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nListLogView.defaultProps = {\n\tactiveLog: null,\n};\n\nLogGeneralField.defaultProps = {\n\tlinesPerRow: 1,\n};\n\nexport default ListLogView;\n","/* eslint-disable no-nested-ternary */\nimport { Card, Typography } from 'antd';\nimport { FontSize } from 'container/OptionsMenu/types';\nimport styled from 'styled-components';\nimport { getActiveLogBackground } from 'utils/logs';\n\ninterface LogTextProps {\n\tlinesPerRow?: number;\n}\n\ninterface LogContainerProps {\n\tfontSize: FontSize;\n}\n\nexport const Container = styled(Card)<{\n\t$isActiveLog: boolean;\n\t$isDarkMode: boolean;\n\t$logType: string;\n\tfontSize: FontSize;\n}>`\n\twidth: 100% !important;\n\tmargin-bottom: 0.3rem;\n\n\t${({ fontSize }): string =>\n\t\tfontSize === FontSize.SMALL\n\t\t\t? `margin-bottom:0.1rem;`\n\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t? `margin-bottom: 0.2rem;`\n\t\t\t: fontSize === FontSize.LARGE\n\t\t\t? `margin-bottom:0.3rem;`\n\t\t\t: ``}\n\tcursor: pointer;\n\t.ant-card-body {\n\t\tpadding: 0.3rem 0.6rem;\n\n\t\t${({ fontSize }): string =>\n\t\t\tfontSize === FontSize.SMALL\n\t\t\t\t? `padding:0.1rem 0.6rem;`\n\t\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t\t? `padding: 0.2rem 0.6rem;`\n\t\t\t\t: fontSize === FontSize.LARGE\n\t\t\t\t? `padding:0.3rem 0.6rem;`\n\t\t\t\t: ``}\n\n\t\t${({ $isActiveLog, $isDarkMode, $logType }): string =>\n\t\t\tgetActiveLogBackground($isActiveLog, $isDarkMode, $logType)}\n`;\n\nexport const Text = styled(Typography.Text)`\n\t&&& {\n\t\tmin-width: 2.5rem;\n\t\twhite-space: nowrap;\n\t}\n`;\n\nexport const TextContainer = styled.div`\n\tdisplay: flex;\n\toverflow: hidden;\n\twidth: 100%;\n`;\n\nexport const LogContainer = styled.div<LogContainerProps>`\n\tmargin-left: 0.5rem;\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 6px;\n\t${({ fontSize }): string =>\n\t\tfontSize === FontSize.SMALL\n\t\t\t? `gap: 2px;`\n\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t? ` gap:4px;`\n\t\t\t: `gap:6px;`}\n`;\n\nexport const LogText = styled.div<LogTextProps>`\n\tdisplay: inline-block;\n\ttext-overflow: ellipsis;\n\toverflow: hidden;\n\t${({ linesPerRow }): string =>\n\t\tlinesPerRow\n\t\t\t? `-webkit-line-clamp: ${linesPerRow};\n\t\tline-clamp: ${linesPerRow};\n\t\tdisplay: -webkit-box;\n\t\t-webkit-box-orient: vertical;\n\t\twhite-space: normal; `\n\t\t\t: 'white-space: nowrap;'};\n\t};\n`;\n\nexport const SelectedLog = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\toverflow: hidden;\n`;\n","export const isValidLogField = (value: never): boolean => value !== undefined;\n","import { TableProps } from 'antd';\nimport { CSSProperties } from 'react';\n\nexport function getDefaultCellStyle(isDarkMode?: boolean): CSSProperties {\n\treturn {\n\t\tpaddingTop: 4,\n\t\tpaddingBottom: 6,\n\t\tpaddingRight: 8,\n\t\tpaddingLeft: 8,\n\t\tcolor: isDarkMode ? 'var(--bg-vanilla-400)' : 'var(--bg-slate-400)',\n\t\tfontSize: '14px',\n\t\tfontStyle: 'normal',\n\t\tfontWeight: 400,\n\t\tlineHeight: '18px',\n\t\tletterSpacing: '-0.07px',\n\t\tmarginBottom: '0px',\n\t\tminWidth: '10rem',\n\t};\n}\n\nexport const defaultTableStyle: CSSProperties = {\n\tminWidth: '40rem',\n};\n\nexport const defaultListViewPanelStyle: CSSProperties = {\n\tmaxWidth: '40rem',\n};\n\nexport const tableScroll: TableProps<Record<string, unknown>>['scroll'] = {\n\tx: true,\n};\n","/* eslint-disable no-nested-ternary */\nimport { FontSize } from 'container/OptionsMenu/types';\nimport styled from 'styled-components';\n\ninterface TableBodyContentProps {\n\tlinesPerRow: number;\n\tfontSize: FontSize;\n\tisDarkMode?: boolean;\n}\n\nexport const TableBodyContent = styled.div<TableBodyContentProps>`\n\tmargin-bottom: 0;\n\tcolor: ${(props): string =>\n\t\tprops.isDarkMode ? 'var(--bg-vanilla-400, #c0c1c3)' : 'var(--bg-slate-400)'};\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 18px; /* 128.571% */\n\tletter-spacing: -0.07px;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: ${(props): number => props.linesPerRow};\n\tline-clamp: ${(props): number => props.linesPerRow};\n\t-webkit-box-orient: vertical;\n\t${({ fontSize }): string =>\n\t\tfontSize === FontSize.SMALL\n\t\t\t? `font-size:11px; line-height:16px;`\n\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t? `font-size:13px; line-height:20px;`\n\t\t\t: `font-size:14px; line-height:24px;`}\n`;\n","import './useTableView.styles.scss';\n\nimport Convert from 'ansi-to-html';\nimport { Typography } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport cx from 'classnames';\nimport { DATE_TIME_FORMATS } from 'constants/dateTimeFormats';\nimport { unescapeString } from 'container/LogDetailedView/utils';\nimport dompurify from 'dompurify';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { FlatLogData } from 'lib/logs/flatLogData';\nimport { useTimezone } from 'providers/Timezone';\nimport { useMemo } from 'react';\nimport { FORBID_DOM_PURIFY_TAGS } from 'utils/app';\n\nimport LogStateIndicator from '../LogStateIndicator/LogStateIndicator';\nimport { getLogIndicatorTypeForTable } from '../LogStateIndicator/utils';\nimport {\n\tdefaultListViewPanelStyle,\n\tdefaultTableStyle,\n\tgetDefaultCellStyle,\n} from './config';\nimport { TableBodyContent } from './styles';\nimport {\n\tColumnTypeRender,\n\tUseTableViewProps,\n\tUseTableViewResult,\n} from './types';\n\nconst convert = new Convert();\n\nexport const useTableView = (props: UseTableViewProps): UseTableViewResult => {\n\tconst {\n\t\tlogs,\n\t\tfields,\n\t\tlinesPerRow,\n\t\tfontSize,\n\t\tappendTo = 'center',\n\t\tisListViewPanel,\n\t} = props;\n\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst flattenLogData = useMemo(() => logs.map((log) => FlatLogData(log)), [\n\t\tlogs,\n\t]);\n\n\tconst { formatTimezoneAdjustedTimestamp } = useTimezone();\n\n\tconst columns: ColumnsType<Record<string, unknown>> = useMemo(() => {\n\t\tconst fieldColumns: ColumnsType<Record<string, unknown>> = fields\n\t\t\t.filter((e) => !['id', 'body', 'timestamp'].includes(e.name))\n\t\t\t.map(({ name }) => ({\n\t\t\t\ttitle: name,\n\t\t\t\tdataIndex: name,\n\t\t\t\tkey: name,\n\t\t\t\trender: (field): ColumnTypeRender<Record<string, unknown>> => ({\n\t\t\t\t\tprops: {\n\t\t\t\t\t\tstyle: isListViewPanel\n\t\t\t\t\t\t\t? defaultListViewPanelStyle\n\t\t\t\t\t\t\t: getDefaultCellStyle(isDarkMode),\n\t\t\t\t\t},\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<Typography.Paragraph\n\t\t\t\t\t\t\tellipsis={{ rows: linesPerRow }}\n\t\t\t\t\t\t\tclassName={cx('paragraph', fontSize)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{field}\n\t\t\t\t\t\t</Typography.Paragraph>\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t}));\n\n\t\tif (isListViewPanel) {\n\t\t\treturn [...fieldColumns];\n\t\t}\n\n\t\treturn [\n\t\t\t{\n\t\t\t\t// We do not need any title and data index for the log state indicator\n\t\t\t\ttitle: '',\n\t\t\t\tdataIndex: '',\n\t\t\t\tkey: 'state-indicator',\n\t\t\t\trender: (_, item): ColumnTypeRender<Record<string, unknown>> => ({\n\t\t\t\t\tchildren: (\n\t\t\t\t\t\t<div className={cx('state-indicator', fontSize)}>\n\t\t\t\t\t\t\t<LogStateIndicator\n\t\t\t\t\t\t\t\ttype={getLogIndicatorTypeForTable(item)}\n\t\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t}),\n\t\t\t},\n\t\t\t...(fields.some((field) => field.name === 'timestamp')\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'timestamp',\n\t\t\t\t\t\t\tdataIndex: 'timestamp',\n\t\t\t\t\t\t\tkey: 'timestamp',\n\t\t\t\t\t\t\t// https://github.com/ant-design/ant-design/discussions/36886\n\t\t\t\t\t\t\trender: (\n\t\t\t\t\t\t\t\tfield: string | number,\n\t\t\t\t\t\t\t): ColumnTypeRender<Record<string, unknown>> => {\n\t\t\t\t\t\t\t\tconst date =\n\t\t\t\t\t\t\t\t\ttypeof field === 'string'\n\t\t\t\t\t\t\t\t\t\t? formatTimezoneAdjustedTimestamp(\n\t\t\t\t\t\t\t\t\t\t\t\tfield,\n\t\t\t\t\t\t\t\t\t\t\t\tDATE_TIME_FORMATS.ISO_DATETIME_MS,\n\t\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t\t: formatTimezoneAdjustedTimestamp(\n\t\t\t\t\t\t\t\t\t\t\t\tfield / 1e6,\n\t\t\t\t\t\t\t\t\t\t\t\tDATE_TIME_FORMATS.ISO_DATETIME_MS,\n\t\t\t\t\t\t\t\t\t\t  );\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t\t\t\t<div className=\"table-timestamp\">\n\t\t\t\t\t\t\t\t\t\t\t<Typography.Paragraph ellipsis className={cx('text', fontSize)}>\n\t\t\t\t\t\t\t\t\t\t\t\t{date}\n\t\t\t\t\t\t\t\t\t\t\t</Typography.Paragraph>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: []),\n\t\t\t...(appendTo === 'center' ? fieldColumns : []),\n\t\t\t...(fields.some((field) => field.name === 'body')\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle: 'body',\n\t\t\t\t\t\t\tdataIndex: 'body',\n\t\t\t\t\t\t\tkey: 'body',\n\t\t\t\t\t\t\trender: (\n\t\t\t\t\t\t\t\tfield: string | number,\n\t\t\t\t\t\t\t): ColumnTypeRender<Record<string, unknown>> => ({\n\t\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\t\tstyle: defaultTableStyle,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tchildren: (\n\t\t\t\t\t\t\t\t\t<TableBodyContent\n\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t\t\t__html: convert.toHtml(\n\t\t\t\t\t\t\t\t\t\t\t\tdompurify.sanitize(unescapeString(field as string), {\n\t\t\t\t\t\t\t\t\t\t\t\t\tFORBID_TAGS: [...FORBID_DOM_PURIFY_TAGS],\n\t\t\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\t\t\t\tlinesPerRow={linesPerRow}\n\t\t\t\t\t\t\t\t\t\tisDarkMode={isDarkMode}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: []),\n\t\t\t...(appendTo === 'end' ? fieldColumns : []),\n\t\t];\n\t}, [\n\t\tfields,\n\t\tisListViewPanel,\n\t\tappendTo,\n\t\tisDarkMode,\n\t\tlinesPerRow,\n\t\tfontSize,\n\t\tformatTimezoneAdjustedTimestamp,\n\t]);\n\n\treturn { columns, dataSource: flattenLogData };\n};\n","export const CARD_BODY_STYLE = {\n\tpadding: '0',\n\theight: '100%',\n};\n","import { ArrowUpOutlined } from '@ant-design/icons';\nimport { FloatButton } from 'antd';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\n// hooks\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport useScrollToTop from 'hooks/useScrollToTop';\n\nfunction GoToTop(): JSX.Element | null {\n\tconst { isVisible, scrollToTop } = useScrollToTop();\n\n\tconst { panelType } = useQueryBuilder();\n\n\tif (!isVisible) return null;\n\n\tif (panelType === PANEL_TYPES.LIST) {\n\t\treturn (\n\t\t\t<FloatButton\n\t\t\t\tonClick={scrollToTop}\n\t\t\t\tshape=\"circle\"\n\t\t\t\ttype=\"primary\"\n\t\t\t\ticon={<ArrowUpOutlined />}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn null;\n}\n\nexport default GoToTop;\n","import { Card } from 'antd';\nimport styled from 'styled-components';\n\nexport const CardStyled = styled(Card)`\n\tborder: none !important;\n\tposition: relative;\n\tmargin-bottom: 16px;\n\t.ant-card-body {\n\t\theight: 200px;\n\t\tmin-height: 200px;\n\t\tpadding: 0 16px 16px 16px;\n\t\tfont-family: 'Geist Mono';\n\t}\n`;\n","import Graph from 'components/Graph';\nimport Spinner from 'components/Spinner';\nimport { QueryParams } from 'constants/query';\nimport { themeColors } from 'constants/theme';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport getChartData, { GetChartDataProps } from 'lib/getChartData';\nimport GetMinMax from 'lib/getMinMax';\nimport { colors } from 'lib/getRandomColor';\nimport { memo, useCallback, useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { UpdateTimeInterval } from 'store/actions';\n\nimport { LogsExplorerChartProps } from './LogsExplorerChart.interfaces';\nimport { CardStyled } from './LogsExplorerChart.styled';\nimport { getColorsForSeverityLabels } from './utils';\n\nfunction LogsExplorerChart({\n\tdata,\n\tisLoading,\n\tisLabelEnabled = true,\n\tclassName,\n\tisLogsExplorerViews = false,\n}: LogsExplorerChartProps): JSX.Element {\n\tconst dispatch = useDispatch();\n\tconst urlQuery = useUrlQuery();\n\tconst location = useLocation();\n\tconst { safeNavigate } = useSafeNavigate();\n\tconst handleCreateDatasets: Required<GetChartDataProps>['createDataset'] = useCallback(\n\t\t(element, index, allLabels) => ({\n\t\t\tdata: element,\n\t\t\tbackgroundColor: isLogsExplorerViews\n\t\t\t\t? getColorsForSeverityLabels(allLabels[index], index)\n\t\t\t\t: colors[index % colors.length] || themeColors.red,\n\t\t\tborderColor: isLogsExplorerViews\n\t\t\t\t? getColorsForSeverityLabels(allLabels[index], index)\n\t\t\t\t: colors[index % colors.length] || themeColors.red,\n\t\t\t...(isLabelEnabled\n\t\t\t\t? {\n\t\t\t\t\t\tlabel: allLabels[index],\n\t\t\t\t  }\n\t\t\t\t: {}),\n\t\t}),\n\t\t[isLabelEnabled, isLogsExplorerViews],\n\t);\n\n\tconst onDragSelect = useCallback(\n\t\t(start: number, end: number): void => {\n\t\t\tconst startTimestamp = Math.trunc(start);\n\t\t\tconst endTimestamp = Math.trunc(end);\n\n\t\t\tif (startTimestamp !== endTimestamp) {\n\t\t\t\tdispatch(UpdateTimeInterval('custom', [startTimestamp, endTimestamp]));\n\t\t\t}\n\n\t\t\tconst { maxTime, minTime } = GetMinMax('custom', [\n\t\t\t\tstartTimestamp,\n\t\t\t\tendTimestamp,\n\t\t\t]);\n\n\t\t\turlQuery.set(QueryParams.startTime, minTime.toString());\n\t\t\turlQuery.set(QueryParams.endTime, maxTime.toString());\n\t\t\turlQuery.delete(QueryParams.relativeTime);\n\t\t\t// Remove Hidden Filters from URL query parameters on time change\n\t\t\turlQuery.delete(QueryParams.activeLogId);\n\t\t\tconst generatedUrl = `${location.pathname}?${urlQuery.toString()}`;\n\t\t\tsafeNavigate(generatedUrl);\n\t\t},\n\t\t[dispatch, location.pathname, safeNavigate, urlQuery],\n\t);\n\n\tconst graphData = useMemo(\n\t\t() =>\n\t\t\tgetChartData({\n\t\t\t\tqueryData: [\n\t\t\t\t\t{\n\t\t\t\t\t\tqueryData: data,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tcreateDataset: handleCreateDatasets,\n\t\t\t}),\n\t\t[data, handleCreateDatasets],\n\t);\n\n\treturn (\n\t\t<CardStyled className={className}>\n\t\t\t{isLoading ? (\n\t\t\t\t<Spinner size=\"default\" height=\"100%\" />\n\t\t\t) : (\n\t\t\t\t<Graph\n\t\t\t\t\tname=\"logsExplorerChart\"\n\t\t\t\t\tdata={graphData.data}\n\t\t\t\t\tisStacked={isLogsExplorerViews}\n\t\t\t\t\ttype=\"bar\"\n\t\t\t\t\tanimate\n\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</CardStyled>\n\t);\n}\n\nexport default memo(LogsExplorerChart);\n","import { Color } from '@signozhq/design-tokens';\nimport { themeColors } from 'constants/theme';\nimport { colors } from 'lib/getRandomColor';\n\nexport function getColorsForSeverityLabels(\n\tlabel: string,\n\tindex: number,\n): string {\n\tconst lowerCaseLabel = label.toLowerCase();\n\n\tif (lowerCaseLabel.includes(`{severity_text=\"trace\"}`)) {\n\t\treturn Color.BG_FOREST_400;\n\t}\n\n\tif (lowerCaseLabel.includes(`{severity_text=\"debug\"}`)) {\n\t\treturn Color.BG_AQUA_500;\n\t}\n\n\tif (\n\t\tlowerCaseLabel.includes(`{severity_text=\"info\"}`) ||\n\t\tlowerCaseLabel.includes(`{severity_text=\"\"}`)\n\t) {\n\t\treturn Color.BG_ROBIN_500;\n\t}\n\n\tif (lowerCaseLabel.includes(`{severity_text=\"warn\"}`)) {\n\t\treturn Color.BG_AMBER_500;\n\t}\n\n\tif (lowerCaseLabel.includes(`{severity_text=\"error\"}`)) {\n\t\treturn Color.BG_CHERRY_500;\n\t}\n\n\tif (lowerCaseLabel.includes(`{severity_text=\"fatal\"}`)) {\n\t\treturn Color.BG_SAKURA_500;\n\t}\n\n\treturn colors[index % colors.length] || themeColors.red;\n}\n","import Spinner from 'components/Spinner';\nimport { dragColumnParams } from 'hooks/useDragColumns/configs';\nimport ReactDragListView from 'react-drag-listview';\nimport { TableComponents } from 'react-virtuoso';\n\nimport { TableStyled } from './styles';\n\ninterface LogsCustomTableProps {\n\tisLoading?: boolean;\n\thandleDragEnd: (fromIndex: number, toIndex: number) => void;\n}\n\nexport const LogsCustomTable = ({\n\tisLoading,\n\thandleDragEnd,\n}: LogsCustomTableProps): TableComponents['Table'] =>\n\tfunction CustomTable({ style, children }): JSX.Element {\n\t\tif (isLoading) {\n\t\t\treturn <Spinner height=\"35px\" tip=\"Getting Logs\" />;\n\t\t}\n\t\treturn (\n\t\t\t<ReactDragListView.DragColumn\n\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t{...dragColumnParams}\n\t\t\t\tonDragEnd={handleDragEnd}\n\t\t\t>\n\t\t\t\t<TableStyled style={style}>{children}</TableStyled>\n\t\t\t</ReactDragListView.DragColumn>\n\t\t);\n\t};\n","import './TableRow.styles.scss';\n\nimport { ColumnsType } from 'antd/es/table';\nimport LogLinesActionButtons from 'components/Logs/LogLinesActionButtons/LogLinesActionButtons';\nimport { ColumnTypeRender } from 'components/Logs/TableView/types';\nimport { FontSize } from 'container/OptionsMenu/types';\nimport { useCopyLogLink } from 'hooks/logs/useCopyLogLink';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport {\n\tcloneElement,\n\tMouseEventHandler,\n\tReactElement,\n\tReactNode,\n\tuseCallback,\n\tuseMemo,\n} from 'react';\nimport { ILog } from 'types/api/logs/log';\n\nimport { TableCellStyled } from './styles';\n\ninterface TableRowProps {\n\ttableColumns: ColumnsType<Record<string, unknown>>;\n\tindex: number;\n\tlog: Record<string, unknown>;\n\thandleSetActiveContextLog: (log: ILog) => void;\n\tlogs: ILog[];\n\thasActions: boolean;\n\tfontSize: FontSize;\n}\n\nexport default function TableRow({\n\ttableColumns,\n\tindex,\n\tlog,\n\thandleSetActiveContextLog,\n\tlogs,\n\thasActions,\n\tfontSize,\n}: TableRowProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst currentLog = useMemo(() => logs.find(({ id }) => id === log.id), [\n\t\tlogs,\n\t\tlog.id,\n\t]);\n\n\tconst { onLogCopy, isLogsExplorerPage } = useCopyLogLink(currentLog?.id);\n\n\tconst handleShowContext: MouseEventHandler<HTMLElement> = useCallback(\n\t\t(event) => {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif (!handleSetActiveContextLog || !currentLog) return;\n\n\t\t\thandleSetActiveContextLog(currentLog);\n\t\t},\n\t\t[currentLog, handleSetActiveContextLog],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{tableColumns.map((column) => {\n\t\t\t\tif (!column.render) return <td>Empty</td>;\n\n\t\t\t\tconst element: ColumnTypeRender<Record<string, unknown>> = column.render(\n\t\t\t\t\tlog[column.key as keyof Record<string, unknown>],\n\t\t\t\t\tlog,\n\t\t\t\t\tindex,\n\t\t\t\t);\n\n\t\t\t\tconst elementWithChildren = element as Exclude<\n\t\t\t\t\tColumnTypeRender<Record<string, unknown>>,\n\t\t\t\t\tReactNode\n\t\t\t\t>;\n\n\t\t\t\tconst children = elementWithChildren.children as ReactElement;\n\t\t\t\tconst props = elementWithChildren.props as Record<string, unknown>;\n\n\t\t\t\treturn (\n\t\t\t\t\t<TableCellStyled\n\t\t\t\t\t\t$isDragColumn={false}\n\t\t\t\t\t\t$isLogIndicator={column.key === 'state-indicator'}\n\t\t\t\t\t\t$isDarkMode={isDarkMode}\n\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t>\n\t\t\t\t\t\t{cloneElement(children, props)}\n\t\t\t\t\t</TableCellStyled>\n\t\t\t\t);\n\t\t\t})}\n\t\t\t{hasActions && isLogsExplorerPage && (\n\t\t\t\t<LogLinesActionButtons\n\t\t\t\t\thandleShowContext={handleShowContext}\n\t\t\t\t\tonLogCopy={onLogCopy}\n\t\t\t\t\tcustomClassName=\"table-view-log-actions\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","/* eslint-disable no-nested-ternary */\nimport { FontSize } from 'container/OptionsMenu/types';\nimport { CSSProperties } from 'react';\n\nexport const infinityDefaultStyles: CSSProperties = {\n\twidth: '100%',\n\toverflowX: 'scroll',\n\tmarginTop: '15px',\n};\n\nexport function getInfinityDefaultStyles(fontSize: FontSize): CSSProperties {\n\treturn {\n\t\twidth: '100%',\n\t\toverflowX: 'scroll',\n\t\tmarginTop:\n\t\t\tfontSize === FontSize.SMALL\n\t\t\t\t? '10px'\n\t\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t\t? '12px'\n\t\t\t\t: '15px',\n\t};\n}\n","import LogDetail from 'components/LogDetail';\nimport { VIEW_TYPES } from 'components/LogDetail/constants';\nimport { getLogIndicatorType } from 'components/Logs/LogStateIndicator/utils';\nimport { useTableView } from 'components/Logs/TableView/useTableView';\nimport { LOCALSTORAGE } from 'constants/localStorage';\nimport { useActiveLog } from 'hooks/logs/useActiveLog';\nimport { useCopyLogLink } from 'hooks/logs/useCopyLogLink';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport useDragColumns from 'hooks/useDragColumns';\nimport { getDraggedColumns } from 'hooks/useDragColumns/utils';\nimport { forwardRef, memo, useCallback, useMemo } from 'react';\nimport {\n\tTableComponents,\n\tTableVirtuoso,\n\tTableVirtuosoHandle,\n} from 'react-virtuoso';\nimport { ILog } from 'types/api/logs/log';\n\nimport { getInfinityDefaultStyles } from './config';\nimport { LogsCustomTable } from './LogsCustomTable';\nimport { TableHeaderCellStyled, TableRowStyled } from './styles';\nimport TableRow from './TableRow';\nimport { InfinityTableProps } from './types';\n\ninterface CustomTableRowProps {\n\tactiveContextLogId: string;\n\tactiveLogId: string;\n}\n\n// eslint-disable-next-line react/function-component-definition\nconst CustomTableRow: TableComponents<ILog>['TableRow'] = ({\n\tchildren,\n\tcontext,\n\t...props\n}) => {\n\tconst { isHighlighted } = useCopyLogLink(props.item.id);\n\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst logType = getLogIndicatorType(props.item);\n\n\treturn (\n\t\t<TableRowStyled\n\t\t\t$isDarkMode={isDarkMode}\n\t\t\t$isActiveLog={\n\t\t\t\tisHighlighted ||\n\t\t\t\t(context as CustomTableRowProps).activeContextLogId === props.item.id ||\n\t\t\t\t(context as CustomTableRowProps).activeLogId === props.item.id\n\t\t\t}\n\t\t\t$logType={logType}\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t</TableRowStyled>\n\t);\n};\n\nconst InfinityTable = forwardRef<TableVirtuosoHandle, InfinityTableProps>(\n\tfunction InfinityTableView(\n\t\t{ isLoading, tableViewProps, infitiyTableProps },\n\t\tref,\n\t): JSX.Element | null {\n\t\tconst {\n\t\t\tactiveLog: activeContextLog,\n\t\t\tonSetActiveLog: handleSetActiveContextLog,\n\t\t\tonClearActiveLog: handleClearActiveContextLog,\n\t\t\tonAddToQuery: handleAddToQuery,\n\t\t} = useActiveLog();\n\t\tconst {\n\t\t\tactiveLog,\n\t\t\tonSetActiveLog,\n\t\t\tonClearActiveLog,\n\t\t\tonAddToQuery,\n\t\t\tonGroupByAttribute,\n\t\t} = useActiveLog();\n\n\t\tconst { dataSource, columns } = useTableView({\n\t\t\t...tableViewProps,\n\t\t\tonClickExpand: onSetActiveLog,\n\t\t\tonOpenLogsContext: handleSetActiveContextLog,\n\t\t});\n\n\t\tconst { draggedColumns, onDragColumns } = useDragColumns<\n\t\t\tRecord<string, unknown>\n\t\t>(LOCALSTORAGE.LOGS_LIST_COLUMNS);\n\n\t\tconst isDarkMode = useIsDarkMode();\n\n\t\tconst tableColumns = useMemo(\n\t\t\t() => getDraggedColumns<Record<string, unknown>>(columns, draggedColumns),\n\t\t\t[columns, draggedColumns],\n\t\t);\n\n\t\tconst handleDragEnd = useCallback(\n\t\t\t(fromIndex: number, toIndex: number) =>\n\t\t\t\tonDragColumns(tableColumns, fromIndex, toIndex),\n\t\t\t[tableColumns, onDragColumns],\n\t\t);\n\n\t\tconst itemContent = useCallback(\n\t\t\t(index: number, log: Record<string, unknown>): JSX.Element => (\n\t\t\t\t<TableRow\n\t\t\t\t\ttableColumns={tableColumns}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tlog={log}\n\t\t\t\t\thandleSetActiveContextLog={handleSetActiveContextLog}\n\t\t\t\t\tlogs={tableViewProps.logs}\n\t\t\t\t\thasActions\n\t\t\t\t\tfontSize={tableViewProps.fontSize}\n\t\t\t\t/>\n\t\t\t),\n\t\t\t[\n\t\t\t\thandleSetActiveContextLog,\n\t\t\t\ttableColumns,\n\t\t\t\ttableViewProps.fontSize,\n\t\t\t\ttableViewProps.logs,\n\t\t\t],\n\t\t);\n\n\t\tconst tableHeader = useCallback(\n\t\t\t() => (\n\t\t\t\t<tr>\n\t\t\t\t\t{tableColumns\n\t\t\t\t\t\t.filter((column) => column.key)\n\t\t\t\t\t\t.map((column) => {\n\t\t\t\t\t\t\tconst isDragColumn = column.key !== 'expand';\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<TableHeaderCellStyled\n\t\t\t\t\t\t\t\t\t$isLogIndicator={column.key === 'state-indicator'}\n\t\t\t\t\t\t\t\t\t$isDarkMode={isDarkMode}\n\t\t\t\t\t\t\t\t\t$isDragColumn={isDragColumn}\n\t\t\t\t\t\t\t\t\tkey={column.key}\n\t\t\t\t\t\t\t\t\tfontSize={tableViewProps?.fontSize}\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\t\t\t\t{...(isDragColumn && { className: 'dragHandler' })}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{(column.title as string).replace(/^\\w/, (c) => c.toUpperCase())}\n\t\t\t\t\t\t\t\t</TableHeaderCellStyled>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t),\n\t\t\t[tableColumns, isDarkMode, tableViewProps?.fontSize],\n\t\t);\n\n\t\tconst handleClickExpand = (index: number): void => {\n\t\t\tif (!onSetActiveLog) return;\n\n\t\t\tonSetActiveLog(tableViewProps.logs[index]);\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TableVirtuoso\n\t\t\t\t\tref={ref}\n\t\t\t\t\tinitialTopMostItemIndex={\n\t\t\t\t\t\ttableViewProps.activeLogIndex !== -1 ? tableViewProps.activeLogIndex : 0\n\t\t\t\t\t}\n\t\t\t\t\tstyle={getInfinityDefaultStyles(tableViewProps.fontSize)}\n\t\t\t\t\tdata={dataSource}\n\t\t\t\t\tcomponents={{\n\t\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t\tTable: LogsCustomTable({ isLoading, handleDragEnd }),\n\t\t\t\t\t\t// TODO: fix it in the future\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tTableRow: (props): any =>\n\t\t\t\t\t\t\tCustomTableRow({\n\t\t\t\t\t\t\t\t...props,\n\t\t\t\t\t\t\t\tcontext: {\n\t\t\t\t\t\t\t\t\tactiveContextLogId: activeContextLog?.id,\n\t\t\t\t\t\t\t\t\tactiveLogId: activeLog?.id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t} as any),\n\t\t\t\t\t}}\n\t\t\t\t\titemContent={itemContent}\n\t\t\t\t\tfixedHeaderContent={tableHeader}\n\t\t\t\t\ttotalCount={dataSource.length}\n\t\t\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t\t\t{...(infitiyTableProps?.onEndReached\n\t\t\t\t\t\t? { endReached: infitiyTableProps.onEndReached }\n\t\t\t\t\t\t: {})}\n\t\t\t\t\tonClick={(event: any): void => {\n\t\t\t\t\t\thandleClickExpand(event.target.parentElement.parentElement.dataset.index);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t{activeContextLog && (\n\t\t\t\t\t<LogDetail\n\t\t\t\t\t\tlog={activeContextLog}\n\t\t\t\t\t\tonClose={handleClearActiveContextLog}\n\t\t\t\t\t\tonAddToQuery={handleAddToQuery}\n\t\t\t\t\t\tselectedTab={VIEW_TYPES.CONTEXT}\n\t\t\t\t\t\tonGroupByAttribute={onGroupByAttribute}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<LogDetail\n\t\t\t\t\tselectedTab={VIEW_TYPES.OVERVIEW}\n\t\t\t\t\tlog={activeLog}\n\t\t\t\t\tonClose={onClearActiveLog}\n\t\t\t\t\tonAddToQuery={onAddToQuery}\n\t\t\t\t\tonClickActionItem={onAddToQuery}\n\t\t\t\t\tonGroupByAttribute={onGroupByAttribute}\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t},\n);\n\nexport default memo(InfinityTable);\n","/* eslint-disable no-nested-ternary */\nimport { themeColors } from 'constants/theme';\nimport { FontSize } from 'container/OptionsMenu/types';\nimport styled from 'styled-components';\nimport { getActiveLogBackground } from 'utils/logs';\n\ninterface TableHeaderCellStyledProps {\n\t$isDragColumn: boolean;\n\t$isDarkMode: boolean;\n\t$isLogIndicator?: boolean;\n\tfontSize?: FontSize;\n}\n\nexport const TableStyled = styled.table`\n\twidth: 100%;\n`;\n\nexport const TableCellStyled = styled.td<TableHeaderCellStyledProps>`\n\tpadding: 0.5rem;\n\t${({ fontSize }): string =>\n\t\tfontSize === FontSize.SMALL\n\t\t\t? `padding:0.3rem;`\n\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t? `padding:0.4rem;`\n\t\t\t: fontSize === FontSize.LARGE\n\t\t\t? `padding:0.5rem;`\n\t\t\t: ``}\n\tbackground-color: ${(props): string =>\n\t\tprops.$isDarkMode ? 'inherit' : themeColors.whiteCream};\n\n\t${({ $isLogIndicator }): string =>\n\t\t$isLogIndicator ? 'padding: 0 0 0 8px;width: 15px;' : ''}\n\tcolor: ${(props): string =>\n\t\tprops.$isDarkMode ? themeColors.white : themeColors.bckgGrey};\n`;\n\nexport const TableRowStyled = styled.tr<{\n\t$isActiveLog: boolean;\n\t$isDarkMode: boolean;\n\t$logType: string;\n}>`\n\ttd {\n\t\t${({ $isActiveLog, $isDarkMode, $logType }): string =>\n\t\t\t$isActiveLog\n\t\t\t\t? getActiveLogBackground($isActiveLog, $isDarkMode, $logType)\n\t\t\t\t: ''};\n\t}\n\n\tcursor: pointer;\n\tposition: relative;\n\n\t.log-line-action-buttons {\n\t\tdisplay: none;\n\t}\n\n\t&:hover {\n\t\t${TableCellStyled} {\n\t\t\t${({ $isActiveLog, $isDarkMode }): string =>\n\t\t\t\t$isActiveLog\n\t\t\t\t\t? getActiveLogBackground()\n\t\t\t\t\t: `background-color: ${\n\t\t\t\t\t\t\t!$isDarkMode ? 'var(--bg-vanilla-200)' : 'rgba(171, 189, 255, 0.04)'\n\t\t\t\t\t  }`}\n\t\t}\n\t\t.log-line-action-buttons {\n\t\t\tdisplay: flex;\n\t\t}\n\t}\n`;\n\nexport const TableHeaderCellStyled = styled.th<TableHeaderCellStyledProps>`\n\tpadding: 0.5rem;\n\tfont-size: 14px;\n\tfont-style: normal;\n\tfont-weight: 400;\n\tline-height: 18px;\n\tletter-spacing: -0.07px;\n\tbackground: ${(props): string => (props.$isDarkMode ? '#0b0c0d' : '#fdfdfd')};\n\t${({ $isDragColumn }): string => ($isDragColumn ? 'cursor: col-resize;' : '')}\n\n\t${({ fontSize }): string =>\n\t\tfontSize === FontSize.SMALL\n\t\t\t? `font-size:11px; line-height:16px; padding: 0.1rem;`\n\t\t\t: fontSize === FontSize.MEDIUM\n\t\t\t? `font-size:13px; line-height:20px; padding:0.3rem;`\n\t\t\t: fontSize === FontSize.LARGE\n\t\t\t? `font-size:14px; line-height:24px; padding: 0.5rem;`\n\t\t\t: ``};\n\t${({ $isLogIndicator }): string => ($isLogIndicator ? 'padding: 0px; ' : '')}\n\tcolor: ${(props): string =>\n\t\tprops.$isDarkMode ? 'var(--bg-vanilla-100, #fff)' : themeColors.bckgGrey};\n`;\n","import styled from 'styled-components';\n\nexport const InfinityWrapperStyled = styled.div`\n\tflex: 1;\n\theight: 40rem !important;\n\tdisplay: flex;\n\theight: 100%;\n`;\n","import throttle from 'lodash-es/throttle';\nimport { useEffect, useState } from 'react';\n\nimport { UseScrollToTop } from './types';\n\nfunction useScrollToTop(visibleOffset = 200): UseScrollToTop {\n\tconst [isVisible, setIsVisible] = useState<boolean>(false);\n\n\tconst scrollToTop = (): void => {\n\t\twindow.scrollTo({\n\t\t\ttop: 0,\n\t\t\tbehavior: 'smooth',\n\t\t});\n\t};\n\n\tuseEffect(() => {\n\t\tconst toggleVisibility = throttle(() => {\n\t\t\tsetIsVisible(window.pageYOffset > visibleOffset);\n\t\t}, 300);\n\n\t\twindow.addEventListener('scroll', toggleVisibility);\n\n\t\treturn (): void => window.removeEventListener('scroll', toggleVisibility);\n\t}, [visibleOffset]);\n\n\treturn { isVisible, scrollToTop };\n}\n\nexport default useScrollToTop;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".log-field-key{padding-right:5px;color:var(--text-vanilla-400, #c0c1c3);font-size:14px;font-style:normal;font-weight:400;line-height:18px;letter-spacing:-0.07px}.log-field-key.small{font-size:11px;line-height:16px}.log-field-key.medium{font-size:13px;line-height:20px}.log-field-key.large{font-size:14px;line-height:24px}.log-value{color:var(--text-vanilla-400, #c0c1c3);font-size:14px;font-style:normal;font-weight:400;line-height:18px;letter-spacing:-0.07px}.log-value.small{font-size:11px;line-height:16px}.log-value.medium{font-size:13px;line-height:20px}.log-value.large{font-size:14px;line-height:24px}.log-line{display:flex;overflow:hidden;transition:background-color .2s ease-in}.log-line .log-state-indicator{padding-left:0}.log-line:hover{background-color:rgba(171,189,255,.04) !important}.log-selected-fields{display:flex;width:100%;overflow:hidden;align-items:center}.log-selected-fields .selected-log-field-key{color:var(--bg-robin-400) !important;font-size:14px;font-style:normal;font-weight:400;line-height:18px;letter-spacing:-0.07px}.log-selected-fields .selected-log-field-key.small{font-size:11px;line-height:16px}.log-selected-fields .selected-log-field-key.medium{font-size:13px;line-height:20px}.log-selected-fields .selected-log-field-key.large{font-size:14px;line-height:24px}.log-selected-fields .selected-log-value{color:var(--bg-sienna-500);border-radius:2px;background:rgba(173,127,88,.08);padding:0px 2px;margin-left:7px;font-weight:400;line-height:18px;letter-spacing:-0.07px;font-size:14px}.log-selected-fields .selected-log-value.small{font-size:11px;line-height:16px}.log-selected-fields .selected-log-value.medium{font-size:13px;line-height:20px}.log-selected-fields .selected-log-value.large{font-size:14px;line-height:24px}.log-selected-fields .selected-log-kv{min-height:24px;display:flex;align-items:center}.log-selected-fields .selected-log-kv.small{min-height:16px}.log-selected-fields .selected-log-kv.medium{min-height:20px}.log-selected-fields .selected-log-kv.large{min-height:24px}.log-action-buttons{position:absolute;transform:translate(-50%, -50%);top:50%;right:0;cursor:pointer;height:32px;width:68px;border-radius:2px;border:1px solid var(--bg-slate-400, #1d212d);background:var(--bg-ink-400, #121317);box-shadow:0px 0px 8px 0px rgba(0,0,0,.1)}.log-action-buttons .context-btn{width:50% !important}.log-action-buttons .copy-link-btn{width:50% !important;border-left:1px solid var(--bg-slate-400, #1d212d) !important}.log-action-buttons .ant-btn-default{border:none;box-shadow:none}.lightMode .log-field-key{color:var(--text-slate-400)}.lightMode .log-value{color:var(--text-slate-400)}.lightMode .log-line:hover{background-color:var(--text-vanilla-200) !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/Logs/ListLogView/ListLogView.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,eACC,iBAAA,CACA,sCAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAEA,qBACC,cAAA,CACA,gBAAA,CAGD,sBACC,cAAA,CACA,gBAAA,CAGD,qBACC,cAAA,CACA,gBAAA,CAGF,WACC,sCAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAEA,iBACC,cAAA,CACA,gBAAA,CAGD,kBACC,cAAA,CACA,gBAAA,CAGD,iBACC,cAAA,CACA,gBAAA,CAGF,UACC,YAAA,CACA,eAAA,CAIA,uCAAA,CAHA,+BACC,cAAA,CAGD,gBACC,iDAAA,CAIF,qBACC,YAAA,CACA,UAAA,CACA,eAAA,CACA,kBAAA,CAEA,6CACC,oCAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CACA,mDACC,cAAA,CACA,gBAAA,CAGD,oDACC,cAAA,CACA,gBAAA,CAGD,mDACC,cAAA,CACA,gBAAA,CAIF,yCACC,0BAAA,CACA,iBAAA,CACA,+BAAA,CACA,eAAA,CACA,eAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CACA,cAAA,CACA,+CACC,cAAA,CACA,gBAAA,CAGD,gDACC,cAAA,CACA,gBAAA,CAGD,+CACC,cAAA,CACA,gBAAA,CAIF,sCACC,eAAA,CACA,YAAA,CACA,kBAAA,CACA,4CACC,eAAA,CAGD,6CACC,eAAA,CAGD,4CACC,eAAA,CAKH,oBACC,iBAAA,CACA,+BAAA,CACA,OAAA,CACA,OAAA,CACA,cAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CACA,6CAAA,CACA,qCAAA,CACA,yCAAA,CAEA,iCACC,oBAAA,CAED,mCACC,oBAAA,CACA,6DAAA,CAGD,qCACC,WAAA,CACA,eAAA,CAKD,0BACC,2BAAA,CAED,sBACC,2BAAA,CAGA,2BACC,mDAAA\",\"sourcesContent\":[\".log-field-key {\\n\\tpadding-right: 5px;\\n\\tcolor: var(--text-vanilla-400, #c0c1c3);\\n\\tfont-size: 14px;\\n\\tfont-style: normal;\\n\\tfont-weight: 400;\\n\\tline-height: 18px; /* 128.571% */\\n\\tletter-spacing: -0.07px;\\n\\n\\t&.small {\\n\\t\\tfont-size: 11px;\\n\\t\\tline-height: 16px;\\n\\t}\\n\\n\\t&.medium {\\n\\t\\tfont-size: 13px;\\n\\t\\tline-height: 20px;\\n\\t}\\n\\n\\t&.large {\\n\\t\\tfont-size: 14px;\\n\\t\\tline-height: 24px;\\n\\t}\\n}\\n.log-value {\\n\\tcolor: var(--text-vanilla-400, #c0c1c3);\\n\\tfont-size: 14px;\\n\\tfont-style: normal;\\n\\tfont-weight: 400;\\n\\tline-height: 18px; /* 128.571% */\\n\\tletter-spacing: -0.07px;\\n\\n\\t&.small {\\n\\t\\tfont-size: 11px;\\n\\t\\tline-height: 16px;\\n\\t}\\n\\n\\t&.medium {\\n\\t\\tfont-size: 13px;\\n\\t\\tline-height: 20px;\\n\\t}\\n\\n\\t&.large {\\n\\t\\tfont-size: 14px;\\n\\t\\tline-height: 24px;\\n\\t}\\n}\\n.log-line {\\n\\tdisplay: flex;\\n\\toverflow: hidden;\\n\\t.log-state-indicator {\\n\\t\\tpadding-left: 0;\\n\\t}\\n\\ttransition: background-color 0.2s ease-in;\\n\\t&:hover {\\n\\t\\tbackground-color: rgba(171, 189, 255, 0.04) !important;\\n\\t}\\n}\\n\\n.log-selected-fields {\\n\\tdisplay: flex;\\n\\twidth: 100%;\\n\\toverflow: hidden;\\n\\talign-items: center;\\n\\n\\t.selected-log-field-key {\\n\\t\\tcolor: var(--bg-robin-400) !important;\\n\\t\\tfont-size: 14px;\\n\\t\\tfont-style: normal;\\n\\t\\tfont-weight: 400;\\n\\t\\tline-height: 18px; /* 128.571% */\\n\\t\\tletter-spacing: -0.07px;\\n\\t\\t&.small {\\n\\t\\t\\tfont-size: 11px;\\n\\t\\t\\tline-height: 16px;\\n\\t\\t}\\n\\n\\t\\t&.medium {\\n\\t\\t\\tfont-size: 13px;\\n\\t\\t\\tline-height: 20px;\\n\\t\\t}\\n\\n\\t\\t&.large {\\n\\t\\t\\tfont-size: 14px;\\n\\t\\t\\tline-height: 24px;\\n\\t\\t}\\n\\t}\\n\\n\\t.selected-log-value {\\n\\t\\tcolor: var(--bg-sienna-500);\\n\\t\\tborder-radius: 2px;\\n\\t\\tbackground: rgba(173, 127, 88, 0.08);\\n\\t\\tpadding: 0px 2px;\\n\\t\\tmargin-left: 7px;\\n\\t\\tfont-weight: 400;\\n\\t\\tline-height: 18px;\\n\\t\\tletter-spacing: -0.07px;\\n\\t\\tfont-size: 14px;\\n\\t\\t&.small {\\n\\t\\t\\tfont-size: 11px;\\n\\t\\t\\tline-height: 16px;\\n\\t\\t}\\n\\n\\t\\t&.medium {\\n\\t\\t\\tfont-size: 13px;\\n\\t\\t\\tline-height: 20px;\\n\\t\\t}\\n\\n\\t\\t&.large {\\n\\t\\t\\tfont-size: 14px;\\n\\t\\t\\tline-height: 24px;\\n\\t\\t}\\n\\t}\\n\\n\\t.selected-log-kv {\\n\\t\\tmin-height: 24px;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\t&.small {\\n\\t\\t\\tmin-height: 16px;\\n\\t\\t}\\n\\n\\t\\t&.medium {\\n\\t\\t\\tmin-height: 20px;\\n\\t\\t}\\n\\n\\t\\t&.large {\\n\\t\\t\\tmin-height: 24px;\\n\\t\\t}\\n\\t}\\n}\\n\\n.log-action-buttons {\\n\\tposition: absolute;\\n\\ttransform: translate(-50%, -50%);\\n\\ttop: 50%;\\n\\tright: 0;\\n\\tcursor: pointer;\\n\\theight: 32px;\\n\\twidth: 68px;\\n\\tborder-radius: 2px;\\n\\tborder: 1px solid var(--bg-slate-400, #1d212d);\\n\\tbackground: var(--bg-ink-400, #121317);\\n\\tbox-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);\\n\\n\\t.context-btn {\\n\\t\\twidth: 50% !important;\\n\\t}\\n\\t.copy-link-btn {\\n\\t\\twidth: 50% !important;\\n\\t\\tborder-left: 1px solid var(--bg-slate-400, #1d212d) !important;\\n\\t}\\n\\n\\t.ant-btn-default {\\n\\t\\tborder: none;\\n\\t\\tbox-shadow: none;\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.log-field-key {\\n\\t\\tcolor: var(--text-slate-400);\\n\\t}\\n\\t.log-value {\\n\\t\\tcolor: var(--text-slate-400);\\n\\t}\\n\\t.log-line {\\n\\t\\t&:hover {\\n\\t\\t\\tbackground-color: var(--text-vanilla-200) !important;\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".text{color:var(--bg-vanilla-400);font-size:14px;font-style:normal;font-weight:400;line-height:18px;letter-spacing:-0.07px}.text.small{font-size:11px;line-height:16px}.text.medium{font-size:13px;line-height:20px}.text.large{font-size:14px;line-height:24px}.state-indicator{width:15px}.state-indicator .log-state-indicator{padding:0px}.table-timestamp{display:flex;align-items:center}.table-timestamp .ant-typography{margin-bottom:0}.lightMode .text{color:var(--bg-slate-400)}.paragraph{padding:0px !important}.paragraph.small{font-size:11px !important;line-height:16px !important}.paragraph.medium{font-size:13px !important;line-height:20px !important}.paragraph.large{font-size:14px !important;line-height:24px !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/Logs/TableView/useTableView.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,MACC,2BAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAEA,YACC,cAAA,CACA,gBAAA,CAGD,aACC,cAAA,CACA,gBAAA,CAGD,YACC,cAAA,CACA,gBAAA,CAIF,iBACC,UAAA,CACA,sCACC,WAAA,CAIF,iBACC,YAAA,CACA,kBAAA,CAEA,iCACC,eAAA,CAKD,iBACC,yBAAA,CAIF,WACC,sBAAA,CACA,iBACC,yBAAA,CACA,2BAAA,CAGD,kBACC,yBAAA,CACA,2BAAA,CAGD,iBACC,yBAAA,CACA,2BAAA\",\"sourcesContent\":[\".text {\\n\\tcolor: var(--bg-vanilla-400);\\n\\tfont-size: 14px;\\n\\tfont-style: normal;\\n\\tfont-weight: 400;\\n\\tline-height: 18px; /* 128.571% */\\n\\tletter-spacing: -0.07px;\\n\\n\\t&.small {\\n\\t\\tfont-size: 11px;\\n\\t\\tline-height: 16px;\\n\\t}\\n\\n\\t&.medium {\\n\\t\\tfont-size: 13px;\\n\\t\\tline-height: 20px;\\n\\t}\\n\\n\\t&.large {\\n\\t\\tfont-size: 14px;\\n\\t\\tline-height: 24px;\\n\\t}\\n}\\n\\n.state-indicator {\\n\\twidth: 15px;\\n\\t.log-state-indicator {\\n\\t\\tpadding: 0px;\\n\\t}\\n}\\n\\n.table-timestamp {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\n\\t.ant-typography {\\n\\t\\tmargin-bottom: 0;\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.text {\\n\\t\\tcolor: var(--bg-slate-400);\\n\\t}\\n}\\n\\n.paragraph {\\n\\tpadding: 0px !important;\\n\\t&.small {\\n\\t\\tfont-size: 11px !important;\\n\\t\\tline-height: 16px !important;\\n\\t}\\n\\n\\t&.medium {\\n\\t\\tfont-size: 13px !important;\\n\\t\\tline-height: 20px !important;\\n\\t}\\n\\n\\t&.large {\\n\\t\\tfont-size: 14px !important;\\n\\t\\tline-height: 24px !important;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".logs-table-row{cursor:pointer;position:relative}.table-row-backdrop.INFO{background-color:var(--bg-robin-500) 10}.table-row-backdrop.WARNING,.table-row-backdrop.WARN{background-color:var(--bg-amber-500) 10}.table-row-backdrop.ERROR{background-color:var(--bg-cherry-500) 10}.table-row-backdrop.TRACE{background-color:var(--bg-forest-400) 10}.table-row-backdrop.DEBUG{background-color:var(--bg-aqua-500) 10}.table-row-backdrop.FATAL{background-color:var(--bg-sakura-500) 10}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/LogsExplorerList/InfinityTableView/TableRow.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,gBACC,cAAA,CACA,iBAAA,CAIA,yBACC,uCAAA,CAED,qDAEC,uCAAA,CAED,0BACC,wCAAA,CAED,0BACC,wCAAA,CAED,0BACC,sCAAA,CAED,0BACC,wCAAA\",\"sourcesContent\":[\".logs-table-row {\\n\\tcursor: pointer;\\n\\tposition: relative;\\n}\\n\\n.table-row-backdrop {\\n\\t&.INFO {\\n\\t\\tbackground-color: var(--bg-robin-500) 10;\\n\\t}\\n\\t&.WARNING,\\n\\t&.WARN {\\n\\t\\tbackground-color: var(--bg-amber-500) 10;\\n\\t}\\n\\t&.ERROR {\\n\\t\\tbackground-color: var(--bg-cherry-500) 10;\\n\\t}\\n\\t&.TRACE {\\n\\t\\tbackground-color: var(--bg-forest-400) 10;\\n\\t}\\n\\t&.DEBUG {\\n\\t\\tbackground-color: var(--bg-aqua-500) 10;\\n\\t}\\n\\t&.FATAL {\\n\\t\\tbackground-color: var(--bg-sakura-500) 10;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./ListLogView.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./useTableView.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./TableRow.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["convert","Convert","LogGeneralField","_ref","fieldKey","fieldValue","linesPerRow","fontSize","html","useMemo","__html","toHtml","dompurify","sanitize","unescapeString","escapeHtml","FORBID_TAGS","FORBID_DOM_PURIFY_TAGS","_jsxs","TextContainer","children","_jsx","Text","ellipsis","type","className","cx","concat","LogText","dangerouslySetInnerHTML","undefined","LogSelectedField","_ref2","onAddToQuery","AddToQueryHOC","Typography","style","color","blue","ListLogView","_ref3","logData","selectedFields","onSetActiveLog","activeLog","flattenLogData","FlatLogData","hasActionButtons","setHasActionButtons","useState","isHighlighted","isLogsExplorerPage","onLogCopy","useCopyLogLink","id","activeContextLog","handleAddToQuery","handleSetActiveContextLog","onClearActiveLog","handleClearActiveContextLog","onGroupByAttribute","useActiveLog","isDarkMode","useIsDarkMode","handlerClearActiveContextLog","useCallback","event","preventDefault","stopPropagation","handleDetailedView","handleShowContext","updatedSelecedFields","filter","e","name","formatTimezoneAdjustedTimestamp","useTimezone","timestampValue","timestamp","DATE_TIME_FORMATS","ISO_DATETIME_MS","logType","getLogIndicatorType","_Fragment","Container","$isActiveLog","$isDarkMode","$logType","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","onClick","LogStateIndicator","LogContainer","some","field","body","stream","includes","map","isValidLogField","LogLinesActionButtons","LogDetail","log","selectedTab","VIEW_TYPES","CONTEXT","onClose","__signature__","defaultProps","_default","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","register","module","styled","Card","_templateObject","_taggedTemplateLiteral","FontSize","SMALL","MEDIUM","LARGE","getActiveLogBackground","_templateObject2","div","_templateObject3","_templateObject4","_ref4","_templateObject5","_ref5","SelectedLog","_templateObject6","value","getDefaultCellStyle","paddingTop","paddingBottom","paddingRight","paddingLeft","fontStyle","fontWeight","lineHeight","letterSpacing","marginBottom","minWidth","defaultTableStyle","defaultListViewPanelStyle","maxWidth","tableScroll","x","TableBodyContent","props","useTableView","logs","fields","appendTo","isListViewPanel","columns","fieldColumns","title","dataIndex","key","render","Paragraph","rows","_","item","getLogIndicatorTypeForTable","date","dataSource","CARD_BODY_STYLE","padding","height","GoToTop","isVisible","scrollToTop","useScrollToTop","panelType","useQueryBuilder","PANEL_TYPES","LIST","FloatButton","shape","icon","ArrowUpOutlined","CardStyled","LogsExplorerChart","data","isLoading","isLabelEnabled","isLogsExplorerViews","dispatch","useDispatch","urlQuery","useUrlQuery","location","useLocation","safeNavigate","useSafeNavigate","handleCreateDatasets","element","index","allLabels","backgroundColor","getColorsForSeverityLabels","colors","length","themeColors","red","borderColor","label","onDragSelect","start","end","startTimestamp","Math","trunc","endTimestamp","UpdateTimeInterval","maxTime","minTime","GetMinMax","set","QueryParams","startTime","toString","endTime","delete","relativeTime","activeLogId","generatedUrl","pathname","graphData","getChartData","queryData","createDataset","Spinner","size","Graph","isStacked","animate","memo","lowerCaseLabel","toLowerCase","Color","BG_FOREST_400","BG_AQUA_500","BG_ROBIN_500","BG_AMBER_500","BG_CHERRY_500","BG_SAKURA_500","LogsCustomTable","handleDragEnd","tip","ReactDragListView","DragColumn","dragColumnParams","onDragEnd","TableStyled","TableRow","tableColumns","hasActions","currentLog","find","column","elementWithChildren","TableCellStyled","$isDragColumn","$isLogIndicator","cloneElement","customClassName","infinityDefaultStyles","width","overflowX","marginTop","getInfinityDefaultStyles","CustomTableRow","context","TableRowStyled","activeContextLogId","InfinityTable","forwardRef","ref","tableViewProps","infitiyTableProps","onClickExpand","onOpenLogsContext","draggedColumns","onDragColumns","useDragColumns","LOCALSTORAGE","LOGS_LIST_COLUMNS","getDraggedColumns","fromIndex","toIndex","itemContent","tableHeader","isDragColumn","TableHeaderCellStyled","replace","c","toUpperCase","TableVirtuoso","initialTopMostItemIndex","activeLogIndex","components","Table","fixedHeaderContent","totalCount","onEndReached","endReached","target","parentElement","dataset","OVERVIEW","onClickActionItem","table","td","whiteCream","white","bckgGrey","tr","th","_ref6","_ref7","InfinityWrapperStyled","visibleOffset","arguments","setIsVisible","useEffect","toggleVisibility","throttle","window","pageYOffset","addEventListener","removeEventListener","scrollTo","top","behavior","___CSS_LOADER_EXPORT___","push","api","content","__esModule","options","exports","locals"],"sourceRoot":""}