{"version":3,"file":"vendors-node_modules_lucide-react_dist_esm_icons_arrow-right-to-line_js-node_modules_lucide-r-c1d18d.5a51671038d4c6a6e634.js","mappings":";0tBASA,MAKMA,GAAmB,eAAiB,sBALvB,CACjB,CAAC,OAAQ,CAAEC,EAAG,WAAYC,IAAK,WAC/B,CAAC,OAAQ,CAAED,EAAG,iBAAkBC,IAAK,WACrC,CAAC,OAAQ,CAAED,EAAG,WAAYC,IAAK,+CCHjC,MAIMC,GAAa,eAAiB,cAJjB,CACjB,CAAC,OAAQ,CAAEF,EAAG,WAAYC,IAAK,WAC/B,CAAC,OAAQ,CAAED,EAAG,gBAAiBC,IAAK,gDCFtC,MAIME,GAAoB,eAAiB,sBAJxB,CACjB,CAAC,OAAQ,CAAEH,EAAG,eAAgBC,IAAK,WACnC,CAAC,OAAQ,CAAED,EAAG,gBAAiBC,IAAK,gDCFtC,MAIMG,GAAc,eAAiB,eAJlB,CACjB,CAAC,SAAU,CAAEC,GAAI,KAAMC,GAAI,KAAMC,EAAG,KAAMN,IAAK,WAC/C,CAAC,OAAQ,CAAED,EAAG,gBAAiBC,IAAK,gDCFtC,MACMO,GAAM,eAAiB,MADV,CAAC,CAAC,SAAU,CAAEH,GAAI,OAAQC,GAAI,OAAQC,EAAG,IAAKN,IAAK,+CCAtE,MAWMQ,GAAQ,eAAiB,QAXZ,CACjB,CAAC,OAAQ,CAAET,EAAG,YAAaC,IAAK,WAChC,CAAC,OAAQ,CAAED,EAAG,aAAcC,IAAK,WACjC,CACE,OACA,CACED,EAAG,+EACHC,IAAK,gDCPX,MAQMS,GAAQ,eAAiB,QARZ,CACjB,CAAC,OAAQ,CAAEV,EAAG,yBAA0BC,IAAK,WAC7C,CAAC,OAAQ,CAAED,EAAG,2BAA4BC,IAAK,WAC/C,CAAC,OAAQ,CAAED,EAAG,6BAA8BC,IAAK,WACjD,CAAC,OAAQ,CAAED,EAAG,6BAA8BC,IAAK,WACjD,CAAC,OAAQ,CAAEU,MAAO,IAAKC,OAAQ,IAAKC,EAAG,IAAKC,EAAG,IAAKC,GAAI,IAAKd,IAAK,WAClE,CAAC,OAAQ,CAAEU,MAAO,IAAKC,OAAQ,IAAKC,EAAG,KAAMC,EAAG,KAAMC,GAAI,IAAKd,IAAK,gDCNtE,MAcMe,GAAc,eAAiB,eAdlB,CACjB,CAAC,OAAQ,CAAEhB,EAAG,UAAWC,IAAK,WAC9B,CACE,OACA,CACED,EAAG,iIACHC,IAAK,WAGT,CAAC,OAAQ,CAAED,EAAG,4BAA6BC,IAAK,WAChD,CAAC,OAAQ,CAAED,EAAG,WAAYC,IAAK,WAC/B,CAAC,OAAQ,CAAED,EAAG,uBAAwBC,IAAK,WAC3C,CAAC,OAAQ,CAAED,EAAG,0BAA2BC,IAAK,gDCZhD,MAKMgB,GAAQ,eAAiB,SALZ,CACjB,CAAC,OAAQ,CAAEjB,EAAG,0BAA2BC,IAAK,WAC9C,CAAC,OAAQ,CAAED,EAAG,4BAA6BC,IAAK,WAChD,CAAC,OAAQ,CAAEiB,GAAI,IAAKC,GAAI,KAAMC,GAAI,KAAMC,GAAI,KAAMpB,IAAK,gDCHzD,MAKMqB,GAAW,eAAiB,YALf,CACjB,CAAC,OAAQ,CAAEtB,EAAG,8CAA+CC,IAAK,WAClE,CAAC,OAAQ,CAAED,EAAG,6DAA8DC,IAAK,WACjF,CAAC,OAAQ,CAAED,EAAG,UAAWC,IAAK,gDCHhC,MAIMsB,GAAO,eAAiB,OAJX,CACjB,CAAC,OAAQ,CAAEvB,EAAG,WAAYC,IAAK,WAC/B,CAAC,OAAQ,CAAED,EAAG,WAAYC,IAAK,gDCFjC,MASMuB,GAAS,eAAiB,SATb,CACjB,CACE,OACA,CACExB,EAAG,2JACHC,IAAK,gDCUX,QAJA,SAAewB,GACb,OAAgB,MAATA,CACT,6EClBA,SAASC,EAAmBD,EAAOE,EAAWC,GAC1C,MAAMC,GAAgB,OAAcJ,GAASA,GAAQ,QAAYA,GAEjE,OADAI,EAAcC,OAAM,OAAmB,GAAID,EAAeF,EAAWC,IAC9DC,EAAcE,SACzB,yPC+DA,MAAMC,EAA6B,CAC/BC,WAAU,IACVC,UAAS,KACTC,UAAS,MAKb,MAAMC,6BAA6B,IAC/B,WAAAC,CAAYT,GACRU,MAAMV,GACN,MAAM,KAAEW,EAAI,YAAEC,EAAW,QAAEC,EAAO,UAAEd,GAAce,KAAKd,QACvDc,KAAKC,SAAW,IAAI,IAAqBhB,GAAW,CAACiB,EAAmBC,IAAkBH,KAAKI,oBAAoBF,EAAmBC,IAAgBN,EAAMC,EAAaC,GACzKC,KAAKC,SAASI,iBAClB,CACA,YAAAC,CAAarB,EAAWkB,GACpB,IAAI,SAAEI,EAAW,IAAG,MAAEC,EAAK,KAAEC,EAAI,KAAEC,EAAI,YAAEZ,EAAW,KAAED,EAAI,UAAEc,GAAeX,KAAKd,QAKhF,IAAKY,EAAYc,QAAUd,EAAYc,MAAMC,QACzC,OAAO,EAjBnB,IA1CuC3B,EA0E/B,GARoB,iBAATuB,IACP,UACkBA,KAzBZnB,IA0BNmB,EAAOnB,EAA2BmB,IArEPvB,EA0EGc,KAAKd,SAzEnC,OAAYA,EAAQwB,OACP,WAAjBxB,EAAQwB,QACP,QAAuBxB,EAAQuB,MAuEiB,CAC7C,MAAM,WAAEK,EAAU,SAAEC,EAAQ,YAAEjB,EAAW,QAAEC,KAAYb,GAAYc,KAAKd,QAClE8B,EAvElB,SAA8B/B,EAAWC,GAMrC,MAAM+B,EAAkB,IAAI,IAAoB,IACzC/B,EACHD,YACAiC,OAAQ,EACRC,MAAO,EACPC,aAAa,IAEjB,IAAIC,EAAQ,CAAEC,MAAM,EAAOvC,MAAOE,EAAU,IAC5C,MAAMsC,EAAwB,GAK9B,IAAIC,EAAI,EACR,MAAQH,EAAMC,MAAQE,EA/BN,KAgCZH,EAAQJ,EAAgBQ,OAAOD,GAC/BD,EAAsBG,KAAKL,EAAMtC,OACjCyC,GAvCY,GAyChB,MAAO,CACHhB,WAAOmB,EACP1C,UAAWsC,EACXhB,SAAUiB,EA5CE,GA6CZf,KAAM,SAEd,CAwC0CmB,CAAqB3C,EAAWC,GAKrC,KAJzBD,EAAY+B,EAAsB/B,WAIpB4C,SACV5C,EAAU,GAAKA,EAAU,IAE7BsB,EAAWS,EAAsBT,SACjCC,EAAQQ,EAAsBR,MAC9BC,EAAOO,EAAsBP,KAC7BC,EAAO,WACX,CACA,MAAMrB,GAAY,OAAoBS,EAAYc,MAAMC,QAAShB,EAAMZ,EAAW,IAAKe,KAAKd,QAASqB,WAAUC,QAAOC,SAyBtH,OAtBApB,EAAUsB,UAAYA,QAA6CA,EAAYX,KAAK8B,gBAChF9B,KAAK+B,kBACL,OAAe1C,EAAWW,KAAK+B,iBAC/B/B,KAAK+B,qBAAkBJ,GAWvBtC,EAAU2C,SAAW,KACjB,MAAM,WAAElB,GAAed,KAAKd,QAC5BY,EAAYmC,KAAI,OAAiBhD,EAAWe,KAAKd,QAASiB,IAC1DW,GAAcA,IACdd,KAAKkC,SACLlC,KAAKmC,wBAAwB,EAG9B,CACH9C,YACAkB,WACAC,QACAE,OACAD,OACAxB,UAAWA,EAEnB,CACA,YAAIsB,GACA,MAAM,SAAE6B,GAAapC,KACrB,IAAKoC,EACD,OAAO,EACX,MAAM,SAAE7B,GAAa6B,EACrB,OAAO,OAAsB7B,EACjC,CACA,QAAI8B,GACA,MAAM,SAAED,GAAapC,KACrB,IAAKoC,EACD,OAAO,EACX,MAAM,UAAE/C,GAAc+C,EACtB,OAAO,OAAsB/C,EAAUiD,aAAe,EAC1D,CACA,QAAID,CAAKE,GACL,MAAM,SAAEH,GAAapC,KACrB,IAAKoC,EACD,OACJ,MAAM,UAAE/C,GAAc+C,EACtB/C,EAAUiD,aAAc,OAAsBC,EAClD,CACA,SAAIC,GACA,MAAM,SAAEJ,GAAapC,KACrB,IAAKoC,EACD,OAAO,EACX,MAAM,UAAE/C,GAAc+C,EACtB,OAAO/C,EAAUoD,YACrB,CACA,SAAID,CAAME,GACN,MAAM,SAAEN,GAAapC,KACrB,IAAKoC,EACD,OACJ,MAAM,UAAE/C,GAAc+C,EACtB/C,EAAUoD,aAAeC,CAC7B,CACA,SAAIrB,GACA,MAAM,SAAEe,GAAapC,KACrB,IAAKoC,EACD,MAAO,OACX,MAAM,UAAE/C,GAAc+C,EACtB,OAAO/C,EAAUsD,SACrB,CACA,aAAIhC,GACA,MAAM,SAAEyB,GAAapC,KACrB,IAAKoC,EACD,OAAO,KACX,MAAM,UAAE/C,GAAc+C,EAGtB,OAAO/C,EAAUsB,SACrB,CAKA,cAAAiC,CAAeC,GACX,GAAK7C,KAAK8C,UAGL,CACD,MAAM,SAAEV,GAAapC,KACrB,IAAKoC,EACD,OAAO,IACX,MAAM,UAAE/C,GAAc+C,GACtB,OAAe/C,EAAWwD,EAC9B,MARI7C,KAAK+B,gBAAkBc,EAS3B,OAAO,GACX,CACA,IAAAE,GACI,GAAI/C,KAAKgD,UACL,OACJ,MAAM,SAAEZ,GAAapC,KACrB,IAAKoC,EACD,OACJ,MAAM,UAAE/C,GAAc+C,EACM,aAAxB/C,EAAUsD,WACV3C,KAAKiD,wBAET5D,EAAU0D,MACd,CACA,KAAAG,GACI,MAAM,SAAEd,GAAapC,KACrB,IAAKoC,EACD,OACJ,MAAM,UAAE/C,GAAc+C,EACtB/C,EAAU6D,OACd,CACA,IAAAC,GAGI,GAFAnD,KAAKC,SAASiC,SACdlC,KAAKgD,WAAY,EACE,SAAfhD,KAAKqB,MACL,OACJrB,KAAKmC,yBACLnC,KAAKiD,wBACL,MAAM,SAAEb,GAAapC,KACrB,IAAKoC,EACD,OACJ,MAAM,UAAE/C,EAAS,UAAEJ,EAAS,SAAEsB,EAAQ,KAAEG,EAAI,KAAED,EAAI,MAAED,GAAU4B,EAC9D,GAA4B,SAAxB/C,EAAUsD,WACc,aAAxBtD,EAAUsD,UACV,OAUJ,GAAI3C,KAAKqC,KAAM,CACX,MAAM,YAAEvC,EAAW,SAAEiB,EAAQ,WAAED,EAAU,QAAEf,KAAYb,GAAYc,KAAKd,QAClE+B,EAAkB,IAAI,IAAoB,IACzC/B,EACHD,YACAsB,WACAG,OACAD,OACAD,QACAY,aAAa,IAEXgC,GAAa,OAAsBpD,KAAKqC,MAC9CvC,EAAYuD,gBAAgBpC,EAAgBQ,OAAO2B,EAhQ3C,IAgQqErE,MAAOkC,EAAgBQ,OAAO2B,GAAYrE,MAhQ/G,GAiQZ,CACA,MAAM,OAAEuE,GAAWtD,KAAKd,QACxBoE,GAAUA,IACVtD,KAAKkC,QACT,CACA,QAAAqB,GACI,MAAM,SAAEnB,GAAapC,KAChBoC,GAELA,EAAS/C,UAAUmE,QACvB,CACA,MAAAtB,GACI,MAAM,SAAEE,GAAapC,KAChBoC,GAELA,EAAS/C,UAAU6C,QACvB,CACA,eAAOuB,CAASvE,GACZ,MAAM,YAAEY,EAAW,KAAED,EAAI,YAAE6D,EAAW,WAAEC,EAAU,QAAEC,EAAO,KAAElD,GAASxB,EACtE,KAAKY,GACAA,EAAYc,OACXd,EAAYc,MAAMC,mBAAmBgD,aACvC,OAAO,EAEX,MAAM,SAAE9C,EAAQ,kBAAE+C,GAAsBhE,EAAYc,MAAMmD,WAC1D,OAAQ,UACJlE,GACA,IAAkBmE,IAAInE,KAKrBkB,IACA+C,IACAJ,GACc,WAAfC,GACY,IAAZC,GACS,YAATlD,CACR,gHC/SJ,MAAMuD,cACF,WAAAtE,EAAY,SAAEuE,GAAW,EAAI,MAAE/C,EAAQ,EAAC,KAAET,EAAO,YAAW,OAAEQ,EAAS,EAAC,YAAEwC,EAAc,EAAC,WAAEC,EAAa,UAAWzE,IAE/Gc,KAAKgD,WAAY,EACjBhD,KAAKmE,qBAAsB,EAC3BnE,KAAKoE,UAAY,IAAKC,MACtBrE,KAAKd,QAAU,CACXgF,WACA/C,QACAT,OACAQ,SACAwC,cACAC,gBACGzE,GAEPc,KAAKiD,uBACT,CAWA,aAAAnB,GACI,OAAK9B,KAAKsE,YAEHtE,KAAKsE,WAAatE,KAAKoE,UA/BZ,GAgCZpE,KAAKsE,WAFAtE,KAAKoE,SAIpB,CAMA,YAAIhC,GAIA,OAHKpC,KAAK8C,WAAc9C,KAAKmE,sBACzB,SAEGnE,KAAK8C,SAChB,CAMA,mBAAA1C,CAAoBnB,EAAWkB,GAC3BH,KAAKsE,WAAa,IAAKD,MACvBrE,KAAKmE,qBAAsB,EAC3B,MAAM,KAAEtE,EAAI,KAAEa,EAAI,SAAE6D,EAAQ,MAAEpD,EAAK,WAAEL,EAAU,SAAEC,EAAQ,YAAEK,GAAiBpB,KAAKd,QAKjF,IAAKkC,KAAgB,OAAWnC,EAAWY,EAAMa,EAAM6D,GAAW,CAE9D,GAAI,IAAsB1D,UAAYM,EAKlC,OAJAJ,GACIA,GAAS,OAAiB9B,EAAWe,KAAKd,QAASiB,IACvDW,GAAcA,SACdd,KAAKmC,yBAKLnC,KAAKd,QAAQqB,SAAW,CAEhC,CACA,MAAMiE,EAAoBxE,KAAKM,aAAarB,EAAWkB,IAC7B,IAAtBqE,IAEJxE,KAAK8C,UAAY,CACb7D,YACAkB,mBACGqE,GAEPxE,KAAKyE,iBACT,CACA,cAAAA,GAAmB,CAMnB,IAAAC,CAAKC,EAASC,GACV,OAAO5E,KAAK6E,uBAAuBH,KAAKC,EAASC,EACrD,CACA,OAAAE,GACS9E,KAAKd,QAAQ6F,eAElB/E,KAAKd,QAAQwB,KAAO,YACpBV,KAAKd,QAAQuB,KAAO,SACxB,CACA,qBAAAwC,GACIjD,KAAK6E,uBAAyB,IAAIG,SAASL,IACvC3E,KAAKmC,uBAAyBwC,CAAO,GAE7C,gOCpGJ,MAAMM,EAAa,CACfC,MAAO,IACPC,QAAO,IACPC,MAAO,IACPnG,UAAW,IACXoG,OAAM,KAEJC,EAAqBC,GAAYA,EAAU,IAMjD,MAAMC,4BAA4B,IAC9B,WAAA7F,CAAYT,GACRU,MAAMV,GAINc,KAAKyF,SAAW,KAIhBzF,KAAK0F,WAAa,KAIlB1F,KAAKsC,YAAc,EAInBtC,KAAK2F,cAAgB,EAMrB3F,KAAK4F,iBAAmB,UAIxB5F,KAAKW,UAAY,KACjBX,KAAKqB,MAAQ,OAKbrB,KAAKmD,KAAO,KAGR,GAFAnD,KAAKC,SAASiC,SACdlC,KAAKgD,WAAY,EACE,SAAfhD,KAAKqB,MACL,OACJrB,KAAK6F,WACL,MAAM,OAAEvC,GAAWtD,KAAKd,QACxBoE,GAAUA,GAAQ,EAEtB,MAAM,KAAEzD,EAAI,YAAEC,EAAW,QAAEC,EAAO,UAAEd,GAAce,KAAKd,QACjD4G,GAAsB/F,aAAyC,EAASA,EAAQgG,mBAAqB,IAE3G/F,KAAKC,SAAW,IAAI6F,EAAmB7G,GADpB,CAACiB,EAAmBC,IAAkBH,KAAKI,oBAAoBF,EAAmBC,IACvCN,EAAMC,EAAaC,GACjFC,KAAKC,SAASI,iBAClB,CACA,OAAAyE,GACIlF,MAAMkF,UAEF9E,KAAK8C,WACLkD,OAAOC,OAAOjG,KAAK8C,UAAW9C,KAAKM,aAAaN,KAAK8C,UAAU7D,WAEvE,CACA,YAAAqB,CAAa4F,GACT,MAAM,KAAExF,EAAO,YAAW,OAAEQ,EAAS,EAAC,YAAEwC,EAAc,EAAC,WAAEC,EAAU,SAAEY,EAAW,GAAOvE,KAAKd,QACtFiH,GAAmB,OAAYzF,GAC/BA,EACAuE,EAAWvE,IAAS,IAO1B,IAAI0F,EACAC,EAKAF,IAAqB,KACK,iBAAnBD,EAAY,KACnBE,GAAwB,OAAKd,GAAmB,OAAIY,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMI,EAAYH,EAAiB,IAAKnG,KAAKd,QAASD,UAAWiH,IAK9C,WAAfvC,IACA0C,EAAoBF,EAAiB,IAC9BnG,KAAKd,QACRD,UAAW,IAAIiH,GAAaK,UAC5BhC,UAAWA,KAWkB,OAAjC+B,EAAUE,qBACVF,EAAUE,oBAAqB,OAAsBF,IAEzD,MAAM,mBAAEE,GAAuBF,EACzBG,EAAmBD,EAAqB9C,EAE9C,MAAO,CACH4C,YACAD,oBACAD,wBACAI,qBACAC,mBACAC,cAPkBD,GAAoBvF,EAAS,GAAKwC,EAS5D,CACA,cAAAe,GACI,MAAM,SAAEP,GAAW,GAASlE,KAAKd,QACjC,IAAiByH,aACjB3G,KAAK+C,OACyB,WAA1B/C,KAAK4F,kBAAkC1B,EAIvClE,KAAKqB,MAAQrB,KAAK4F,iBAHlB5F,KAAKkD,OAKb,CACA,IAAA0D,CAAKC,EAAWpF,GAAS,GACrB,MAAM,SAAEW,GAAapC,KAErB,IAAKoC,EAAU,CACX,MAAM,UAAEnD,GAAce,KAAKd,QAC3B,MAAO,CAAEoC,MAAM,EAAMvC,MAAOE,EAAUA,EAAU4C,OAAS,GAC7D,CACA,MAAM,cAAE1B,EAAa,UAAEmG,EAAS,kBAAED,EAAiB,sBAAED,EAAqB,UAAEnH,EAAS,mBAAEuH,EAAkB,cAAEE,EAAa,iBAAED,GAAsBrE,EAChJ,GAAuB,OAAnBpC,KAAKW,UACL,OAAO2F,EAAUQ,KAAK,GAC1B,MAAM,MAAE3F,EAAK,OAAED,EAAM,WAAEyC,EAAU,YAAED,EAAW,SAAE3C,GAAaf,KAAKd,QAO9Dc,KAAKwC,MAAQ,EACbxC,KAAKW,UAAYoG,KAAKC,IAAIhH,KAAKW,UAAWkG,GAErC7G,KAAKwC,MAAQ,IAClBxC,KAAKW,UAAYoG,KAAKC,IAAIH,EAAYH,EAAgB1G,KAAKwC,MAAOxC,KAAKW,YAGvEc,EACAzB,KAAKsC,YAAcuE,EAEI,OAAlB7G,KAAKyF,SACVzF,KAAKsC,YAActC,KAAKyF,SAMxBzF,KAAKsC,YACDyE,KAAKE,MAAMJ,EAAY7G,KAAKW,WAAaX,KAAKwC,MAGtD,MAAM0E,EAAmBlH,KAAKsC,YAAcnB,GAASnB,KAAKwC,OAAS,EAAI,GAAK,GACtE2E,EAAiBnH,KAAKwC,OAAS,EAC/B0E,EAAmB,EACnBA,EAAmBR,EACzB1G,KAAKsC,YAAcyE,KAAKK,IAAIF,EAAkB,GAE3B,aAAflH,KAAKqB,OAA0C,OAAlBrB,KAAKyF,WAClCzF,KAAKsC,YAAcoE,GAEvB,IAAIW,EAAUrH,KAAKsC,YACfgF,EAAiBhB,EACrB,GAAIpF,EAAQ,CAMR,MAAMqG,EAAWR,KAAKC,IAAIhH,KAAKsC,YAAaoE,GAAiBD,EAK7D,IAAIe,EAAmBT,KAAKU,MAAMF,GAK9BG,EAAoBH,EAAW,GAK9BG,GAAqBH,GAAY,IAClCG,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBT,KAAKC,IAAIQ,EAAkBtG,EAAS,GAIhCyG,QAAQH,EAAmB,KAE3B,YAAf7D,GACA+D,EAAoB,EAAIA,EACpBhE,IACAgE,GAAqBhE,EAAc+C,IAGnB,WAAf9C,IACL2D,EAAiBjB,IAGzBgB,GAAU,OAAM,EAAG,EAAGK,GAAqBjB,CAC/C,CAMA,MAAMpF,EAAQ8F,EACR,CAAE7F,MAAM,EAAOvC,MAAOE,EAAU,IAChCqI,EAAeR,KAAKO,GACtBjB,IACA/E,EAAMtC,MAAQqH,EAAsB/E,EAAMtC,QAE9C,IAAI,KAAEuC,GAASD,EACV8F,GAAyC,OAAvBX,IACnBlF,EACItB,KAAKwC,OAAS,EACRxC,KAAKsC,aAAeoE,EACpB1G,KAAKsC,aAAe,GAElC,MAAMsF,EAAwC,OAAlB5H,KAAKyF,WACb,aAAfzF,KAAKqB,OAAwC,YAAfrB,KAAKqB,OAAuBC,GAU/D,OATIsG,QAAyCjG,IAAlBxB,IACvBkB,EAAMtC,OAAQ,OAAiBE,EAAWe,KAAKd,QAASiB,IAExDY,GACAA,EAASM,EAAMtC,OAEf6I,GACA5H,KAAKwD,SAEFnC,CACX,CACA,YAAId,GACA,MAAM,SAAE6B,GAAapC,KACrB,OAAOoC,GAAW,OAAsBA,EAASoE,oBAAsB,CAC3E,CACA,QAAInE,GACA,OAAO,OAAsBrC,KAAKsC,YACtC,CACA,QAAID,CAAKE,GACLA,GAAU,OAAsBA,GAChCvC,KAAKsC,YAAcC,EACG,OAAlBvC,KAAKyF,UAAoC,IAAfzF,KAAKwC,MAC/BxC,KAAKyF,SAAWlD,EAEXvC,KAAK6H,SACV7H,KAAKW,UAAYX,KAAK6H,OAAOxD,MAAQ9B,EAAUvC,KAAKwC,MAE5D,CACA,SAAIA,GACA,OAAOxC,KAAK2F,aAChB,CACA,SAAInD,CAAME,GACN,MAAMoF,EAAa9H,KAAK2F,gBAAkBjD,EAC1C1C,KAAK2F,cAAgBjD,EACjBoF,IACA9H,KAAKqC,MAAO,OAAsBrC,KAAKsC,aAE/C,CACA,IAAAS,GAII,GAHK/C,KAAKC,SAAS8H,aACf/H,KAAKC,SAAS+H,UAEbhI,KAAK8C,UAEN,YADA9C,KAAK4F,iBAAmB,WAG5B,GAAI5F,KAAKgD,UACL,OACJ,MAAM,OAAE6E,EAAS,IAAe,OAAEI,EAAM,UAAEtH,GAAcX,KAAKd,QACxDc,KAAK6H,SACN7H,KAAK6H,OAASA,GAAQhB,GAAc7G,KAAK4G,KAAKC,MAElDoB,GAAUA,IACV,MAAM5D,EAAMrE,KAAK6H,OAAOxD,MACF,OAAlBrE,KAAKyF,SACLzF,KAAKW,UAAY0D,EAAMrE,KAAKyF,SAEtBzF,KAAKW,UAGS,aAAfX,KAAKqB,QACVrB,KAAKW,UAAY0D,GAHjBrE,KAAKW,UAAYA,QAA6CA,EAAYX,KAAK8B,gBAKhE,aAAf9B,KAAKqB,OACLrB,KAAKiD,wBAETjD,KAAK0F,WAAa1F,KAAKW,UACvBX,KAAKyF,SAAW,KAKhBzF,KAAKqB,MAAQ,UACbrB,KAAK6H,OAAOzI,OAChB,CACA,KAAA8D,GACI,IAAIgF,EACClI,KAAK8C,WAIV9C,KAAKqB,MAAQ,SACbrB,KAAKyF,SAAuC,QAA3ByC,EAAKlI,KAAKsC,mBAAgC,IAAP4F,EAAgBA,EAAK,GAJrElI,KAAK4F,iBAAmB,QAKhC,CACA,QAAArC,GACuB,YAAfvD,KAAKqB,OACLrB,KAAK+C,OAET/C,KAAK4F,iBAAmB5F,KAAKqB,MAAQ,WACrCrB,KAAKyF,SAAW,IACpB,CACA,MAAAjC,GACIxD,KAAK6F,WACL7F,KAAKqB,MAAQ,WACb,MAAM,WAAEP,GAAed,KAAKd,QAC5B4B,GAAcA,GAClB,CACA,MAAAoB,GAC4B,OAApBlC,KAAK0F,YACL1F,KAAK4G,KAAK5G,KAAK0F,YAEnB1F,KAAK6F,WACL7F,KAAKiD,uBACT,CACA,QAAA4C,GACI7F,KAAKqB,MAAQ,OACbrB,KAAKmI,aACLnI,KAAKmC,yBACLnC,KAAKiD,wBACLjD,KAAKW,UAAYX,KAAK0F,WAAa,KACnC1F,KAAKC,SAASiC,SACd,IAAiByE,YACrB,CACA,UAAAwB,GACSnI,KAAK6H,SAEV7H,KAAK6H,OAAO1E,OACZnD,KAAK6H,YAASlG,EAClB,CACA,MAAAF,CAAOY,GAEH,OADArC,KAAKW,UAAY,EACVX,KAAK4G,KAAKvE,GAAM,EAC3B,kEChYJ,MAAM+F,EAAmBC,IACrB,MAAMC,EAAgB,EAAGzB,eAAgBwB,EAAOxB,GAChD,MAAO,CACHzH,MAAO,IAAM,KAAMiJ,OAAOC,GAAe,GACzCnF,KAAM,KAAM,QAAYmF,GAKxBjE,IAAK,IAAO,KAAUkE,aAAe,KAAU1B,UAAY,IAAKxC,MACnE,qCCVL,MAAMmE,EAAoB,IAAIC,IAAI,CAC9B,UACA,WACA,SACA,yFCMJ,SAASC,EAAWzJ,EAAWY,EAAMa,EAAM6D,GAMvC,MAAMoE,EAAiB1J,EAAU,GACjC,GAAuB,OAAnB0J,EACA,OAAO,EAMX,GAAa,YAAT9I,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM+I,EAAiB3J,EAAUA,EAAU4C,OAAS,GAC9CgH,GAAqB,OAAaF,EAAgB9I,GAClDiJ,GAAqB,OAAaF,EAAgB/I,GAGxD,OAFA,OAAQgJ,IAAuBC,EAAoB,6BAA6BjJ,WAAc8I,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PC,IAAuBC,KA9BhC,SAA6B7J,GACzB,MAAM4B,EAAU5B,EAAU,GAC1B,GAAyB,IAArBA,EAAU4C,OACV,OAAO,EACX,IAAK,IAAIkH,EAAI,EAAGA,EAAI9J,EAAU4C,OAAQkH,IAClC,GAAI9J,EAAU8J,KAAOlI,EACjB,OAAO,CAEnB,CAyBYmI,CAAoB/J,KACb,WAATyB,IAAqB,OAAYA,KAAU6D,EACrD,4EClCA,SAAS0E,EAAoBlJ,EAASmJ,EAAWjK,GAAW,MAAEkC,EAAQ,EAAC,SAAEZ,EAAW,IAAG,OAAEW,EAAS,EAAC,WAAEyC,EAAa,OAAM,KAAElD,EAAO,YAAW,MAAED,GAAW,CAAC,GACtJ,MAAM2I,EAAkB,CAAE,CAACD,GAAYjK,GACnCuB,IACA2I,EAAgBC,OAAS5I,GAC7B,MAAM6I,GAAS,QAAwB5I,EAAMF,GAIzC+I,MAAMC,QAAQF,KACdF,EAAgBE,OAASA,GACzB,IAAYtK,OACZ,IAAiByK,QAErB,MAAMnK,EAAYU,EAAQ0J,QAAQN,EAAiB,CAC/ChI,QACAZ,WACA8I,OAASC,MAAMC,QAAQF,GAAmB,SAATA,EACjCK,KAAM,OACNC,WAAYzI,EAAS,EACrB0I,UAA0B,YAAfjG,EAA2B,YAAc,WAOxD,OALI,IAAY5E,OACZM,EAAUwK,SAASC,SAAQ,KACvB,IAAiBN,OAAO,IAGzBnK,CACX,qCChCA,MAAM0K,EAAahL,GAAoB,OAAVA,EAC7B,SAASiL,EAAiB/K,GAAW,OAAEiC,EAAM,WAAEyC,EAAa,QAAUxD,GAClE,MAAMD,EAAoBjB,EAAUgL,OAAOF,GACrCG,EAAQhJ,GAAyB,SAAfyC,GAAyBzC,EAAS,GAAM,EAC1D,EACAhB,EAAkB2B,OAAS,EACjC,OAAQqI,QAA2BvI,IAAlBxB,EAEXA,EADAD,EAAkBgK,EAE5B,qCCNA,MAAMC,GAA8B,gBAAK,IAAMnE,OAAOoE,eAAeC,KAAKC,QAAQC,UAAW,2ECA7F,SAASpF,GAAQ,UAAElG,EAAS,SAAEsF,EAAW,EAAG,MAAEiG,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAE5D,EAAG,IAAEI,EAAG,UAAEyD,EAAY,GAAG,UAAEC,IAC/J,MAAMC,EAAS9L,EAAU,GACnBoC,EAAQ,CACVC,MAAM,EACNvC,MAAOgM,GAGLC,EAAmBC,QACTtJ,IAARqF,EACOI,OACCzF,IAARyF,GAEGL,KAAKmE,IAAIlE,EAAMiE,GAAKlE,KAAKmE,IAAI9D,EAAM6D,GAD/BjE,EAC0CI,EAEzD,IAAI+D,EAAYX,EAAQjG,EACxB,MAAM6G,EAAQL,EAASI,EACjBE,OAA0B1J,IAAjBiJ,EAA6BQ,EAAQR,EAAaQ,GAK7DC,IAAWD,IACXD,EAAYE,EAASN,GACzB,MAAMO,EAAa9J,IAAO2J,EAAYpE,KAAKwE,KAAK/J,EAAIiJ,GAC9Ce,EAAchK,GAAM6J,EAASC,EAAU9J,GACvCiK,EAAiBjK,IACnB,MAAMkK,EAAQJ,EAAU9J,GAClBmK,EAASH,EAAWhK,GAC1BH,EAAMC,KAAOyF,KAAKmE,IAAIQ,IAAUb,EAChCxJ,EAAMtC,MAAQsC,EAAMC,KAAO+J,EAASM,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsBtK,IAjCN,IAACyJ,KAkCA5J,EAAMtC,WAlCS4C,IAARqF,GAAqBiE,EAAIjE,QAAiBrF,IAARyF,GAAqB6D,EAAI7D,KAoCrFwE,EAAsBpK,EACtBqK,GAAW,OAAO,CACd5M,UAAW,CAACoC,EAAMtC,MAAOiM,EAAgB3J,EAAMtC,QAC/CwF,UAAU,OAAsBiH,EAAYhK,EAAGH,EAAMtC,OACrD6E,QAAS8G,EACTqB,UAAWpB,EACXE,YACAC,cACF,EAGN,OADAgB,EAAmB,GACZ,CACHtF,mBAAoB,KACpBM,KAAOtF,IAOH,IAAIwK,GAAkB,EAUtB,OATKH,QAAoClK,IAAxBiK,IACbI,GAAkB,EAClBP,EAAcjK,GACdsK,EAAmBtK,SAMKG,IAAxBiK,GAAqCpK,GAAKoK,EACnCC,EAAS/E,KAAKtF,EAAIoK,KAGxBI,GAAmBP,EAAcjK,GAC3BH,EACX,EAGZ,gHC1EA,SAASpC,GAAU,SAAEsB,EAAW,IAAKtB,UAAWgN,EAAc,MAAEzL,EAAK,KAAEC,EAAO,cAK1E,MAAMyL,GAAkB,OAAczL,GAChCA,EAAK0L,IAAI,MACT,OAA2B1L,GAK3BY,EAAQ,CACVC,MAAM,EACNvC,MAAOkN,EAAe,IAKpBG,GAAgB,OAGtB5L,GAASA,EAAMqB,SAAWoK,EAAepK,OACnCrB,GACA,OAAcyL,GAAiB1L,GAC/B8L,GAAoB,OAAYD,EAAeH,EAAgB,CACjExL,KAAM6I,MAAMC,QAAQ2C,GACdA,GA9BSI,EA+BKL,EA/BG5C,EA+Ba6C,EA9BjCI,EAAOH,KAAI,IAAM9C,GAAU,OAAWkD,OAAO,EAAGD,EAAOzK,OAAS,MAD3E,IAAuByK,EAAQjD,EAiC3B,MAAO,CACH7C,mBAAoBjG,EACpBuG,KAAOtF,IACHH,EAAMtC,MAAQsN,EAAkB7K,GAChCH,EAAMC,KAAOE,GAAKjB,EACXc,GAGnB,qCChDA,MAAMmL,EAAiB,CAEnBT,UAAW,IACXnI,QAAS,GACT6I,KAAM,EACNlI,SAAU,EAEVhE,SAAU,IACVmM,OAAQ,GACRC,eAAgB,GAEhB7B,UAAW,CACP8B,SAAU,IACVC,QAAS,GAEbhC,UAAW,CACP+B,SAAU,KACVC,QAAS,IAGbC,YAAa,IACbC,YAAa,GACbC,WAAY,IACZC,WAAY,kGClBhB,MAAMC,EAAU,KAChB,SAASC,GAAW,SAAE5M,EAAW,EAAA6M,EAAe7M,SAAQ,OAAEmM,EAAS,EAAAU,EAAeV,OAAM,SAAEnI,EAAW,EAAA6I,EAAe7I,SAAQ,KAAEkI,EAAO,EAAAW,EAAeX,OAChJ,IAAIY,EACAC,GACJ,OAAQ/M,IAAY,OAAsB,EAAA6M,EAAeL,aAAc,8CACvE,IAAIQ,EAAe,EAAIb,EAIvBa,GAAe,OAAM,EAAAH,EAAeJ,WAAY,EAAAI,EAAeH,WAAYM,GAC3EhN,GAAW,OAAM,EAAA6M,EAAeN,YAAa,EAAAM,EAAeL,aAAa,OAAsBxM,IAC3FgN,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClC7B,EAAQ+B,EAAmBlN,EAC3BmN,EAAID,EAAmBlJ,EACvBoJ,EAAIC,EAAgBJ,EAAcD,GAClCM,EAAI9G,KAAKwE,KAAKG,GACpB,OAAOwB,EAAWQ,EAAIC,EAAKE,CAAC,EAEhCP,EAAcE,IACV,MACM9B,EADmB8B,EAAeD,EACPhN,EAC3BjD,EAAIoO,EAAQnH,EAAWA,EACvBuJ,EAAI/G,KAAKgH,IAAIR,EAAc,GAAKxG,KAAKgH,IAAIP,EAAc,GAAKjN,EAC5DyN,EAAIjH,KAAKwE,KAAKG,GACduC,EAAIL,EAAgB7G,KAAKgH,IAAIP,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBN,EAAU,GAAK,EAAI,KACzC5P,EAAIwQ,GAAKE,GAAMC,CAAC,IAOvCZ,EAAYG,GACEzG,KAAKwE,KAAKiC,EAAejN,KACxBiN,EAAejJ,GAAYhE,EAAW,GACzC2M,EAEZI,EAAcE,GACAzG,KAAKwE,KAAKiC,EAAejN,IACIA,EAAWA,GAAvCgE,EAAWiJ,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYY,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAInF,EAAI,EAAGA,EAAIqF,EAAgBrF,IAChCoF,GAAkBd,EAASc,GAAUb,EAAWa,GAEpD,OAAOA,CACX,CAzByBE,CAAgBhB,EAAUC,EAD1B,EAAI/M,GAGzB,GADAA,GAAW,OAAsBA,GAC7B+N,MAAMd,GACN,MAAO,CACHzB,UAAW,EAAAqB,EAAerB,UAC1BnI,QAAS,EAAAwJ,EAAexJ,QACxBrD,YAGH,CACD,MAAMwL,EAAYhF,KAAKgH,IAAIP,EAAc,GAAKf,EAC9C,MAAO,CACHV,YACAnI,QAAwB,EAAf2J,EAAmBxG,KAAKwH,KAAK9B,EAAOV,GAC7CxL,WAER,CACJ,CACA,MAAM6N,EAAiB,GAQvB,SAASR,EAAgBJ,EAAcD,GACnC,OAAOC,EAAezG,KAAKwH,KAAK,EAAIhB,EAAeA,EACvD,4HC1EA,MAAMiB,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,EAAaxP,EAASyP,GAC3B,OAAOA,EAAKC,MAAMrR,QAAyBoE,IAAjBzC,EAAQ3B,IACtC,CAuCA,SAAS8H,EAAOwJ,EAA0B,EAAAzB,EAAeT,eAAgBD,EAAS,EAAAU,EAAeV,QAC7F,MAAMxN,EAA6C,iBAA5B2P,EACjB,CACElC,eAAgBkC,EAChB5P,UAAW,CAAC,EAAG,GACfyN,UAEFmC,EACN,IAAI,UAAE/D,EAAS,UAAED,GAAc3L,EAC/B,MAAM6L,EAAS7L,EAAQD,UAAU,GAC3BoM,EAASnM,EAAQD,UAAUC,EAAQD,UAAU4C,OAAS,GAKtDR,EAAQ,CAAEC,MAAM,EAAOvC,MAAOgM,IAC9B,UAAEgB,EAAS,QAAEnI,EAAO,KAAE6I,EAAI,SAAElM,EAAQ,SAAEgE,EAAQ,uBAAEuK,GAtD1D,SAA0B5P,GACtB,IAAI6P,EAAgB,CAChBxK,SAAU,EAAA6I,EAAe7I,SACzBwH,UAAW,EAAAqB,EAAerB,UAC1BnI,QAAS,EAAAwJ,EAAexJ,QACxB6I,KAAM,EAAAW,EAAeX,KACrBqC,wBAAwB,KACrB5P,GAGP,IAAKwP,EAAaxP,EAASuP,IACvBC,EAAaxP,EAASsP,GACtB,GAAItP,EAAQyN,eAAgB,CACxB,MAAMA,EAAiBzN,EAAQyN,eACzBqC,EAAQ,EAAIjI,KAAKkI,IAAwB,IAAjBtC,GACxBZ,EAAYiD,EAAOA,EACnBpL,EAAU,GACZ,OAAM,IAAM,EAAG,GAAK1E,EAAQwN,QAAU,IACtC3F,KAAKwH,KAAKxC,GACdgD,EAAgB,IACTA,EACHtC,KAAM,EAAAW,EAAeX,KACrBV,YACAnI,UAER,KACK,CACD,MAAMsL,GAAU,OAAWhQ,GAC3B6P,EAAgB,IACTA,KACAG,EACHzC,KAAM,EAAAW,EAAeX,MAEzBsC,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFI,CAAiB,IAC5FjQ,EACHqF,WAAW,OAAsBrF,EAAQqF,UAAY,KAEnD6K,EAAkB7K,GAAY,EAC9BgJ,EAAe3J,GAAW,EAAImD,KAAKwH,KAAKxC,EAAYU,IACpD4C,EAAehE,EAASN,EACxBuE,GAAsB,OAAsBvI,KAAKwH,KAAKxC,EAAYU,IAQlE8C,EAAkBxI,KAAKmE,IAAImE,GAAgB,EAOjD,IAAIG,EACJ,GAPA1E,IAAcA,EAAYyE,EACpB,EAAAnC,EAAetC,UAAU8B,SACzB,EAAAQ,EAAetC,UAAU+B,SAC/BhC,IAAcA,EAAY0E,EACpB,EAAAnC,EAAevC,UAAU+B,SACzB,EAAAQ,EAAevC,UAAUgC,SAE3BU,EAAe,EAAG,CAClB,MAAMkC,GAAc,OAAgBH,EAAqB/B,GAEzDiC,EAAiBhO,IACb,MAAM6L,EAAWtG,KAAKwE,KAAKgC,EAAe+B,EAAsB9N,GAChE,OAAQ6J,EACJgC,IACO+B,EACC7B,EAAe+B,EAAsBD,GACrCI,EACA1I,KAAK2I,IAAID,EAAcjO,GACvB6N,EAAetI,KAAK4I,IAAIF,EAAcjO,GAAI,CAE9D,MACK,GAAqB,IAAjB+L,EAELiC,EAAiBhO,GAAM6J,EACnBtE,KAAKwE,KAAK+D,EAAsB9N,IAC3B6N,GACID,EAAkBE,EAAsBD,GAAgB7N,OAEpE,CAED,MAAMoO,EAAoBN,EAAsBvI,KAAKwH,KAAKhB,EAAeA,EAAe,GACxFiC,EAAiBhO,IACb,MAAM6L,EAAWtG,KAAKwE,KAAKgC,EAAe+B,EAAsB9N,GAE1DqO,EAAW9I,KAAKC,IAAI4I,EAAoBpO,EAAG,KACjD,OAAQ6J,EACHgC,IACK+B,EACE7B,EAAe+B,EAAsBD,GACrCtI,KAAK+I,KAAKD,GACVD,EACIP,EACAtI,KAAKgJ,KAAKF,IAClBD,CAAkB,CAElC,CACA,MAAMtJ,EAAY,CACdE,mBAAoBsI,GAAyBvO,GAAmB,KAChEuG,KAAOtF,IACH,MAAMX,EAAU2O,EAAchO,GAC9B,GAAKsN,EAmBDzN,EAAMC,KAAOE,GAAKjB,MAnBO,CACzB,IAAIyP,EAAkB,EAMlBzC,EAAe,IACfyC,EACU,IAANxO,GACM,OAAsB4N,IACtB,OAAsBI,EAAehO,EAAGX,IAEtD,MAAMoP,EAA2BlJ,KAAKmE,IAAI8E,IAAoBlF,EACxDoF,EAA+BnJ,KAAKmE,IAAIG,EAASxK,IAAYgK,EACnExJ,EAAMC,KACF2O,GAA4BC,CACpC,CAKA,OADA7O,EAAMtC,MAAQsC,EAAMC,KAAO+J,EAASxK,EAC7BQ,CAAK,EAEhB8O,SAAU,KACN,MAAM3J,EAAqBO,KAAKC,KAAI,OAAsBV,GAAY,KAChE+C,GAAS,QAAsB9B,GAAajB,EAAUQ,KAAKN,EAAqBe,GAAUxI,OAAOyH,EAAoB,IAC3H,OAAOA,EAAqB,MAAQ6C,CAAM,GAGlD,OAAO/C,CACX,oDCnKA,MAAM8J,EAAyB,EAC/B,SAASC,EAAsBC,EAAc9O,EAAGX,GAC5C,MAAM0P,EAAQxJ,KAAKK,IAAI5F,EAAI4O,EAAwB,GACnD,OAAO,OAAkBvP,EAAUyP,EAAaC,GAAQ/O,EAAI+O,EAChE,2KCOA,MAAMC,EAAqB,CAAC3Q,EAAMd,EAAOsM,EAAQoF,EAAa,CAAC,EAAG1Q,EAAS2Q,IAAe5P,IACtF,MAAM6P,GAAkB,OAAmBF,EAAY5Q,IAAS,CAAC,EAM3DsB,EAAQwP,EAAgBxP,OAASsP,EAAWtP,OAAS,EAK3D,IAAI,QAAEkG,EAAU,GAAMoJ,EACtBpJ,IAAoB,OAAsBlG,GAC1C,IAAIjC,EAAU,CACVD,UAAWqK,MAAMC,QAAQ8B,GAAUA,EAAS,CAAC,KAAMA,GACnD5K,KAAM,UACN8D,SAAUxF,EAAM6R,iBACbD,EACHxP,OAAQkG,EACRtG,SAAWkK,IACPlM,EAAMkD,IAAIgJ,GACV0F,EAAgB5P,UAAY4P,EAAgB5P,SAASkK,EAAE,EAE3DnK,WAAY,KACRA,IACA6P,EAAgB7P,YAAc6P,EAAgB7P,YAAY,EAE9DjB,OACAC,YAAaf,EACbgB,QAAS2Q,OAAY/O,EAAY5B,IAMhC,OAAoB4Q,KACrBzR,EAAU,IACHA,MACA,OAAqBW,EAAMX,KAQlCA,EAAQqB,WACRrB,EAAQqB,UAAW,OAAsBrB,EAAQqB,WAEjDrB,EAAQwE,cACRxE,EAAQwE,aAAc,OAAsBxE,EAAQwE,mBAEnC/B,IAAjBzC,EAAQ2R,OACR3R,EAAQD,UAAU,GAAKC,EAAQ2R,MAEnC,IAAIC,GAAa,EAwBjB,KAvBqB,IAAjB5R,EAAQwB,MACc,IAArBxB,EAAQqB,WAAmBrB,EAAQwE,eACpCxE,EAAQqB,SAAW,EACG,IAAlBrB,EAAQiC,QACR2P,GAAa,KAGjB,IAAsBjQ,SACtB,IAAmBkQ,kBACnBD,GAAa,EACb5R,EAAQqB,SAAW,EACnBrB,EAAQiC,MAAQ,GAMpBjC,EAAQ6F,cAAgB4L,EAAgBjQ,OAASiQ,EAAgBlQ,KAM7DqQ,IAAeJ,QAA6B/O,IAAhB5C,EAAMiS,MAAqB,CACvD,MAAM7Q,GAAgB,OAAiBjB,EAAQD,UAAW0R,GAC1D,QAAsBhP,IAAlBxB,EAOA,OANA,KAAMkI,QAAO,KACTnJ,EAAQ6B,SAASZ,GACjBjB,EAAQ4B,YAAY,IAIjB,IAAI,IAAsB,GAEzC,CAMA,OAAK4P,GAAa,IAAqBjN,SAASvE,GACrC,IAAI,IAAqBA,GAGzB,IAAI,IAAoBA,EACnC,4HCpGJ,SAAS+R,GAAqB,cAAEC,EAAa,eAAEC,GAAkB5T,GAC7D,MAAM6T,EAAcF,EAAc9G,eAAe7M,KAAgC,IAAxB4T,EAAe5T,GAExE,OADA4T,EAAe5T,IAAO,EACf6T,CACX,CACA,SAASC,EAAcC,EAAeC,GAAqB,MAAEpQ,EAAQ,EAAC,mBAAEqQ,EAAkB,KAAE9Q,GAAS,CAAC,GAClG,IAAIwH,EACJ,IAAI,WAAEuI,EAAaa,EAAcG,uBAAsB,cAAEC,KAAkBrG,GAAWkG,EAClFC,IACAf,EAAae,GACjB,MAAMG,EAAa,GACbC,EAAqBlR,GACvB4Q,EAAcO,gBACdP,EAAcO,eAAeC,WAAWpR,GAC5C,IAAK,MAAMnD,KAAO8N,EAAQ,CACtB,MAAMtM,EAAQuS,EAAcS,SAASxU,EAAgD,QAA1C2K,EAAKoJ,EAAcU,aAAazU,UAAyB,IAAP2K,EAAgBA,EAAK,MAC5G+J,EAAc5G,EAAO9N,GAC3B,QAAoBoE,IAAhBsQ,GACCL,GACGX,EAAqBW,EAAoBrU,GAC7C,SAEJ,MAAMoT,EAAkB,CACpBxP,YACG,OAAmBsP,GAAc,CAAC,EAAGlT,IAM5C,IAAImT,GAAY,EAChB,GAAIwB,OAAOC,uBAAwB,CAC/B,MAAMC,GAAW,OAAqBd,GACtC,GAAIc,EAAU,CACV,MAAMzR,EAAYuR,OAAOC,uBAAuBC,EAAU7U,EAAK,MAC7C,OAAdoD,IACAgQ,EAAgBhQ,UAAYA,EAC5B+P,GAAY,EAEpB,CACJ,EACA,OAAqBY,EAAe/T,GACpCwB,EAAMK,OAAM,OAAmB7B,EAAKwB,EAAOkT,EAAaX,EAAce,oBAAsB,IAAerO,IAAIzG,GACzG,CAAEmD,MAAM,GACRiQ,EAAiBW,EAAeZ,IACtC,MAAMrR,EAAYN,EAAMM,UACpBA,GACAsS,EAAWjQ,KAAKrC,EAExB,CAQA,OAPIqS,GACA1M,QAAQsN,IAAIX,GAAYjN,MAAK,KACzB,KAAM2D,QAAO,KACTqJ,IAAiB,OAAUJ,EAAeI,EAAc,GAC1D,IAGHC,CACX,iECtEA,SAASY,EAAejB,EAAekB,EAAStT,EAAU,CAAC,GACvD,IAAIgJ,EACJ,MAAM9F,GAAW,OAAekP,EAAekB,EAA0B,SAAjBtT,EAAQwB,KACjB,QAAxCwH,EAAKoJ,EAAcmB,uBAAoC,IAAPvK,OAAgB,EAASA,EAAGwK,YAC7E/Q,GACN,IAAI,WAAE8O,EAAaa,EAAcG,wBAA0B,CAAC,GAAMrP,GAAY,CAAC,EAC3ElD,EAAQsS,qBACRf,EAAavR,EAAQsS,oBAMzB,MAAMmB,EAAevQ,EACf,IAAM4C,QAAQsN,KAAI,OAAchB,EAAelP,EAAUlD,IACzD,IAAM8F,QAAQL,UAKdiO,EAAqBtB,EAAcuB,iBAAmBvB,EAAcuB,gBAAgBC,KACpF,CAACC,EAAe,KACd,MAAM,cAAEC,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBzC,EAClE,OAkBZ,SAAyBa,EAAekB,EAASQ,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGhU,GAC3G,MAAMyS,EAAa,GACbwB,GAAsB7B,EAAcuB,gBAAgBC,KAAO,GAAKG,EAChEG,EAA+C,IAArBF,EAC1B,CAACnK,EAAI,IAAMA,EAAIkK,EACf,CAAClK,EAAI,IAAMoK,EAAqBpK,EAAIkK,EAU1C,OATA3J,MAAMuH,KAAKS,EAAcuB,iBACpBQ,KAAKC,GACLC,SAAQ,CAACC,EAAOzK,KACjByK,EAAMC,OAAO,iBAAkBjB,GAC/Bb,EAAWjQ,KAAK6Q,EAAeiB,EAAOhB,EAAS,IACxCtT,EACHiC,MAAO6R,EAAgBI,EAAwBrK,KAChDrE,MAAK,IAAM8O,EAAMC,OAAO,oBAAqBjB,KAAU,IAEvDxN,QAAQsN,IAAIX,EACvB,CAlCmB+B,CAAgBpC,EAAekB,EAASQ,EAAgBD,EAAcE,EAAiBC,EAAkBhU,EAAQ,EAE1H,IAAM8F,QAAQL,WAKd,KAAEgP,GAASlD,EACjB,GAAIkD,EAAM,CACN,MAAOC,EAAOC,GAAiB,mBAATF,EAChB,CAAChB,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOiB,IAAQlP,MAAK,IAAMmP,KAC9B,CAEI,OAAO7O,QAAQsN,IAAI,CAACK,IAAgBC,EAAmB1T,EAAQiC,QAEvE,CAkBA,SAASmS,EAAgB5F,EAAGC,GACxB,OAAOD,EAAEoG,iBAAiBnG,EAC9B,6EC3DA,SAASoG,EAAqBzC,EAAe0C,EAAY9U,EAAU,CAAC,GAEhE,IAAIG,EACJ,GAFAiS,EAAcmC,OAAO,iBAAkBO,GAEnC1K,MAAMC,QAAQyK,GAAa,CAC3B,MAAMrC,EAAaqC,EAAW7H,KAAKqG,IAAY,OAAelB,EAAekB,EAAStT,KACtFG,EAAY2F,QAAQsN,IAAIX,EAC5B,MACK,GAA0B,iBAAfqC,EACZ3U,GAAY,OAAeiS,EAAe0C,EAAY9U,OAErD,CACD,MAAM+U,EAA2C,mBAAfD,GAC5B,OAAe1C,EAAe0C,EAAY9U,EAAQwT,QAClDsB,EACN3U,EAAY2F,QAAQsN,KAAI,OAAchB,EAAe2C,EAAoB/U,GAC7E,CACA,OAAOG,EAAUqF,MAAK,KAClB4M,EAAcmC,OAAO,oBAAqBO,EAAW,GAE7D,qCCrBA,MACME,EAA+B,SAAU,cADjB,oECA9B,SAASC,EAAqB7C,GAC1B,OAAOA,EAAc8C,MAAM,IAC/B,oDCFA,MAAMC,EAAoB,CACtB3T,KAAM,SACNqL,UAAW,IACXnI,QAAS,GACTkH,UAAW,IAQTwJ,EAAsB,CACxB5T,KAAM,YACNH,SAAU,IAMRE,EAAO,CACTC,KAAM,YACND,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBF,SAAU,IAERkR,EAAuB,CAAC8C,GAAYtV,eAClCA,EAAU4C,OAAS,EACZyS,EAEF,IAAetQ,IAAIuQ,GACjBA,EAASC,WAAW,SAxBQ,CACvC9T,KAAM,SACNqL,UAAW,IACXnI,QAAoB,IAsBa3E,EAAU,GAtBnB,EAAI8H,KAAKwH,KAAK,KAAO,GAC7CzD,UAAW,IAsBDuJ,EAEH5T,qDCzBX,MAAMgU,EAAe,CAAC1V,EAAOc,IAEZ,WAATA,MAKiB,iBAAVd,IAAsBuK,MAAMC,QAAQxK,OAE1B,iBAAVA,IACN,IAAQ2V,KAAK3V,IAAoB,MAAVA,GACvBA,EAAMyV,WAAW,4BCtB1B,SAASG,EAAoB1J,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAE7L,KACjB,qDCJA,MAAMwV,EAAqB3J,GAChB3B,MAAMC,QAAQ0B,sDCCzB,SAAS4J,EAAO9V,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,IACY,SAAVA,GAA8B,MAAVA,IAAiB,OAAkBA,GAKtE,oBCPA,SAAS+V,GAAoB,KAAEnB,EAAMxS,MAAO4T,EAAM,cAAE/B,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAEhS,EAAM,WAAEyC,EAAU,YAAED,EAAW,KAAEmN,EAAI,QAAExJ,KAAYoJ,IACrJ,QAASzK,OAAO2I,KAAK8B,GAAY5O,MACrC,6FCGA,MAAMmT,wBAAwB,YAC1B,uBAAAC,CAAwBC,GACpB,MAAMnV,EAAUC,KAAKoU,MAAMe,SAAStU,QACpC,GAAId,GAAWmV,EAAUE,YAAcpV,KAAKoU,MAAMgB,UAAW,CACzD,MAAMC,EAAStV,EAAQuV,aACjBC,EAAcF,aAAkBxR,aAAcwR,EAAOG,aAAmB,EACxE1C,EAAO9S,KAAKoU,MAAMqB,QAAQ5U,QAChCiS,EAAK5U,OAAS6B,EAAQ2V,cAAgB,EACtC5C,EAAK7U,MAAQ8B,EAAQyV,aAAe,EACpC1C,EAAK6C,IAAM5V,EAAQ6V,UACnB9C,EAAK+C,KAAO9V,EAAQ+V,WACpBhD,EAAKiD,MAAQR,EAAczC,EAAK7U,MAAQ6U,EAAK+C,IACjD,CACA,OAAO,IACX,CAIA,kBAAAG,GAAuB,CACvB,MAAAC,GACI,OAAOjW,KAAKoU,MAAM8B,QACtB,EAEJ,SAASC,GAAS,SAAED,EAAQ,UAAEd,EAAS,QAAEgB,IACrC,MAAMC,GAAK,IAAAC,SACLC,GAAM,IAAAC,QAAO,MACb1D,GAAO,IAAA0D,QAAO,CAChBvY,MAAO,EACPC,OAAQ,EACRyX,IAAK,EACLE,KAAM,EACNE,MAAO,KAEL,MAAEU,IAAU,IAAAC,YAAW,KAmC7B,OAzBA,IAAAC,qBAAmB,KACf,MAAM,MAAE1Y,EAAK,OAAEC,EAAM,IAAEyX,EAAG,KAAEE,EAAI,MAAEE,GAAUjD,EAAKjS,QACjD,GAAIuU,IAAcmB,EAAI1V,UAAY5C,IAAUC,EACxC,OACJ,MAAMC,EAAgB,SAAZiY,EAAqB,SAASP,IAAS,UAAUE,IAC3DQ,EAAI1V,QAAQ+V,QAAQC,YAAcR,EAClC,MAAMS,EAAQC,SAASC,cAAc,SAerC,OAdIP,IACAK,EAAML,MAAQA,GAClBM,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCACFf,yEAEZpY,wCACCC,gCACRC,qCACKwX,0CAIJ,KACHoB,SAASE,KAAKI,YAAYP,EAAM,CACnC,GACF,CAAC1B,KACI,IAAAkC,KAAItC,gBAAiB,CAAEI,UAAWA,EAAWD,SAAUoB,EAAKd,QAAS3C,EAAMoD,SAAU,eAAmBA,EAAU,CAAEK,SAChI,oGCvEA,MAAMgB,EAAgB,EAAGrB,WAAUsB,UAASpC,YAAWqC,iBAAgB/E,SAAQgF,wBAAuBC,OAAMvB,cACxG,MAAMwB,GAAmB,OAAYC,GAC/BxB,GAAK,IAAAC,SACLwB,GAAyB,IAAAC,cAAaC,IACxCJ,EAAiB3V,IAAI+V,GAAS,GAC9B,IAAK,MAAMC,KAAcL,EAAiBtL,SACtC,IAAK2L,EACD,OAERR,GAAkBA,GAAgB,GACnC,CAACG,EAAkBH,IAChBS,GAAU,IAAAC,UAAQ,KAAM,CAC1B9B,KACAmB,UACApC,YACA1C,SACA+E,eAAgBK,EAChBM,SAAWJ,IACPJ,EAAiB3V,IAAI+V,GAAS,GACvB,IAAMJ,EAAiBS,OAAOL,OAQ7CN,EACM,CAAC3Q,KAAKuR,SAAUR,GAChB,CAAC1C,EAAW0C,IAiBlB,OAhBA,IAAAK,UAAQ,KACJP,EAAiBrE,SAAQ,CAACgF,EAAGhb,IAAQqa,EAAiB3V,IAAI1E,GAAK,IAAO,GACvE,CAAC6X,IAKJ,aAAgB,MACXA,IACIwC,EAAiB9E,MAClB2E,GACAA,GAAgB,GACrB,CAACrC,IACS,cAATuC,IACAzB,GAAY,IAAAoB,KAAI,IAAU,CAAElC,UAAWA,EAAWgB,QAASA,EAASF,SAAUA,MAE1E,IAAAoB,KAAI,IAAgBkB,SAAU,CAAEzZ,MAAOmZ,EAAShC,SAAUA,GAAY,EAElF,SAAS2B,IACL,OAAO,IAAIY,GACf,wICfA,MAAMC,EAAkB,EAAGxC,WAAUxD,SAAQ8E,WAAU,EAAMC,iBAAgBC,yBAAwB,EAAMC,OAAO,OAAQgB,aAAY,EAAOvC,UAAU,WACnJ,MAAOwC,EAAiBC,IAAgB,QAAYF,GAK9CG,GAAkB,IAAAX,UAAQ,KAAM,OAAajC,IAAW,CAACA,IAKzD6C,EAAcJ,IAAcC,EAAkB,GAAKE,EAAgB3M,IAAI,KAIvE6M,GAAkB,IAAAxC,SAAO,GAMzByC,GAAyB,IAAAzC,QAAOsC,GAIhCI,GAAe,QAAY,IAAM,IAAIT,OAKpCU,EAAgBC,IAAqB,IAAAC,UAASP,IAC9CQ,EAAkBC,IAAuB,IAAAF,UAASP,IACzD,QAA0B,KACtBE,EAAgBnY,SAAU,EAC1BoY,EAAuBpY,QAAUiY,EAIjC,IAAK,IAAI/P,EAAI,EAAGA,EAAIuQ,EAAiBzX,OAAQkH,IAAK,CAC9C,MAAMxL,GAAM,OAAY+b,EAAiBvQ,IACpCgQ,EAAYS,SAASjc,GAMtB2b,EAAab,OAAO9a,IALU,IAA1B2b,EAAalI,IAAIzT,IACjB2b,EAAajX,IAAI1E,GAAK,EAMlC,IACD,CAAC+b,EAAkBP,EAAYlX,OAAQkX,EAAYU,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIZ,IAAoBK,EAAgB,CACpC,IAAIQ,EAAe,IAAIb,GAKvB,IAAK,IAAI/P,EAAI,EAAGA,EAAIuQ,EAAiBzX,OAAQkH,IAAK,CAC9C,MAAMyK,EAAQ8F,EAAiBvQ,GACzBxL,GAAM,OAAYiW,GACnBuF,EAAYS,SAASjc,KACtBoc,EAAapN,OAAOxD,EAAG,EAAGyK,GAC1BkG,EAAgBhY,KAAK8R,GAE7B,CAcA,MATa,SAATmE,GAAmB+B,EAAgB7X,SACnC8X,EAAeD,GAEnBH,GAAoB,OAAaI,IACjCP,EAAkBN,GAKX,IACX,CAWA,MAAM,YAAEc,IAAgB,IAAAlD,YAAW,EAAAmD,GACnC,OAAQ,IAAAvC,KAAI,EAAAwC,SAAU,CAAE5D,SAAUoD,EAAiBnN,KAAKqH,IAChD,MAAMjW,GAAM,OAAYiW,GAClB4B,IAAYuD,IAAcC,KAE1BE,IAAoBQ,GAClBP,EAAYS,SAASjc,IAoB7B,OAAQ,IAAA+Z,KAAI,IAAe,CAAElC,UAAWA,EAAWoC,UAAUwB,EAAgBnY,UAAW2W,SAC9E7V,EACO+Q,OAAQA,EAAQgF,sBAAuBA,EAAuBC,KAAMA,EAAMF,eAAgBrC,OAAYzT,EArBxG,KACX,IAAIuX,EAAalV,IAAIzG,GAIjB,OAHA2b,EAAajX,IAAI1E,GAAK,GAK1B,IAAIwc,GAAsB,EAC1Bb,EAAa3F,SAASyG,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACAH,SAA0DA,IAC1DL,EAAoBN,EAAuBpY,SAC3C8X,IAAcE,SAA4DA,KAC1EpB,GAAkBA,IACtB,EAIuIrB,QAASA,EAASF,SAAU1C,GAASjW,EAAK,KACnL,kECxId,SAAS0c,EAAYC,GAAY,GAC7B,MAAMhC,GAAU,IAAAxB,YAAW,KAC3B,GAAgB,OAAZwB,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAE9C,EAAS,eAAEqC,EAAc,SAAEW,GAAaF,EAG1C7B,GAAK,IAAAC,UACX,IAAA6D,YAAU,KACN,GAAID,EACA,OAAO9B,EAAS/B,EACpB,GACD,CAAC6D,IACJ,MAAMrB,GAAe,IAAAd,cAAY,IAAMmC,GAAazC,GAAkBA,EAAepB,IAAK,CAACA,EAAIoB,EAAgByC,IAC/G,OAAQ9E,GAAaqC,EAAiB,EAAC,EAAOoB,GAAgB,EAAC,EACnE,6DCvCA,MAAMuB,EAAe5G,GAAUA,EAAMjW,KAAO,GAC5C,SAAS8c,EAAanE,GAClB,MAAMoE,EAAW,GAMjB,OAJA,EAAAC,SAAShH,QAAQ2C,GAAW1C,KACpB,IAAAgH,gBAAehH,IACf8G,EAAS5Y,KAAK8R,EAAM,IAErB8G,CACX,qCCRA,MAAMG,GAAqB,YAAAC,eAAc,CAAC,sCCA1C,MAAMC,GAAc,YAAAD,eAAc,CAAEE,QAAQ,uCCG5C,MAAMC,GAAsB,YAAAH,eAAc,CACtCI,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,qFCLnB,SAASC,EAAuB9G,GAC5B,MAAM,QAAEoD,EAAO,QAAE/N,IAAY,OAAuB2K,GAAO,IAAAsC,YAAW,MACtE,OAAO,IAAAyB,UAAQ,KAAM,CAAGX,UAAS/N,aAAY,CAAC0R,EAA0B3D,GAAU2D,EAA0B1R,IAChH,CACA,SAAS0R,EAA0BC,GAC/B,OAAO9R,MAAMC,QAAQ6R,GAAQA,EAAK3B,KAAK,KAAO2B,CAClD,qCCPA,MAAMC,GAAgC,YAAAX,eAAc,CAAC,kECArD,SAASY,EAAuBlH,EAAO8D,GACnC,IAAI,OAAsB9D,GAAQ,CAC9B,MAAM,QAAEoD,EAAO,QAAE/N,GAAY2K,EAC7B,MAAO,CACHoD,SAAqB,IAAZA,IAAqB,OAAeA,GACvCA,OACA7V,EACN8H,SAAS,OAAeA,GAAWA,OAAU9H,EAErD,CACA,OAAyB,IAAlByS,EAAMmH,QAAoBrD,EAAU,CAAC,CAChD,qCCRA,MAAMsD,GACU,YAAAd,eAAc,yCCD9B,MAAMe,GAA2B,YAAAf,eAAc,CAAC,sDCJhD,MAAMnb,EAAcwb,IAAOA,GAAK,GAAK,EAAI,IAAM,QAAOA,GAAK,IAAO,EAAIhU,KAAKgH,IAAI,GAAI,IAAMgN,EAAI,kGCE7F,MAAMW,GAAwB,OAAY,IAAM,KAAM,IAAM,KACtDC,GAAuB,OAAcD,GACrClc,GAA0B,OAAamc,oFCH7C,MAAMC,EAAUb,GAAM,EAAIhU,KAAK2I,IAAI3I,KAAK8U,KAAKd,IACvCe,GAAU,OAAcF,GACxBnc,GAAY,OAAamc,sDCgB/B,MAAMG,EAAa,CAACva,EAAGwa,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMxa,GAAK,EAAMya,EAAK,EAAMD,IAAOxa,EAAI,EAAMwa,GACrGxa,EACE0a,EAAuB,KACvBC,EAA2B,GAkBjC,SAASC,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO,IACX,MAAMC,EAAYC,GArBtB,SAAyBve,EAAGwe,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACA/T,EAAI,EACR,GACI+T,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWd,EAAWe,EAAUT,EAAKE,GAAOpe,EACxC0e,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZ/V,KAAKmE,IAAI2R,GAAYX,KACxBnT,EAAIoT,GACV,OAAOW,CACX,CAK6BC,CAAgBL,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQ/a,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIua,EAAWU,EAASjb,GAAI8a,EAAKE,EACxE,wEC/CA,MAAMQ,GAAuB,OAAY,IAAM,EAAG,EAAG,GAC/CC,GAAwB,OAAY,EAAG,EAAG,IAAM,GAChDC,GAA0B,OAAY,IAAM,EAAG,IAAM,sCCF3D,MAAMC,EAAgB9T,GAAY0R,GAAMA,GAAK,GAAM1R,EAAO,EAAI0R,GAAK,GAAK,EAAI1R,EAAO,GAAK,EAAI0R,KAAO,oCCAnG,MAAMqC,EAAiB/T,GAAY0R,GAAM,EAAI1R,EAAO,EAAI0R,sCCFxD,MAAMsC,EAAiB5c,GACZ6I,MAAMC,QAAQ9I,IAA4B,iBAAZA,EAAK,0ICQ9C,MAAM6c,EAAe,CACjBC,OAAQ,IACRP,OAAM,KACNE,UAAS,KACTD,QAAO,KACPrB,OAAM,KACNnc,UAAS,KACTqc,QAAO,KACPH,OAAM,KACNnc,UAAS,KACTkc,QAAO,KACPnc,WAAU,KAERie,EAA8BxJ,IAChC,IAAI,OAAmBA,GAAa,EAEhC,OAAgC,IAAtBA,EAAWnS,OAAc,2DACnC,MAAOrD,EAAIE,EAAID,EAAIE,GAAMqV,EACzB,OAAO,OAAYxV,EAAIE,EAAID,EAAIE,EACnC,CACK,MAA0B,iBAAfqV,IAEZ,YAAuCrS,IAA7B2b,EAAatJ,GAA2B,wBAAwBA,MACnEsJ,EAAatJ,IAEjBA,CAAU,oBClCrB,SAASyJ,EAAYpS,EAAQqS,EAAWC,EAASze,EAAU,CAAE0e,SAAS,IAElE,OADAvS,EAAOwS,iBAAiBH,EAAWC,EAASze,GACrC,IAAMmM,EAAOyS,oBAAoBJ,EAAWC,EACvD,iFCAA,SAASI,EAAgB1S,EAAQqS,EAAWC,EAASze,GACjD,OAAO,OAAYmM,EAAQqS,GAAW,OAAeC,GAAUze,EACnE,6DCFA,SAAS8e,EAAiBC,GACtB,MAAO,CACHC,MAAO,CACH/f,EAAG8f,EAAME,MACT/f,EAAG6f,EAAMG,OAGrB,CACA,MAAMC,EAAkBV,GACZM,IAAU,OAAiBA,IAAUN,EAAQM,EAAOD,EAAiBC,8ECRjF,MAAMK,EAAa,GACnB,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMtd,EAAQ,CACVqK,MAAO,EACP7E,UAAW,EACX0B,cAAc,GAEZqW,EAAmB,IAAOF,GAAe,EACzCG,EAAQ,IAAWC,QAAO,CAACC,EAAKxhB,KAClCwhB,EAAIxhB,IAAO,OAAiBqhB,EAAkBH,EAAiBlhB,OAAMoE,GAC9Dod,IACR,CAAC,IACE,KAAEC,EAAI,iBAAEC,EAAgB,OAAE5W,EAAM,UAAE6W,EAAS,OAAEjJ,EAAM,WAAEkJ,GAAeN,EACpEO,EAAe,KACjB,MAAMvY,EAAY,IAAmBwY,gBAC/Bhe,EAAMwF,UACNyY,YAAYjb,MAClBqa,GAAe,EACV,IAAmBW,kBACpBhe,EAAMqK,MAAQiT,EACR,IAAO,GACP5X,KAAKK,IAAIL,KAAKC,IAAIH,EAAYxF,EAAMwF,UAAWyX,GAAa,IAEtEjd,EAAMwF,UAAYA,EAClBxF,EAAMkH,cAAe,EAErByW,EAAKO,QAAQle,GACb4d,EAAiBM,QAAQle,GACzBgH,EAAOkX,QAAQle,GACf6d,EAAUK,QAAQle,GAClB4U,EAAOsJ,QAAQle,GACf8d,EAAWI,QAAQle,GACnBA,EAAMkH,cAAe,EACjBmW,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBY,GACtB,EAuBJ,MAAO,CAAEI,SAdQ,IAAWV,QAAO,CAACC,EAAKxhB,KACrC,MAAMkiB,EAAOZ,EAAMthB,GAMnB,OALAwhB,EAAIxhB,GAAO,CAACgiB,EAASG,GAAY,EAAOC,GAAY,KAC3CjB,IATTA,GAAe,EACfC,GAAoB,EACftd,EAAMkH,cACPiW,EAAkBY,IAQXK,EAAKD,SAASD,EAASG,EAAWC,IAEtCZ,CAAG,GACX,CAAC,GAMe7c,OALHqd,IACZ,IAAK,IAAIxW,EAAI,EAAGA,EAAI,IAAWlH,OAAQkH,IACnC8V,EAAM,IAAW9V,IAAI7G,OAAOqd,EAChC,EAEuBle,QAAOwd,QACtC,4FC9DA,MAAQW,SAAUI,EAAO1d,OAAQ2d,EAAaxe,MAAOye,EAAWjB,MAAOkB,IAAgB,OAAqD,oBAA1BC,sBAAwCA,sBAAwB,KAAM,qDCFxL,MAAQR,SAAUS,EAAW/d,OAAQge,IAAoB,OAAoBC,gBAAgB,sCCF7F,MAAMC,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,iECJJ,SAASC,EAAiB3B,EAAc4B,GAKpC,IAAIC,EAAY,IAAI9X,IAChB+X,EAAY,IAAI/X,IAKhBF,GAAe,EACfkY,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClBlV,MAAO,EACP7E,UAAW,EACX0B,cAAc,GAEdsY,EAAW,EACf,SAASC,EAAgBC,GACjBL,EAAY1c,IAAI+c,KAChBtB,EAAKD,SAASuB,GACdrC,KAEJmC,IACAE,EAASH,EACb,CACA,MAAMnB,EAAO,CAITD,SAAU,CAACuB,EAAUrB,GAAY,EAAOC,GAAY,KAChD,MACMqB,EADoBrB,GAAapX,EACLgY,EAAYC,EAK9C,OAJId,GACAgB,EAAYO,IAAIF,GACfC,EAAMhd,IAAI+c,IACXC,EAAMC,IAAIF,GACPA,CAAQ,EAKnB7e,OAAS6e,IACLP,EAAUnI,OAAO0I,GACjBL,EAAYrI,OAAO0I,EAAS,EAKhCxB,QAAUO,IACNc,EAAkBd,EAMdvX,EACAkY,GAAiB,GAGrBlY,GAAe,GACdgY,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAUhN,QAAQuN,GAIdR,GAAY,IAAYvhB,OACxB,IAAYA,MAAMmiB,UAAUZ,GAAU5e,KAAKmf,GAE/CA,EAAW,EAGXN,EAAUY,QACV5Y,GAAe,EACXkY,IACAA,GAAiB,EACjBhB,EAAKF,QAAQO,IACjB,GAGR,OAAOL,CACX,iECtFA,IAAIpb,EACJ,SAAS+c,IACL/c,OAAM1C,CACV,CASA,MAAMU,EAAO,CACTgC,IAAK,UACW1C,IAAR0C,GACAhC,EAAKJ,IAAI,KAAUsG,cAAgB,IAAmB8W,gBAChD,KAAUxY,UACVyY,YAAYjb,OAEfA,GAEXpC,IAAMM,IACF8B,EAAM9B,EACN4d,eAAeiB,EAAU,qSCNjC,MAAMC,EAAsB,IAAIC,QAKhC,MAAMC,0BACF,WAAA5hB,CAAY2R,GACRtR,KAAKwhB,aAAe,KACpBxhB,KAAKyhB,YAAa,EAClBzhB,KAAK0hB,iBAAmB,KACxB1hB,KAAK2hB,YAAc,CAAExjB,EAAG,EAAGC,EAAG,GAI9B4B,KAAK4hB,aAAc,EACnB5hB,KAAK6hB,uBAAwB,EAI7B7hB,KAAK8hB,SAAU,UACf9hB,KAAKsR,cAAgBA,CACzB,CACA,KAAAlS,CAAM2iB,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,MAAM,gBAAEvP,GAAoBzS,KAAKsR,cACjC,GAAImB,IAAiD,IAA9BA,EAAgB2C,UACnC,OACJ,MA6FM,iBAAE6M,GAAqBjiB,KAAK+D,WAClC/D,KAAKkiB,WAAa,IAAI,IAAWH,EAAa,CAC1CI,eA/FoBlE,IACpB,MAAM,iBAAEgE,GAAqBjiB,KAAK+D,WAGlCke,EAAmBjiB,KAAKoiB,iBAAmBpiB,KAAKqiB,gBAC5CL,GACAhiB,KAAKgiB,cAAa,IAAAlU,GAAiBmQ,GAAOC,MAC9C,EAyFAoE,QAvFY,CAACrE,EAAOsE,KAEpB,MAAM,KAAEC,EAAI,gBAAEC,EAAe,YAAEC,GAAgB1iB,KAAK+D,WACpD,GAAIye,IAASC,IACLziB,KAAKwhB,cACLxhB,KAAKwhB,eACTxhB,KAAKwhB,cAAe,OAAYgB,IAE3BxiB,KAAKwhB,cACN,OAERxhB,KAAKyhB,YAAa,EAClBzhB,KAAK0hB,iBAAmB,KACxB1hB,KAAK2iB,qBACD3iB,KAAKsR,cAAcsR,aACnB5iB,KAAKsR,cAAcsR,WAAWC,oBAAqB,EACnD7iB,KAAKsR,cAAcsR,WAAWvX,YAAS1J,IAK3C,QAAUmhB,IACN,IAAIjiB,EAAUb,KAAK+iB,mBAAmBD,GAAM9R,OAAS,EAIrD,GAAI,KAAQ0D,KAAK7T,GAAU,CACvB,MAAM,WAAE+hB,GAAe5iB,KAAKsR,cAC5B,GAAIsR,GAAcA,EAAWI,OAAQ,CACjC,MAAMC,EAAeL,EAAWI,OAAOE,UAAUJ,GACjD,GAAIG,EAAc,CAEdpiB,GADe,QAAWoiB,IACNE,WAAWtiB,GAAW,IAC9C,CACJ,CACJ,CACAb,KAAK2hB,YAAYmB,GAAQjiB,CAAO,IAGhC6hB,GACA,KAAMvD,YAAW,IAAMuD,EAAYzE,EAAOsE,MAE9C,OAAqBviB,KAAKsR,cAAe,aACzC,MAAM,eAAEO,GAAmB7R,KAAKsR,cAChCO,GAAkBA,EAAeuR,UAAU,aAAa,EAAK,EA4C7DC,OA1CW,CAACpF,EAAOsE,KAEnB,MAAM,gBAAEE,EAAe,kBAAEa,EAAiB,gBAAEC,EAAe,OAAEC,GAAYxjB,KAAK+D,WAE9E,IAAK0e,IAAoBziB,KAAKwhB,aAC1B,OACJ,MAAM,OAAEpY,GAAWmZ,EAEnB,GAAIe,GAA+C,OAA1BtjB,KAAK0hB,iBAM1B,OALA1hB,KAAK0hB,iBAuWrB,SAA6BtY,EAAQqa,EAAgB,IACjD,IAAI7Z,EAAY,KACZ7C,KAAKmE,IAAI9B,EAAOhL,GAAKqlB,EACrB7Z,EAAY,IAEP7C,KAAKmE,IAAI9B,EAAOjL,GAAKslB,IAC1B7Z,EAAY,KAEhB,OAAOA,CACX,CAhXwC8Z,CAAoBta,QAEd,OAA1BpJ,KAAK0hB,kBACL6B,GAAmBA,EAAgBvjB,KAAK0hB,mBAKhD1hB,KAAK2jB,WAAW,IAAKpB,EAAKrE,MAAO9U,GACjCpJ,KAAK2jB,WAAW,IAAKpB,EAAKrE,MAAO9U,GAOjCpJ,KAAKsR,cAAc2E,SAKnBuN,GAAUA,EAAOvF,EAAOsE,EAAK,EAa7BqB,aAXiB,CAAC3F,EAAOsE,IAASviB,KAAKmD,KAAK8a,EAAOsE,GAYnDsB,gBAXoB,KAAM,QAAUf,IACpC,IAAI5a,EACJ,MAAwC,WAAjClI,KAAK8jB,kBAAkBhB,KAC0B,QAAlD5a,EAAKlI,KAAK+iB,mBAAmBD,GAAMzjB,iBAA8B,IAAP6I,OAAgB,EAASA,EAAGnF,OAAO,KASpG,CACC+X,mBAAoB9a,KAAKsR,cAAcyS,wBACvC9B,mBACA+B,eAAe,OAAiBhkB,KAAKsR,gBAE7C,CACA,IAAAnO,CAAK8a,EAAOsE,GACR,MAAMd,EAAazhB,KAAKyhB,WAExB,GADAzhB,KAAKkC,UACAuf,EACD,OACJ,MAAM,SAAEld,GAAage,EACrBviB,KAAKikB,eAAe1f,GACpB,MAAM,UAAE2f,GAAclkB,KAAK+D,WACvBmgB,GACA,KAAM/E,YAAW,IAAM+E,EAAUjG,EAAOsE,IAEhD,CACA,MAAArgB,GACIlC,KAAKyhB,YAAa,EAClB,MAAM,WAAEmB,EAAU,eAAE/Q,GAAmB7R,KAAKsR,cACxCsR,IACAA,EAAWC,oBAAqB,GAEpC7iB,KAAKkiB,YAAcliB,KAAKkiB,WAAWiC,MACnCnkB,KAAKkiB,gBAAavgB,EAClB,MAAM,gBAAE8gB,GAAoBziB,KAAK+D,YAC5B0e,GAAmBziB,KAAKwhB,eACzBxhB,KAAKwhB,eACLxhB,KAAKwhB,aAAe,MAExB3P,GAAkBA,EAAeuR,UAAU,aAAa,EAC5D,CACA,UAAAO,CAAWb,EAAMsB,EAAQhb,GACrB,MAAM,KAAEoZ,GAASxiB,KAAK+D,WAEtB,IAAKqF,IAAWib,EAAWvB,EAAMN,EAAMxiB,KAAK0hB,kBACxC,OACJ,MAAM4C,EAAYtkB,KAAK+iB,mBAAmBD,GAC1C,IAAIhc,EAAO9G,KAAK2hB,YAAYmB,GAAQ1Z,EAAO0Z,GAEvC9iB,KAAK4hB,aAAe5hB,KAAK4hB,YAAYkB,KACrChc,GAAO,QAAiBA,EAAM9G,KAAK4hB,YAAYkB,GAAO9iB,KAAK8hB,QAAQgB,KAEvEwB,EAAUriB,IAAI6E,EAClB,CACA,kBAAA6b,GACI,IAAIza,EACJ,MAAM,gBAAEqc,EAAe,YAAEC,GAAgBxkB,KAAK+D,WACxCif,EAAShjB,KAAKsR,cAAcsR,aAC7B5iB,KAAKsR,cAAcsR,WAAWI,OAC7BhjB,KAAKsR,cAAcsR,WAAW6B,SAAQ,GACG,QAAxCvc,EAAKlI,KAAKsR,cAAcsR,kBAA+B,IAAP1a,OAAgB,EAASA,EAAG8a,OAC7E0B,EAAkB1kB,KAAK4hB,YACzB2C,IAAmB,OAAYA,GAC1BvkB,KAAK4hB,cACN5hB,KAAK4hB,YAAc5hB,KAAK2kB,yBAKxB3kB,KAAK4hB,eADL2C,IAAmBvB,KACA,QAAwBA,EAAOE,UAAWqB,GAMrEvkB,KAAK8hB,SAAU,QAAmB0C,GAK9BE,IAAoB1kB,KAAK4hB,aACzBoB,GACAhjB,KAAK4hB,cACJ5hB,KAAK6hB,wBACN,QAAUiB,KACmB,IAArB9iB,KAAK4hB,aACL5hB,KAAK+iB,mBAAmBD,KACxB9iB,KAAK4hB,YAAYkB,IAAQ,QAAsBE,EAAOE,UAAUJ,GAAO9iB,KAAK4hB,YAAYkB,IAC5F,GAGZ,CACA,qBAAA6B,GACI,MAAQJ,gBAAiB3C,EAAW,yBAAEgD,GAA6B5kB,KAAK+D,WACxE,IAAK6d,KAAgB,OAAYA,GAC7B,OAAO,EACX,MAAMiD,EAAqBjD,EAAY/gB,SACvC,OAAiC,OAAvBgkB,EAA6B,0GACvC,MAAM,WAAEjC,GAAe5iB,KAAKsR,cAE5B,IAAKsR,IAAeA,EAAWI,OAC3B,OAAO,EACX,MAAM8B,GAAiB,OAAeD,EAAoBjC,EAAW5T,KAAMhP,KAAKsR,cAAcyS,yBAC9F,IAAIgB,GAAsB,QAAwBnC,EAAWI,OAAOE,UAAW4B,GAK/E,GAAIF,EAA0B,CAC1B,MAAMI,EAAkBJ,GAAyB,QAAwBG,IACzE/kB,KAAK6hB,wBAA0BmD,EAC3BA,IACAD,GAAsB,QAAwBC,GAEtD,CACA,OAAOD,CACX,CACA,cAAAd,CAAe1f,GACX,MAAM,KAAEie,EAAI,aAAEyC,EAAY,YAAET,EAAW,eAAEU,EAAc,iBAAEjD,EAAgB,oBAAEkD,GAAyBnlB,KAAK+D,WACnG6d,EAAc5hB,KAAK4hB,aAAe,CAAC,EACnCwD,GAAqB,QAAUtC,IACjC,IAAKuB,EAAWvB,EAAMN,EAAMxiB,KAAK0hB,kBAC7B,OAEJ,IAAIjR,EAAcmR,GAAeA,EAAYkB,IAAU,CAAC,EACpDb,IACAxR,EAAa,CAAEzJ,IAAK,EAAGI,IAAK,IAOhC,MAAMuD,EAAkB6Z,EAAc,IAAM,IACtC9Z,EAAgB8Z,EAAc,GAAK,IACnCrf,EAAU,CACZzE,KAAM,UACN6D,SAAU0gB,EAAe1gB,EAASue,GAAQ,EAC1CnY,kBACAD,gBACAD,aAAc,IACdI,UAAW,EACXC,UAAW,MACRoa,KACAzU,GAKP,OAAOzQ,KAAKqlB,wBAAwBvC,EAAM3d,EAAQ,IAGtD,OAAOH,QAAQsN,IAAI8S,GAAoB1gB,KAAKygB,EAChD,CACA,uBAAAE,CAAwBvC,EAAMrS,GAC1B,MAAM6T,EAAYtkB,KAAK+iB,mBAAmBD,GAE1C,OADA,OAAqB9iB,KAAKsR,cAAewR,GAClCwB,EAAUllB,OAAM,OAAmB0jB,EAAMwB,EAAW,EAAG7T,EAAYzQ,KAAKsR,eAAe,GAClG,CACA,aAAA+Q,IACI,QAAUS,GAAS9iB,KAAK+iB,mBAAmBD,GAAM3f,QACrD,CACA,cAAAif,IACI,QAAUU,IAAW,IAAI5a,EAAI,OAA0D,QAAlDA,EAAKlI,KAAK+iB,mBAAmBD,GAAMzjB,iBAA8B,IAAP6I,OAAgB,EAASA,EAAGhF,OAAO,GACtI,CACA,iBAAA4gB,CAAkBhB,GACd,IAAI5a,EACJ,OAA0D,QAAlDA,EAAKlI,KAAK+iB,mBAAmBD,GAAMzjB,iBAA8B,IAAP6I,OAAgB,EAASA,EAAG7G,KAClG,CAOA,kBAAA0hB,CAAmBD,GACf,MAAMwC,EAAU,QAAQxC,EAAKyC,gBACvBnR,EAAQpU,KAAKsR,cAAcvN,WAC3ByhB,EAAsBpR,EAAMkR,GAClC,OAAOE,GAEDxlB,KAAKsR,cAAcS,SAAS+Q,GAAO1O,EAAMoD,QACrCpD,EAAMoD,QAAQsL,QACdnhB,IAAc,EAC5B,CACA,YAAAqgB,CAAa9D,IACT,QAAU4E,IACN,MAAM,KAAEN,GAASxiB,KAAK+D,WAEtB,IAAKsgB,EAAWvB,EAAMN,EAAMxiB,KAAK0hB,kBAC7B,OACJ,MAAM,WAAEkB,GAAe5iB,KAAKsR,cACtBgT,EAAYtkB,KAAK+iB,mBAAmBD,GAC1C,GAAIF,GAAcA,EAAWI,OAAQ,CACjC,MAAM,IAAEhc,EAAG,IAAEI,GAAQwb,EAAWI,OAAOE,UAAUJ,GACjDwB,EAAUriB,IAAIic,EAAM4E,IAAQ,OAAU9b,EAAKI,EAAK,IACpD,IAER,CAMA,8BAAAqe,GACI,IAAKzlB,KAAKsR,cAAczQ,QACpB,OACJ,MAAM,KAAE2hB,EAAI,gBAAE+B,GAAoBvkB,KAAK+D,YACjC,WAAE6e,GAAe5iB,KAAKsR,cAC5B,KAAK,OAAYiT,KAAqB3B,IAAe5iB,KAAK4hB,YACtD,OAKJ5hB,KAAKqiB,gBAKL,MAAMqD,EAAc,CAAEvnB,EAAG,EAAGC,EAAG,IAC/B,QAAU0kB,IACN,MAAMwB,EAAYtkB,KAAK+iB,mBAAmBD,GAC1C,GAAIwB,IAAkC,IAArBtkB,KAAK4hB,YAAuB,CACzC,MAAMjW,EAAS2Y,EAAUtT,MACzB0U,EAAY5C,IAAQ,QAAW,CAAE9b,IAAK2E,EAAQvE,IAAKuE,GAAU3L,KAAK4hB,YAAYkB,GAClF,KAKJ,MAAM,kBAAEhf,GAAsB9D,KAAKsR,cAAcvN,WACjD/D,KAAKsR,cAAczQ,QAAQiW,MAAM6O,UAAY7hB,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACN8e,EAAW5T,MAAQ4T,EAAW5T,KAAK4W,eACnChD,EAAWiD,eACX7lB,KAAK2iB,sBAKL,QAAUG,IACN,IAAKuB,EAAWvB,EAAMN,EAAM,MACxB,OAIJ,MAAM8B,EAAYtkB,KAAK+iB,mBAAmBD,IACpC,IAAE9b,EAAG,IAAEI,GAAQpH,KAAK4hB,YAAYkB,GACtCwB,EAAUriB,KAAI,OAAU+E,EAAKI,EAAKse,EAAY5C,IAAO,GAE7D,CACA,YAAAgD,GACI,IAAK9lB,KAAKsR,cAAczQ,QACpB,OACJwgB,EAAoBpf,IAAIjC,KAAKsR,cAAetR,MAC5C,MAAMD,EAAUC,KAAKsR,cAAczQ,QAI7BklB,GAAsB,OAAgBhmB,EAAS,eAAgBke,IACjE,MAAM,KAAEuE,EAAI,aAAEwD,GAAe,GAAShmB,KAAK+D,WAC3Cye,GAAQwD,GAAgBhmB,KAAKZ,MAAM6e,EAAM,IAEvCgI,EAAyB,KAC3B,MAAM,gBAAE1B,GAAoBvkB,KAAK+D,YAC7B,OAAYwgB,IAAoBA,EAAgB1jB,UAChDb,KAAK4hB,YAAc5hB,KAAK2kB,wBAC5B,GAEE,WAAE/B,GAAe5iB,KAAKsR,cACtB4U,EAA4BtD,EAAW/E,iBAAiB,UAAWoI,GACrErD,IAAeA,EAAWI,SAC1BJ,EAAW5T,MAAQ4T,EAAW5T,KAAK4W,eACnChD,EAAWiD,gBAEf,KAAM7G,KAAKiH,GAKX,MAAME,GAAqB,OAAYjU,OAAQ,UAAU,IAAMlS,KAAKylB,mCAK9DW,EAA2BxD,EAAW/E,iBAAiB,aAAa,EAAInS,QAAO2a,uBAC7ErmB,KAAKyhB,YAAc4E,KACnB,QAAUvD,IACN,MAAMhjB,EAAcE,KAAK+iB,mBAAmBD,GACvChjB,IAELE,KAAK2hB,YAAYmB,IAASpX,EAAMoX,GAAMwD,UACtCxmB,EAAYmC,IAAInC,EAAYkR,MAAQtF,EAAMoX,GAAMwD,WAAU,IAE9DtmB,KAAKsR,cAAc2E,SAE1B,IACD,MAAO,KACHkQ,IACAJ,IACAG,IACAE,GAA4BA,GAA0B,CAE9D,CACA,QAAAriB,GACI,MAAMqQ,EAAQpU,KAAKsR,cAAcvN,YAC3B,KAAEye,GAAO,EAAK,kBAAEc,GAAoB,EAAK,gBAAEb,GAAkB,EAAK,gBAAE8B,GAAkB,EAAK,YAAEC,EAAc,KAAc,aAAES,GAAe,GAAU7Q,EAC1J,MAAO,IACAA,EACHoO,OACAc,oBACAb,kBACA8B,kBACAC,cACAS,eAER,EAEJ,SAASZ,EAAWza,EAAW4Y,EAAMd,GACjC,SAAkB,IAATc,GAAiBA,IAAS5Y,GACT,OAArB8X,GAA6BA,IAAqB9X,EAC3D,uFC3cA,MAAM2c,oBAAoB,IACtB,WAAA5mB,CAAY6mB,GACR5mB,MAAM4mB,GACNxmB,KAAKymB,oBAAsB,IAC3BzmB,KAAK0mB,gBAAkB,IACvB1mB,KAAK2mB,SAAW,IAAI,IAA0BH,EAClD,CACA,KAAAI,GAGI,MAAM,aAAEC,GAAiB7mB,KAAKwmB,KAAKziB,WAC/B8iB,IACA7mB,KAAKymB,oBAAsBI,EAAa3M,UAAUla,KAAK2mB,WAE3D3mB,KAAK0mB,gBAAkB1mB,KAAK2mB,SAASb,gBAAkB,GAC3D,CACA,OAAAgB,GACI9mB,KAAKymB,sBACLzmB,KAAK0mB,iBACT,iJCbJ,SAASK,EAAiB7I,GAAO,IAAElX,EAAG,IAAEI,GAAO0a,GAa3C,YAZYngB,IAARqF,GAAqBkX,EAAQlX,EAE7BkX,EAAQ4D,GACF,OAAU9a,EAAKkX,EAAO4D,EAAQ9a,KAC9BD,KAAKK,IAAI8W,EAAOlX,QAETrF,IAARyF,GAAqB8W,EAAQ9W,IAElC8W,EAAQ4D,GACF,OAAU1a,EAAK8W,EAAO4D,EAAQ1a,KAC9BL,KAAKC,IAAIkX,EAAO9W,IAEnB8W,CACX,CAMA,SAAS8I,EAA4BlE,EAAM9b,EAAKI,GAC5C,MAAO,CACHJ,SAAarF,IAARqF,EAAoB8b,EAAK9b,IAAMA,OAAMrF,EAC1CyF,SAAazF,IAARyF,EACC0b,EAAK1b,IAAMA,GAAO0b,EAAK1b,IAAM0b,EAAK9b,UAClCrF,EAEd,CAKA,SAASslB,EAAwB/D,GAAW,IAAEvN,EAAG,KAAEE,EAAI,OAAEqR,EAAM,MAAEnR,IAC7D,MAAO,CACH5X,EAAG6oB,EAA4B9D,EAAU/kB,EAAG0X,EAAME,GAClD3X,EAAG4oB,EAA4B9D,EAAU9kB,EAAGuX,EAAKuR,GAEzD,CAIA,SAASC,EAA4BC,EAAYC,GAC7C,IAAIrgB,EAAMqgB,EAAgBrgB,IAAMogB,EAAWpgB,IACvCI,EAAMigB,EAAgBjgB,IAAMggB,EAAWhgB,IAO3C,OAJIigB,EAAgBjgB,IAAMigB,EAAgBrgB,IACtCogB,EAAWhgB,IAAMggB,EAAWpgB,OAC3BA,EAAKI,GAAO,CAACA,EAAKJ,IAEhB,CAAEA,MAAKI,MAClB,CAIA,SAASkgB,EAAwBpE,EAAW4B,GACxC,MAAO,CACH3mB,EAAGgpB,EAA4BjE,EAAU/kB,EAAG2mB,EAAe3mB,GAC3DC,EAAG+oB,EAA4BjE,EAAU9kB,EAAG0mB,EAAe1mB,GAEnE,CAKA,SAASmpB,EAAWC,EAAQnc,GACxB,IAAIN,EAAS,GACb,MAAM0c,GAAe,QAAWD,GAC1BE,GAAe,QAAWrc,GAOhC,OANIqc,EAAeD,EACf1c,GAAS,OAASM,EAAOrE,IAAKqE,EAAOjE,IAAMqgB,EAAcD,EAAOxgB,KAE3DygB,EAAeC,IACpB3c,GAAS,OAASyc,EAAOxgB,IAAKwgB,EAAOpgB,IAAMsgB,EAAcrc,EAAOrE,OAE7D,OAAM,EAAG,EAAG+D,EACvB,CAIA,SAAS4c,EAAsB3E,EAAQpB,GACnC,MAAMgG,EAAsB,CAAC,EAO7B,YANwBjmB,IAApBigB,EAAY5a,MACZ4gB,EAAoB5gB,IAAM4a,EAAY5a,IAAMgc,EAAOhc,UAE/BrF,IAApBigB,EAAYxa,MACZwgB,EAAoBxgB,IAAMwa,EAAYxa,IAAM4b,EAAOhc,KAEhD4gB,CACX,CACA,MAAMC,EAAiB,IAIvB,SAASC,EAAmBtD,EAAcqD,GAOtC,OANoB,IAAhBrD,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcqD,GAEX,CACH1pB,EAAG4pB,EAAmBvD,EAAa,OAAQ,SAC3CpmB,EAAG2pB,EAAmBvD,EAAa,MAAO,UAElD,CACA,SAASuD,EAAmBvD,EAAawD,EAAUC,GAC/C,MAAO,CACHjhB,IAAKkhB,EAAoB1D,EAAawD,GACtC5gB,IAAK8gB,EAAoB1D,EAAayD,GAE9C,CACA,SAASC,EAAoB1D,EAAa2D,GACtC,MAA8B,iBAAhB3D,EACRA,EACAA,EAAY2D,IAAU,CAChC,uFC3HA,MAAMC,qBAAqB,IACvB,WAAAzoB,GACIC,SAASyoB,WACTroB,KAAKsoB,UAAW,CACpB,CACA,OAAAC,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBxoB,KAAKwmB,KAAK3lB,QAAQ4nB,QAAQ,iBAC/C,CACA,MAAO3a,GACH0a,GAAiB,CACrB,CACKA,GAAmBxoB,KAAKwmB,KAAK3U,iBAElC7R,KAAKwmB,KAAK3U,eAAeuR,UAAU,cAAc,GACjDpjB,KAAKsoB,UAAW,EACpB,CACA,MAAAI,GACS1oB,KAAKsoB,UAAatoB,KAAKwmB,KAAK3U,iBAEjC7R,KAAKwmB,KAAK3U,eAAeuR,UAAU,cAAc,GACjDpjB,KAAKsoB,UAAW,EACpB,CACA,KAAA1B,GACI5mB,KAAK8mB,SAAU,QAAK,OAAY9mB,KAAKwmB,KAAK3lB,QAAS,SAAS,IAAMb,KAAKuoB,aAAY,OAAYvoB,KAAKwmB,KAAK3lB,QAAS,QAAQ,IAAMb,KAAK0oB,WACzI,CACA,OAAA5B,GAAY,oGC/BhB,SAAS6B,EAAiBnC,EAAMvI,EAAO2K,GACnC,MAAM,MAAExU,GAAUoS,EACdA,EAAK3U,gBAAkBuC,EAAMyU,YAC7BrC,EAAK3U,eAAeuR,UAAU,aAA4B,UAAdwF,GAEhD,MACM7H,EAAW3M,EADE,UAAYwU,GAE3B7H,GACA,KAAM5B,YAAW,IAAM4B,EAAS9C,GAAO,IAAAnQ,GAAiBmQ,KAEhE,CACA,MAAM6K,qBAAqB,IACvB,KAAAlC,GACI,MAAM,QAAE/lB,GAAYb,KAAKwmB,KACpB3lB,IAELb,KAAK8mB,SAAU,OAAMjmB,GAAS,CAACkoB,EAAUC,KACrCL,EAAiB3oB,KAAKwmB,KAAMwC,EAAY,SAChCC,GAAaN,EAAiB3oB,KAAKwmB,KAAMyC,EAAU,UAEnE,CACA,OAAAnC,GAAY,sICfhB,MAAMoC,WACF,WAAAvpB,CAAYse,EAAOkL,GAAU,mBAAErO,EAAkB,cAAEkJ,EAAa,iBAAE/B,GAAmB,GAAW,CAAC,GAgE7F,GA5DAjiB,KAAKgpB,WAAa,KAIlBhpB,KAAKopB,cAAgB,KAIrBppB,KAAKqpB,kBAAoB,KAIzBrpB,KAAKmpB,SAAW,CAAC,EAIjBnpB,KAAKgkB,cAAgB9R,OACrBlS,KAAKspB,YAAc,KACf,IAAMtpB,KAAKopB,gBAAiBppB,KAAKqpB,kBAC7B,OACJ,MAAM9G,EAAOgH,EAAWvpB,KAAKqpB,kBAAmBrpB,KAAKwpB,SAC/CC,EAAmC,OAApBzpB,KAAKgpB,WAIpBU,GAA0B,OAAWnH,EAAKnZ,OAAQ,CAAEjL,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKqrB,IAAiBC,EAClB,OACJ,MAAM,MAAExL,GAAUqE,GACZ,UAAE1b,GAAc,KACtB7G,KAAKwpB,QAAQ9nB,KAAK,IAAKwc,EAAOrX,cAC9B,MAAM,QAAEyb,EAAO,OAAEe,GAAWrjB,KAAKmpB,SAC5BM,IACDnH,GAAWA,EAAQtiB,KAAKopB,cAAe7G,GACvCviB,KAAKgpB,WAAahpB,KAAKopB,eAE3B/F,GAAUA,EAAOrjB,KAAKopB,cAAe7G,EAAK,EAE9CviB,KAAK2pB,kBAAoB,CAAC1L,EAAOsE,KAC7BviB,KAAKopB,cAAgBnL,EACrBje,KAAKqpB,kBAAoBO,EAAerH,EAAMviB,KAAK8a,oBAEnD,KAAMzS,OAAOrI,KAAKspB,aAAa,EAAK,EAExCtpB,KAAK6pB,gBAAkB,CAAC5L,EAAOsE,KAC3BviB,KAAKmkB,MACL,MAAM,MAAE2F,EAAK,aAAElG,EAAY,gBAAEC,GAAoB7jB,KAAKmpB,SAGtD,GAFInpB,KAAKiiB,kBACL4B,GAAmBA,KACjB7jB,KAAKopB,gBAAiBppB,KAAKqpB,kBAC7B,OACJ,MAAMU,EAAUR,EAA0B,kBAAftL,EAAMvd,KAC3BV,KAAKqpB,kBACLO,EAAerH,EAAMviB,KAAK8a,oBAAqB9a,KAAKwpB,SACtDxpB,KAAKgpB,YAAcc,GACnBA,EAAM7L,EAAO8L,GAEjBnG,GAAgBA,EAAa3F,EAAO8L,EAAQ,IAG3C,OAAiB9L,GAClB,OACJje,KAAKiiB,iBAAmBA,EACxBjiB,KAAKmpB,SAAWA,EAChBnpB,KAAK8a,mBAAqBA,EAC1B9a,KAAKgkB,cAAgBA,GAAiB9R,OACtC,MACM8X,EAAcJ,GADP,IAAA9b,GAAiBmQ,GACWje,KAAK8a,qBACxC,MAAEoD,GAAU8L,GACZ,UAAEnjB,GAAc,KACtB7G,KAAKwpB,QAAU,CAAC,IAAKtL,EAAOrX,cAC5B,MAAM,eAAEsb,GAAmBgH,EAC3BhH,GACIA,EAAelE,EAAOsL,EAAWS,EAAahqB,KAAKwpB,UACvDxpB,KAAK0mB,iBAAkB,QAAK,OAAgB1mB,KAAKgkB,cAAe,cAAehkB,KAAK2pB,oBAAoB,OAAgB3pB,KAAKgkB,cAAe,YAAahkB,KAAK6pB,kBAAkB,OAAgB7pB,KAAKgkB,cAAe,gBAAiBhkB,KAAK6pB,iBAC9O,CACA,cAAAI,CAAed,GACXnpB,KAAKmpB,SAAWA,CACpB,CACA,GAAAhF,GACInkB,KAAK0mB,iBAAmB1mB,KAAK0mB,mBAC7B,QAAY1mB,KAAKspB,YACrB,EAEJ,SAASM,EAAerH,EAAMzH,GAC1B,OAAOA,EAAqB,CAAEoD,MAAOpD,EAAmByH,EAAKrE,QAAWqE,CAC5E,CACA,SAAS2H,EAAcxc,EAAGC,GACtB,MAAO,CAAExP,EAAGuP,EAAEvP,EAAIwP,EAAExP,EAAGC,EAAGsP,EAAEtP,EAAIuP,EAAEvP,EACtC,CACA,SAASmrB,GAAW,MAAErL,GAASsL,GAC3B,MAAO,CACHtL,QACAxS,MAAOwe,EAAchM,EAAOiM,EAAgBX,IAC5CpgB,OAAQ8gB,EAAchM,EAAOkM,EAAiBZ,IAC9CjlB,SAAUqM,EAAY4Y,EAAS,IAEvC,CACA,SAASY,EAAiBZ,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASW,EAAgBX,GACrB,OAAOA,EAAQA,EAAQ3nB,OAAS,EACpC,CACA,SAAS+O,EAAY4Y,EAASa,GAC1B,GAAIb,EAAQ3nB,OAAS,EACjB,MAAO,CAAE1D,EAAG,EAAGC,EAAG,GAEtB,IAAI2K,EAAIygB,EAAQ3nB,OAAS,EACrByoB,EAAmB,KACvB,MAAMC,EAAYJ,EAAgBX,GAClC,KAAOzgB,GAAK,IACRuhB,EAAmBd,EAAQzgB,KACvBwhB,EAAU1jB,UAAYyjB,EAAiBzjB,WACvC,OAAsBwjB,MAG1BthB,IAEJ,IAAKuhB,EACD,MAAO,CAAEnsB,EAAG,EAAGC,EAAG,GAEtB,MAAMiE,GAAO,OAAsBkoB,EAAU1jB,UAAYyjB,EAAiBzjB,WAC1E,GAAa,IAATxE,EACA,MAAO,CAAElE,EAAG,EAAGC,EAAG,GAEtB,MAAM4R,EAAkB,CACpB7R,GAAIosB,EAAUpsB,EAAImsB,EAAiBnsB,GAAKkE,EACxCjE,GAAImsB,EAAUnsB,EAAIksB,EAAiBlsB,GAAKiE,GAQ5C,OANI2N,EAAgB7R,IAAMqsB,MACtBxa,EAAgB7R,EAAI,GAEpB6R,EAAgB5R,IAAMosB,MACtBxa,EAAgB5R,EAAI,GAEjB4R,CACX,0HClJA,MAAMya,EAAgB9M,GAAY,CAACM,EAAOsE,KAClC5E,GACA,KAAMwB,YAAW,IAAMxB,EAAQM,EAAOsE,IAC1C,EAEJ,MAAMmI,mBAAmB,IACrB,WAAA/qB,GACIC,SAASyoB,WACTroB,KAAK2qB,0BAA4B,GACrC,CACA,aAAAC,CAAcC,GACV7qB,KAAK8qB,QAAU,IAAI,IAAWD,EAAkB7qB,KAAK+qB,oBAAqB,CACtEjQ,mBAAoB9a,KAAKwmB,KAAKzC,wBAC9BC,eAAe,OAAiBhkB,KAAKwmB,OAE7C,CACA,iBAAAuE,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAanrB,KAAKwmB,KAAKziB,WACrE,MAAO,CACHoe,eAAgBsI,EAAaO,GAC7B1I,QAASmI,EAAaQ,GACtB5H,OAAQ6H,EACRpB,MAAO,CAAC7L,EAAOsE,YACJviB,KAAK8qB,QACRK,GACA,KAAMhM,YAAW,IAAMgM,EAASlN,EAAOsE,IAC3C,EAGZ,CACA,KAAAqE,GACI5mB,KAAK2qB,2BAA4B,OAAgB3qB,KAAKwmB,KAAK3lB,QAAS,eAAgBod,GAAUje,KAAK4qB,cAAc3M,IACrH,CACA,MAAA5V,GACIrI,KAAK8qB,SAAW9qB,KAAK8qB,QAAQb,eAAejqB,KAAK+qB,oBACrD,CACA,OAAAjE,GACI9mB,KAAK2qB,4BACL3qB,KAAK8qB,SAAW9qB,KAAK8qB,QAAQ3G,KACjC,oGCzCJ,SAASiH,EAAiB5E,EAAMvI,EAAO2K,GACnC,MAAM,MAAExU,GAAUoS,EAClB,GAAIA,EAAK3lB,mBAAmBwqB,mBAAqB7E,EAAK3lB,QAAQyqB,SAC1D,OAEA9E,EAAK3U,gBAAkBuC,EAAMmX,UAC7B/E,EAAK3U,eAAeuR,UAAU,WAA0B,UAAdwF,GAE9C,MACM7H,EAAW3M,EADE,SAAyB,QAAdwU,EAAsB,GAAKA,IAErD7H,GACA,KAAM5B,YAAW,IAAM4B,EAAS9C,GAAO,IAAAnQ,GAAiBmQ,KAEhE,CACA,MAAMuN,qBAAqB,IACvB,KAAA5E,GACI,MAAM,QAAE/lB,GAAYb,KAAKwmB,KACpB3lB,IAELb,KAAK8mB,SAAU,OAAMjmB,GAAS,CAACkoB,EAAUC,KACrCoC,EAAiBprB,KAAKwmB,KAAMwC,EAAY,SACjC,CAACC,GAAYwC,aAAcL,EAAiBprB,KAAKwmB,KAAMyC,EAAUwC,EAAU,MAAQ,YAC3F,CAAEC,gBAAiB1rB,KAAKwmB,KAAKpS,MAAMuX,kBAC1C,CACA,OAAA7E,GAAY,4CC9BhB,MAAM8E,QACF,WAAAjsB,CAAY6mB,GACRxmB,KAAK6rB,WAAY,EACjB7rB,KAAKwmB,KAAOA,CAChB,CACA,MAAAne,GAAW,wECHf,IAAIgO,EAAK,EACT,MAAMyV,6BAA6B,IAC/B,WAAAnsB,GACIC,SAASyoB,WACTroB,KAAKqW,GAAKA,GACd,CACA,MAAAhO,GACI,IAAKrI,KAAKwmB,KAAK/T,gBACX,OACJ,MAAM,UAAE2C,EAAS,eAAEqC,GAAmBzX,KAAKwmB,KAAK/T,iBACxC2C,UAAW2W,GAAkB/rB,KAAKwmB,KAAKwF,qBAAuB,CAAC,EACvE,IAAKhsB,KAAKwmB,KAAK3U,gBAAkBuD,IAAc2W,EAC3C,OAEJ,MAAME,EAAgBjsB,KAAKwmB,KAAK3U,eAAeuR,UAAU,QAAShO,GAC9DqC,IAAmBrC,GACnB6W,EAAcvnB,MAAK,KACf+S,EAAezX,KAAKqW,GAAG,GAGnC,CACA,KAAAuQ,GACI,MAAM,SAAExO,EAAQ,eAAEX,GAAmBzX,KAAKwmB,KAAK/T,iBAAmB,CAAC,EAC/DgF,GACAA,EAAezX,KAAKqW,IAEpB+B,IACApY,KAAK8mB,QAAU1O,EAASpY,KAAKqW,IAErC,CACA,OAAAyQ,GAAY,6FC5BhB,MAAMoF,yBAAyB,IAM3B,WAAAvsB,CAAY6mB,GACR5mB,MAAM4mB,GACNA,EAAK3U,iBAAmB2U,EAAK3U,gBAAiB,OAAqB2U,GACvE,CACA,mCAAA2F,GACI,MAAM,QAAE1iB,GAAYzJ,KAAKwmB,KAAKziB,YAC1B,OAAoB0F,KACpBzJ,KAAKosB,gBAAkB3iB,EAAQyQ,UAAUla,KAAKwmB,MAEtD,CAIA,KAAAI,GACI5mB,KAAKmsB,qCACT,CACA,MAAA9jB,GACI,MAAM,QAAEoB,GAAYzJ,KAAKwmB,KAAKziB,YACtB0F,QAAS4iB,GAAgBrsB,KAAKwmB,KAAKtR,WAAa,CAAC,EACrDzL,IAAY4iB,GACZrsB,KAAKmsB,qCAEb,CACA,OAAArF,GACI,IAAI5e,EACJlI,KAAKwmB,KAAK3U,eAAeya,QACO,QAA/BpkB,EAAKlI,KAAKosB,uBAAoC,IAAPlkB,GAAyBA,EAAGmC,KAAKrK,KAC7E,iEClCJ,MAAM2R,EAAa,CACftS,UAAW,CACPusB,QAAS,KAEbW,KAAM,CACFX,QAAS,yCCRjB,MAAMY,EAAe,CACjBntB,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJktB,KAAM,CAAC,QACP/J,KAAM,CAAC,OAAQ,gBACfiK,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3C7J,OAAQ,CAAC,SAAU,aAEjB8J,EAAqB,CAAC,EAC5B,IAAK,MAAMvvB,KAAOivB,EACdM,EAAmBvvB,GAAO,CACtBwvB,UAAY3Y,GAAUoY,EAAajvB,GAAKqR,MAAM/O,KAAWuU,EAAMvU,6FClBvE,MAAM2iB,EAAO,CACToK,IAAK,CACDhB,QAAS,KAEbpJ,KAAM,CACFoJ,QAAS,IACToB,eAAgB,IAChBC,cAAa,gFCPrB,MAAMC,EAAoB,CACtBL,OAAQ,CACJjB,kBAAS,GAEbe,IAAK,CACDf,QAAS,KAEba,MAAO,CACHb,QAAS,KAEbc,MAAO,CACHd,QAAS,qECbjB,MAAM5I,EAAS,CACXA,OAAQ,CACJgK,eAAgB,IAChBC,cAAa,iLCOrB,MAAME,iCAAiC,EAAAC,UAMnC,iBAAAC,GACI,MAAM,cAAE/b,EAAa,YAAEgc,EAAW,kBAAEC,EAAiB,SAAEC,GAAaxtB,KAAKoU,OACnE,WAAEwO,GAAetR,GACvB,OAAkBmc,GACd7K,IACI0K,EAAYI,OACZJ,EAAYI,MAAMzM,IAAI2B,GACtB2K,GAAqBA,EAAkBnV,UAAYoV,GACnDD,EAAkBnV,SAASwK,GAE/BA,EAAW5T,KAAK2e,YAChB/K,EAAW/E,iBAAiB,qBAAqB,KAC7C7d,KAAK6Y,cAAc,IAEvB+J,EAAWgL,WAAW,IACfhL,EAAW1jB,QACduY,eAAgB,IAAMzX,KAAK6Y,kBAGnC,IAAsBgV,gBAAiB,CAC3C,CACA,uBAAA5Y,CAAwBC,GACpB,MAAM,iBAAE4Y,EAAgB,cAAExc,EAAa,KAAEkR,EAAI,UAAEpN,GAAcpV,KAAKoU,MAC5DwO,EAAatR,EAAcsR,WACjC,OAAKA,GASLA,EAAWxN,UAAYA,EACnBoN,GACAtN,EAAU4Y,mBAAqBA,QACVnsB,IAArBmsB,GACA5Y,EAAUE,YAAcA,EACxBwN,EAAWmL,aAGX/tB,KAAK6Y,eAEL3D,EAAUE,YAAcA,IACpBA,EACAwN,EAAWoL,UAELpL,EAAWqL,YAMjB,KAAM9O,YAAW,KACb,MAAM+O,EAAQtL,EAAWuL,WACpBD,GAAUA,EAAME,QAAQvsB,QACzB7B,KAAK6Y,cACT,KAIL,MApCI,IAqCf,CACA,kBAAA7C,GACI,MAAM,WAAE4M,GAAe5iB,KAAKoU,MAAM9C,cAC9BsR,IACAA,EAAW5T,KAAK2e,YAChB,IAAUxO,YAAW,MACZyD,EAAWyL,kBAAoBzL,EAAW0L,UAC3CtuB,KAAK6Y,cACT,IAGZ,CACA,oBAAA0V,GACI,MAAM,cAAEjd,EAAa,YAAEgc,EAAaC,kBAAmBiB,GAAoBxuB,KAAKoU,OAC1E,WAAEwO,GAAetR,EACnBsR,IACAA,EAAW6L,4BACPnB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMgB,OAAO9L,GACzB4L,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW/L,GAEtC,CACA,YAAA/J,GACI,MAAM,aAAEA,GAAiB7Y,KAAKoU,MAC9ByE,GAAgBA,GACpB,CACA,MAAA5C,GACI,OAAO,IACX,EAEJ,SAASgX,EAAc7Y,GACnB,MAAOgB,EAAWyD,IAAgB,UAC5ByU,GAAc,IAAA5W,YAAW,EAAAmD,GAC/B,OAAQ,IAAAvC,KAAI6V,yBAA0B,IAAK/Y,EAAOkZ,YAAaA,EAAaC,mBAAmB,IAAA7W,YAAW,KAA2BtB,UAAWA,EAAWyD,aAAcA,GAC7K,CACA,MAAM4U,EAAyB,CAC3BmB,aAAc,IACP,IACHC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRC,oBAAqB,IACrBC,qBAAsB,IACtBC,uBAAwB,IACxBC,wBAAyB,IACzBC,UAAW,uDCjIf,SAASC,EAAaC,GAClB,IAAK,MAAM7xB,KAAO6xB,EACd,IAAmB7xB,GAAO,IACnB,IAAmBA,MACnB6xB,EAAS7xB,GAGxB,6ECNA,MAAM8xB,EAAiB,CACnBzgB,KAAM,EACN0D,IAAK,GAET,MAAMgd,sBAAsB,IACxB,WAAA3vB,GACIC,SAASyoB,WACTroB,KAAKuvB,gBAAiB,EACtBvvB,KAAKwvB,UAAW,CACpB,CACA,aAAAC,GACIzvB,KAAK8mB,UACL,MAAM,SAAE4I,EAAW,CAAC,GAAM1vB,KAAKwmB,KAAKziB,YAC9B,KAAEiL,EAAM2gB,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASJ,EACtDxwB,EAAU,CACZ8P,KAAMA,EAAOA,EAAKnO,aAAUc,EAC5BiuB,aACAG,UAA6B,iBAAXF,EAAsBA,EAASR,EAAeQ,IA+BpE,OAAO,OAAoB7vB,KAAKwmB,KAAK3lB,QAAS3B,GA7BhB8wB,IAC1B,MAAM,eAAEC,GAAmBD,EAI3B,GAAIhwB,KAAKwvB,WAAaS,EAClB,OAMJ,GALAjwB,KAAKwvB,SAAWS,EAKZH,IAASG,GAAkBjwB,KAAKuvB,eAChC,OAEKU,IACLjwB,KAAKuvB,gBAAiB,GAEtBvvB,KAAKwmB,KAAK3U,gBACV7R,KAAKwmB,KAAK3U,eAAeuR,UAAU,cAAe6M,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBnwB,KAAKwmB,KAAKziB,WACjDgd,EAAWkP,EAAiBC,EAAkBC,EACpDpP,GAAYA,EAASiP,EAAM,GAGnC,CACA,KAAApJ,GACI5mB,KAAKyvB,eACT,CACA,MAAApnB,GACI,GAAoC,oBAAzB+nB,qBACP,OACJ,MAAM,MAAEhc,EAAK,UAAEc,GAAclV,KAAKwmB,KACR,CAAC,SAAU,SAAU,QAAQ5X,KAO/D,UAAkC,SAAE8gB,EAAW,CAAC,IAAOA,SAAUW,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQxwB,GAAS6vB,EAAS7vB,KAAUwwB,EAAaxwB,EACrD,CAToEywB,CAAyBlc,EAAOc,KAExFlV,KAAKyvB,eAEb,CACA,OAAA3I,GAAY,sCC5DhB,MAAMyJ,EAAoB,IAAIjP,QAMxBkP,EAAY,IAAIlP,QAChBmP,EAAwBT,IAC1B,MAAMjP,EAAWwP,EAAkBvf,IAAIgf,EAAM3kB,QAC7C0V,GAAYA,EAASiP,EAAM,EAEzBU,EAA4BC,IAC9BA,EAAQpd,QAAQkd,EAAqB,EAqBzC,SAASG,EAAoB7wB,EAASb,EAAS6hB,GAC3C,MAAM8P,EApBV,UAAkC,KAAE7hB,KAAS9P,IACzC,MAAM4xB,EAAa9hB,GAAQ+H,SAItByZ,EAAUxsB,IAAI8sB,IACfN,EAAUvuB,IAAI6uB,EAAY,CAAC,GAE/B,MAAMC,EAAgBP,EAAUxf,IAAI8f,GAC9BvzB,EAAMyzB,KAAKC,UAAU/xB,GAQ3B,OAHK6xB,EAAcxzB,KACfwzB,EAAcxzB,GAAO,IAAI6yB,qBAAqBM,EAA0B,CAAE1hB,UAAS9P,KAEhF6xB,EAAcxzB,EACzB,CAEsC2zB,CAAyBhyB,GAG3D,OAFAqxB,EAAkBtuB,IAAIlC,EAASghB,GAC/B8P,EAA0BM,QAAQpxB,GAC3B,KACHwwB,EAAkBlY,OAAOtY,GACzB8wB,EAA0BO,UAAUrxB,EAAQ,CAEpD,oMCrBA,SAASsxB,GAA8B,kBAAEC,EAAiB,oBAAEC,EAAmB,UAAEC,EAAS,eAAEC,EAAc,UAAErE,IACxG,IAAIllB,EAAIwpB,EAER,SAASC,EAAgBvd,EAAOwd,GAK5B,IAAI3E,EACJ,MAAM4E,EAAiB,KAChB,IAAAnb,YAAW,QACXtC,EACHoZ,SAAUsE,EAAY1d,KAEpB,SAAE4G,GAAa6W,EACf3Z,GAAU,OAAuB9D,GACjC2d,EAAcN,EAAerd,EAAO4G,GAC1C,IAAKA,GAAY,IAAW,EA+BpC,YACqB,IAAAtE,YAAW,KAAakE,OAKrC,CAQR,CA5CYoX,GACA,MAAMC,EA4ClB,SAAoC7d,GAChC,MAAM,KAAEoO,EAAI,OAAEQ,GAAW,IACzB,IAAKR,IAASQ,EACV,MAAO,CAAC,EACZ,MAAMkP,EAAW,IAAK1P,KAASQ,GAC/B,MAAO,CACHiK,eAAgBzK,aAAmC,EAASA,EAAKuK,UAAU3Y,MAAY4O,aAAuC,EAASA,EAAO+J,UAAU3Y,IAClJ8d,EAASjF,mBACTtrB,EACNqrB,eAAgBkF,EAASlF,eAEjC,CAvDqCmF,CAA2BN,GACpD5E,EAAgBgF,EAAiBhF,cAOjC/U,EAAQ5G,eAAgB,OAAiB8b,EAAW2E,EAAaF,EAAgBN,EAAqBU,EAAiBjF,eAC3H,CAKA,OAAQ,IAAAoF,MAAK,IAAc5Z,SAAU,CAAEzZ,MAAOmZ,EAAShC,SAAU,CAAC+W,GAAiB/U,EAAQ5G,eAAiB,IAAAgG,KAAI2V,EAAe,CAAE3b,cAAe4G,EAAQ5G,iBAAkBugB,IAAqB,KAAML,EAAUpE,EAAWhZ,GAAO,OAAa2d,EAAa7Z,EAAQ5G,cAAesgB,GAAcG,EAAa/W,EAAU9C,EAAQ5G,iBACnU,CAhCAggB,IAAqB,OAAaA,GAiClCK,EAAgBU,YAAc,UAA+B,iBAAdjF,EACzCA,EACA,UAAkG,QAAvFsE,EAAsC,QAAhCxpB,EAAKklB,EAAUiF,mBAAgC,IAAPnqB,EAAgBA,EAAKklB,EAAUvtB,YAAyB,IAAP6xB,EAAgBA,EAAK,QACrI,MAAMY,GAA4B,IAAAC,YAAWZ,GAE7C,OADAW,EAA0B,KAAyBlF,EAC5CkF,CACX,CACA,SAASR,GAAY,SAAEtE,IACnB,MAAMgF,GAAgB,IAAA9b,YAAW,EAAAmD,GAAoBxD,GACrD,OAAOmc,QAA8B7wB,IAAb6rB,EAClBgF,EAAgB,IAAMhF,EACtBA,CACV,iECrEA,SAASiF,EAAoBl1B,GAAK,OAAEylB,EAAM,SAAEwK,IACxC,OAAQ,IAAexpB,IAAIzG,IACvBA,EAAIiX,WAAW,YACbwO,QAAuBrhB,IAAb6rB,OACL,IAAgBjwB,IAAgB,YAARA,EACvC,qCCRA,MAAMm1B,EAAwBC,OAAOC,IAAI,uFCOzC,SAASC,EAAad,EAAazgB,EAAesgB,GAC9C,OAAO,IAAA7Z,cAAa+a,IACZA,GACAf,EAAYgB,SAAWhB,EAAYgB,QAAQD,GAE3CxhB,IACIwhB,EACAxhB,EAAcsV,MAAMkM,GAGpBxhB,EAAcwV,WAGlB8K,IAC2B,mBAAhBA,EACPA,EAAYkB,IAEP,OAAYlB,KACjBA,EAAY/wB,QAAUiyB,GAE9B,GAOJ,CAACxhB,GACL,gKCxBA,SAAS0hB,EAAiB5F,EAAW2E,EAAa3d,EAAOmd,EAAqB0B,GAC1E,IAAI/qB,EAAIwpB,EACR,MAAQpgB,cAAe+D,IAAW,IAAAqB,YAAW,KACvCwc,GAAc,IAAAxc,YAAW,KACzBjE,GAAkB,IAAAiE,YAAW,KAC7Byc,GAAsB,IAAAzc,YAAW,KAAqBuE,cACtDmY,GAAmB,IAAA5c,QAAO,MAIhC+a,EAAsBA,GAAuB2B,EAAYG,UACpDD,EAAiBvyB,SAAW0wB,IAC7B6B,EAAiBvyB,QAAU0wB,EAAoBnE,EAAW,CACtD2E,cACA1c,SACAjB,QACA3B,kBACA6gB,wBAAuB7gB,IACW,IAA5BA,EAAgB+E,QAEtB2b,yBAGR,MAAM7hB,EAAgB8hB,EAAiBvyB,QAKjC0yB,GAA2B,IAAA7c,YAAW,MACxCpF,GACCA,EAAcsR,aACfqQ,GACwB,SAAvB3hB,EAAc5Q,MAA0C,QAAvB4Q,EAAc5Q,MA2DxD,SAA8B4Q,EAAe8C,EAAO6e,EAA2BO,GAC3E,MAAM,SAAEhG,EAAQ,OAAExK,EAAM,KAAER,EAAI,gBAAE+B,EAAe,aAAEkP,EAAY,WAAEC,GAAgBtf,EAC/E9C,EAAcsR,WAAa,IAAIqQ,EAA0B3hB,EAAcU,aAAcoC,EAAM,8BACrFzS,EACAgyB,EAAyBriB,EAAc+D,SAC7C/D,EAAcsR,WAAWgL,WAAW,CAChCJ,WACAxK,SACA4Q,oBAAqBjsB,QAAQ6a,IAAU+B,IAAmB,OAAYA,GACtEjT,gBAQAuiB,cAAiC,iBAAX7Q,EAAsBA,EAAS,OACrDwQ,yBACAC,eACAC,cAER,CAhFQI,CAAqBV,EAAiBvyB,QAASuT,EAAO6e,EAA2BM,GAErF,MAAM1H,GAAY,IAAArV,SAAO,IACzB,IAAAG,qBAAmB,KAKXrF,GAAiBua,EAAUhrB,SAC3ByQ,EAAcjJ,OAAO+L,EAAO3B,EAChC,IAMJ,MAAMshB,EAAoB3f,EAAM,KAC1B4f,GAAe,IAAAxd,QAAO7O,QAAQosB,MACY,QAAzC7rB,EAAKgK,OAAO+hB,+BAA4C,IAAP/rB,OAAgB,EAASA,EAAGmC,KAAK6H,OAAQ6hB,MAC9C,QAA7CrC,EAAKxf,OAAOgiB,mCAAgD,IAAPxC,OAAgB,EAASA,EAAGrnB,KAAK6H,OAAQ6hB,KAqCpG,OApCA,QAA0B,KACjBziB,IAELua,EAAUhrB,SAAU,EACpBqR,OAAOiiB,iBAAkB,EACzB7iB,EAAc8iB,iBACd,IAAUne,OAAO3E,EAAc2E,QAW3B+d,EAAanzB,SAAWyQ,EAAcO,gBACtCP,EAAcO,eAAewiB,iBACjC,KAEJ,IAAAla,YAAU,KACD7I,KAEA0iB,EAAanzB,SAAWyQ,EAAcO,gBACvCP,EAAcO,eAAewiB,iBAE7BL,EAAanzB,UAEbsf,gBAAe,KACX,IAAIjY,EAC0C,QAA7CA,EAAKgK,OAAOoiB,mCAAgD,IAAPpsB,GAAyBA,EAAGmC,KAAK6H,OAAQ6hB,EAAkB,IAErHC,EAAanzB,SAAU,GAC3B,IAEGyQ,CACX,CAwBA,SAASqiB,EAAyBriB,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcpS,QAAQq1B,gBACvBjjB,EAAcsR,WACd+Q,EAAyBriB,EAAc+D,OACjD,yIC1GA,MAAMmf,EAAsBC,GAAW,CAACrgB,EAAO4G,KAC3C,MAAM9C,GAAU,IAAAxB,YAAW,KACrBjE,GAAkB,IAAAiE,YAAW,KAC7Bge,EAAO,IAnBjB,UAAmB,4BAAEC,EAA2B,kBAAEC,EAAiB,SAAE7zB,GAAaqT,EAAO8D,EAASzF,GAC9F,MAAMpR,EAAQ,CACV2Q,aAAc6iB,EAAiBzgB,EAAO8D,EAASzF,EAAiBkiB,GAChEG,YAAaF,KAWjB,OATI7zB,IAMAM,EAAM0xB,QAAWD,GAAa/xB,EAAS,CAAEqT,QAAOvT,QAASiyB,KAAazxB,IACtEA,EAAMN,SAAYuQ,GAAkBvQ,EAASuQ,IAE1CjQ,CACX,CAIuB0zB,CAAUN,EAAQrgB,EAAO8D,EAASzF,GACrD,OAAOuI,EAAW0Z,KAAS,OAAYA,EAAK,EAEhD,SAASG,EAAiBzgB,EAAO8D,EAASzF,EAAiBuiB,GACvD,MAAM1oB,EAAS,CAAC,EACV2oB,EAAeD,EAAmB5gB,EAAO,CAAC,GAChD,IAAK,MAAM7W,KAAO03B,EACd3oB,EAAO/O,IAAO,OAAmB03B,EAAa13B,IAElD,IAAI,QAAEia,EAAO,QAAE/N,GAAY2K,EAC3B,MAAM8gB,GAA0B,OAAsB9gB,GAChD+gB,GAAkB,OAAc/gB,GAClC8D,GACAid,IACCD,IACiB,IAAlB9gB,EAAMmH,eACU5Z,IAAZ6V,IACAA,EAAUU,EAAQV,cACN7V,IAAZ8H,IACAA,EAAUyO,EAAQzO,UAE1B,IAAI2rB,IAA4B3iB,IACE,IAA5BA,EAAgB+E,QAEtB4d,EAA4BA,IAAyC,IAAZ5d,EACzD,MAAM6d,EAAeD,EAA4B3rB,EAAU+N,EAC3D,GAAI6d,GACwB,kBAAjBA,KACN,OAAoBA,GAAe,CACpC,MAAMC,EAAOhsB,MAAMC,QAAQ8rB,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAItsB,EAAI,EAAGA,EAAIusB,EAAKzzB,OAAQkH,IAAK,CAClC,MAAM3G,GAAW,OAAwBgS,EAAOkhB,EAAKvsB,IACrD,GAAI3G,EAAU,CACV,MAAM,cAAEsP,EAAa,WAAEjB,KAAepF,GAAWjJ,EACjD,IAAK,MAAM7E,KAAO8N,EAAQ,CACtB,IAAI4G,EAAc5G,EAAO9N,GACzB,GAAI+L,MAAMC,QAAQ0I,GAAc,CAQ5BA,EAAcA,EAHAmjB,EACRnjB,EAAYpQ,OAAS,EACrB,EAEV,CACoB,OAAhBoQ,IACA3F,EAAO/O,GAAO0U,EAEtB,CACA,IAAK,MAAM1U,KAAOmU,EACdpF,EAAO/O,GAAOmU,EAAcnU,EAEpC,CACJ,CACJ,CACA,OAAO+O,CACX,oCC/EA,MAAMipB,EAAmB,IAAI9sB,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS+sB,EAAkBj4B,GACvB,OAAQA,EAAIiX,WAAW,UAClBjX,EAAIiX,WAAW,SAAmB,cAARjX,GAC3BA,EAAIiX,WAAW,WACfjX,EAAIiX,WAAW,UACfjX,EAAIiX,WAAW,UACfjX,EAAIiX,WAAW,aACf+gB,EAAiBvxB,IAAIzG,EAC7B,qGC/CA,MAAMk4B,EAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,EAAaD,EAAQ5zB,OACrB8zB,EAAY52B,GAA2B,iBAAVA,EAAqBokB,WAAWpkB,GAASA,EACtE62B,EAAQ72B,GAA2B,iBAAVA,GAAsB,EAAA82B,GAAGnhB,KAAK3V,GAC7D,SAAS+2B,EAAUzqB,EAAQ0qB,EAAQC,EAAMzuB,EAAU0uB,EAAwBC,GACnED,GACA5qB,EAAO8qB,SAAU,OAAU,OAEVx0B,IAAjBq0B,EAAKG,QAAwBH,EAAKG,QAAU,EAAGC,EAAgB7uB,IAC/D8D,EAAOgrB,aAAc,YAA6B10B,IAAnBo0B,EAAOI,QAAwBJ,EAAOI,QAAU,EAAG,EAAGG,EAAiB/uB,KAEjG2uB,IACL7qB,EAAO8qB,SAAU,YAA6Bx0B,IAAnBo0B,EAAOI,QAAwBJ,EAAOI,QAAU,OAAoBx0B,IAAjBq0B,EAAKG,QAAwBH,EAAKG,QAAU,EAAG5uB,IAKjI,IAAK,IAAIwB,EAAI,EAAGA,EAAI2sB,EAAY3sB,IAAK,CACjC,MAAMwtB,EAAc,SAASd,EAAQ1sB,WACrC,IAAIytB,EAAeC,EAAUV,EAAQQ,GACjCG,EAAaD,EAAUT,EAAMO,GACjC,QAAqB50B,IAAjB60B,QAA6C70B,IAAf+0B,EAC9B,SACJF,IAAiBA,EAAe,GAChCE,IAAeA,EAAa,GACI,IAAjBF,GACI,IAAfE,GACAd,EAAKY,KAAkBZ,EAAKc,IAE5BrrB,EAAOkrB,GAAexvB,KAAKK,KAAI,OAAUuuB,EAASa,GAAeb,EAASe,GAAanvB,GAAW,IAC9F,KAAQmN,KAAKgiB,IAAe,KAAQhiB,KAAK8hB,MACzCnrB,EAAOkrB,IAAgB,MAI3BlrB,EAAOkrB,GAAeG,CAE9B,EAIIX,EAAOY,QAAUX,EAAKW,UACtBtrB,EAAOsrB,QAAS,OAAUZ,EAAOY,QAAU,EAAGX,EAAKW,QAAU,EAAGpvB,GAExE,CACA,SAASkvB,EAAUnqB,EAAQsqB,GACvB,YAA8Bj1B,IAAvB2K,EAAOsqB,GACRtqB,EAAOsqB,GACPtqB,EAAOsiB,YACjB,CAwBA,MAAMwH,EAAgCS,EAAS,EAAG,GAAK,MACjDP,EAAiCO,EAAS,GAAK,IAAM,KAC3D,SAASA,EAAS7vB,EAAKI,EAAKiC,GACxB,OAAQ0R,GAEAA,EAAI/T,EACG,EACP+T,EAAI3T,EACG,EACJiC,GAAO,OAASrC,EAAKI,EAAK2T,GAEzC,oBCtFA,SAAS+b,GAAwB,IAAEnhB,EAAG,KAAEE,EAAI,MAAEE,EAAK,OAAEmR,IACjD,MAAO,CACH/oB,EAAG,CAAE6I,IAAK6O,EAAMzO,IAAK2O,GACrB3X,EAAG,CAAE4I,IAAK2O,EAAKvO,IAAK8f,GAE5B,CACA,SAAS6P,GAAwB,EAAE54B,EAAC,EAAEC,IAClC,MAAO,CAAEuX,IAAKvX,EAAE4I,IAAK+O,MAAO5X,EAAEiJ,IAAK8f,OAAQ9oB,EAAEgJ,IAAKyO,KAAM1X,EAAE6I,IAC9D,CAMA,SAASgwB,EAAmB9Y,EAAO0L,GAC/B,IAAKA,EACD,OAAO1L,EACX,MAAM+Y,EAAUrN,EAAe,CAAEzrB,EAAG+f,EAAMrI,KAAMzX,EAAG8f,EAAMvI,MACnDuhB,EAActN,EAAe,CAAEzrB,EAAG+f,EAAMnI,MAAO3X,EAAG8f,EAAMgJ,SAC9D,MAAO,CACHvR,IAAKshB,EAAQ74B,EACbyX,KAAMohB,EAAQ94B,EACd+oB,OAAQgQ,EAAY94B,EACpB2X,MAAOmhB,EAAY/4B,EAE3B,sDCzBA,SAASg5B,EAAarU,EAAMsU,GACxBtU,EAAK9b,IAAMowB,EAAWpwB,IACtB8b,EAAK1b,IAAMgwB,EAAWhwB,GAC1B,CAMA,SAASiwB,EAAYC,EAAKC,GACtBJ,EAAaG,EAAIn5B,EAAGo5B,EAAUp5B,GAC9Bg5B,EAAaG,EAAIl5B,EAAGm5B,EAAUn5B,EAClC,CAMA,SAASo5B,EAAkB9rB,EAAO+rB,GAC9B/rB,EAAM4a,UAAYmR,EAAYnR,UAC9B5a,EAAMgsB,MAAQD,EAAYC,MAC1BhsB,EAAMiW,YAAc8V,EAAY9V,YAChCjW,EAAMX,OAAS0sB,EAAY1sB,MAC/B,gICtBA,SAAS4sB,EAAWzZ,EAAOwZ,EAAO/V,GAG9B,OAAOA,EADQ+V,GADYxZ,EAAQyD,EAGvC,CAIA,SAASiW,EAAgB1Z,EAAOoI,EAAWoR,EAAO/V,EAAakW,GAI3D,YAHiBl2B,IAAbk2B,IACA3Z,EAAQyZ,EAAWzZ,EAAO2Z,EAAUlW,IAEjCgW,EAAWzZ,EAAOwZ,EAAO/V,GAAe2E,CACnD,CAIA,SAASwR,EAAehV,EAAMwD,EAAY,EAAGoR,EAAQ,EAAG/V,EAAakW,GACjE/U,EAAK9b,IAAM4wB,EAAgB9U,EAAK9b,IAAKsf,EAAWoR,EAAO/V,EAAakW,GACpE/U,EAAK1b,IAAMwwB,EAAgB9U,EAAK1b,IAAKkf,EAAWoR,EAAO/V,EAAakW,EACxE,CAIA,SAASE,EAAcT,GAAK,EAAEn5B,EAAC,EAAEC,IAC7B05B,EAAeR,EAAIn5B,EAAGA,EAAEmoB,UAAWnoB,EAAEu5B,MAAOv5B,EAAEwjB,aAC9CmW,EAAeR,EAAIl5B,EAAGA,EAAEkoB,UAAWloB,EAAEs5B,MAAOt5B,EAAEujB,YAClD,CACA,MAAMqW,EAAsB,cACtBC,EAAsB,gBAO5B,SAASC,EAAgBZ,EAAKa,EAAWC,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASv2B,OAC5B,IAAKy2B,EACD,OAGJ,IAAI9R,EACA9a,EAFJysB,EAAUh6B,EAAIg6B,EAAU/5B,EAAI,EAG5B,IAAK,IAAI2K,EAAI,EAAGA,EAAIuvB,EAAYvvB,IAAK,CACjCyd,EAAO4R,EAASrvB,GAChB2C,EAAQ8a,EAAK+R,gBAKb,MAAM,cAAEjnB,GAAkBkV,EAAKtnB,QAC3BoS,GACAA,EAAc8C,MAAM0C,OACkB,aAAtCxF,EAAc8C,MAAM0C,MAAM0hB,UAG1BH,GACA7R,EAAKtnB,QAAQu0B,cACbjN,EAAKiS,QACLjS,IAASA,EAAKxX,MACd0pB,EAAapB,EAAK,CACdn5B,GAAIqoB,EAAKiS,OAAOrvB,OAAOjL,EACvBC,GAAIooB,EAAKiS,OAAOrvB,OAAOhL,IAG3BsN,IAEAysB,EAAUh6B,GAAKuN,EAAMvN,EAAEu5B,MACvBS,EAAU/5B,GAAKsN,EAAMtN,EAAEs5B,MAEvBK,EAAcT,EAAK5rB,IAEnB2sB,IAAsB,QAAa7R,EAAKxU,eACxC0mB,EAAapB,EAAK9Q,EAAKxU,cAE/B,CAKImmB,EAAUh6B,EAAI85B,GACdE,EAAUh6B,EAAI65B,IACdG,EAAUh6B,EAAI,GAEdg6B,EAAU/5B,EAAI65B,GACdE,EAAU/5B,EAAI45B,IACdG,EAAU/5B,EAAI,EAEtB,CACA,SAASu6B,EAAc7V,EAAM8V,GACzB9V,EAAK9b,IAAM8b,EAAK9b,IAAM4xB,EACtB9V,EAAK1b,IAAM0b,EAAK1b,IAAMwxB,CAC1B,CAMA,SAASC,EAAc/V,EAAMgW,EAAeC,EAAWlB,EAAUmB,EAAa,IAG1ElB,EAAehV,EAAMgW,EAAeC,GAFhB,OAAUjW,EAAK9b,IAAK8b,EAAK1b,IAAK4xB,GAEUnB,EAChE,CAIA,SAASa,EAAapB,EAAK3R,GACvBkT,EAAcvB,EAAIn5B,EAAGwnB,EAAUxnB,EAAGwnB,EAAUsT,OAAQtT,EAAU+R,MAAO/R,EAAUuT,SAC/EL,EAAcvB,EAAIl5B,EAAGunB,EAAUvnB,EAAGunB,EAAUwT,OAAQxT,EAAU+R,MAAO/R,EAAUyT,QACnF,yFClHA,MACMC,EAAY,MACZC,EAAY,OAEZC,GAAgB,IAChBC,EAAgB,IACtB,SAASC,EAAW3W,GAChB,OAAOA,EAAK1b,IAAM0b,EAAK9b,GAC3B,CACA,SAAS0yB,EAAO36B,EAAOsM,EAAQsuB,GAC3B,OAAO5yB,KAAKmE,IAAInM,EAAQsM,IAAWsuB,CACvC,CACA,SAASC,EAAcluB,EAAO8b,EAAQnc,EAAQN,EAAS,IACnDW,EAAMX,OAASA,EACfW,EAAMiW,aAAc,OAAU6F,EAAOxgB,IAAKwgB,EAAOpgB,IAAKsE,EAAMX,QAC5DW,EAAMgsB,MAAQ+B,EAAWpuB,GAAUouB,EAAWjS,GAC9C9b,EAAM4a,WACF,OAAUjb,EAAOrE,IAAKqE,EAAOjE,IAAKsE,EAAMX,QAAUW,EAAMiW,aACvDjW,EAAMgsB,OAAS2B,GAAa3tB,EAAMgsB,OAAS4B,GAC5ChrB,MAAM5C,EAAMgsB,UACZhsB,EAAMgsB,MAAQ,IAEbhsB,EAAM4a,WAAaiT,GACpB7tB,EAAM4a,WAAakT,GACnBlrB,MAAM5C,EAAM4a,cACZ5a,EAAM4a,UAAY,EAE1B,CACA,SAASuT,EAAanuB,EAAO8b,EAAQnc,EAAQN,GACzC6uB,EAAcluB,EAAMvN,EAAGqpB,EAAOrpB,EAAGkN,EAAOlN,EAAG4M,EAASA,EAAOmuB,aAAUv3B,GACrEi4B,EAAcluB,EAAMtN,EAAGopB,EAAOppB,EAAGiN,EAAOjN,EAAG2M,EAASA,EAAOquB,aAAUz3B,EACzE,CACA,SAASm4B,EAAiBzuB,EAAQ0uB,EAAU1kB,GACxChK,EAAOrE,IAAMqO,EAAOrO,IAAM+yB,EAAS/yB,IACnCqE,EAAOjE,IAAMiE,EAAOrE,IAAMyyB,EAAWM,EACzC,CACA,SAASC,EAAgB3uB,EAAQ0uB,EAAU1kB,GACvCykB,EAAiBzuB,EAAOlN,EAAG47B,EAAS57B,EAAGkX,EAAOlX,GAC9C27B,EAAiBzuB,EAAOjN,EAAG27B,EAAS37B,EAAGiX,EAAOjX,EAClD,CACA,SAAS67B,EAAyB5uB,EAAQ2X,EAAQ3N,GAC9ChK,EAAOrE,IAAMgc,EAAOhc,IAAMqO,EAAOrO,IACjCqE,EAAOjE,IAAMiE,EAAOrE,IAAMyyB,EAAWzW,EACzC,CACA,SAASkX,EAAqB7uB,EAAQ2X,EAAQ3N,GAC1C4kB,EAAyB5uB,EAAOlN,EAAG6kB,EAAO7kB,EAAGkX,EAAOlX,GACpD87B,EAAyB5uB,EAAOjN,EAAG4kB,EAAO5kB,EAAGiX,EAAOjX,EACxD,8EC1CA,SAAS+7B,EAAiBjc,EAAOoI,EAAWoR,EAAO/V,EAAakW,GAM5D,OALA3Z,GAASoI,EACTpI,GAAQ,QAAWA,EAAO,EAAIwZ,EAAO/V,QACpBhgB,IAAbk2B,IACA3Z,GAAQ,QAAWA,EAAO,EAAI2Z,EAAUlW,IAErCzD,CACX,CAsBA,SAASkc,EAAqBtX,EAAMuX,GAAa98B,EAAK+8B,EAAUC,GAAYxvB,EAAQyvB,IAlBpF,SAAyB1X,EAAMwD,EAAY,EAAGoR,EAAQ,EAAG3sB,EAAS,GAAK8sB,EAAUT,EAAatU,EAAM0X,EAAa1X,GACzG,KAAQpO,KAAK4R,KACbA,EAAYnD,WAAWmD,GAEvBA,GADyB,OAAUkU,EAAWxzB,IAAKwzB,EAAWpzB,IAAKkf,EAAY,KAChDkU,EAAWxzB,KAE9C,GAAyB,iBAAdsf,EACP,OACJ,IAAI3E,GAAc,OAAUyV,EAAWpwB,IAAKowB,EAAWhwB,IAAK2D,GACxD+X,IAASsU,IACTzV,GAAe2E,GACnBxD,EAAK9b,IAAMmzB,EAAiBrX,EAAK9b,IAAKsf,EAAWoR,EAAO/V,EAAakW,GACrE/U,EAAK1b,IAAM+yB,EAAiBrX,EAAK1b,IAAKkf,EAAWoR,EAAO/V,EAAakW,EACzE,CAMI4C,CAAgB3X,EAAMuX,EAAW98B,GAAM88B,EAAWC,GAAWD,EAAWE,GAAYF,EAAW3C,MAAO3sB,EAAQyvB,EAClH,CAIA,MAAME,EAAQ,CAAC,IAAK,SAAU,WACxBC,EAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,EAAoBtD,EAAK+C,EAAY9C,EAAWsD,GACrDT,EAAqB9C,EAAIn5B,EAAGk8B,EAAYK,EAAOnD,EAAYA,EAAUp5B,OAAIwD,EAAWk5B,EAAYA,EAAU18B,OAAIwD,GAC9Gy4B,EAAqB9C,EAAIl5B,EAAGi8B,EAAYM,EAAOpD,EAAYA,EAAUn5B,OAAIuD,EAAWk5B,EAAYA,EAAUz8B,OAAIuD,EAClH,+CCnDA,MAMMm5B,EAAc,KAAM,CACtB38B,EAP0B,CAC1BmoB,UAAW,EACXoR,MAAO,EACP3sB,OAAQ,EACR4W,YAAa,GAIbvjB,EAR0B,CAC1BkoB,UAAW,EACXoR,MAAO,EACP3sB,OAAQ,EACR4W,YAAa,KAOXoZ,EAAY,KAAM,CACpB58B,EAFqB,CAAG6I,IAAK,EAAGI,IAAK,GAGrChJ,EAHqB,CAAG4I,IAAK,EAAGI,IAAK,6FCRzC,SAAS4zB,EAAgBtvB,GACrB,OAA2B,IAApBA,EAAM4a,WAAmC,IAAhB5a,EAAMgsB,KAC1C,CACA,SAASuD,EAAYvvB,GACjB,OAAOsvB,EAAgBtvB,EAAMvN,IAAM68B,EAAgBtvB,EAAMtN,EAC7D,CACA,SAAS88B,EAAWxtB,EAAGC,GACnB,OAAOD,EAAE1G,MAAQ2G,EAAE3G,KAAO0G,EAAEtG,MAAQuG,EAAEvG,GAC1C,CACA,SAAS+zB,EAAUztB,EAAGC,GAClB,OAAOutB,EAAWxtB,EAAEvP,EAAGwP,EAAExP,IAAM+8B,EAAWxtB,EAAEtP,EAAGuP,EAAEvP,EACrD,CACA,SAASg9B,EAAkB1tB,EAAGC,GAC1B,OAAQ5G,KAAKE,MAAMyG,EAAE1G,OAASD,KAAKE,MAAM0G,EAAE3G,MACvCD,KAAKE,MAAMyG,EAAEtG,OAASL,KAAKE,MAAM0G,EAAEvG,IAC3C,CACA,SAASi0B,EAAiB3tB,EAAGC,GACzB,OAAOytB,EAAkB1tB,EAAEvP,EAAGwP,EAAExP,IAAMi9B,EAAkB1tB,EAAEtP,EAAGuP,EAAEvP,EACnE,CACA,SAASk9B,EAAYhE,GACjB,OAAO,QAAWA,EAAIn5B,IAAK,QAAWm5B,EAAIl5B,EAC9C,CACA,SAASm9B,EAAgB7tB,EAAGC,GACxB,OAAQD,EAAE4Y,YAAc3Y,EAAE2Y,WACtB5Y,EAAEgqB,QAAU/pB,EAAE+pB,OACdhqB,EAAEiU,cAAgBhU,EAAEgU,WAC5B,iECzBA,MAAM6Z,GAAyB,QAAqB,CAChDC,qBAAsB,CAACllB,EAAK9C,KAAW,OAAY8C,EAAK,SAAU9C,GAClEioB,cAAe,KAAM,CACjBv9B,EAAG4Y,SAAS4kB,gBAAgBC,YAAc7kB,SAAS8kB,KAAKD,WACxDx9B,EAAG2Y,SAAS4kB,gBAAgBG,WAAa/kB,SAAS8kB,KAAKC,YAE3DC,kBAAmB,KAAM,mECN7B,MAAMC,EAAqB,CACvBn7B,aAASc,GAEPs6B,GAAqB,QAAqB,CAC5CP,cAAgB5I,IAAa,CACzB30B,EAAG20B,EAAS8I,WACZx9B,EAAG00B,EAASgJ,YAEhBI,cAAe,KACX,IAAKF,EAAmBn7B,QAAS,CAC7B,MAAMs7B,EAAe,IAAI,IAAuB,CAAC,GACjDA,EAAavV,MAAM1U,QACnBiqB,EAAavO,WAAW,CAAE6F,cAAc,IACxCuI,EAAmBn7B,QAAUs7B,CACjC,CACA,OAAOH,EAAmBn7B,OAAO,EAErCu7B,eAAgB,CAACtJ,EAAU/zB,KACvB+zB,EAAShc,MAAM6O,eAAsBhkB,IAAV5C,EAAsBA,EAAQ,MAAM,EAEnEg9B,kBAAoBjJ,GAAanrB,QAAuD,UAA/CuK,OAAOmqB,iBAAiBvJ,GAAUwJ,2YCQ/E,MAAMC,EAAU,CACZC,MAAO,EACPC,uBAAwB,EACxBC,sBAAuB,GAErBC,EAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,EAAmB,CAAEC,WAAY,UAKjCC,EAAkB,IACxB,IAAIzmB,EAAK,EACT,SAAS0mB,EAAyBx/B,EAAK+T,EAAehF,EAAQ0wB,GAC1D,MAAM,aAAEhrB,GAAiBV,EAErBU,EAAazU,KACb+O,EAAO/O,GAAOyU,EAAazU,GAC3B+T,EAAc2rB,eAAe1/B,EAAK,GAC9By/B,IACAA,EAAsBz/B,GAAO,GAGzC,CACA,SAAS2/B,EAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAenuB,OAASmuB,EACxB,OACJ,MAAM,cAAE7rB,GAAkB6rB,EAAej+B,QACzC,IAAKoS,EACD,OACJ,MAAMc,GAAW,OAAqBd,GACtC,GAAIY,OAAOgiB,4BAA4B9hB,EAAU,aAAc,CAC3D,MAAM,OAAE4Q,EAAM,SAAEwK,GAAa2P,EAAej+B,QAC5CgT,OAAOmrB,+BAA+BjrB,EAAU,YAAa,OAAS4Q,GAAUwK,GACpF,CACA,MAAM,OAAEnY,GAAW8nB,EACf9nB,IAAWA,EAAO+nB,2BAClBF,EAAuC7nB,EAE/C,CACA,SAASye,GAAqB,qBAAE2H,EAAoB,cAAES,EAAa,cAAER,EAAa,kBAAEK,EAAiB,eAAEK,IACnG,OAAO,MAAMpP,eACT,WAAArtB,CAAYqS,EAAe,CAAC,EAAGqD,GAAS6mB,aAAqD,EAASA,MAIlGl8B,KAAKqW,GAAKA,IAIVrW,KAAKs9B,YAAc,EAOnBt9B,KAAKkW,SAAW,IAAIzN,IAKpBzI,KAAKd,QAAU,CAAC,EAMhBc,KAAKu9B,iBAAkB,EACvBv9B,KAAK6iB,oBAAqB,EAO1B7iB,KAAKw9B,eAAgB,EAKrBx9B,KAAKy9B,mBAAoB,EAKzBz9B,KAAK09B,yBAA0B,EAK/B19B,KAAK29B,kBAAmB,EAIxB39B,KAAK49B,uBAAwB,EAC7B59B,KAAK69B,uBAAwB,EAK7B79B,KAAK89B,YAAa,EAIlB99B,KAAK+9B,OAAQ,EAKb/9B,KAAKg+B,YAAa,EAIlBh+B,KAAKi+B,sBAAuB,EAO5Bj+B,KAAKo9B,2BAA4B,EASjCp9B,KAAKm4B,UAAY,CAAEh6B,EAAG,EAAGC,EAAG,GAI5B4B,KAAKk+B,cAAgB,IAAIzlB,IACzBzY,KAAKm+B,iBAAkB,EAEvBn+B,KAAKo+B,iBAAkB,EACvBp+B,KAAKq+B,eAAiB,IAAMr+B,KAAKqI,SACjCrI,KAAKs+B,2BAA4B,EACjCt+B,KAAKu+B,kBAAoB,KACjBv+B,KAAK89B,aACL99B,KAAK89B,YAAa,EAClB99B,KAAKw+B,oBACT,EAOJx+B,KAAKy+B,iBAAmB,KACpBz+B,KAAKs+B,2BAA4B,EAK7B,IAAYv/B,QACZw9B,EAAQC,MACJD,EAAQE,uBACJF,EAAQG,sBACJ,GAEhB18B,KAAKw8B,MAAMjpB,QAAQmrB,GACnB1+B,KAAKw8B,MAAMjpB,QAAQorB,GACnB3+B,KAAKw8B,MAAMjpB,QAAQqrB,GACnB5+B,KAAKw8B,MAAMjpB,QAAQsrB,GACf,IAAYC,sBACZ,IAAYA,qBAAqBvC,EACrC,EAKJv8B,KAAK++B,yBAA2B,EAChC/+B,KAAKg/B,cAAe,EACpBh/B,KAAKi/B,WAAY,EACjBj/B,KAAKk/B,kBAAoB,EAKzBl/B,KAAKm/B,YAAc,IAAI1mB,IACvBzY,KAAKgS,aAAeA,EACpBhS,KAAKgP,KAAOqG,EAASA,EAAOrG,MAAQqG,EAASrV,KAC7CA,KAAKo/B,KAAO/pB,EAAS,IAAIA,EAAO+pB,KAAM/pB,GAAU,GAChDrV,KAAKqV,OAASA,EACdrV,KAAKq/B,MAAQhqB,EAASA,EAAOgqB,MAAQ,EAAI,EACzC,IAAK,IAAIt2B,EAAI,EAAGA,EAAI/I,KAAKo/B,KAAKv9B,OAAQkH,IAClC/I,KAAKo/B,KAAKr2B,GAAGk1B,sBAAuB,EAEpCj+B,KAAKgP,OAAShP,OACdA,KAAKw8B,MAAQ,IAAI,IACzB,CACA,gBAAA3e,CAAiBhe,EAAM8d,GAInB,OAHK3d,KAAKk+B,cAAcl6B,IAAInE,IACxBG,KAAKk+B,cAAcj8B,IAAIpC,EAAM,IAAI,KAE9BG,KAAKk+B,cAAcltB,IAAInR,GAAMohB,IAAItD,EAC5C,CACA,eAAA2hB,CAAgBz/B,KAAS0/B,GACrB,MAAMC,EAAsBx/B,KAAKk+B,cAAcltB,IAAInR,GACnD2/B,GAAuBA,EAAoB/rB,UAAU8rB,EACzD,CACA,YAAAE,CAAa5/B,GACT,OAAOG,KAAKk+B,cAAcl6B,IAAInE,EAClC,CAIA,KAAA+mB,CAAMkM,EAAU0K,EAAgBx9B,KAAKgP,KAAKmvB,iBACtC,GAAIn+B,KAAK8yB,SACL,OACJ9yB,KAAK+9B,OAAQ,OAAajL,GAC1B9yB,KAAK8yB,SAAWA,EAChB,MAAM,SAAEtF,EAAQ,OAAExK,EAAM,cAAE1R,GAAkBtR,KAAKd,QASjD,GARIoS,IAAkBA,EAAczQ,SAChCyQ,EAAcsV,MAAMkM,GAExB9yB,KAAKgP,KAAKwtB,MAAMvb,IAAIjhB,MACpBA,KAAKqV,QAAUrV,KAAKqV,OAAOa,SAAS+K,IAAIjhB,MACpCw9B,IAAkBxa,GAAUwK,KAC5BxtB,KAAKw9B,eAAgB,GAErB/B,EAAsB,CACtB,IAAIiE,EACJ,MAAMC,EAAsB,IAAO3/B,KAAKgP,KAAK6uB,uBAAwB,EACrEpC,EAAqB3I,GAAU,KAC3B9yB,KAAKgP,KAAK6uB,uBAAwB,EAClC6B,GAAeA,IACfA,GAAc,OAAMC,EAAqB,KACrC,IAAsBC,yBACtB,IAAsBA,wBAAyB,EAC/C5/B,KAAKw8B,MAAMjpB,QAAQssB,GACvB,GAER,CACIrS,GACAxtB,KAAKgP,KAAK8wB,mBAAmBtS,EAAUxtB,OAGd,IAAzBA,KAAKd,QAAQuK,SACb6H,IACCkc,GAAYxK,IACbhjB,KAAK6d,iBAAiB,aAAa,EAAGnS,QAAO2a,mBAAkB0Z,2BAA0B/c,OAAQgd,MAC7F,GAAIhgC,KAAKigC,yBAGL,OAFAjgC,KAAKqL,YAAS1J,OACd3B,KAAKkgC,oBAAiBv+B,GAI1B,MAAMw+B,EAAmBngC,KAAKd,QAAQuR,YAClCa,EAAcG,wBACd2uB,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BhvB,EAAcvN,WAKvEw8B,GAAoBvgC,KAAKwgC,gBAC1B,QAAiBxgC,KAAKwgC,aAAcR,GAYnCS,GAAgCpa,GAAoB0Z,EAC1D,GAAI//B,KAAKd,QAAQw0B,YACb1zB,KAAK0gC,YACLD,GACCpa,IACIka,IAAqBvgC,KAAKquB,kBAAoB,CAC/CruB,KAAK0gC,aACL1gC,KAAK2gC,aAAe3gC,KAAK0gC,WACzB1gC,KAAK2gC,aAAaA,kBAAeh/B,GAErC3B,KAAK4gC,mBAAmBl1B,EAAO+0B,GAC/B,MAAMI,EAAmB,KAClB,OAAmBV,EAAkB,UACxCl4B,OAAQo4B,EACRv/B,WAAYw/B,IAEZhvB,EAAce,oBACdrS,KAAKd,QAAQw0B,cACbmN,EAAiB1/B,MAAQ,EACzB0/B,EAAiBngC,MAAO,GAE5BV,KAAKikB,eAAe4c,EACxB,MAOSxa,GACDwZ,EAAgB7/B,MAEhBA,KAAKsuB,UAAYtuB,KAAKd,QAAQuY,gBAC9BzX,KAAKd,QAAQuY,iBAGrBzX,KAAKwgC,aAAeR,CAAS,GAGzC,CACA,OAAAlZ,GACI9mB,KAAKd,QAAQsuB,UAAYxtB,KAAK+tB,aAC9B/tB,KAAKgP,KAAKwtB,MAAM9N,OAAO1uB,MACvB,MAAMkuB,EAAQluB,KAAKmuB,WACnBD,GAASA,EAAMQ,OAAO1uB,MACtBA,KAAKqV,QAAUrV,KAAKqV,OAAOa,SAASmC,OAAOrY,MAC3CA,KAAK8yB,cAAWnxB,GAChB,QAAY3B,KAAKy+B,iBACrB,CAEA,WAAAqC,GACI9gC,KAAK49B,uBAAwB,CACjC,CACA,aAAAmD,GACI/gC,KAAK49B,uBAAwB,CACjC,CACA,eAAAoD,GACI,OAAOhhC,KAAK49B,uBAAyB59B,KAAK69B,qBAC9C,CACA,sBAAAoC,GACI,OAAQjgC,KAAK6iB,oBACR7iB,KAAKqV,QAAUrV,KAAKqV,OAAO4qB,2BAC5B,CACR,CAEA,WAAAgB,GACQjhC,KAAKghC,oBAEThhC,KAAK89B,YAAa,EAClB99B,KAAKw8B,OAASx8B,KAAKw8B,MAAMjpB,QAAQ2tB,GACjClhC,KAAKs9B,cACT,CACA,oBAAA6D,GACI,MAAM,cAAE7vB,GAAkBtR,KAAKd,QAC/B,OAAOoS,GAAiBA,EAAcvN,WAAWD,iBACrD,CACA,UAAAiqB,CAAWqT,GAAwB,GAE/B,GADAphC,KAAKgP,KAAKmvB,iBAAkB,EACxBn+B,KAAKgP,KAAKgyB,kBAEV,YADAhhC,KAAKd,QAAQuY,gBAAkBzX,KAAKd,QAAQuY,kBAoBhD,GALIvF,OAAOmrB,iCACNr9B,KAAKo9B,2BACNF,EAAuCl9B,OAE1CA,KAAKgP,KAAK8uB,YAAc99B,KAAKgP,KAAKiyB,cAC/BjhC,KAAKw9B,cACL,OACJx9B,KAAKw9B,eAAgB,EACrB,IAAK,IAAIz0B,EAAI,EAAGA,EAAI/I,KAAKo/B,KAAKv9B,OAAQkH,IAAK,CACvC,MAAMyd,EAAOxmB,KAAKo/B,KAAKr2B,GACvByd,EAAKyX,sBAAuB,EAC5BzX,EAAKZ,aAAa,YACdY,EAAKtnB,QAAQw0B,YACblN,EAAKuH,YAAW,EAExB,CACA,MAAM,SAAEP,EAAQ,OAAExK,GAAWhjB,KAAKd,QAClC,QAAiByC,IAAb6rB,IAA2BxK,EAC3B,OACJ,MAAMlf,EAAoB9D,KAAKmhC,uBAC/BnhC,KAAKqhC,2BAA6Bv9B,EAC5BA,EAAkB9D,KAAKgS,aAAc,SACrCrQ,EACN3B,KAAKshC,iBACLF,GAAyBphC,KAAKs/B,gBAAgB,aAClD,CACA,MAAAj3B,GACIrI,KAAKo+B,iBAAkB,EAKvB,GAJyBp+B,KAAKghC,kBAQ1B,OAHAhhC,KAAK+gC,gBACL/gC,KAAKw+B,yBACLx+B,KAAKw8B,MAAMjpB,QAAQguB,GAGlBvhC,KAAK89B,YACN99B,KAAKw8B,MAAMjpB,QAAQiuB,GAEvBxhC,KAAK89B,YAAa,EAIlB99B,KAAKw8B,MAAMjpB,QAAQkuB,GAKnBzhC,KAAKw8B,MAAMjpB,QAAQsS,GAKnB7lB,KAAKw8B,MAAMjpB,QAAQmuB,GACnB1hC,KAAKw+B,oBAML,MAAMn6B,EAAM,IAAKA,MACjB,KAAUqH,OAAQ,OAAM,EAAG,IAAO,GAAIrH,EAAM,KAAUwC,WACtD,KAAUA,UAAYxC,EACtB,KAAUkE,cAAe,EACzB,KAAWF,OAAOkX,QAAQ,MAC1B,KAAWL,UAAUK,QAAQ,MAC7B,KAAWtJ,OAAOsJ,QAAQ,MAC1B,KAAUhX,cAAe,CAC7B,CACA,SAAAolB,GACS3tB,KAAKo+B,kBACNp+B,KAAKo+B,iBAAkB,EACvB,IAAUpf,KAAKhf,KAAKq+B,gBAE5B,CACA,iBAAAG,GACIx+B,KAAKw8B,MAAMjpB,QAAQouB,GACnB3hC,KAAKm/B,YAAY5rB,QAAQquB,EAC7B,CACA,wBAAAC,GACS7hC,KAAKs+B,4BACNt+B,KAAKs+B,2BAA4B,EACjC,KAAMpf,UAAUlf,KAAKy+B,kBAAkB,GAAO,GAEtD,CACA,yBAAAhQ,GAMI,KAAMtP,YAAW,KACTnf,KAAKw9B,cACLx9B,KAAKgP,KAAK2e,YAGV3tB,KAAKgP,KAAKuvB,mBACd,GAER,CAIA,cAAA+C,IACQthC,KAAK8hC,UAAa9hC,KAAK8yB,WAE3B9yB,KAAK8hC,SAAW9hC,KAAKykB,WACjBzkB,KAAK8hC,WACJ,QAAW9hC,KAAK8hC,SAASC,YAAY5jC,KACrC,QAAW6B,KAAK8hC,SAASC,YAAY3jC,KACtC4B,KAAK8hC,cAAWngC,GAExB,CACA,YAAAkkB,GACI,IAAK7lB,KAAK8yB,SACN,OAGJ,GADA9yB,KAAK4lB,iBACC5lB,KAAKd,QAAQ00B,qBAAuB5zB,KAAKsuB,UAC1CtuB,KAAKw9B,eACN,OASJ,GAAIx9B,KAAK0gC,aAAe1gC,KAAK0gC,WAAW5N,SACpC,IAAK,IAAI/pB,EAAI,EAAGA,EAAI/I,KAAKo/B,KAAKv9B,OAAQkH,IAAK,CAC1B/I,KAAKo/B,KAAKr2B,GAClB6c,cACT,CAEJ,MAAMoc,EAAahiC,KAAKgjB,OACxBhjB,KAAKgjB,OAAShjB,KAAKykB,SAAQ,GAC3BzkB,KAAKiiC,iBAAkB,UACvBjiC,KAAKw9B,eAAgB,EACrBx9B,KAAKu4B,qBAAkB52B,EACvB3B,KAAKs/B,gBAAgB,UAAWt/B,KAAKgjB,OAAOE,WAC5C,MAAM,cAAE5R,GAAkBtR,KAAKd,QAC/BoS,GACIA,EAAcmC,OAAO,gBAAiBzT,KAAKgjB,OAAOE,UAAW8e,EAAaA,EAAW9e,eAAYvhB,EACzG,CACA,YAAAikB,CAAasc,EAAQ,WACjB,IAAIC,EAAmBx6B,QAAQ3H,KAAKd,QAAQu0B,cAAgBzzB,KAAK8yB,UAMjE,GALI9yB,KAAKy4B,QACLz4B,KAAKy4B,OAAO6E,cAAgBt9B,KAAKgP,KAAKsuB,aACtCt9B,KAAKy4B,OAAOyJ,QAAUA,IACtBC,GAAmB,GAEnBA,EAAkB,CAClB,MAAMC,EAASrG,EAAkB/7B,KAAK8yB,UACtC9yB,KAAKy4B,OAAS,CACV6E,YAAat9B,KAAKgP,KAAKsuB,YACvB4E,QACAE,SACAh5B,OAAQsyB,EAAc17B,KAAK8yB,UAC3BuP,QAASriC,KAAKy4B,OAASz4B,KAAKy4B,OAAO2J,OAASA,EAEpD,CACJ,CACA,cAAAhG,GACI,IAAKA,EACD,OACJ,MAAMkG,EAAmBtiC,KAAKw9B,eAC1Bx9B,KAAKi+B,sBACLj+B,KAAKd,QAAQ00B,oBACX2O,EAAgBviC,KAAKu4B,mBAAoB,QAAYv4B,KAAKu4B,iBAC1Dz0B,EAAoB9D,KAAKmhC,uBACzBqB,EAAyB1+B,EACzBA,EAAkB9D,KAAKgS,aAAc,SACrCrQ,EACA8gC,EAA8BD,IAA2BxiC,KAAKqhC,2BAChEiB,IACCC,IACG,QAAaviC,KAAKgS,eAClBywB,KACJrG,EAAep8B,KAAK8yB,SAAU0P,GAC9BxiC,KAAKi+B,sBAAuB,EAC5Bj+B,KAAK0iC,iBAEb,CACA,OAAAje,CAAQke,GAAkB,GACtB,MAAMC,EAAU5iC,KAAK6iC,iBACrB,IAAI3f,EAAYljB,KAAK8iC,oBAAoBF,GA8+BrD,IAAkBtL,EAp+BN,OAJIqL,IACAzf,EAAYljB,KAAK2iC,gBAAgBzf,IAw+B7C6f,IADczL,EAr+BGpU,GAs+BH/kB,GACd4kC,GAAUzL,EAAIl5B,GAt+BC,CACHk/B,YAAat9B,KAAKgP,KAAKsuB,YACvByE,YAAaa,EACb1f,YACAlR,aAAc,CAAC,EACfwV,OAAQxnB,KAAKqW,GAErB,CACA,cAAAwsB,GACI,IAAI36B,EACJ,MAAM,cAAEoJ,GAAkBtR,KAAKd,QAC/B,IAAKoS,EACD,OAAO,UACX,MAAMgmB,EAAMhmB,EAAc0xB,qBAE1B,MADgD,QAAtB96B,EAAKlI,KAAKy4B,cAA2B,IAAPvwB,OAAgB,EAASA,EAAGm6B,UAAYriC,KAAKo/B,KAAKxwB,KAAKq0B,KACzF,CAElB,MAAM,OAAExK,GAAWz4B,KAAKgP,KACpBypB,KACA,QAAcnB,EAAIn5B,EAAGs6B,EAAOrvB,OAAOjL,IACnC,QAAcm5B,EAAIl5B,EAAGq6B,EAAOrvB,OAAOhL,GAE3C,CACA,OAAOk5B,CACX,CACA,mBAAAwL,CAAoBxL,GAChB,IAAIpvB,EACJ,MAAMg7B,GAAmB,UAEzB,IADA,QAAYA,EAAkB5L,GACH,QAAtBpvB,EAAKlI,KAAKy4B,cAA2B,IAAPvwB,OAAgB,EAASA,EAAGm6B,QAC3D,OAAOa,EAMX,IAAK,IAAIn6B,EAAI,EAAGA,EAAI/I,KAAKo/B,KAAKv9B,OAAQkH,IAAK,CACvC,MAAMyd,EAAOxmB,KAAKo/B,KAAKr2B,IACjB,OAAE0vB,EAAM,QAAEv5B,GAAYsnB,EACxBA,IAASxmB,KAAKgP,MAAQypB,GAAUv5B,EAAQu0B,eAKpCgF,EAAO4J,UACP,QAAYa,EAAkB5L,IAElC,QAAc4L,EAAiB/kC,EAAGs6B,EAAOrvB,OAAOjL,IAChD,QAAc+kC,EAAiB9kC,EAAGq6B,EAAOrvB,OAAOhL,GAExD,CACA,OAAO8kC,CACX,CACA,cAAAC,CAAe7L,EAAK8L,GAAgB,GAChC,MAAMC,GAAiB,WACvB,QAAYA,EAAgB/L,GAC5B,IAAK,IAAIvuB,EAAI,EAAGA,EAAI/I,KAAKo/B,KAAKv9B,OAAQkH,IAAK,CACvC,MAAMyd,EAAOxmB,KAAKo/B,KAAKr2B,IAClBq6B,GACD5c,EAAKtnB,QAAQu0B,cACbjN,EAAKiS,QACLjS,IAASA,EAAKxX,OACd,QAAaq0B,EAAgB,CACzBllC,GAAIqoB,EAAKiS,OAAOrvB,OAAOjL,EACvBC,GAAIooB,EAAKiS,OAAOrvB,OAAOhL,KAG1B,QAAaooB,EAAKxU,gBAEvB,QAAaqxB,EAAgB7c,EAAKxU,aACtC,CAIA,OAHI,QAAahS,KAAKgS,gBAClB,QAAaqxB,EAAgBrjC,KAAKgS,cAE/BqxB,CACX,CACA,eAAAV,CAAgBrL,GACZ,MAAMgM,GAAsB,WAC5B,QAAYA,EAAqBhM,GACjC,IAAK,IAAIvuB,EAAI,EAAGA,EAAI/I,KAAKo/B,KAAKv9B,OAAQkH,IAAK,CACvC,MAAMyd,EAAOxmB,KAAKo/B,KAAKr2B,GACvB,IAAKyd,EAAKsM,SACN,SACJ,KAAK,QAAatM,EAAKxU,cACnB,UACJ,QAASwU,EAAKxU,eAAiBwU,EAAK8a,iBACpC,MAAMzG,GAAY,UACZ0I,EAAU/c,EAAKqc,kBACrB,QAAYhI,EAAW0I,IACvB,QAAoBD,EAAqB9c,EAAKxU,aAAcwU,EAAKsb,SAAWtb,EAAKsb,SAAS5e,eAAYvhB,EAAWk5B,EACrH,CAIA,OAHI,QAAa76B,KAAKgS,gBAClB,QAAoBsxB,EAAqBtjC,KAAKgS,cAE3CsxB,CACX,CACA,cAAAE,CAAe93B,GACX1L,KAAKyjC,YAAc/3B,EACnB1L,KAAKgP,KAAK6yB,2BACV7hC,KAAKy9B,mBAAoB,CAC7B,CACA,UAAA7P,CAAW1uB,GACPc,KAAKd,QAAU,IACRc,KAAKd,WACLA,EACHwkC,eAAiC/hC,IAAtBzC,EAAQwkC,WAA0BxkC,EAAQwkC,UAE7D,CACA,iBAAAnC,GACIvhC,KAAKy4B,YAAS92B,EACd3B,KAAKgjB,YAASrhB,EACd3B,KAAK8hC,cAAWngC,EAChB3B,KAAKqhC,gCAA6B1/B,EAClC3B,KAAKyjC,iBAAc9hC,EACnB3B,KAAKqL,YAAS1J,EACd3B,KAAKw9B,eAAgB,CACzB,CACA,kCAAAmG,GACS3jC,KAAK4jC,gBAQN5jC,KAAK4jC,eAAe7E,2BACpB,KAAUl4B,WACV7G,KAAK4jC,eAAejF,oBAAmB,EAE/C,CACA,kBAAAA,CAAmBkF,GAAqB,GACpC,IAAI37B,EAMJ,MAAM8tB,EAAOh2B,KAAK8jC,UAClB9jC,KAAKy9B,oBAAsBz9B,KAAKy9B,kBAAoBzH,EAAKyH,mBACzDz9B,KAAK29B,mBAAqB39B,KAAK29B,iBAAmB3H,EAAK2H,kBACvD39B,KAAK09B,0BAA4B19B,KAAK09B,wBAA0B1H,EAAK0H,yBACrE,MAAMqG,EAAWp8B,QAAQ3H,KAAK2gC,eAAiB3gC,OAASg2B,EAWxD,KANkB6N,GACbE,GAAY/jC,KAAK09B,yBAClB19B,KAAKy9B,oBACmB,QAAtBv1B,EAAKlI,KAAKqV,cAA2B,IAAPnN,OAAgB,EAASA,EAAGu1B,oBAC5Dz9B,KAAKgkC,gCACLhkC,KAAKgP,KAAK6uB,uBAEV,OACJ,MAAM,OAAE7a,EAAM,SAAEwK,GAAaxtB,KAAKd,QAIlC,GAAKc,KAAKgjB,SAAYA,GAAUwK,GAAhC,CAQA,GANAxtB,KAAK++B,yBAA2B,KAAUl4B,WAMrC7G,KAAKyjC,cAAgBzjC,KAAKkgC,eAAgB,CAC3C,MAAM0D,EAAiB5jC,KAAKikC,6BACxBL,GACAA,EAAe5gB,QACY,IAA3BhjB,KAAKk/B,mBACLl/B,KAAK4jC,eAAiBA,EACtB5jC,KAAK2jC,qCACL3jC,KAAKkgC,gBAAiB,UACtBlgC,KAAKkkC,sBAAuB,WAC5B,QAAqBlkC,KAAKkkC,qBAAsBlkC,KAAKgjB,OAAOE,UAAW0gB,EAAe5gB,OAAOE,YAC7F,QAAYljB,KAAKkgC,eAAgBlgC,KAAKkkC,uBAGtClkC,KAAK4jC,eAAiB5jC,KAAKkgC,oBAAiBv+B,CAEpD,CAKA,GAAK3B,KAAKkgC,gBAAmBlgC,KAAKyjC,YAAlC,CAyCA,GApCKzjC,KAAKqL,SACNrL,KAAKqL,QAAS,UACdrL,KAAKmkC,sBAAuB,WAK5BnkC,KAAKkgC,gBACLlgC,KAAKkkC,sBACLlkC,KAAK4jC,gBACL5jC,KAAK4jC,eAAev4B,QACpBrL,KAAK2jC,sCACL,OAAgB3jC,KAAKqL,OAAQrL,KAAKkgC,eAAgBlgC,KAAK4jC,eAAev4B,SAKjErL,KAAKyjC,aACN97B,QAAQ3H,KAAK2gC,cAEb3gC,KAAKqL,OAASrL,KAAKmjC,eAAenjC,KAAKgjB,OAAOE,YAG9C,QAAYljB,KAAKqL,OAAQrL,KAAKgjB,OAAOE,YAEzC,QAAcljB,KAAKqL,OAAQrL,KAAKyjC,eAMhC,QAAYzjC,KAAKqL,OAAQrL,KAAKgjB,OAAOE,WAKrCljB,KAAKgkC,+BAAgC,CACrChkC,KAAKgkC,gCAAiC,EACtC,MAAMJ,EAAiB5jC,KAAKikC,6BACxBL,GACAj8B,QAAQi8B,EAAejD,gBACnBh5B,QAAQ3H,KAAK2gC,gBAChBiD,EAAe1kC,QAAQu0B,cACxBmQ,EAAev4B,QACY,IAA3BrL,KAAKk/B,mBACLl/B,KAAK4jC,eAAiBA,EACtB5jC,KAAK2jC,qCACL3jC,KAAKkgC,gBAAiB,UACtBlgC,KAAKkkC,sBAAuB,WAC5B,QAAqBlkC,KAAKkkC,qBAAsBlkC,KAAKqL,OAAQu4B,EAAev4B,SAC5E,QAAYrL,KAAKkgC,eAAgBlgC,KAAKkkC,uBAGtClkC,KAAK4jC,eAAiB5jC,KAAKkgC,oBAAiBv+B,CAEpD,CAII,IAAY5C,OACZw9B,EAAQE,wBAhEF,CA5BA,CA8Fd,CACA,0BAAAwH,GACI,GAAKjkC,KAAKqV,UACN,QAASrV,KAAKqV,OAAOrD,iBACrB,QAAehS,KAAKqV,OAAOrD,cAG/B,OAAIhS,KAAKqV,OAAO+uB,eACLpkC,KAAKqV,OAGLrV,KAAKqV,OAAO4uB,4BAE3B,CACA,YAAAG,GACI,OAAOz8B,SAAS3H,KAAKkgC,gBACjBlgC,KAAKyjC,aACLzjC,KAAKd,QAAQw0B,aACb1zB,KAAKgjB,OACb,CACA,cAAA4b,GACI,IAAI12B,EACJ,MAAM8tB,EAAOh2B,KAAK8jC,UACZC,EAAWp8B,QAAQ3H,KAAK2gC,eAAiB3gC,OAASg2B,EACxD,IAAIqO,GAAU,EAuBd,IAlBIrkC,KAAKy9B,oBAA6C,QAAtBv1B,EAAKlI,KAAKqV,cAA2B,IAAPnN,OAAgB,EAASA,EAAGu1B,sBACtF4G,GAAU,GAMVN,IACC/jC,KAAK09B,yBAA2B19B,KAAK29B,oBACtC0G,GAAU,GAMVrkC,KAAK++B,2BAA6B,KAAUl4B,YAC5Cw9B,GAAU,GAEVA,EACA,OACJ,MAAM,OAAErhB,EAAM,SAAEwK,GAAaxtB,KAAKd,QAWlC,GANAc,KAAKu9B,gBAAkB51B,QAAS3H,KAAKqV,QAAUrV,KAAKqV,OAAOkoB,iBACvDv9B,KAAKquB,kBACLruB,KAAKskC,kBACJtkC,KAAKu9B,kBACNv9B,KAAKyjC,YAAczjC,KAAKkgC,oBAAiBv+B,IAExC3B,KAAKgjB,SAAYA,IAAUwK,EAC5B,QAKJ,QAAYxtB,KAAKiiC,gBAAiBjiC,KAAKgjB,OAAOE,WAI9C,MAAMqhB,EAAiBvkC,KAAKm4B,UAAUh6B,EAChCqmC,EAAiBxkC,KAAKm4B,UAAU/5B,GAKtC,QAAgB4B,KAAKiiC,gBAAiBjiC,KAAKm4B,UAAWn4B,KAAKo/B,KAAM2E,IAK7D/N,EAAKhT,QACJgT,EAAK3qB,QACgB,IAArBrL,KAAKm4B,UAAUh6B,GAAgC,IAArB6B,KAAKm4B,UAAU/5B,IAC1C43B,EAAK3qB,OAAS2qB,EAAKhT,OAAOE,UAC1B8S,EAAKmO,sBAAuB,WAEhC,MAAM,OAAE94B,GAAW2qB,EACd3qB,GAYArL,KAAKu4B,iBAAoBv4B,KAAKykC,sBAI/B,QAAkBzkC,KAAKykC,oBAAoBtmC,EAAG6B,KAAKu4B,gBAAgBp6B,IACnE,QAAkB6B,KAAKykC,oBAAoBrmC,EAAG4B,KAAKu4B,gBAAgBn6B,IAJnE4B,KAAK0kC,0BAeT,QAAa1kC,KAAKu4B,gBAAiBv4B,KAAKiiC,gBAAiB52B,EAAQrL,KAAKgS,cAClEhS,KAAKm4B,UAAUh6B,IAAMomC,GACrBvkC,KAAKm4B,UAAU/5B,IAAMomC,IACpB,QAAgBxkC,KAAKu4B,gBAAgBp6B,EAAG6B,KAAKykC,oBAAoBtmC,KACjE,QAAgB6B,KAAKu4B,gBAAgBn6B,EAAG4B,KAAKykC,oBAAoBrmC,KAClE4B,KAAKg/B,cAAe,EACpBh/B,KAAK0iC,iBACL1iC,KAAKs/B,gBAAgB,mBAAoBj0B,IAKzC,IAAYtM,OACZw9B,EAAQG,yBAnCJ18B,KAAKykC,sBACLzkC,KAAK0kC,yBACL1kC,KAAK0iC,iBAmCjB,CACA,IAAAiC,GACI3kC,KAAKi/B,WAAY,CAErB,CACA,IAAA2F,GACI5kC,KAAKi/B,WAAY,CAErB,CACA,cAAAyD,CAAemC,GAAY,GACvB,IAAI38B,EAEJ,GADsC,QAArCA,EAAKlI,KAAKd,QAAQoS,qBAAkC,IAAPpJ,GAAyBA,EAAGw6B,iBACtEmC,EAAW,CACX,MAAM3W,EAAQluB,KAAKmuB,WACnBD,GAASA,EAAMwU,gBACnB,CACI1iC,KAAK2gC,eAAiB3gC,KAAK2gC,aAAa7N,WACxC9yB,KAAK2gC,kBAAeh/B,EAE5B,CACA,sBAAA+iC,GACI1kC,KAAKykC,qBAAsB,UAC3BzkC,KAAKu4B,iBAAkB,UACvBv4B,KAAK8kC,8BAA+B,SACxC,CACA,kBAAAlE,CAAmBl1B,EAAO+0B,GAA+B,GACrD,MAAMqB,EAAW9hC,KAAK8hC,SAChBiD,EAAuBjD,EACvBA,EAAS9vB,aACT,CAAC,EACDgzB,EAAc,IAAKhlC,KAAKgS,cACxByxB,GAAc,UACfzjC,KAAK4jC,gBACL5jC,KAAK4jC,eAAe1kC,QAAQw0B,aAC7B1zB,KAAKkgC,eAAiBlgC,KAAKkkC,0BAAuBviC,GAEtD3B,KAAKgkC,gCAAkCvD,EACvC,MAAMwE,GAAiB,UAGjBC,GAFiBpD,EAAWA,EAASta,YAAS7lB,MAC/B3B,KAAKgjB,OAAShjB,KAAKgjB,OAAOwE,YAAS7lB,GAElDusB,EAAQluB,KAAKmuB,WACb+H,GAAgBhI,GAASA,EAAME,QAAQvsB,QAAU,EACjDo0B,EAAyBtuB,QAAQu9B,IAClChP,IAC0B,IAA3Bl2B,KAAKd,QAAQwkC,YACZ1jC,KAAKo/B,KAAKxwB,KAAKu2B,KAEpB,IAAIC,EADJplC,KAAKk/B,kBAAoB,EAEzBl/B,KAAKqlC,eAAkB15B,IACnB,MAAMpE,EAAWoE,EAAS,IAshB1C,IAAgB25B,EAAQz0B,EAAM00B,EAAIxqB,EArhBlByqB,EAAa/B,EAAYtlC,EAAGuN,EAAMvN,EAAGoJ,GACrCi+B,EAAa/B,EAAYrlC,EAAGsN,EAAMtN,EAAGmJ,GACrCvH,KAAKwjC,eAAeC,GAChBzjC,KAAKkgC,gBACLlgC,KAAKkkC,sBACLlkC,KAAKgjB,QACLhjB,KAAK4jC,gBACL5jC,KAAK4jC,eAAe5gB,UACpB,QAAqBiiB,EAAgBjlC,KAAKgjB,OAAOE,UAAWljB,KAAK4jC,eAAe5gB,OAAOE,WA6gB3FoiB,EA5gBWtlC,KAAKkgC,eA4gBRrvB,EA5gBwB7Q,KAAKkkC,qBA4gBvBqB,EA5gB6CN,EA4gBzClqB,EA5gByDxT,EA6gBvFk+B,GAAQH,EAAOnnC,EAAG0S,EAAK1S,EAAGonC,EAAGpnC,EAAG4c,GAChC0qB,GAAQH,EAAOlnC,EAAGyS,EAAKzS,EAAGmnC,EAAGnnC,EAAG2c,GAzgBZqqB,IACA,QAAUplC,KAAKkgC,eAAgBkF,KAC/BplC,KAAKy9B,mBAAoB,GAExB2H,IACDA,GAAqB,YACzB,QAAYA,EAAoBplC,KAAKkgC,iBAErCgF,IACAllC,KAAK0lC,gBAAkBV,GACvB,OAAUA,EAAaD,EAAsB/kC,KAAKgS,aAAczK,EAAU0uB,EAAwBC,IAEtGl2B,KAAKgP,KAAK6yB,2BACV7hC,KAAK0iC,iBACL1iC,KAAKk/B,kBAAoB33B,CAAQ,EAErCvH,KAAKqlC,eAAerlC,KAAKd,QAAQw0B,WAAa,IAAO,EACzD,CACA,cAAAzP,CAAe/kB,GACXc,KAAKs/B,gBAAgB,kBACrBt/B,KAAKquB,kBAAoBruB,KAAKquB,iBAAiBlrB,OAC3CnD,KAAK2gC,cAAgB3gC,KAAK2gC,aAAatS,kBACvCruB,KAAK2gC,aAAatS,iBAAiBlrB,OAEnCnD,KAAKskC,oBACL,QAAYtkC,KAAKskC,kBACjBtkC,KAAKskC,sBAAmB3iC,GAO5B3B,KAAKskC,iBAAmB,KAAMj8B,QAAO,KACjC,IAAsBu3B,wBAAyB,EAC/C,IAAiB5c,SACjBhjB,KAAKquB,kBAAmB,OAAmB,EAAGyO,EAAiB,IACxD59B,EACH6B,SAAW4K,IACP3L,KAAKqlC,eAAe15B,GACpBzM,EAAQ6B,UAAY7B,EAAQ6B,SAAS4K,EAAO,EAEhDrI,OAAQ,KACJ,IAAiB0f,QAAQ,EAE7BliB,WAAY,KACR,IAAiBkiB,SACjB9jB,EAAQ4B,YAAc5B,EAAQ4B,aAC9Bd,KAAK2lC,mBAAmB,IAG5B3lC,KAAK2gC,eACL3gC,KAAK2gC,aAAatS,iBAAmBruB,KAAKquB,kBAE9CruB,KAAKskC,sBAAmB3iC,CAAS,GAEzC,CACA,iBAAAgkC,GACQ3lC,KAAK2gC,eACL3gC,KAAK2gC,aAAatS,sBAAmB1sB,EACrC3B,KAAK2gC,aAAaiF,qBAAkBjkC,GAExC,MAAMusB,EAAQluB,KAAKmuB,WACnBD,GAASA,EAAM2X,wBACf7lC,KAAK2gC,aACD3gC,KAAKquB,iBACDruB,KAAK0lC,qBACD/jC,EACZ3B,KAAKs/B,gBAAgB,oBACzB,CACA,eAAAO,GACQ7/B,KAAKquB,mBACLruB,KAAKqlC,gBAAkBrlC,KAAKqlC,eAAevI,GAC3C98B,KAAKquB,iBAAiBlrB,QAE1BnD,KAAK2lC,mBACT,CACA,uBAAAG,GACI,MAAM9P,EAAOh2B,KAAK8jC,UAClB,IAAI,qBAAEK,EAAoB,OAAE94B,EAAM,OAAE2X,EAAM,aAAEhR,GAAiBgkB,EAC7D,GAAKmO,GAAyB94B,GAAW2X,EAAzC,CAOA,GAAIhjB,OAASg2B,GACTh2B,KAAKgjB,QACLA,GACA+iB,GAA0B/lC,KAAKd,QAAQ20B,cAAe7zB,KAAKgjB,OAAOE,UAAWF,EAAOE,WAAY,CAChG7X,EAASrL,KAAKqL,SAAU,UACxB,MAAM26B,GAAU,QAAWhmC,KAAKgjB,OAAOE,UAAU/kB,GACjDkN,EAAOlN,EAAE6I,IAAMgvB,EAAK3qB,OAAOlN,EAAE6I,IAC7BqE,EAAOlN,EAAEiJ,IAAMiE,EAAOlN,EAAE6I,IAAMg/B,EAC9B,MAAMC,GAAU,QAAWjmC,KAAKgjB,OAAOE,UAAU9kB,GACjDiN,EAAOjN,EAAE4I,IAAMgvB,EAAK3qB,OAAOjN,EAAE4I,IAC7BqE,EAAOjN,EAAEgJ,IAAMiE,EAAOjN,EAAE4I,IAAMi/B,CAClC,EACA,QAAY9B,EAAsB94B,IAMlC,QAAa84B,EAAsBnyB,IAOnC,QAAahS,KAAK8kC,6BAA8B9kC,KAAKiiC,gBAAiBkC,EAAsBnyB,EA/BlF,CAgCd,CACA,kBAAA8tB,CAAmBtS,EAAUhH,GACpBxmB,KAAKm/B,YAAYn7B,IAAIwpB,IACtBxtB,KAAKm/B,YAAYl9B,IAAIurB,EAAU,IAAI,KAEzBxtB,KAAKm/B,YAAYnuB,IAAIwc,GAC7BvM,IAAIuF,GACV,MAAMiO,EAASjO,EAAKtnB,QAAQs0B,uBAC5BhN,EAAKwH,QAAQ,CACTvd,WAAYgkB,EAASA,EAAOhkB,gBAAa9O,EACzCukC,sBAAuBzR,GAAUA,EAAO0R,4BAClC1R,EAAO0R,4BAA4B3f,QACnC7kB,GAEd,CACA,MAAA2sB,GACI,MAAMJ,EAAQluB,KAAKmuB,WACnB,OAAOD,GAAQA,EAAM8H,OAASh2B,IAClC,CACA,OAAA8jC,GACI,IAAI57B,EACJ,MAAM,SAAEslB,GAAaxtB,KAAKd,QAC1B,OAAOsuB,IAAuC,QAA1BtlB,EAAKlI,KAAKmuB,kBAA+B,IAAPjmB,OAAgB,EAASA,EAAG8tB,OAAgBh2B,IACtG,CACA,WAAAomC,GACI,IAAIl+B,EACJ,MAAM,SAAEslB,GAAaxtB,KAAKd,QAC1B,OAAOsuB,EAAsC,QAA1BtlB,EAAKlI,KAAKmuB,kBAA+B,IAAPjmB,OAAgB,EAASA,EAAGm+B,cAAW1kC,CAChG,CACA,QAAAwsB,GACI,MAAM,SAAEX,GAAaxtB,KAAKd,QAC1B,GAAIsuB,EACA,OAAOxtB,KAAKgP,KAAKmwB,YAAYnuB,IAAIwc,EACzC,CACA,OAAAQ,EAAQ,WAAEgQ,EAAU,WAAEvtB,EAAU,sBAAEy1B,GAA2B,CAAC,GAC1D,MAAMhY,EAAQluB,KAAKmuB,WACfD,GACAA,EAAMF,QAAQhuB,KAAMkmC,GACpBlI,IACAh+B,KAAKu4B,qBAAkB52B,EACvB3B,KAAKg+B,YAAa,GAElBvtB,GACAzQ,KAAK4tB,WAAW,CAAEnd,cAC1B,CACA,QAAAwd,GACI,MAAMC,EAAQluB,KAAKmuB,WACnB,QAAID,GACOA,EAAMD,SAASjuB,KAK9B,CACA,oBAAAkhC,GACI,MAAM,cAAE5vB,GAAkBtR,KAAKd,QAC/B,IAAKoS,EACD,OAEJ,IAAIg1B,GAAyB,EAK7B,MAAM,aAAEt0B,GAAiBV,EAWzB,IAVIU,EAAau0B,GACbv0B,EAAa2kB,QACb3kB,EAAaw0B,SACbx0B,EAAay0B,SACbz0B,EAAa00B,SACb10B,EAAa20B,OACb30B,EAAa40B,SACbN,GAAyB,IAGxBA,EACD,OACJ,MAAMO,EAAc,CAAC,EACjB70B,EAAau0B,GACbxJ,EAAyB,IAAKzrB,EAAeu1B,EAAa7mC,KAAK0lC,iBAGnE,IAAK,IAAI38B,EAAI,EAAGA,EAAI4zB,EAAc96B,OAAQkH,IACtCg0B,EAAyB,SAASJ,EAAc5zB,KAAMuI,EAAeu1B,EAAa7mC,KAAK0lC,iBACvF3I,EAAyB,OAAOJ,EAAc5zB,KAAMuI,EAAeu1B,EAAa7mC,KAAK0lC,iBAIzFp0B,EAAc2E,SAEd,IAAK,MAAM1Y,KAAOspC,EACdv1B,EAAc2rB,eAAe1/B,EAAKspC,EAAYtpC,IAC1CyC,KAAK0lC,kBACL1lC,KAAK0lC,gBAAgBnoC,GAAOspC,EAAYtpC,IAKhD+T,EAAcoxB,gBAClB,CACA,mBAAAoE,CAAoBC,GAChB,IAAI7+B,EAAIwpB,EACR,IAAK1xB,KAAK8yB,UAAY9yB,KAAK+9B,MACvB,OACJ,IAAK/9B,KAAKi/B,UACN,OAAOrC,EAEX,MAAMoK,EAAS,CACXnK,WAAY,IAEV/4B,EAAoB9D,KAAKmhC,uBAC/B,GAAInhC,KAAKg+B,WAQL,OAPAh+B,KAAKg+B,YAAa,EAClBgJ,EAAO7Q,QAAU,GACjB6Q,EAAOC,eACH,OAAmBF,aAA6C,EAASA,EAAUE,gBAAkB,GACzGD,EAAOrhB,UAAY7hB,EACbA,EAAkB9D,KAAKgS,aAAc,IACrC,OACCg1B,EAEX,MAAMhR,EAAOh2B,KAAK8jC,UAClB,IAAK9jC,KAAKu4B,kBAAoBv4B,KAAKgjB,SAAWgT,EAAK3qB,OAAQ,CACvD,MAAM67B,EAAc,CAAC,EAerB,OAdIlnC,KAAKd,QAAQsuB,WACb0Z,EAAY/Q,aACsBx0B,IAA9B3B,KAAKgS,aAAamkB,QACZn2B,KAAKgS,aAAamkB,QAClB,EACV+Q,EAAYD,eACR,OAAmBF,aAA6C,EAASA,EAAUE,gBAAkB,IAEzGjnC,KAAKg/B,gBAAiB,QAAah/B,KAAKgS,gBACxCk1B,EAAYvhB,UAAY7hB,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN9D,KAAKg/B,cAAe,GAEjBkI,CACX,CACA,MAAMC,EAAiBnR,EAAK0P,iBAAmB1P,EAAKhkB,aACpDhS,KAAK8lC,0BACLkB,EAAOrhB,WAAY,OAAyB3lB,KAAK8kC,6BAA8B9kC,KAAKm4B,UAAWgP,GAC3FrjC,IACAkjC,EAAOrhB,UAAY7hB,EAAkBqjC,EAAgBH,EAAOrhB,YAEhE,MAAM,EAAExnB,EAAC,EAAEC,GAAM4B,KAAKu4B,gBACtByO,EAAOI,gBAAkB,GAAc,IAAXjpC,EAAE4M,WAA4B,IAAX3M,EAAE2M,YAC7CirB,EAAK0P,gBAKLsB,EAAO7Q,QACHH,IAASh2B,KACiG,QAAnG0xB,EAAuC,QAAjCxpB,EAAKi/B,EAAehR,eAA4B,IAAPjuB,EAAgBA,EAAKlI,KAAKgS,aAAamkB,eAA4B,IAAPzE,EAAgBA,EAAK,EACjI1xB,KAAK4lC,gBACD5lC,KAAKgS,aAAamkB,QAClBgR,EAAe9Q,YAO7B2Q,EAAO7Q,QACHH,IAASh2B,UACwB2B,IAA3BwlC,EAAehR,QACXgR,EAAehR,QACf,QAC2Bx0B,IAA/BwlC,EAAe9Q,YACX8Q,EAAe9Q,YACf,EAKlB,IAAK,MAAM94B,KAAO,IAAiB,CAC/B,QAA4BoE,IAAxBwlC,EAAe5pC,GACf,SACJ,MAAM,QAAE8pC,EAAO,QAAExY,EAAO,cAAEyY,GAAkB,IAAgB/pC,GAOtDgqC,EAAiC,SAArBP,EAAOrhB,UACnBwhB,EAAe5pC,GACf8pC,EAAQF,EAAe5pC,GAAMy4B,GACnC,GAAInH,EAAS,CACT,MAAM2Y,EAAM3Y,EAAQhtB,OACpB,IAAK,IAAIkH,EAAI,EAAGA,EAAIy+B,EAAKz+B,IACrBi+B,EAAOnY,EAAQ9lB,IAAMw+B,CAE7B,MAKQD,EACAtnC,KAAKd,QAAQoS,cAAcwjB,YAAY2S,KAAKlqC,GAAOgqC,EAGnDP,EAAOzpC,GAAOgqC,CAG1B,CAYA,OANIvnC,KAAKd,QAAQsuB,WACbwZ,EAAOC,cACHjR,IAASh2B,MACH,OAAmB+mC,aAA6C,EAASA,EAAUE,gBAAkB,GACrG,QAEPD,CACX,CACA,aAAArF,GACI3hC,KAAK0gC,WAAa1gC,KAAK8hC,cAAWngC,CACtC,CAEA,SAAA+lC,GACI1nC,KAAKgP,KAAKwtB,MAAMjpB,SAASiT,IAAW,IAAIte,EAAI,OAAwC,QAAhCA,EAAKse,EAAK6H,wBAAqC,IAAPnmB,OAAgB,EAASA,EAAG/E,MAAM,IAC9HnD,KAAKgP,KAAKwtB,MAAMjpB,QAAQguB,GACxBvhC,KAAKgP,KAAKmwB,YAAYhe,OAC1B,EAER,CACA,SAAS0E,EAAaW,GAClBA,EAAKX,cACT,CACA,SAAS6b,EAAmBlb,GACxB,IAAIte,EACJ,MAAM45B,GAAuC,QAA1B55B,EAAKse,EAAKka,kBAA+B,IAAPx4B,OAAgB,EAASA,EAAG45B,WAAatb,EAAKsb,SACnG,GAAItb,EAAK8H,UACL9H,EAAKxD,QACL8e,GACAtb,EAAKiZ,aAAa,aAAc,CAChC,MAAQvc,UAAWF,EAAQ+e,YAAa4F,GAAmBnhB,EAAKxD,QAC1D,cAAE6Q,GAAkBrN,EAAKtnB,QACzB6kC,EAAWjC,EAASta,SAAWhB,EAAKxD,OAAOwE,OAG3B,SAAlBqM,GACA,QAAU/Q,IACN,MAAM8kB,EAAe7D,EACfjC,EAASC,YAAYjf,GACrBgf,EAAS5e,UAAUJ,GACnBjhB,GAAS,QAAW+lC,GAC1BA,EAAa5gC,IAAMgc,EAAOF,GAAM9b,IAChC4gC,EAAaxgC,IAAMwgC,EAAa5gC,IAAMnF,CAAM,IAG3CkkC,GAA0BlS,EAAeiO,EAAS5e,UAAWF,KAClE,QAAUF,IACN,MAAM8kB,EAAe7D,EACfjC,EAASC,YAAYjf,GACrBgf,EAAS5e,UAAUJ,GACnBjhB,GAAS,QAAWmhB,EAAOF,IACjC8kB,EAAaxgC,IAAMwgC,EAAa5gC,IAAMnF,EAIlC2kB,EAAK0Z,iBAAmB1Z,EAAK6H,mBAC7B7H,EAAKiX,mBAAoB,EACzBjX,EAAK0Z,eAAepd,GAAM1b,IACtBof,EAAK0Z,eAAepd,GAAM9b,IAAMnF,EACxC,IAGR,MAAMgmC,GAAc,WACpB,QAAaA,EAAa7kB,EAAQ8e,EAAS5e,WAC3C,MAAM4kB,GAAc,UAChB/D,GACA,QAAa+D,EAAathB,EAAK2c,eAAewE,GAAgB,GAAO7F,EAASC,cAG9E,QAAa+F,EAAa9kB,EAAQ8e,EAAS5e,WAE/C,MAAMmD,IAAoB,QAAYwhB,GACtC,IAAI9H,GAA2B,EAC/B,IAAKvZ,EAAKka,WAAY,CAClB,MAAMkD,EAAiBpd,EAAKyd,6BAK5B,GAAIL,IAAmBA,EAAelD,WAAY,CAC9C,MAAQoB,SAAUiG,EAAgB/kB,OAAQglB,GAAiBpE,EAC3D,GAAImE,GAAkBC,EAAc,CAChC,MAAMC,GAAmB,WACzB,QAAqBA,EAAkBnG,EAAS5e,UAAW6kB,EAAe7kB,WAC1E,MAAM+hB,GAAiB,WACvB,QAAqBA,EAAgBjiB,EAAQglB,EAAa9kB,YACrD,QAAiB+kB,EAAkBhD,KACpClF,GAA2B,GAE3B6D,EAAe1kC,QAAQw0B,aACvBlN,EAAK0Z,eAAiB+E,EACtBze,EAAK0d,qBAAuB+D,EAC5BzhB,EAAKod,eAAiBA,EAE9B,CACJ,CACJ,CACApd,EAAK8Y,gBAAgB,YAAa,CAC9Btc,SACA8e,WACAp2B,MAAOo8B,EACPD,cACAxhB,mBACA0Z,4BAER,MACK,GAAIvZ,EAAK8H,SAAU,CACpB,MAAM,eAAE7W,GAAmB+O,EAAKtnB,QAChCuY,GAAkBA,GACtB,CAMA+O,EAAKtnB,QAAQuR,gBAAa9O,CAC9B,CACA,SAAS+8B,EAAoBlY,GAIrB,IAAYznB,OACZw9B,EAAQC,QAEPhW,EAAKnR,SAQLmR,EAAK4d,iBACN5d,EAAKiX,kBAAoBjX,EAAKnR,OAAOooB,mBAOzCjX,EAAKkX,0BAA4BlX,EAAKkX,wBAA0B/1B,QAAQ6e,EAAKiX,mBACzEjX,EAAKnR,OAAOooB,mBACZjX,EAAKnR,OAAOqoB,0BAChBlX,EAAKmX,mBAAqBnX,EAAKmX,iBAAmBnX,EAAKnR,OAAOsoB,kBAClE,CACA,SAASkB,EAAgBrY,GACrBA,EAAKiX,kBACDjX,EAAKkX,wBACDlX,EAAKmX,kBACD,CAChB,CACA,SAASgE,EAAcnb,GACnBA,EAAKmb,eACT,CACA,SAASJ,EAAkB/a,GACvBA,EAAK+a,mBACT,CACA,SAASC,EAAmBhb,GACxBA,EAAKgX,eAAgB,CACzB,CACA,SAASiE,EAAoBjb,GACzB,MAAM,cAAElV,GAAkBkV,EAAKtnB,QAC3BoS,GAAiBA,EAAcvN,WAAWmkC,uBAC1C52B,EAAcmC,OAAO,uBAEzB+S,EAAK4V,gBACT,CACA,SAASyD,EAAgBrZ,GACrBA,EAAKqZ,kBACLrZ,EAAKid,YAAcjd,EAAK0Z,eAAiB1Z,EAAKnb,YAAS1J,EACvD6kB,EAAKiX,mBAAoB,CAC7B,CACA,SAASkB,EAAmBnY,GACxBA,EAAKmY,oBACT,CACA,SAASC,EAAepY,GACpBA,EAAKoY,gBACT,CACA,SAASsC,EAAqB1a,GAC1BA,EAAK0a,sBACT,CACA,SAASU,EAAoB1T,GACzBA,EAAMia,oBACV,CACA,SAAS3C,EAAaF,EAAQ55B,EAAOqP,GACjCuqB,EAAOhf,WAAY,OAAU5a,EAAM4a,UAAW,EAAGvL,GACjDuqB,EAAO5N,OAAQ,OAAUhsB,EAAMgsB,MAAO,EAAG3c,GACzCuqB,EAAOv6B,OAASW,EAAMX,OACtBu6B,EAAO3jB,YAAcjW,EAAMiW,WAC/B,CACA,SAAS8jB,GAAQH,EAAQz0B,EAAM00B,EAAIxqB,GAC/BuqB,EAAOt+B,KAAM,OAAU6J,EAAK7J,IAAKu+B,EAAGv+B,IAAK+T,GACzCuqB,EAAOl+B,KAAM,OAAUyJ,EAAKzJ,IAAKm+B,EAAGn+B,IAAK2T,EAC7C,CAKA,SAASoqB,GAAoB3e,GACzB,OAAQA,EAAKkf,sBAAwD/jC,IAArC6kB,EAAKkf,gBAAgBrP,WACzD,CACA,MAAM+J,GAA0B,CAC5B7/B,SAAU,IACVE,KAAM,CAAC,GAAK,EAAG,GAAK,IAElB2nC,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUC,cAAchvB,SAAS6uB,GAMzCI,GAAaL,GAAkB,kBAAoBA,GAAkB,WACrErhC,KAAKE,MACL,IACN,SAAS87B,GAAUjgB,GAEfA,EAAK9b,IAAMyhC,GAAW3lB,EAAK9b,KAC3B8b,EAAK1b,IAAMqhC,GAAW3lB,EAAK1b,IAC/B,CAKA,SAAS2+B,GAA0BlS,EAAeiO,EAAU9e,GACxD,MAA0B,aAAlB6Q,GACe,oBAAlBA,KACI,SAAO,QAAYiO,IAAW,QAAY9e,GAAS,GAChE,CACA,SAASigB,GAAuBzc,GAC5B,IAAIte,EACJ,OAAOse,IAASA,EAAKxX,OAAgC,QAAtB9G,EAAKse,EAAKiS,cAA2B,IAAPvwB,OAAgB,EAASA,EAAGm6B,QAC7F,qCC/jDA,MAAMqG,EAAwB,CAK1B9I,wBAAwB,EAKxB/R,gBAAgB,6DCbpB,MAAM8a,UACF,WAAAhpC,GACIK,KAAKouB,QAAU,EACnB,CACA,GAAAnN,CAAIuF,IACA,QAAcxmB,KAAKouB,QAAS5H,GAC5BA,EAAKkc,gBACT,CACA,MAAAhU,CAAOlI,GAKH,IAJA,QAAWxmB,KAAKouB,QAAS5H,GACrBA,IAASxmB,KAAKqmC,WACdrmC,KAAKqmC,cAAW1kC,GAEhB6kB,IAASxmB,KAAKg2B,KAAM,CACpB,MAAMqQ,EAAWrmC,KAAKouB,QAAQpuB,KAAKouB,QAAQvsB,OAAS,GAChDwkC,GACArmC,KAAKguB,QAAQqY,EAErB,CACJ,CACA,QAAApY,CAASzH,GACL,MAAMoiB,EAAc5oC,KAAKouB,QAAQya,WAAWC,GAAWtiB,IAASsiB,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIvC,EACJ,IAAK,IAAIt9B,EAAI6/B,EAAa7/B,GAAK,EAAGA,IAAK,CACnC,MAAM+/B,EAAS9oC,KAAKouB,QAAQrlB,GAC5B,IAAyB,IAArB+/B,EAAO1zB,UAAqB,CAC5BixB,EAAWyC,EACX,KACJ,CACJ,CACA,QAAIzC,IACArmC,KAAKguB,QAAQqY,IACN,EAKf,CACA,OAAArY,CAAQxH,EAAM0f,GACV,MAAMG,EAAWrmC,KAAKg2B,KACtB,GAAIxP,IAAS6f,IAEbrmC,KAAKqmC,SAAWA,EAChBrmC,KAAKg2B,KAAOxP,EACZA,EAAKoe,OACDyB,GAAU,CACVA,EAASvT,UAAYuT,EAAS3D,iBAC9Blc,EAAKkc,iBACLlc,EAAKka,WAAa2F,EACdH,IACA1f,EAAKka,WAAWkF,iBAAkB,GAElCS,EAASvE,WACTtb,EAAKsb,SAAWuE,EAASvE,SACzBtb,EAAKsb,SAAS9vB,aACVq0B,EAASX,iBAAmBW,EAASr0B,cAEzCwU,EAAKxX,MAAQwX,EAAKxX,KAAK8uB,aACvBtX,EAAKgX,eAAgB,GAEzB,MAAM,UAAEkG,GAAcld,EAAKtnB,SACT,IAAdwkC,GACA2C,EAAS1B,MAcjB,CACJ,CACA,qBAAAkB,GACI7lC,KAAKouB,QAAQ7a,SAASiT,IAClB,MAAM,QAAEtnB,EAAO,aAAEyhC,GAAiBna,EAClCtnB,EAAQuY,gBAAkBvY,EAAQuY,iBAC9BkpB,GACAA,EAAazhC,QAAQuY,gBACjBkpB,EAAazhC,QAAQuY,gBAC7B,GAER,CACA,cAAAirB,GACI1iC,KAAKouB,QAAQ7a,SAASiT,IAClBA,EAAKsM,UAAYtM,EAAKkc,gBAAe,EAAM,GAEnD,CAKA,kBAAAyF,GACQnoC,KAAKg2B,MAAQh2B,KAAKg2B,KAAK8L,WACvB9hC,KAAKg2B,KAAK8L,cAAWngC,EAE7B,sDC1GJ,SAASonC,EAAgBC,EAAQlmB,GAC7B,OAAIA,EAAK1b,MAAQ0b,EAAK9b,IACX,EACHgiC,GAAUlmB,EAAK1b,IAAM0b,EAAK9b,KAAQ,GAC9C,CAQA,MAAMiiC,EAAsB,CACxB5B,QAAS,CAAC17B,EAAQ6a,KACd,IAAKA,EAAKnb,OACN,OAAOM,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI,EAAAkqB,GAAGnhB,KAAK/I,GAIR,OAAOA,EAHPA,EAASwX,WAAWxX,EAK5B,CAOA,MAAO,GAFGo9B,EAAgBp9B,EAAQ6a,EAAKnb,OAAOlN,OACpC4qC,EAAgBp9B,EAAQ6a,EAAKnb,OAAOjN,KAC1B,kECjC5B,MAAM8qC,EAAmB,CACrB7B,QAAS,CAAC17B,GAAUwsB,YAAWI,sBAC3B,MAAM4Q,EAAWx9B,EACXy9B,EAAS,IAAQC,MAAM19B,GAE7B,GAAIy9B,EAAOvnC,OAAS,EAChB,OAAOsnC,EACX,MAAMG,EAAW,IAAQC,kBAAkB59B,GACrCvC,EAA8B,iBAAdggC,EAAO,GAAkB,EAAI,EAE7CI,EAASjR,EAAgBp6B,EAAEu5B,MAAQS,EAAUh6B,EAC7CsrC,EAASlR,EAAgBn6B,EAAEs5B,MAAQS,EAAU/5B,EACnDgrC,EAAO,EAAIhgC,IAAWogC,EACtBJ,EAAO,EAAIhgC,IAAWqgC,EAOtB,MAAMC,GAAe,OAAUF,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBL,EAAO,EAAIhgC,KAClBggC,EAAO,EAAIhgC,IAAWsgC,GAEQ,iBAAvBN,EAAO,EAAIhgC,KAClBggC,EAAO,EAAIhgC,IAAWsgC,GACnBJ,EAASF,EAAO,8DC5B/B,MAAMO,EAAkB,CAAC,EACzB,SAASC,EAAkBC,GACvB,IAAK,MAAMtsC,KAAOssC,EACdF,EAAgBpsC,GAAOssC,EAAWtsC,IAC9B,OAAkBA,KAClBosC,EAAgBpsC,GAAK+pC,eAAgB,EAGjD,oBCVA,SAASwC,EAAyBp+B,EAAOysB,EAAW4R,GAChD,IAAIpkB,EAAY,GAOhB,MAAMqkB,EAAat+B,EAAMvN,EAAEmoB,UAAY6R,EAAUh6B,EAC3C8rC,EAAav+B,EAAMtN,EAAEkoB,UAAY6R,EAAU/5B,EAC3C8rC,GAAcH,aAAyD,EAASA,EAAgBxD,IAAM,EAW5G,IAVIyD,GAAcC,GAAcC,KAC5BvkB,EAAY,eAAeqkB,QAAiBC,QAAiBC,SAM7C,IAAhB/R,EAAUh6B,GAA2B,IAAhBg6B,EAAU/5B,IAC/BunB,GAAa,SAAS,EAAIwS,EAAUh6B,MAAM,EAAIg6B,EAAU/5B,OAExD2rC,EAAiB,CACjB,MAAM,qBAAEI,EAAoB,OAAExT,EAAM,QAAE6P,EAAO,QAAEC,EAAO,MAAEE,EAAK,MAAEC,GAAUmD,EACrEI,IACAxkB,EAAY,eAAewkB,QAA2BxkB,KACtDgR,IACAhR,GAAa,UAAUgR,UACvB6P,IACA7gB,GAAa,WAAW6gB,UACxBC,IACA9gB,GAAa,WAAW8gB,UACxBE,IACAhhB,GAAa,SAASghB,UACtBC,IACAjhB,GAAa,SAASihB,SAC9B,CAKA,MAAMwD,EAAgB1+B,EAAMvN,EAAEu5B,MAAQS,EAAUh6B,EAC1CksC,EAAgB3+B,EAAMtN,EAAEs5B,MAAQS,EAAU/5B,EAIhD,OAHsB,IAAlBgsC,GAAyC,IAAlBC,IACvB1kB,GAAa,SAASykB,MAAkBC,MAErC1kB,GAAa,MACxB,oCC9CA,SAAS2kB,EAASvpB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,oCCFA,SAASwpB,EAAgB7S,GACrB,YAAiB/1B,IAAV+1B,GAAiC,IAAVA,CAClC,CACA,SAAS8S,GAAS,MAAE9S,EAAK,OAAEuB,EAAM,OAAEE,IAC/B,OAASoR,EAAgB7S,KACpB6S,EAAgBtR,KAChBsR,EAAgBpR,EACzB,CACA,SAASsR,EAAan+B,GAClB,OAAQk+B,EAASl+B,IACbo+B,EAAep+B,IACfA,EAAOi6B,GACPj6B,EAAOqqB,QACPrqB,EAAOk6B,SACPl6B,EAAOm6B,SACPn6B,EAAOq6B,OACPr6B,EAAOs6B,KACf,CACA,SAAS8D,EAAep+B,GACpB,OAAOq+B,EAAcr+B,EAAOnO,IAAMwsC,EAAcr+B,EAAOlO,EAC3D,CACA,SAASusC,EAAc5rC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,4GCpBA,SAASikC,EAAmBlQ,EAAUlJ,GAClC,OAAO,SAAwB,QAAmBkJ,EAAS8X,wBAAyBhhB,GACxF,CACA,SAASiZ,EAAe9iC,EAASi8B,EAAoBlhB,GACjD,MAAM+vB,EAAc7H,EAAmBjjC,EAAS+a,IAC1C,OAAE2d,GAAWuD,EAKnB,OAJIvD,KACA,QAAcoS,EAAY1sC,EAAGs6B,EAAOrvB,OAAOjL,IAC3C,QAAc0sC,EAAYzsC,EAAGq6B,EAAOrvB,OAAOhL,IAExCysC,CACX,mSCQA,MAAMC,EAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,cAQF,2BAAApW,CAA4BqW,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACA,WAAAvrC,EAAY,OAAE0V,EAAM,MAAEjB,EAAK,gBAAE3B,EAAe,oBAAE0gB,EAAmB,sBAAEG,EAAqB,YAAEvB,GAAgB7yB,EAAU,CAAC,GAKjHc,KAAKa,QAAU,KAIfb,KAAKkW,SAAW,IAAIzN,IAIpBzI,KAAKmrC,eAAgB,EACrBnrC,KAAKorC,uBAAwB,EAQ7BprC,KAAKqS,mBAAqB,KAM1BrS,KAAKsM,OAAS,IAAImM,IAClBzY,KAAK+F,iBAAmB,IAIxB/F,KAAKovB,SAAW,CAAC,EAKjBpvB,KAAKqrC,mBAAqB,IAAI5yB,IAM9BzY,KAAKsrC,iBAAmB,CAAC,EAIzBtrC,KAAKurC,OAAS,CAAC,EAMfvrC,KAAKwrC,uBAAyB,CAAC,EAC/BxrC,KAAKyrC,aAAe,IAAMzrC,KAAKyT,OAAO,SAAUzT,KAAKgS,cACrDhS,KAAKiW,OAAS,KACLjW,KAAKa,UAEVb,KAAK0rC,eACL1rC,KAAK2rC,eAAe3rC,KAAKa,QAASb,KAAK80B,YAAa90B,KAAKoU,MAAM0C,MAAO9W,KAAK4iB,YAAW,EAE1F5iB,KAAK4rC,kBAAoB,EACzB5rC,KAAK0iC,eAAiB,KAClB,MAAMr+B,EAAM,IAAKA,MACbrE,KAAK4rC,kBAAoBvnC,IACzBrE,KAAK4rC,kBAAoBvnC,EACzB,KAAM4R,OAAOjW,KAAKiW,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAEjE,EAAY,YAAE8iB,EAAW,SAAE/zB,GAAagxB,EAChD/xB,KAAKe,SAAWA,EAChBf,KAAKgS,aAAeA,EACpBhS,KAAK6rC,WAAa,IAAK75B,GACvBhS,KAAK8rC,cAAgB13B,EAAMoD,QAAU,IAAKxF,GAAiB,CAAC,EAC5DhS,KAAK80B,YAAcA,EACnB90B,KAAKqV,OAASA,EACdrV,KAAKoU,MAAQA,EACbpU,KAAKyS,gBAAkBA,EACvBzS,KAAKq/B,MAAQhqB,EAASA,EAAOgqB,MAAQ,EAAI,EACzCr/B,KAAKmzB,oBAAsBA,EAC3BnzB,KAAKd,QAAUA,EACfc,KAAKszB,sBAAwB3rB,QAAQ2rB,GACrCtzB,KAAKorC,uBAAwB,OAAsBh3B,GACnDpU,KAAKmrC,eAAgB,OAAc/2B,GAC/BpU,KAAKmrC,gBACLnrC,KAAK6S,gBAAkB,IAAIpK,KAE/BzI,KAAK+rC,uBAAyBpkC,QAAQ0N,GAAUA,EAAOxU,SAWvD,MAAM,WAAEmrC,KAAeC,GAAwBjsC,KAAK20B,4BAA4BvgB,EAAO,CAAC,EAAGpU,MAC3F,IAAK,MAAMzC,KAAO0uC,EAAqB,CACnC,MAAMltC,EAAQktC,EAAoB1uC,QACRoE,IAAtBqQ,EAAazU,KAAsB,OAAcwB,IACjDA,EAAMkD,IAAI+P,EAAazU,IAAM,EAErC,CACJ,CACA,KAAAqpB,CAAMkM,GACF9yB,KAAKa,QAAUiyB,EACf,IAAmB7wB,IAAI6wB,EAAU9yB,MAC7BA,KAAK4iB,aAAe5iB,KAAK4iB,WAAWkQ,UACpC9yB,KAAK4iB,WAAWgE,MAAMkM,GAEtB9yB,KAAKqV,QAAUrV,KAAKmrC,gBAAkBnrC,KAAKorC,wBAC3CprC,KAAKksC,sBAAwBlsC,KAAKqV,OAAO82B,gBAAgBnsC,OAE7DA,KAAKsM,OAAOiH,SAAQ,CAACxU,EAAOxB,IAAQyC,KAAKosC,kBAAkB7uC,EAAKwB,KAC3D,IAAyB8B,UAC1B,SAEJb,KAAKqS,mBAC4B,UAA7BrS,KAAKmzB,sBAE8B,WAA7BnzB,KAAKmzB,qBAED,IAAqBtyB,SAI/Bb,KAAKqV,QACLrV,KAAKqV,OAAOa,SAAS+K,IAAIjhB,MAC7BA,KAAKqI,OAAOrI,KAAKoU,MAAOpU,KAAKyS,gBACjC,CACA,OAAAqU,GACI9mB,KAAK4iB,YAAc5iB,KAAK4iB,WAAWkE,WACnC,QAAY9mB,KAAKyrC,eACjB,QAAYzrC,KAAKiW,QACjBjW,KAAKqrC,mBAAmB93B,SAASmb,GAAWA,MAC5C1uB,KAAKqrC,mBAAmBlqB,QACxBnhB,KAAKksC,uBAAyBlsC,KAAKksC,wBACnClsC,KAAKqV,QAAUrV,KAAKqV,OAAOa,SAASmC,OAAOrY,MAC3C,IAAK,MAAMzC,KAAOyC,KAAKurC,OACnBvrC,KAAKurC,OAAOhuC,GAAK4jB,QAErB,IAAK,MAAM5jB,KAAOyC,KAAKovB,SAAU,CAC7B,MAAMid,EAAUrsC,KAAKovB,SAAS7xB,GAC1B8uC,IACAA,EAAQvlB,UACRulB,EAAQxgB,WAAY,EAE5B,CACA7rB,KAAKa,QAAU,IACnB,CACA,iBAAAurC,CAAkB7uC,EAAKwB,GACfiB,KAAKqrC,mBAAmBrnC,IAAIzG,IAC5ByC,KAAKqrC,mBAAmBr6B,IAAIzT,EAA5ByC,GAEJ,MAAMssC,EAAmB,IAAetoC,IAAIzG,GACxC+uC,GAAoBtsC,KAAKusC,iBACzBvsC,KAAKusC,kBAET,MAAMC,EAAiBztC,EAAM0tC,GAAG,UAAWC,IACvC1sC,KAAKgS,aAAazU,GAAOmvC,EACzB1sC,KAAKoU,MAAMrT,UAAY,KAAMme,UAAUlf,KAAKyrC,cACxCa,GAAoBtsC,KAAK4iB,aACzB5iB,KAAK4iB,WAAW+a,kBAAmB,EACvC,IAEEgP,EAAwB5tC,EAAM0tC,GAAG,gBAAiBzsC,KAAK0iC,gBAC7D,IAAIkK,EACA16B,OAAO26B,wBACPD,EAAkB16B,OAAO26B,sBAAsB7sC,KAAMzC,EAAKwB,IAE9DiB,KAAKqrC,mBAAmBppC,IAAI1E,GAAK,KAC7BivC,IACAG,IACIC,GACAA,IACA7tC,EAAM6B,OACN7B,EAAMoE,MAAM,GAExB,CACA,gBAAA2Q,CAAiBg5B,GAIb,OAAK9sC,KAAKa,SACLb,KAAK+sC,0BACN/sC,KAAKU,OAASosC,EAAMpsC,KAGjBV,KAAK+sC,yBAAyB/sC,KAAKa,QAASisC,EAAMjsC,SAF9C,CAGf,CACA,cAAAuzB,GACI,IAAI72B,EAAM,YACV,IAAKA,KAAO,IAAoB,CAC5B,MAAMyvC,EAAoB,IAAmBzvC,GAC7C,IAAKyvC,EACD,SACJ,MAAM,UAAEjgB,EAAWnB,QAASqhB,GAAuBD,EAYnD,IARKhtC,KAAKovB,SAAS7xB,IACf0vC,GACAlgB,EAAU/sB,KAAKoU,SACfpU,KAAKovB,SAAS7xB,GAAO,IAAI0vC,EAAmBjtC,OAK5CA,KAAKovB,SAAS7xB,GAAM,CACpB,MAAM8uC,EAAUrsC,KAAKovB,SAAS7xB,GAC1B8uC,EAAQxgB,UACRwgB,EAAQhkC,UAGRgkC,EAAQzlB,QACRylB,EAAQxgB,WAAY,EAE5B,CACJ,CACJ,CACA,YAAA6f,GACI1rC,KAAKktC,MAAMltC,KAAK80B,YAAa90B,KAAKgS,aAAchS,KAAKoU,MACzD,CAMA,kBAAA4uB,GACI,OAAOhjC,KAAKa,QACNb,KAAKmtC,2BAA2BntC,KAAKa,QAASb,KAAKoU,QACnD,SACV,CACA,cAAAg5B,CAAe7vC,GACX,OAAOyC,KAAKgS,aAAazU,EAC7B,CACA,cAAA0/B,CAAe1/B,EAAKwB,GAChBiB,KAAKgS,aAAazU,GAAOwB,CAC7B,CAKA,MAAAsJ,CAAO+L,EAAO3B,IACN2B,EAAMtQ,mBAAqB9D,KAAKoU,MAAMtQ,oBACtC9D,KAAK0iC,iBAET1iC,KAAKkV,UAAYlV,KAAKoU,MACtBpU,KAAKoU,MAAQA,EACbpU,KAAKgsB,oBAAsBhsB,KAAKyS,gBAChCzS,KAAKyS,gBAAkBA,EAIvB,IAAK,IAAI1J,EAAI,EAAGA,EAAI+hC,EAAkBjpC,OAAQkH,IAAK,CAC/C,MAAMxL,EAAMutC,EAAkB/hC,GAC1B/I,KAAKwrC,uBAAuBjuC,KAC5ByC,KAAKwrC,uBAAuBjuC,YACrByC,KAAKwrC,uBAAuBjuC,IAEvC,MACM8vC,EAAWj5B,EADK,KAAO7W,GAEzB8vC,IACArtC,KAAKwrC,uBAAuBjuC,GAAOyC,KAAKysC,GAAGlvC,EAAK8vC,GAExD,CACArtC,KAAKsrC,kBAAmB,OAA4BtrC,KAAMA,KAAK20B,4BAA4BvgB,EAAOpU,KAAKkV,UAAWlV,MAAOA,KAAKsrC,kBAC1HtrC,KAAKstC,wBACLttC,KAAKstC,yBAETttC,KAAKe,UAAYf,KAAKe,SAASf,KACnC,CACA,QAAA+D,GACI,OAAO/D,KAAKoU,KAChB,CAIA,UAAAm5B,CAAW1tC,GACP,OAAOG,KAAKoU,MAAMo5B,SAAWxtC,KAAKoU,MAAMo5B,SAAS3tC,QAAQ8B,CAC7D,CAIA,oBAAA8P,GACI,OAAOzR,KAAKoU,MAAM3D,UACtB,CACA,qBAAAsT,GACI,OAAO/jB,KAAKoU,MAAM0G,kBACtB,CACA,qBAAA2yB,GACI,OAAOztC,KAAKmrC,cACNnrC,KACAA,KAAKqV,OACDrV,KAAKqV,OAAOo4B,6BACZ9rC,CACd,CAIA,eAAAwqC,CAAgB34B,GACZ,MAAMk6B,EAAqB1tC,KAAKytC,wBAChC,GAAIC,EAGA,OAFAA,EAAmB76B,iBACf66B,EAAmB76B,gBAAgBoO,IAAIzN,GACpC,IAAMk6B,EAAmB76B,gBAAgBwF,OAAO7E,EAE/D,CAIA,QAAAm6B,CAASpwC,EAAKwB,GAEV,MAAM6uC,EAAgB5tC,KAAKsM,OAAO0E,IAAIzT,GAClCwB,IAAU6uC,IACNA,GACA5tC,KAAK6tC,YAAYtwC,GACrByC,KAAKosC,kBAAkB7uC,EAAKwB,GAC5BiB,KAAKsM,OAAOrK,IAAI1E,EAAKwB,GACrBiB,KAAKgS,aAAazU,GAAOwB,EAAMiS,MAEvC,CAIA,WAAA68B,CAAYtwC,GACRyC,KAAKsM,OAAO+L,OAAO9a,GACnB,MAAMuwC,EAAc9tC,KAAKqrC,mBAAmBr6B,IAAIzT,GAC5CuwC,IACAA,IACA9tC,KAAKqrC,mBAAmBhzB,OAAO9a,WAE5ByC,KAAKgS,aAAazU,GACzByC,KAAK+tC,2BAA2BxwC,EAAKyC,KAAK80B,YAC9C,CAIA,QAAAkZ,CAASzwC,GACL,OAAOyC,KAAKsM,OAAOtI,IAAIzG,EAC3B,CACA,QAAAwU,CAASxU,EAAK0wC,GACV,GAAIjuC,KAAKoU,MAAM9H,QAAUtM,KAAKoU,MAAM9H,OAAO/O,GACvC,OAAOyC,KAAKoU,MAAM9H,OAAO/O,GAE7B,IAAIwB,EAAQiB,KAAKsM,OAAO0E,IAAIzT,GAK5B,YAJcoE,IAAV5C,QAAwC4C,IAAjBssC,IACvBlvC,GAAQ,QAA6B,OAAjBkvC,OAAwBtsC,EAAYssC,EAAc,CAAErtC,MAAOZ,OAC/EA,KAAK2tC,SAASpwC,EAAKwB,IAEhBA,CACX,CAMA,SAAAmvC,CAAU3wC,EAAK8N,GACX,IAAInD,EACJ,IAAInJ,OAAmC4C,IAA3B3B,KAAKgS,aAAazU,IAAuByC,KAAKa,QAEI,QAAvDqH,EAAKlI,KAAKmuC,uBAAuBnuC,KAAKoU,MAAO7W,UAAyB,IAAP2K,EAAgBA,EAAKlI,KAAKouC,sBAAsBpuC,KAAKa,QAAStD,EAAKyC,KAAKd,SADxIc,KAAKgS,aAAazU,GAaxB,OAXIwB,UACqB,iBAAVA,KACN,IAAAgK,GAAkBhK,KAAU,OAAkBA,IAE/CA,EAAQokB,WAAWpkB,KAEb,OAAcA,IAAU,IAAQ2V,KAAKrJ,KAC3CtM,GAAQ,OAAkBxB,EAAK8N,IAEnCrL,KAAKquC,cAAc9wC,GAAK,OAAcwB,GAASA,EAAMiS,MAAQjS,KAE1D,OAAcA,GAASA,EAAMiS,MAAQjS,CAChD,CAKA,aAAAsvC,CAAc9wC,EAAKwB,GACfiB,KAAK6rC,WAAWtuC,GAAOwB,CAC3B,CAKA,aAAAuvC,CAAc/wC,GACV,IAAI2K,EACJ,MAAM,QAAEsP,GAAYxX,KAAKoU,MACzB,IAAIm6B,EACJ,GAAuB,iBAAZ/2B,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMhF,GAAU,OAAwBxS,KAAKoU,MAAOoD,EAAyC,QAA/BtP,EAAKlI,KAAKyS,uBAAoC,IAAPvK,OAAgB,EAASA,EAAGwK,QAC7HF,IACA+7B,EAAmB/7B,EAAQjV,GAEnC,CAIA,GAAIia,QAAgC7V,IAArB4sC,EACX,OAAOA,EAMX,MAAMljC,EAASrL,KAAKmuC,uBAAuBnuC,KAAKoU,MAAO7W,GACvD,YAAeoE,IAAX0J,IAAyB,OAAcA,QAMR1J,IAA5B3B,KAAK8rC,cAAcvuC,SACDoE,IAArB4sC,OACE5sC,EACA3B,KAAK6rC,WAAWtuC,GARX8N,CASf,CACA,EAAAohC,CAAG/uB,EAAWqD,GAIV,OAHK/gB,KAAKurC,OAAO7tB,KACb1d,KAAKurC,OAAO7tB,GAAa,IAAI,KAE1B1d,KAAKurC,OAAO7tB,GAAWuD,IAAIF,EACtC,CACA,MAAAtN,CAAOiK,KAAc6hB,GACbv/B,KAAKurC,OAAO7tB,IACZ1d,KAAKurC,OAAO7tB,GAAWjK,UAAU8rB,EAEzC,qGCvdJ,SAASiP,EAA6Bld,EAAmBC,GACrD,OAAO,SAA+BnE,GAAW,mBAAEqhB,GAAuB,CAAEA,oBAAoB,IAC5F,MAGMha,EAAS,KAHI,OAAerH,GAC5B,IACA,IAGFkE,oBACAE,WAAW,OAAgBid,GAC3Bld,sBACAnE,aAEJ,OAAO,OAA8BqH,EACzC,CACJ,iHCbA,MAAMia,GAAsC,OAA6B,IAClE,OACA,OACA,OACA,KACJ,yCCNH,MA6BMC,GAA0B,eAAsB,8JC1BtD,MAAMC,6BAA6B,IAC/B,WAAAjvC,CAAYkvC,EAAqB/tC,EAAYjB,EAAMC,EAAaC,GAC5DH,MAAMivC,EAAqB/tC,EAAYjB,EAAMC,EAAaC,GAAS,EACvE,CACA,aAAA+uC,GACI,MAAM,oBAAED,EAAmB,QAAE9uC,EAAO,KAAEF,GAASG,KAC/C,IAAKD,IAAYA,EAAQc,QACrB,OACJjB,MAAMkvC,gBAIN,IAAK,IAAI/lC,EAAI,EAAGA,EAAI8lC,EAAoBhtC,OAAQkH,IAAK,CACjD,IAAIgmC,EAAWF,EAAoB9lC,GACnC,GAAwB,iBAAbgmC,IACPA,EAAWA,EAASC,QAChB,OAAmBD,IAAW,CAC9B,MAAM3sC,GAAW,OAAiB2sC,EAAUhvC,EAAQc,cACnCc,IAAbS,IACAysC,EAAoB9lC,GAAK3G,GAEzB2G,IAAM8lC,EAAoBhtC,OAAS,IACnC7B,KAAKG,cAAgB4uC,EAE7B,CAER,CAaA,GAPA/uC,KAAKivC,wBAOA,IAAejrC,IAAInE,IAAwC,IAA/BgvC,EAAoBhtC,OACjD,OAEJ,MAAOkJ,EAAQM,GAAUwjC,EACnBK,GAAa,OAAuBnkC,GACpCokC,GAAa,OAAuB9jC,GAI1C,GAAI6jC,IAAeC,EAMnB,IAAI,QAAcD,KAAe,QAAcC,GAC3C,IAAK,IAAIpmC,EAAI,EAAGA,EAAI8lC,EAAoBhtC,OAAQkH,IAAK,CACjD,MAAMhK,EAAQ8vC,EAAoB9lC,GACb,iBAAVhK,IACP8vC,EAAoB9lC,GAAKoa,WAAWpkB,GAE5C,MAMAiB,KAAKmiC,kBAAmB,CAEhC,CACA,oBAAA8M,GACI,MAAM,oBAAEJ,EAAmB,KAAEhvC,GAASG,KAChCovC,EAAsB,GAC5B,IAAK,IAAIrmC,EAAI,EAAGA,EAAI8lC,EAAoBhtC,OAAQkH,KACxC,OAAO8lC,EAAoB9lC,KAC3BqmC,EAAoB1tC,KAAKqH,GAG7BqmC,EAAoBvtC,SACpB,OAA4BgtC,EAAqBO,EAAqBvvC,EAE9E,CACA,mBAAAwvC,GACI,MAAM,QAAEtvC,EAAO,oBAAE8uC,EAAmB,KAAEhvC,GAASG,KAC/C,IAAKD,IAAYA,EAAQc,QACrB,OACS,WAAThB,IACAG,KAAKsvC,iBAAmBp9B,OAAOq9B,aAEnCvvC,KAAKwvC,eAAiB,KAAiB3vC,GAAME,EAAQijC,qBAAsB9wB,OAAOmqB,iBAAiBt8B,EAAQc,UAC3GguC,EAAoB,GAAK7uC,KAAKwvC,eAE9B,MAAMC,EAAkBZ,EAAoBA,EAAoBhtC,OAAS,QACjDF,IAApB8tC,GACA1vC,EAAQgS,SAASlS,EAAM4vC,GAAiBC,KAAKD,GAAiB,EAEtE,CACA,eAAAE,GACI,IAAIznC,EACJ,MAAM,QAAEnI,EAAO,KAAEF,EAAI,oBAAEgvC,GAAwB7uC,KAC/C,IAAKD,IAAYA,EAAQc,QACrB,OACJ,MAAM9B,EAAQgB,EAAQgS,SAASlS,GAC/Bd,GAASA,EAAM2wC,KAAK1vC,KAAKwvC,gBAAgB,GACzC,MAAMI,EAAqBf,EAAoBhtC,OAAS,EAClD1B,EAAgB0uC,EAAoBe,GAC1Cf,EAAoBe,GAAsB,KAAiB/vC,GAAME,EAAQijC,qBAAsB9wB,OAAOmqB,iBAAiBt8B,EAAQc,UACzG,OAAlBV,QAAiDwB,IAAvB3B,KAAKG,gBAC/BH,KAAKG,cAAgBA,IAGa,QAAjC+H,EAAKlI,KAAK6vC,yBAAsC,IAAP3nC,OAAgB,EAASA,EAAGrG,SACtE7B,KAAK6vC,kBAAkBt8B,SAAQ,EAAEu8B,EAAoBC,MACjDhwC,EACKgS,SAAS+9B,GACT7tC,IAAI8tC,EAAoB,IAGrC/vC,KAAKivC,sBACT,2FC3HJ,MAAMe,yBAAyB,IAC3B,WAAArwC,GACIC,SAASyoB,WACTroB,KAAK+F,iBAAmB,GAC5B,CACA,wBAAAgnC,CAAyBr/B,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEuiC,wBAAwBtiC,GAAS,GAAK,CACnD,CACA,sBAAAwgC,CAAuB/5B,EAAO7W,GAC1B,OAAO6W,EAAM0C,MACP1C,EAAM0C,MAAMvZ,QACZoE,CACV,CACA,0BAAAosC,CAA2BxwC,GAAK,KAAEkqC,EAAI,MAAE3wB,WAC7B2wB,EAAKlqC,UACLuZ,EAAMvZ,EACjB,CACA,sBAAA+vC,GACQttC,KAAKkwC,oBACLlwC,KAAKkwC,2BACElwC,KAAKkwC,mBAEhB,MAAM,SAAEh6B,GAAalW,KAAKoU,OACtB,OAAc8B,KACdlW,KAAKkwC,kBAAoBh6B,EAASu2B,GAAG,UAAW9gC,IACxC3L,KAAKa,UACLb,KAAKa,QAAQsvC,YAAc,GAAGxkC,IAClC,IAGZ,0FClCJ,MAAMykC,EAAyB,CAAChjB,EAAWluB,KAChC,OAAekuB,GAChB,IAAI,IAAiBluB,GACrB,IAAI,IAAkBA,EAAS,CAC7Bq1B,gBAAiBnH,IAAc,EAAAtT,0HCF3C,SAASu2B,EAAgB5B,GAAqB,GAsB1C,MArBkB,CAACrhB,EAAWhZ,EAAOmC,GAAOvE,gBAAgBgJ,KACxD,MAGMs1B,IAHiB,OAAeljB,GAChC,EAAAmjB,EACA,KAC6Bn8B,EAAOpC,EAAcgJ,EAAUoS,GAC5DojB,GAAgB,OAAYp8B,EAA4B,iBAAdgZ,EAAwBqhB,GAClEgC,EAAerjB,IAAc,EAAAtT,SAC7B,IAAK02B,KAAkBF,EAAa/5B,OACpC,CAAC,GAMD,SAAEL,GAAa9B,EACfkF,GAAmB,IAAAnB,UAAQ,KAAO,OAAcjC,GAAYA,EAASlF,MAAQkF,GAAW,CAACA,IAC/F,OAAO,IAAAc,eAAcoW,EAAW,IACzBqjB,EACHv6B,SAAUoD,GACZ,CAGV,oCC3BA,MAAMo3B,EAAeC,GAAQA,EAAIC,QAAQ,mBAAoB,SAASpI,yFCUtE,MAAMqI,EAEN,2DAQA,MAAMC,EAAW,EACjB,SAASC,EAAiBlwC,EAASd,EAASs/B,EAAQ,IAChD,OAAUA,GAASyR,EAAU,yDAAyDjwC,yDACtF,MAAOmwC,EAAOC,GAVlB,SAA0BpwC,GACtB,MAAMqwC,EAAQL,EAAsBM,KAAKtwC,GACzC,IAAKqwC,EACD,MAAO,CAAC,GACZ,MAAO,CAAEE,EAAQC,EAAQJ,GAAYC,EACrC,MAAO,CAAC,KAAKE,QAAuCA,EAASC,IAAUJ,EAC3E,CAI8BK,CAAiBzwC,GAE3C,IAAKmwC,EACD,OAEJ,MAAM5uC,EAAW8P,OAAOmqB,iBAAiBt8B,GAASwxC,iBAAiBP,GACnE,GAAI5uC,EAAU,CACV,MAAMovC,EAAUpvC,EAAS4sC,OACzB,OAAO,IAAAjmC,GAAkByoC,GAAWruB,WAAWquB,GAAWA,CAC9D,CACA,OAAO,OAAmBP,GACpBF,EAAiBE,EAAUlxC,EAASs/B,EAAQ,GAC5C4R,CACV,oDCrCA,IAAIQ,EAAiBl0C,KAAS,OAAkBA,GAoBhD,KAnBiCm0C,EAyBLC,QAAQ,0BAA0B9kC,WArB1D4kC,EAAiBl0C,GAAQA,EAAIiX,WAAW,QAAS,OAAkBjX,GAAOm0C,EAAYn0C,GAsB1F,CACA,MAAO2K,GAEP,CA7BA,IAAiCwpC,EA8BjC,SAASE,EAAYx9B,EAAOy9B,EAAOpD,GAC/B,MAAM+B,EAAgB,CAAC,EACvB,IAAK,MAAMjzC,KAAO6W,EAQF,WAAR7W,GAA4C,iBAAjB6W,EAAM9H,SAEjCmlC,EAAcl0C,KACU,IAAvBkxC,IAA+B,OAAkBlxC,KAChDs0C,KAAU,OAAkBt0C,IAE7B6W,EAAiB,WACd7W,EAAIiX,WAAW,aACnBg8B,EAAcjzC,GACV6W,EAAM7W,IAGlB,OAAOizC,CACX,6CCxDA,MAAMsB,EAAyBd,GAAWzzC,GAAuB,iBAARA,GAAoBA,EAAIiX,WAAWw8B,GACtFe,EACQD,EAAsB,MAC9BE,EACQF,EAAsB,UAC9BG,EAAsBlzC,KACAizC,EAAsBjzC,IAIvCmzC,EAAuBx9B,KAAK3V,EAAMozC,MAAM,MAAM,GAAGnD,QAEtDkD,EAAyB,yICV/B,SAASE,EAAehlB,GACpB,MAKqB,iBAAdA,IAIHA,EAAU5T,SAAS,SAOvB,IAAqB64B,QAAQjlB,IAAc,GAIvC,SAAS1Y,KAAK0Y,GAItB,mBC3BA,SAASklB,EAAavyC,GAClB,OAAOA,aAAmBwyC,YAAkC,QAApBxyC,EAAQyyC,OACpD,4HCGA,MAAMC,EAAiBxnC,GAAMA,IAAM,MAAUA,IAAM,EAAA4qB,GAC7C6c,EAAgB,IAAIjqC,IAAI,CAAC,IAAK,IAAK,MACnCkqC,EAAgC,IAAmB1oC,QAAQ1M,IAASm1C,EAAc1uC,IAAIzG,KAC5F,SAASq1C,EAAgCthC,GACrC,MAAMu+B,EAAoB,GAQ1B,OAPA8C,EAA8Bp/B,SAAShW,IACnC,MAAMwB,EAAQuS,EAAcS,SAASxU,QACvBoE,IAAV5C,IACA8wC,EAAkBnuC,KAAK,CAACnE,EAAKwB,EAAMiS,QACnCjS,EAAMkD,IAAI1E,EAAIiX,WAAW,SAAW,EAAI,GAC5C,IAEGq7B,CACX,CACA,MAAMgD,EAAmB,CAErB50C,MAAO,EAAGE,MAAO20C,cAAc,IAAKC,eAAe,OAAU50C,EAAEiJ,IAAMjJ,EAAE6I,IAAMmc,WAAW2vB,GAAe3vB,WAAW4vB,GAClH70C,OAAQ,EAAGE,MAAO40C,aAAa,IAAKC,gBAAgB,OAAU70C,EAAEgJ,IAAMhJ,EAAE4I,IAAMmc,WAAW6vB,GAAc7vB,WAAW8vB,GAClHt9B,IAAK,CAACu9B,GAASv9B,SAAUwN,WAAWxN,GACpCE,KAAM,CAACq9B,GAASr9B,UAAWsN,WAAWtN,GACtCqR,OAAQ,EAAG9oB,MAAOuX,SAAUwN,WAAWxN,IAAQvX,EAAEgJ,IAAMhJ,EAAE4I,KACzD+O,MAAO,EAAG5X,MAAO0X,UAAWsN,WAAWtN,IAAS1X,EAAEiJ,IAAMjJ,EAAE6I,KAE1D7I,EAAG,CAAC+0C,GAASvtB,gBAAgB,OAAwBA,EAAW,KAChEvnB,EAAG,CAAC80C,GAASvtB,gBAAgB,OAAwBA,EAAW,MAGpEktB,EAAiBM,WAAaN,EAAiB10C,EAC/C00C,EAAiBO,WAAaP,EAAiBz0C,6EC7B/C,SAASi1C,EAAkB91C,EAAKwB,GAC5B,IAAIu0C,GAAmB,OAAoB/1C,GAI3C,OAHI+1C,IAAqB,MACrBA,EAAmB,KAEhBA,EAAiBD,kBAClBC,EAAiBD,kBAAkBt0C,QACnC4C,CACV,iECLA,MAAM4xC,EAAoB,cACnB,EAEHC,MAAK,IACLC,gBAAiB,IACjBC,aAAc,IACdhqC,KAAM,IACNiqC,OAAQ,IAERC,YAAa,IACbC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,gBAAiB,IACjB/pC,OAAM,IACNgqC,aAAc,KAKZC,EAAuB32C,GAAQg2C,EAAkBh2C,kGCnBvD,MAAM42C,EAAsB,CAAC,KAAQ,EAAAte,GAAI,KAAS,KAAS,EAAAue,GAAI,EAAAC,GAAI,KAI7DC,EAA0BrpC,GAAMkpC,EAAoBI,MAAK,OAActpC,2FCJ7E,MAAMupC,EAAa,IAAI,IAAqB,IAAO,KAI7CC,EAAiBxpC,GAAMupC,EAAWD,MAAK,OAActpC,uCCT3D,MAAMypC,EAAiB,CAAC31C,EAAO2B,IACpBA,GAAyB,iBAAV3B,EAChB2B,EAAKilB,UAAU5mB,GACfA,qDCJV,MAAM41C,EAA0B,CAE5BC,YAAa,EAAA/e,GACbgf,eAAgB,EAAAhf,GAChBif,iBAAkB,EAAAjf,GAClBkf,kBAAmB,EAAAlf,GACnBmf,gBAAiB,EAAAnf,GACjBjH,aAAc,EAAAiH,GACdof,OAAQ,EAAApf,GACR/G,oBAAqB,EAAA+G,GACrB9G,qBAAsB,EAAA8G,GACtB5G,wBAAyB,EAAA4G,GACzB7G,uBAAwB,EAAA6G,GAExB53B,MAAO,EAAA43B,GACPqf,SAAU,EAAArf,GACV33B,OAAQ,EAAA23B,GACRsf,UAAW,EAAAtf,GACXlgB,IAAK,EAAAkgB,GACL9f,MAAO,EAAA8f,GACP3O,OAAQ,EAAA2O,GACRhgB,KAAM,EAAAggB,GAENuf,QAAS,EAAAvf,GACTmd,WAAY,EAAAnd,GACZkd,aAAc,EAAAld,GACdod,cAAe,EAAApd,GACfid,YAAa,EAAAjd,GACblG,OAAQ,EAAAkG,GACRwf,UAAW,EAAAxf,GACXyf,YAAa,EAAAzf,GACb0f,aAAc,EAAA1f,GACd2f,WAAY,EAAA3f,GAEZ4f,oBAAqB,EAAA5f,GACrB6f,oBAAqB,EAAA7f,uGC/BzB,MAAM8f,EAAmB,IAClB,OACA,IACHC,OAAQ,IACR9iC,KAAM,EAAA+iB,GAENggB,YAAa,KACbC,cAAe,KACfC,WAAY,wCCXhB,MAAMC,EAAiB/qC,GAAOvK,GAASA,EAAKgU,KAAKzJ,kECAjD,MAAMgrC,EAAsB,CACxBtf,OAAQ,KACR6P,QAAS,KACTC,QAAS,KACTC,QAAS,KACThP,MAAK,KACLuB,OAAQ,KACRE,OAAQ,KACR+c,OAAQ,KACRC,KAAM,KACNxP,MAAO,KACPC,MAAO,KACPhO,SAAU,EAAA/C,GACVsd,WAAY,EAAAtd,GACZud,WAAY,EAAAvd,GACZugB,WAAY,EAAAvgB,GACZ13B,EAAG,EAAA03B,GACHz3B,EAAG,EAAAy3B,GACH0Q,EAAG,EAAA1Q,GACHwgB,YAAa,EAAAxgB,GACbsU,qBAAsB,EAAAtU,GACtBM,QAAS,KACT+C,QAAS,KACTE,QAAS,KACTkd,QAAS,EAAAzgB,uCCxBb,MAAM0gB,EAAO,CACT7hC,KAAOzJ,GAAY,SAANA,EACbo+B,MAAQp+B,GAAMA,sCCHlB,MAAMurC,EAAM,cACL,GACH7wB,UAAW5e,KAAKE,6JCQpB,MAAMwvC,0BAA0B,IAC5B,WAAA92C,GACIC,SAASyoB,WACTroB,KAAKU,KAAO,OACZV,KAAK2rC,eAAiB,GAC1B,CACA,qBAAAyC,CAAsBtb,EAAUv1B,GAC5B,GAAI,IAAeyG,IAAIzG,GACnB,OAAO,OAAmBu1B,EAAUv1B,GAEnC,CACD,MAAMm5C,GAdQ32C,EAcyB+yB,EAbxC5gB,OAAOmqB,iBAAiBt8B,IAcjBhB,IAAS,OAAkBxB,GAC3Bm5C,EAAcnF,iBAAiBh0C,GAC/Bm5C,EAAcn5C,KAAS,EAC7B,MAAwB,iBAAVwB,EAAqBA,EAAMiwC,OAASjwC,CACtD,CAnBR,IAA0BgB,CAoBtB,CACA,0BAAAotC,CAA2Bra,GAAU,mBAAEhY,IACnC,OAAO,IAAA67B,GAAmB7jB,EAAUhY,EACxC,CACA,KAAAoyB,CAAMpY,EAAa9iB,EAAcoC,IAC7B,OAAgB0gB,EAAa9iB,EAAcoC,EAAMtQ,kBACrD,CACA,2BAAA6wB,CAA4BvgB,EAAOc,EAAW5D,GAC1C,OAAO,OAA4B8C,EAAOc,EAAW5D,EACzD,6EClCJ,MAAMslC,EAAmB,CACrBnlB,gBAAgB,OAAmB,CAC/BkD,4BAA2B,IAC3BC,kBAAmB,kHCD3B,SAASiiB,EAAkBxrC,EAAQmc,EAAQpT,GACvC,IAAK,MAAM7W,KAAOiqB,GACT,OAAcA,EAAOjqB,MAAU,OAAoBA,EAAK6W,KACzD/I,EAAO9N,GAAOiqB,EAAOjqB,GAGjC,CAQA,SAASu5C,EAAS1iC,EAAO2d,GACrB,MACMjb,EAAQ,CAAC,EAMf,OAFA+/B,EAAkB//B,EALA1C,EAAM0C,OAAS,CAAC,EAKE1C,GACpCpO,OAAOC,OAAO6Q,EAdlB,UAAgC,kBAAEhT,GAAqBiuB,GACnD,OAAO,IAAA5Z,UAAQ,KACX,MAAM9W,GAAQ,SAEd,OADA,OAAgBA,EAAO0wB,EAAajuB,GAC7BkC,OAAOC,OAAO,CAAC,EAAG5E,EAAMomC,KAAMpmC,EAAMyV,MAAM,GAClD,CAACib,GACR,CAQyBglB,CAAuB3iC,EAAO2d,IAC5Cjb,CACX,CACA,SAASkgC,EAAa5iC,EAAO2d,GAEzB,MAAMklB,EAAY,CAAC,EACbngC,EAAQggC,EAAS1iC,EAAO2d,GAoB9B,OAnBI3d,EAAMoO,OAA+B,IAAvBpO,EAAM4R,eAEpBixB,EAAUC,WAAY,EAEtBpgC,EAAMqgC,WACFrgC,EAAMsgC,iBACFtgC,EAAMugC,mBACF,OAEZvgC,EAAMwgC,aACa,IAAfljC,EAAMoO,KACA,OACA,QAAsB,MAAfpO,EAAMoO,KAAe,IAAM,WAEzB7gB,IAAnByS,EAAMmjC,WACLnjC,EAAMojC,OAASpjC,EAAMqjC,YAAcrjC,EAAMmX,YAC1C0rB,EAAUM,SAAW,GAEzBN,EAAUngC,MAAQA,EACXmgC,CACX,qGChDA,SAASS,EAAgBr2C,EAAO2Q,EAAclO,GAC1C,MAAM,MAAEgT,EAAK,KAAE2wB,EAAI,gBAAEL,GAAoB/lC,EAEzC,IAAIopC,GAAe,EACfkN,GAAqB,EAOzB,IAAK,MAAMp6C,KAAOyU,EAAc,CAC5B,MAAMjT,EAAQiT,EAAazU,GAC3B,GAAI,IAAeyG,IAAIzG,GAEnBktC,GAAe,OAGd,IAAI,OAAkBltC,GACvBkqC,EAAKlqC,GAAOwB,MAGX,CAED,MAAM64C,GAAc,OAAe74C,EAAO,IAAiBxB,IACvDA,EAAIiX,WAAW,WAEfmjC,GAAqB,EACrBvQ,EAAgB7pC,GACZq6C,GAGJ9gC,EAAMvZ,GAAOq6C,CAErB,CACJ,CAiBA,GAhBK5lC,EAAa2T,YACV8kB,GAAgB3mC,EAChBgT,EAAM6O,WAAY,OAAe3T,EAAc3Q,EAAMskB,UAAW7hB,GAE3DgT,EAAM6O,YAKX7O,EAAM6O,UAAY,SAOtBgyB,EAAoB,CACpB,MAAM,QAAEze,EAAU,MAAK,QAAEE,EAAU,MAAK,QAAEkd,EAAU,GAAOlP,EAC3DtwB,EAAMswB,gBAAkB,GAAGlO,KAAWE,KAAWkd,GACrD,CACJ,6EC1DA,MAAMuB,EAAiB,CACnB15C,EAAG,aACHC,EAAG,aACHmoC,EAAG,aACH4D,qBAAsB,eAEpB2N,EAAgB,IAAmBj2C,OAOzC,SAASk2C,EAAe/lC,EAAc2T,EAAW7hB,GAE7C,IAAIk0C,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAIlvC,EAAI,EAAGA,EAAI+uC,EAAe/uC,IAAK,CACpC,MAAMxL,EAAM,IAAmBwL,GACzBhK,EAAQiT,EAAazU,GAC3B,QAAcoE,IAAV5C,EACA,SACJ,IAAIm5C,GAAiB,EAOrB,GALIA,EADiB,iBAAVn5C,EACUA,KAAWxB,EAAIiX,WAAW,SAAW,EAAI,GAGnB,IAAtB2O,WAAWpkB,IAE3Bm5C,GAAkBp0C,EAAmB,CACtC,MAAM8zC,GAAc,OAAe74C,EAAO,IAAiBxB,IAC3D,IAAK26C,EAAgB,CACjBD,GAAqB,EAErBD,GAAmB,GADGH,EAAet6C,IAAQA,KACNq6C,KAC3C,CACI9zC,IACA6hB,EAAUpoB,GAAOq6C,EAEzB,CACJ,CAUA,OATAI,EAAkBA,EAAgBhJ,OAG9BlrC,EACAk0C,EAAkBl0C,EAAkB6hB,EAAWsyB,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,qCC3DA,MAAMG,EAAwB,KAAM,CAChCrhC,MAAO,CAAC,EACR6O,UAAW,CAAC,EACZyhB,gBAAiB,CAAC,EAClBK,KAAM,CAAC,uDCFX,MAAM2Q,EAAiB,IAAI3vC,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACG,iDCNP,MAAM4vC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI7vC,IAAI4vC,kEChB/B,MAAME,EAAmB,IAAI9vC,IAAI,CAAC,OAAQ,OAAQ,MAClD,SAAS+vC,EAA4B3J,EAAqBO,EAAqBvvC,GAC3E,IACI44C,EADA1vC,EAAI,EAER,KAAOA,EAAI8lC,EAAoBhtC,SAAW42C,GAAoB,CAC1D,MAAM1J,EAAWF,EAAoB9lC,GACb,iBAAbgmC,IACNwJ,EAAiBv0C,IAAI+qC,KACtB,OAAoBA,GAAUziC,OAAOzK,SACrC42C,EAAqB5J,EAAoB9lC,IAE7CA,GACJ,CACA,GAAI0vC,GAAsB54C,EACtB,IAAK,MAAM64C,KAAatJ,EACpBP,EAAoB6J,IAAa,OAAkB74C,EAAM44C,EAGrE,6CC3BA,MAAME,EAAYC,GAAe,IAANA,EAAa7xC,KAAKkI,GACvC0nB,EAAU1rB,IACZ,MAAM4tC,EAAQF,EAAS5xC,KAAK+xC,MAAM7tC,EAAE,GAAIA,EAAE,KAC1C,OAAO8tC,EAAYF,EAAM,EAEvBG,EAAkB,CACpB76C,EAAG,EACHC,EAAG,EACH+0C,WAAY,EACZC,WAAY,EACZna,OAAQ,EACRE,OAAQ,EACRzB,MAAQzsB,IAAOlE,KAAKmE,IAAID,EAAE,IAAMlE,KAAKmE,IAAID,EAAE,KAAO,EAClD0rB,SACA+P,QAAS/P,EACTgQ,MAAQ17B,GAAM0tC,EAAS5xC,KAAKkyC,KAAKhuC,EAAE,KACnC27B,MAAQ37B,GAAM0tC,EAAS5xC,KAAKkyC,KAAKhuC,EAAE,KACnCkrC,KAAOlrC,IAAOlE,KAAKmE,IAAID,EAAE,IAAMlE,KAAKmE,IAAID,EAAE,KAAO,GAE/C8tC,EAAeF,KACjBA,GAAgB,KACJ,IACRA,GAAS,KACNA,GAGL5f,EAAUhuB,GAAMlE,KAAKwH,KAAKtD,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDkuB,EAAUluB,GAAMlE,KAAKwH,KAAKtD,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjDiuC,EAAkB,CACpB/6C,EAAG,GACHC,EAAG,GACHmoC,EAAG,GACH4M,WAAY,GACZC,WAAY,GACZgD,WAAY,GACZnd,SACAE,SACAzB,MAAQzsB,IAAOguB,EAAOhuB,GAAKkuB,EAAOluB,IAAM,EACxCu7B,QAAUv7B,GAAM8tC,EAAYJ,EAAS5xC,KAAK+xC,MAAM7tC,EAAE,GAAIA,EAAE,MACxDw7B,QAAUx7B,GAAM8tC,EAAYJ,EAAS5xC,KAAK+xC,OAAO7tC,EAAE,GAAIA,EAAE,MACzDy7B,QAfY/P,EAgBZA,OAhBYA,EAiBZgQ,MAAQ17B,GAAM0tC,EAAS5xC,KAAKkyC,KAAKhuC,EAAE,KACnC27B,MAAQ37B,GAAM0tC,EAAS5xC,KAAKkyC,KAAKhuC,EAAE,KACnCkrC,KAAOlrC,IAAOlE,KAAKmE,IAAID,EAAE,IAAMlE,KAAKmE,IAAID,EAAE,KAAO,GAErD,SAASkuC,EAAsBt5C,GAC3B,OAAOA,EAAK2Z,SAAS,SAAW,EAAI,CACxC,CACA,SAAS4/B,EAAwBzzB,EAAW9lB,GACxC,IAAK8lB,GAA2B,SAAdA,EACd,OAAOwzB,EAAsBt5C,GAEjC,MAAMw5C,EAAgB1zB,EAAUurB,MAAM,gCACtC,IAAIoI,EACApI,EACJ,GAAImI,EACAC,EAAUJ,EACVhI,EAAQmI,MAEP,CACD,MAAME,EAAgB5zB,EAAUurB,MAAM,8BACtCoI,EAAUN,EACV9H,EAAQqI,CACZ,CACA,IAAKrI,EACD,OAAOiI,EAAsBt5C,GAEjC,MAAM25C,EAAcF,EAAQz5C,GACtByM,EAAS4kC,EAAM,GAAGiB,MAAM,KAAKhmC,IAAIstC,GACvC,MAA8B,mBAAhBD,EACRA,EAAYltC,GACZA,EAAOktC,EACjB,CACA,MAAME,EAAqB,CAAC5mB,EAAUjzB,KAClC,MAAM,UAAE8lB,EAAY,QAAW0W,iBAAiBvJ,GAChD,OAAOsmB,EAAwBzzB,EAAW9lB,EAAK,EAEnD,SAAS45C,EAAyB16C,GAC9B,OAAOokB,WAAWpkB,EAAMiwC,OAC5B,oBChFA,SAAS2K,EAAW55C,GAAS,MAAE+W,EAAK,KAAE2wB,GAAQV,EAAWnkB,GACrD5c,OAAOC,OAAOlG,EAAQ+W,MAAOA,EAAO8L,GAAcA,EAAWkkB,oBAAoBC,IAEjF,IAAK,MAAMxpC,KAAOkqC,EACd1nC,EAAQ+W,MAAM8iC,YAAYr8C,EAAKkqC,EAAKlqC,GAE5C,iFCHA,SAASo3B,EAA4BvgB,EAAOc,EAAW5D,GACnD,IAAIpJ,EACJ,MAAM,MAAE4O,GAAU1C,EACZylC,EAAY,CAAC,EACnB,IAAK,MAAMt8C,KAAOuZ,IACV,OAAcA,EAAMvZ,KACnB2X,EAAU4B,QACP,OAAc5B,EAAU4B,MAAMvZ,MAClC,OAAoBA,EAAK6W,SACgIzS,KAAnD,QAApGuG,EAAKoJ,aAAqD,EAASA,EAAcS,SAASxU,UAAyB,IAAP2K,OAAgB,EAASA,EAAG4xC,cAC1ID,EAAUt8C,GAAOuZ,EAAMvZ,IAG/B,OAAOs8C,CACX,qCCjBA,MAAME,EAAqB,IAAIz4B,0MCa/B,MAAM04B,yBAAyB,IAC3B,WAAAr6C,GACIC,SAASyoB,WACTroB,KAAKU,KAAO,MACZV,KAAKi6C,UAAW,EAChBj6C,KAAKmtC,2BAA6B,KAClCntC,KAAKk6C,iBAAmB,KAChBl6C,KAAKa,UAAYb,KAAK80B,YAAYqlB,aAClC,OAAoBn6C,KAAKa,QAASb,KAAK80B,YAC3C,CAER,CACA,sBAAAqZ,CAAuB/5B,EAAO7W,GAC1B,OAAO6W,EAAM7W,EACjB,CACA,qBAAA6wC,CAAsBtb,EAAUv1B,GAC5B,GAAI,IAAeyG,IAAIzG,GAAM,CACzB,MAAM68C,GAAc,OAAoB78C,GACxC,OAAO68C,GAAcA,EAAYvtC,SAAe,CACpD,CAEA,OADAtP,EAAO,IAAoByG,IAAIzG,GAA0BA,GAAnB,OAAYA,GAC3Cu1B,EAASunB,aAAa98C,EACjC,CACA,2BAAAo3B,CAA4BvgB,EAAOc,EAAW5D,GAC1C,OAAO,OAA4B8C,EAAOc,EAAW5D,EACzD,CACA,eAAAi7B,GACQvsC,KAAKa,UAAYb,KAAK80B,YAAYqlB,YAClC,KAAMh7B,WAAWnf,KAAKk6C,iBAE9B,CACA,KAAAhN,CAAMpY,EAAa9iB,EAAcoC,IAC7B,OAAc0gB,EAAa9iB,EAAchS,KAAKi6C,SAAU7lC,EAAMtQ,kBAClE,CACA,cAAA6nC,CAAe7Y,EAAUgC,EAAaiS,EAAWnkB,IAC7C,OAAUkQ,EAAUgC,EAAaiS,EAAWnkB,EAChD,CACA,KAAAgE,CAAMkM,GACF9yB,KAAKi6C,UAAW,OAASnnB,EAAS0f,SAClC5yC,MAAMgnB,MAAMkM,EAChB,qJC3CJ,MAAMwnB,EAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,EAAkB,CACpB9oB,gBAAgB,OAAmB,CAC/BkD,4BAA6B,IAC7BC,kBAAmB,IACnB7zB,SAAU,EAAGqT,QAAOc,YAAWrU,UAASi0B,cAAa9iB,mBACjD,IAAKnR,EACD,OACJ,IAAI4pC,IAAiBr2B,EAAMoO,KAC3B,IAAKioB,EACD,IAAK,MAAMltC,KAAOyU,EACd,GAAI,IAAehO,IAAIzG,GAAM,CACzBktC,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAI+P,GAAgBtlC,EACpB,GAAIA,EAKA,IAAK,IAAInM,EAAI,EAAGA,EAAIuxC,EAAYz4C,OAAQkH,IAAK,CACzC,MAAMxL,EAAM+8C,EAAYvxC,GACpBqL,EAAM7W,KACN2X,EAAU3X,KACVi9C,GAAe,EAEvB,CAECA,GAEL,KAAMx7B,MAAK,MACP,OAAoBne,EAASi0B,GAC7B,KAAM7e,QAAO,MACT,OAAc6e,EAAa9iB,GAAc,OAASnR,EAAQ2xC,SAAUp+B,EAAMtQ,oBAC1E,OAAUjD,EAASi0B,EAAY,GACjC,GACJ,wCC/Cd,MAAM2lB,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,2GCvBJ,SAASC,EAAYtmC,EAAO2d,EAAa4oB,EAAWvtB,GAChD,MAAMkjB,GAAc,IAAAn4B,UAAQ,KACxB,MAAM9W,GAAQ,SAEd,OADA,OAAcA,EAAO0wB,GAAa,OAAS3E,GAAYhZ,EAAMtQ,mBACtD,IACAzC,EAAMu5C,MACT9jC,MAAO,IAAKzV,EAAMyV,OACrB,GACF,CAACib,IACJ,GAAI3d,EAAM0C,MAAO,CACb,MAAM+jC,EAAY,CAAC,GACnB,OAAkBA,EAAWzmC,EAAM0C,MAAO1C,GAC1Ck8B,EAAYx5B,MAAQ,IAAK+jC,KAAcvK,EAAYx5B,MACvD,CACA,OAAOw5B,CACX,6ECdA,SAASwK,EAAcz5C,GAAO,MAAE05C,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAE/hB,EAAO,QAAEE,EAAO,WAAE8hB,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHzvC,GAAUsuC,EAAUn2C,GAMnB,IALA,OAAgBzC,EAAOsK,EAAQ7H,GAK3Bm2C,EAIA,YAHI54C,EAAMyV,MAAMukC,UACZh6C,EAAMu5C,MAAMS,QAAUh6C,EAAMyV,MAAMukC,UAI1Ch6C,EAAMu5C,MAAQv5C,EAAMyV,MACpBzV,EAAMyV,MAAQ,CAAC,EACf,MAAM,MAAE8jC,EAAK,MAAE9jC,EAAK,WAAEqjC,GAAe94C,EAKjCu5C,EAAMj1B,YACFw0B,IACArjC,EAAM6O,UAAYi1B,EAAMj1B,kBACrBi1B,EAAMj1B,WAGbw0B,SACax4C,IAAZu3B,QAAqCv3B,IAAZy3B,GAAyBtiB,EAAM6O,aACzD7O,EAAMswB,iBAAkB,OAAuB+S,OAAwBx4C,IAAZu3B,EAAwBA,EAAU,QAAiBv3B,IAAZy3B,EAAwBA,EAAU,UAG1Hz3B,IAAVo5C,IACAH,EAAMz8C,EAAI48C,QACAp5C,IAAVq5C,IACAJ,EAAMx8C,EAAI48C,QACIr5C,IAAds5C,IACAL,EAAMljB,MAAQujB,QAECt5C,IAAfu5C,IACA,OAAaN,EAAOM,EAAYC,EAAaC,GAAY,EAEjE,oCC9CA,MAAME,EAAsB,IAAI7yC,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,oECxBJ,MAAM8yC,EAAuB,KAAM,KAC5B,SACHX,MAAO,CAAC,uCCJZ,MAAMX,EAAYuB,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIhT,gCCAzD,SAASiT,EAAoB3oB,EAAUgC,GACnC,IACIA,EAAYqlB,WACoB,mBAArBrnB,EAAS4oB,QACV5oB,EAAS4oB,UACT5oB,EAAS8X,uBACvB,CACA,MAAO98B,GAEHgnB,EAAYqlB,WAAa,CACrBh8C,EAAG,EACHC,EAAG,EACHH,MAAO,EACPC,OAAQ,EAEhB,CACJ,qECdA,MAAMy9C,EAAW,CACbvyC,OAAQ,oBACRwyC,MAAO,oBAELC,EAAY,CACdzyC,OAAQ,mBACRwyC,MAAO,mBASX,SAASE,EAAalB,EAAO/4C,EAAQk6C,EAAU,EAAG3yC,EAAS,EAAG4yC,GAAc,GAExEpB,EAAMM,WAAa,EAGnB,MAAMvsC,EAAOqtC,EAAcL,EAAWE,EAEtCjB,EAAMjsC,EAAKvF,QAAU,EAAAysB,GAAGlQ,WAAWvc,GAEnC,MAAM8xC,EAAa,EAAArlB,GAAGlQ,UAAU9jB,GAC1Bs5C,EAAc,EAAAtlB,GAAGlQ,UAAUo2B,GACjCnB,EAAMjsC,EAAKitC,OAAS,GAAGV,KAAcC,GACzC,0ECzBA,SAASc,EAAUl8C,EAAS+0B,EAAaonB,EAAYt5B,IACjD,OAAW7iB,EAAS+0B,OAAanzB,EAAWihB,GAC5C,IAAK,MAAMrlB,KAAOu3B,EAAY8lB,MAC1B76C,EAAQo8C,aAAc,IAAoBn4C,IAAIzG,GAA0BA,GAAnB,OAAYA,GAAYu3B,EAAY8lB,MAAMr9C,GAEvG,6ECLA,SAASo3B,EAA4BvgB,EAAOc,EAAW5D,GACnD,MAAMuoC,GAAY,OAA8BzlC,EAAOc,EAAW5D,GAClE,IAAK,MAAM/T,KAAO6W,EACd,IAAI,OAAcA,EAAM7W,MACpB,OAAc2X,EAAU3X,IAAO,CAI/Bs8C,GAHuD,IAArC,IAAmBxH,QAAQ90C,GACvC,OAASA,EAAI6+C,OAAO,GAAG72B,cAAgBhoB,EAAI8+C,UAAU,GACrD9+C,GACiB6W,EAAM7W,EACjC,CAEJ,OAAOs8C,CACX,qDCdA,SAAStyB,EAAWxc,EAAQ3B,EAAQ0J,GAChC,MAAyB,iBAAX/H,EACRA,EACA,EAAA8qB,GAAGlQ,UAAUvc,EAAS0J,EAAO/H,EACvC,CAKA,SAASuxC,EAAuBnC,EAAYjhB,EAASE,GAGjD,MAAO,GAFW7R,EAAW2R,EAASihB,EAAWh8C,EAAGg8C,EAAWl8C,UAC7CspB,EAAW6R,EAAS+gB,EAAW/7C,EAAG+7C,EAAWj8C,SAEnE,sFCZA,MAAMq+C,EAAY,IAAI9zC,IACtB,IAAIV,GAAc,EACdy0C,GAAsB,EAC1B,SAASC,IACL,GAAID,EAAqB,CACrB,MAAME,EAAqBpzC,MAAMuH,KAAK0rC,GAAWtyC,QAAQhK,GAAaA,EAASkiC,mBACzEwa,EAAoB,IAAIl0C,IAAIi0C,EAAmBvwC,KAAKlM,GAAaA,EAASF,WAC1E68C,EAAsB,IAAInkC,IAKhCkkC,EAAkBppC,SAASxT,IACvB,MAAM8vC,GAAoB,QAAgC9vC,GACrD8vC,EAAkBhuC,SAEvB+6C,EAAoB36C,IAAIlC,EAAS8vC,GACjC9vC,EAAQkW,SAAQ,IAGpBymC,EAAmBnpC,SAAStT,GAAaA,EAASovC,wBAElDsN,EAAkBppC,SAASxT,IACvBA,EAAQkW,SACR,MAAM4mC,EAAUD,EAAoB5rC,IAAIjR,GACpC88C,GACAA,EAAQtpC,SAAQ,EAAEhW,EAAKwB,MACnB,IAAImJ,EAC6B,QAAhCA,EAAKnI,EAAQgS,SAASxU,UAAyB,IAAP2K,GAAyBA,EAAGjG,IAAIlD,EAAM,GAEvF,IAGJ29C,EAAmBnpC,SAAStT,GAAaA,EAAS0vC,oBAElD+M,EAAmBnpC,SAAStT,SACU0B,IAA9B1B,EAASqvC,kBACTp9B,OAAO4qC,SAAS,EAAG78C,EAASqvC,iBAChC,GAER,CACAkN,GAAsB,EACtBz0C,GAAc,EACdw0C,EAAUhpC,SAAStT,GAAaA,EAASsD,aACzCg5C,EAAUp7B,OACd,CACA,SAAS47B,IACLR,EAAUhpC,SAAStT,IACfA,EAAS6uC,gBACL7uC,EAASkiC,mBACTqa,GAAsB,EAC1B,GAER,CACA,SAASQ,IACLD,IACAN,GACJ,CACA,MAAM12C,iBACF,WAAApG,CAAYkvC,EAAqB/tC,EAAYjB,EAAMC,EAAaC,EAASk9C,GAAU,GAK/Ej9C,KAAKiY,YAAa,EAMlBjY,KAAKi9C,SAAU,EAKfj9C,KAAKmiC,kBAAmB,EAKxBniC,KAAK+H,aAAc,EACnB/H,KAAK6uC,oBAAsB,IAAIA,GAC/B7uC,KAAKc,WAAaA,EAClBd,KAAKH,KAAOA,EACZG,KAAKF,YAAcA,EACnBE,KAAKD,QAAUA,EACfC,KAAKi9C,QAAUA,CACnB,CACA,eAAA58C,GACIL,KAAK+H,aAAc,EACf/H,KAAKi9C,SACLV,EAAUt7B,IAAIjhB,MACT+H,IACDA,GAAc,EACd,KAAMiX,KAAK+9B,GACX,KAAM99B,iBAAiBw9B,MAI3Bz8C,KAAK8uC,gBACL9uC,KAAKuD,WAEb,CACA,aAAAurC,GACI,MAAM,oBAAED,EAAmB,KAAEhvC,EAAI,QAAEE,EAAO,YAAED,GAAgBE,KAK5D,IAAK,IAAI+I,EAAI,EAAGA,EAAI8lC,EAAoBhtC,OAAQkH,IAC5C,GAA+B,OAA3B8lC,EAAoB9lC,GAIpB,GAAU,IAANA,EAAS,CACT,MAAMm0C,EAAep9C,aAAiD,EAASA,EAAYkR,MACrF7Q,EAAgB0uC,EAAoBA,EAAoBhtC,OAAS,GACvE,QAAqBF,IAAjBu7C,EACArO,EAAoB,GAAKqO,OAExB,GAAIn9C,GAAWF,EAAM,CACtB,MAAMs9C,EAAcp9C,EAAQmuC,UAAUruC,EAAMM,GACxCg9C,UACAtO,EAAoB,GAAKsO,EAEjC,MAC+Bx7C,IAA3BktC,EAAoB,KACpBA,EAAoB,GAAK1uC,GAEzBL,QAAgC6B,IAAjBu7C,GACfp9C,EAAYmC,IAAI4sC,EAAoB,GAE5C,MAEIA,EAAoB9lC,GAAK8lC,EAAoB9lC,EAAI,EAIjE,CACA,gBAAAq0C,GAAqB,CACrB,mBAAA/N,GAAwB,CACxB,eAAAgO,GAAoB,CACpB,eAAA1N,GAAoB,CACpB,QAAApsC,GACIvD,KAAKiY,YAAa,EAClBjY,KAAKc,WAAWd,KAAK6uC,oBAAqB7uC,KAAKG,eAC/Co8C,EAAUlkC,OAAOrY,KACrB,CACA,MAAAkC,GACSlC,KAAKiY,aACNjY,KAAK+H,aAAc,EACnBw0C,EAAUlkC,OAAOrY,MAEzB,CACA,MAAAgI,GACShI,KAAKiY,YACNjY,KAAKK,iBACb,0ICvJJ,MAAMi9C,EAAuB,IAAI,KAAsB/2C,UACjDg3C,EAAoB,IAAqB17C,OAI/C,SAAS27C,EAAqBlsC,GAC1B,IAAI7H,EAJR,SAAqB6H,GACjB,OAAQK,GAAe3M,QAAQsN,IAAIX,EAAWxF,KAAI,EAAG9M,YAAWH,cAAc,OAAqBoS,EAAejS,EAAWH,KACjI,CAEkBu+C,CAAYnsC,GACtBjQ,EAAQq8C,IACR1kC,GAAkB,EAKtB,MAAM2kC,EAA2Bj9C,GAAS,CAACqe,EAAK/K,KAC5C,IAAI9L,EACJ,MAAM9F,GAAW,OAAekP,EAAe0C,EAAqB,SAATtT,EACZ,QAAxCwH,EAAKoJ,EAAcmB,uBAAoC,IAAPvK,OAAgB,EAASA,EAAGwK,YAC7E/Q,GACN,GAAIS,EAAU,CACV,MAAM,WAAEqO,EAAU,cAAEiB,KAAkBrG,GAAWjJ,EACjD2c,EAAM,IAAKA,KAAQ1T,KAAWqG,EAClC,CACA,OAAOqN,CAAG,EAmBd,SAASsV,EAAeupB,GACpB,MAAM,MAAExpC,GAAU9C,EACZ4G,GAAU,OAAkB5G,EAAc+D,SAAW,CAAC,EAKtD1D,EAAa,GAKbksC,EAAc,IAAIp1C,IAMxB,IAAIq1C,EAAkB,CAAC,EAKnBC,EAAsBvzB,IAO1B,IAAK,IAAIzhB,EAAI,EAAGA,EAAIw0C,EAAmBx0C,IAAK,CACxC,MAAMrI,EAAO48C,EAAqBv0C,GAC5Bi1C,EAAY38C,EAAMX,GAClB0a,OAAuBzZ,IAAhByS,EAAM1T,GACb0T,EAAM1T,GACNwX,EAAQxX,GACRu9C,GAAgB,OAAe7iC,GAK/B8iC,EAAcx9C,IAASk9C,EAAoBI,EAAU11B,SAAW,MAClD,IAAhB41B,IACAH,EAAsBh1C,GAO1B,IAAIo1C,EAAc/iC,IAASlD,EAAQxX,IAC/B0a,IAAShH,EAAM1T,IACfu9C,EAeJ,GAXIE,GACAnlC,GACA1H,EAAcy6B,yBACdoS,GAAc,GAMlBH,EAAU9sC,cAAgB,IAAK4sC,IAI7BE,EAAU11B,UAA4B,OAAhB41B,IAElB9iC,IAAS4iC,EAAUI,WAErB,OAAoBhjC,IACJ,kBAATA,EACP,SAOJ,MAAMijC,EAAmBC,EAAuBN,EAAUI,SAAUhjC,GACpE,IAAImjC,EAAoBF,GAEnB39C,IAASk9C,GACNI,EAAU11B,WACT61B,GACDF,GAEHl1C,EAAIg1C,GAAuBE,EAC5BO,GAAuB,EAK3B,MAAMC,EAAiBn1C,MAAMC,QAAQ6R,GAAQA,EAAO,CAACA,GAKrD,IAAIsjC,EAAiBD,EAAe3/B,OAAO6+B,EAAwBj9C,GAAO,CAAC,IACvD,IAAhBw9C,IACAQ,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMX,EAC9BY,EAAU,IACTD,KACAD,GAEDG,EAAiBthD,IACnBghD,GAAoB,EAChBV,EAAY75C,IAAIzG,KAChBihD,GAAuB,EACvBX,EAAYxlC,OAAO9a,IAEvBygD,EAAU7sC,eAAe5T,IAAO,EAChC,MAAMuC,EAAcwR,EAAcS,SAASxU,GACvCuC,IACAA,EAAYg6C,WAAY,EAAK,EAErC,IAAK,MAAMv8C,KAAOqhD,EAAS,CACvB,MAAM93C,EAAO43C,EAAenhD,GACtBuhD,EAAOH,EAAmBphD,GAEhC,GAAIugD,EAAgB1zC,eAAe7M,GAC/B,SAIJ,IAAIwhD,GAAkB,EAElBA,GADA,OAAkBj4C,KAAS,OAAkBg4C,KAC1B,OAAeh4C,EAAMg4C,GAGtBh4C,IAASg4C,EAE3BC,EACIj4C,QAEA+3C,EAActhD,GAIdsgD,EAAY58B,IAAI1jB,QAGNoE,IAATmF,GAAsB+2C,EAAY75C,IAAIzG,GAK3CshD,EAActhD,GAOdygD,EAAU9sC,cAAc3T,IAAO,CAEvC,CAKAygD,EAAUI,SAAWhjC,EACrB4iC,EAAUW,mBAAqBD,EAI3BV,EAAU11B,WACVw1B,EAAkB,IAAKA,KAAoBY,IAE3C1lC,GAAmB1H,EAAcgiB,wBACjCirB,GAAoB,GAQpBA,MAFyBJ,GAAeE,IACIG,IAE5C7sC,EAAWjQ,QAAQ+8C,EAAetyC,KAAK9M,IAAc,CACjDA,UAAWA,EACXH,QAAS,CAAEwB,YAGvB,CAMA,GAAIm9C,EAAY/qC,KAAM,CAClB,MAAMksC,EAAoB,CAAC,EAK3B,GAA6B,kBAAlB5qC,EAAMoD,QAAuB,CACpC,MAAMynC,GAAoB,OAAe3tC,EAAehI,MAAMC,QAAQ6K,EAAMoD,SACtEpD,EAAMoD,QAAQ,GACdpD,EAAMoD,SACRynC,GAAqBA,EAAkBxuC,aACvCuuC,EAAkBvuC,WAAawuC,EAAkBxuC,WAEzD,CACAotC,EAAYtqC,SAAShW,IACjB,MAAM2hD,EAAiB5tC,EAAcg9B,cAAc/wC,GAC7CuC,EAAcwR,EAAcS,SAASxU,GACvCuC,IACAA,EAAYg6C,WAAY,GAE5BkF,EAAkBzhD,GAAO2hD,QAAuDA,EAAiB,IAAI,IAEzGvtC,EAAWjQ,KAAK,CAAErC,UAAW2/C,GACjC,CACA,IAAIG,EAAgBx3C,QAAQgK,EAAW9P,QAOvC,OANImX,IACmB,IAAlB5E,EAAMoD,SAAqBpD,EAAMoD,UAAYpD,EAAM3K,SACnD6H,EAAcy6B,yBACfoT,GAAgB,GAEpBnmC,GAAkB,EACXmmC,EAAgB11C,EAAQkI,GAAc3M,QAAQL,SACzD,CAkBA,MAAO,CACH0vB,iBACAjR,UAhBJ,SAAmB1iB,EAAM4nB,GACrB,IAAIpgB,EAEJ,GAAI7G,EAAMX,GAAM4nB,WAAaA,EACzB,OAAOtjB,QAAQL,UAEsB,QAAxCuD,EAAKoJ,EAAcuB,uBAAoC,IAAP3K,GAAyBA,EAAGqL,SAASC,IAAY,IAAItL,EAAI,OAAuC,QAA/BA,EAAKsL,EAAM3B,sBAAmC,IAAP3J,OAAgB,EAASA,EAAGkb,UAAU1iB,EAAM4nB,EAAS,IAC9MjnB,EAAMX,GAAM4nB,SAAWA,EACvB,MAAM3W,EAAa0iB,EAAe3zB,GAClC,IAAK,MAAMnD,KAAO8D,EACdA,EAAM9D,GAAK2T,cAAgB,CAAC,EAEhC,OAAOS,CACX,EAIIytC,mBA7QJ,SAA4BC,GACxB51C,EAAU41C,EAAa/tC,EAC3B,EA4QIQ,SAAU,IAAMzQ,EAChBirB,MAAO,KACHjrB,EAAQq8C,IACR1kC,GAAkB,CAAI,EAGlC,CACA,SAASslC,EAAuBQ,EAAMh4C,GAClC,MAAoB,iBAATA,EACAA,IAASg4C,IAEXx1C,MAAMC,QAAQzC,MACX,OAAeA,EAAMg4C,EAGrC,CACA,SAASQ,EAAgBh3B,GAAW,GAChC,MAAO,CACHA,WACApX,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBwtC,mBAAoB,CAAC,EAE7B,CACA,SAASjB,IACL,MAAO,CACHj0C,QAAS61C,GAAgB,GACzBC,YAAaD,IACbz2B,WAAYy2B,IACZ/zB,SAAU+zB,IACVE,UAAWF,IACXG,WAAYH,IACZ/yB,KAAM+yB,IAEd,qCCrVA,MAAMI,EAAiB,CAAChyC,EAAGC,IAAMD,EAAE2xB,MAAQ1xB,EAAE0xB,2ECG7C,MAAMsgB,SACF,WAAAhgD,GACIK,KAAKkW,SAAW,GAChBlW,KAAK4/C,SAAU,CACnB,CACA,GAAA3+B,CAAIzN,IACA,QAAcxT,KAAKkW,SAAU1C,GAC7BxT,KAAK4/C,SAAU,CACnB,CACA,MAAAlxB,CAAOlb,IACH,QAAWxT,KAAKkW,SAAU1C,GAC1BxT,KAAK4/C,SAAU,CACnB,CACA,OAAArsC,CAAQwN,GACJ/gB,KAAK4/C,SAAW5/C,KAAKkW,SAAS7C,KAAK,KACnCrT,KAAK4/C,SAAU,EACf5/C,KAAKkW,SAAS3C,QAAQwN,EAC1B,kECjBJ,MAAM8+B,EAAkB,IAAah+C,OACrC,SAASi+C,EAAkBxuC,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc85B,sBAAuB,CACtC,MAAMlzB,EAAU5G,EAAc+D,QACxByqC,EAAkBxuC,EAAc+D,SAChC,CAAC,EAIP,YAHoC1T,IAAhC2P,EAAc8C,MAAMoD,UACpBU,EAAQV,QAAUlG,EAAc8C,MAAMoD,SAEnCU,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAInP,EAAI,EAAGA,EAAI82C,EAAiB92C,IAAK,CACtC,MAAMlJ,EAAO,IAAakJ,GACpBqS,EAAO9J,EAAc8C,MAAMvU,KAC7B,OAAeub,KAAkB,IAATA,KACxBlD,EAAQrY,GAAQub,EAExB,CACA,OAAOlD,CACX,qFCrBA,SAASkzB,EAAsBh3B,GAC3B,OAAQ,OAAoBA,EAAM3K,UAC9B,IAAamF,MAAM/O,IAAS,OAAeuU,EAAMvU,KACzD,CACA,SAASsrC,EAAc/2B,GACnB,OAAOzM,QAAQyjC,EAAsBh3B,IAAUA,EAAMo5B,SACzD,oBCPA,SAASuS,EAAe90C,GACpB,MAAoB,iBAANA,GAAkB3B,MAAMC,QAAQ0B,EAClD,iFCDA,SAAS+0C,EAA4BjgD,EAAS+G,EAAMg4C,GAChD,IAAK,MAAMvhD,KAAOuJ,EAAM,CACpB,MAAMm5C,EAAYn5C,EAAKvJ,GACjB2iD,EAAYpB,EAAKvhD,GACvB,IAAI,OAAc0iD,GAKdlgD,EAAQ4tC,SAASpwC,EAAK0iD,QASrB,IAAI,OAAcC,GAKnBngD,EAAQ4tC,SAASpwC,GAAK,QAAY0iD,EAAW,CAAEr/C,MAAOb,UAErD,GAAImgD,IAAcD,EAMnB,GAAIlgD,EAAQiuC,SAASzwC,GAAM,CACvB,MAAMqwC,EAAgB7tC,EAAQgS,SAASxU,IACP,IAA5BqwC,EAAckM,UACdlM,EAAc8B,KAAKuQ,GAEbrS,EAAcuS,aACpBvS,EAAc3rC,IAAIg+C,EAE1B,KACK,CACD,MAAMvT,EAAc3sC,EAAQqtC,eAAe7vC,GAC3CwC,EAAQ4tC,SAASpwC,GAAK,aAA4BoE,IAAhB+qC,EAA4BA,EAAcuT,EAAW,CAAEr/C,MAAOb,IACpG,CAER,CAEA,IAAK,MAAMxC,KAAOuhD,OACIn9C,IAAdmF,EAAKvJ,IACLwC,EAAQ8tC,YAAYtwC,GAE5B,OAAOuJ,CACX,qDCtDA,SAASs5C,EAAe9uC,EAAe0C,EAAYtB,GAC/C,MAAM0B,EAAQ9C,EAAcvN,WAC5B,OAAO,OAAwBqQ,EAAOJ,OAAuBrS,IAAX+Q,EAAuBA,EAAS0B,EAAM1B,OAAQpB,EACpG,oBCLA,SAAS+uC,EAAc/uC,GACnB,MAAMjQ,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJAiQ,SAA8DA,EAAchF,OAAOiH,SAAQ,CAACxU,EAAOxB,KAC/F8D,EAAM,GAAG9D,GAAOwB,EAAMiS,MACtB3P,EAAM,GAAG9D,GAAOwB,EAAM6R,aAAa,IAEhCvP,CACX,CACA,SAASi/C,EAAwBlsC,EAAOJ,EAAYtB,EAAQpB,GAIxD,GAA0B,mBAAf0C,EAA2B,CAClC,MAAOnT,EAAS0D,GAAY87C,EAAc/uC,GAC1C0C,EAAaA,OAAsBrS,IAAX+Q,EAAuBA,EAAS0B,EAAM1B,OAAQ7R,EAAS0D,EACnF,CAaA,GAR0B,iBAAfyP,IACPA,EAAaI,EAAMo5B,UAAYp5B,EAAMo5B,SAASx5B,IAOxB,mBAAfA,EAA2B,CAClC,MAAOnT,EAAS0D,GAAY87C,EAAc/uC,GAC1C0C,EAAaA,OAAsBrS,IAAX+Q,EAAuBA,EAAS0B,EAAM1B,OAAQ7R,EAAS0D,EACnF,CACA,OAAOyP,CACX,6FCzBA,SAASusC,EAAejvC,EAAe/T,EAAKwB,GACpCuS,EAAc08B,SAASzwC,GACvB+T,EAAcS,SAASxU,GAAK0E,IAAIlD,GAGhCuS,EAAcq8B,SAASpwC,GAAK,QAAYwB,GAEhD,CACA,SAASyhD,EAAUlvC,EAAe0C,GAC9B,MAAM5R,GAAW,OAAekP,EAAe0C,GAC/C,IAAI,cAAEtC,EAAgB,CAAC,EAAC,WAAEjB,EAAa,CAAC,KAAMpF,GAAWjJ,GAAY,CAAC,EACtEiJ,EAAS,IAAKA,KAAWqG,GACzB,IAAK,MAAMnU,KAAO8N,EAAQ,CAEtBk1C,EAAejvC,EAAe/T,GADhB,OAA6B8N,EAAO9N,IAEtD,CACJ,6CCxBA,MAAMkjD,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,sCCTpC,MAAME,EAAmB,CACrB39B,OAAQ,EACRrc,WAAY,EACZ6C,MAAO,sCCHX,MAAMo3C,EAAc,CAChB7hD,MAAO,KACP+/B,qBAAsB,yCCF1B,MAAM+hB,EAAqB,CACvB9vC,gBAAgB,EAChBsO,iBAAiB,oBCFrB,SAASyhC,EAAcC,EAAKC,IACG,IAAvBD,EAAI1O,QAAQ2O,IACZD,EAAIr/C,KAAKs/C,EACjB,CACA,SAASC,EAAWF,EAAKC,GACrB,MAAM92C,EAAQ62C,EAAI1O,QAAQ2O,GACtB92C,GAAS,GACT62C,EAAIx0C,OAAOrC,EAAO,EAC1B,+DCRA,MAAMg3C,EAAQ,CAACl6C,EAAKI,EAAK6D,IACjBA,EAAI7D,EACGA,EACP6D,EAAIjE,EACGA,EACJiE,+DCGX,SAAS9J,EAAM4f,EAAUogC,GACrB,MAAM/hD,EAAQ,IAAKiF,MACb+8C,EAAe,EAAGv6C,gBACpB,MAAMQ,EAAUR,EAAYzH,EACxBiI,GAAW85C,KACX,QAAYC,GACZrgC,EAAS1Z,EAAU85C,GACvB,EAGJ,OADA,KAAMniC,KAAKoiC,GAAc,GAClB,KAAM,QAAYA,EAC7B,qCCnBA,MAAMxoB,EAAW,CAAClrB,EAAGC,IAAM5G,KAAKmE,IAAIwC,EAAIC,GACxC,SAAS0zC,EAAW3zC,EAAGC,GAEnB,MAAM2zC,EAAS1oB,EAASlrB,EAAEvP,EAAGwP,EAAExP,GACzBojD,EAAS3oB,EAASlrB,EAAEtP,EAAGuP,EAAEvP,GAC/B,OAAO2I,KAAKwH,KAAK+yC,GAAU,EAAIC,GAAU,EAC7C,qCCLA,MAAMC,EAAmB,EAAG3gD,aACjBA,EAAUA,EAAQ4gD,cAAcC,YAAc,sBCDzD,SAASC,EAAS5mC,EAAG6mC,EAAGpgD,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDuZ,EAAc,GAAT6mC,EAAI7mC,GAASvZ,EACzBA,EAAI,GACGogD,EACPpgD,EAAI,EAAI,EACDuZ,GAAK6mC,EAAI7mC,IAAM,EAAI,EAAIvZ,GAAK,EAChCuZ,CACX,CACA,SAAS8mC,GAAW,IAAEC,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEC,IAC9CH,GAAO,IAEPE,GAAa,IACb,IAAIE,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAL,GAAc,IAQT,CACD,MAAMH,EAAII,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrChnC,EAAI,EAAIinC,EAAYJ,EAC1BM,EAAMP,EAAS5mC,EAAG6mC,EAAGE,EAAM,EAAI,GAC/BK,EAAQR,EAAS5mC,EAAG6mC,EAAGE,GACvBM,EAAOT,EAAS5mC,EAAG6mC,EAAGE,EAAM,EAAI,EACpC,MAVII,EAAMC,EAAQC,EAAOJ,EAWzB,MAAO,CACHE,IAAKn7C,KAAKE,MAAY,IAANi7C,GAChBC,MAAOp7C,KAAKE,MAAc,IAARk7C,GAClBC,KAAMr7C,KAAKE,MAAa,IAAPm7C,GACjBH,QAER,gICCA,SAASI,EAAYC,EAAOhd,GAAU4b,MAAOqB,GAAU,EAAI,KAAE9hD,EAAI,MAAE+hD,GAAU,CAAC,GAC1E,MAAMC,EAAcH,EAAMzgD,OAM1B,IALA,OAAU4gD,IAAgBnd,EAAOzjC,OAAQ,wDAKrB,IAAhB4gD,EACA,MAAO,IAAMnd,EAAO,GACxB,GAAoB,IAAhBmd,GAAqBnd,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMod,EAAmBJ,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAMG,EAAc,KAC/BH,EAAQ,IAAIA,GAAO/7C,UACnB++B,EAAS,IAAIA,GAAQ/+B,WAEzB,MAAMo8C,EAlDV,SAAsBrd,EAAQ7kC,EAAMmiD,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAe,IAC9BE,EAAYxd,EAAOzjC,OAAS,EAClC,IAAK,IAAIkH,EAAI,EAAGA,EAAI+5C,EAAW/5C,IAAK,CAChC,IAAIy5C,EAAQK,EAAavd,EAAOv8B,GAAIu8B,EAAOv8B,EAAI,IAC/C,GAAItI,EAAM,CACN,MAAMsiD,EAAiBz5C,MAAMC,QAAQ9I,GAAQA,EAAKsI,IAAM,IAAOtI,EAC/D+hD,GAAQ,OAAKO,EAAgBP,EACjC,CACAG,EAAOjhD,KAAK8gD,EAChB,CACA,OAAOG,CACX,CAqCmBK,CAAa1d,EAAQ7kC,EAAM+hD,GACpCM,EAAYH,EAAO9gD,OACnBohD,EAAgBh4C,IAClB,GAAIy3C,GAAoBz3C,EAAIq3C,EAAM,GAC9B,OAAOhd,EAAO,GAClB,IAAIv8B,EAAI,EACR,GAAI+5C,EAAY,EACZ,KAAO/5C,EAAIu5C,EAAMzgD,OAAS,KAClBoJ,EAAIq3C,EAAMv5C,EAAI,IADOA,KAKjC,MAAMm6C,GAAkB,OAASZ,EAAMv5C,GAAIu5C,EAAMv5C,EAAI,GAAIkC,GACzD,OAAO03C,EAAO55C,GAAGm6C,EAAgB,EAErC,OAAOX,EACAt3C,GAAMg4C,GAAa,OAAMX,EAAM,GAAIA,EAAMG,EAAc,GAAIx3C,IAC5Dg4C,CACV,qCC3EA,MAAME,EAA8B,oBAAXjxC,0CCGzB,MAAMkxC,EAAqBn4C,GAAM,+BAA+ByJ,KAAKzJ,oBCHrE,SAASo4C,EAAY9sC,GACjB,OAAQA,GACW,iBAARA,GACPvQ,OAAOuE,UAAUH,eAAeC,KAAKkM,EAAK,UAClD,qDCDA,MAAM+sC,EAAqBr4C,GAAM,cAAcyJ,KAAKzJ,6HCQpD,MAAMs4C,EAAiB,CAAC1yC,EAAM00B,EAAIt6B,KAC9B,MAAMu4C,EAAW3yC,EAAOA,EAClB4yC,EAAOx4C,GAAKs6B,EAAKA,EAAKie,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAI18C,KAAKwH,KAAKk1C,EAAK,EAEnCC,EAAa,CAAC,IAAK,IAAM,KAE/B,SAASC,EAAOnQ,GACZ,MAAM9yC,GAFYuK,EAEQuoC,EAFFkQ,EAAWnP,MAAM7zC,GAASA,EAAKgU,KAAKzJ,MAA3C,IAACA,EAIlB,IADA,OAAQtD,QAAQjH,GAAO,IAAI8yC,0EACtB7rC,QAAQjH,GACT,OAAO,EACX,IAAIkjD,EAAQljD,EAAK2oC,MAAMmK,GAKvB,OAJI9yC,IAAS,MAETkjD,GAAQ,OAAWA,IAEhBA,CACX,CACA,MAAMC,EAAW,CAAChzC,EAAM00B,KACpB,MAAMue,EAAWH,EAAO9yC,GAClBkzC,EAASJ,EAAOpe,GACtB,IAAKue,IAAaC,EACd,OAAO,OAAalzC,EAAM00B,GAE9B,MAAMye,EAAU,IAAKF,GACrB,OAAQ74C,IACJ+4C,EAAQ9B,IAAMqB,EAAeO,EAAS5B,IAAK6B,EAAO7B,IAAKj3C,GACvD+4C,EAAQ7B,MAAQoB,EAAeO,EAAS3B,MAAO4B,EAAO5B,MAAOl3C,GAC7D+4C,EAAQ5B,KAAOmB,EAAeO,EAAS1B,KAAM2B,EAAO3B,KAAMn3C,GAC1D+4C,EAAQ/B,OAAQ,OAAU6B,EAAS7B,MAAO8B,EAAO9B,MAAOh3C,GACjD,IAAK0a,UAAUq+B,GACzB,qJCjCL,SAASC,EAAUv2C,EAAGC,GAClB,OAAQoN,IAAM,OAAYrN,EAAGC,EAAGoN,EACpC,CACA,SAASmpC,EAASx2C,GACd,MAAiB,iBAANA,EACAu2C,EAEW,iBAANv2C,GACL,OAAmBA,GACpB,IACA,IAAMgH,KAAKhH,GACP,IACAy2C,EAEL76C,MAAMC,QAAQmE,GACZ02C,EAEW,iBAAN12C,EACL,IAAMgH,KAAKhH,GAAK,IAAW22C,EAE/B,GACX,CACA,SAASD,EAAS12C,EAAGC,GACjB,MAAM23B,EAAS,IAAI53B,GACb42C,EAAYhf,EAAOzjC,OACnB0iD,EAAa72C,EAAEvB,KAAI,CAAClB,EAAGlC,IAAMm7C,EAASj5C,EAATi5C,CAAYj5C,EAAG0C,EAAE5E,MACpD,OAAQgS,IACJ,IAAK,IAAIhS,EAAI,EAAGA,EAAIu7C,EAAWv7C,IAC3Bu8B,EAAOv8B,GAAKw7C,EAAWx7C,GAAGgS,GAE9B,OAAOuqB,CAAM,CAErB,CACA,SAAS+e,EAAU32C,EAAGC,GAClB,MAAM23B,EAAS,IAAK53B,KAAMC,GACpB42C,EAAa,CAAC,EACpB,IAAK,MAAMhnD,KAAO+nC,OACC3jC,IAAX+L,EAAEnQ,SAAiCoE,IAAXgM,EAAEpQ,KAC1BgnD,EAAWhnD,GAAO2mD,EAASx2C,EAAEnQ,GAAX2mD,CAAiBx2C,EAAEnQ,GAAMoQ,EAAEpQ,KAGrD,OAAQ0N,IACJ,IAAK,MAAM1N,KAAOgnD,EACdjf,EAAO/nC,GAAOgnD,EAAWhnD,GAAK0N,GAElC,OAAOq6B,CAAM,CAErB,CAcA,MAAM6e,EAAa,CAACp5C,EAAQM,KACxB,MAAMi+B,EAAW,IAAQC,kBAAkBl+B,GACrCm5C,GAAc,OAAoBz5C,GAClC05C,GAAc,OAAoBp5C,GAIxC,OAHuBm5C,EAAYE,QAAQC,IAAI9iD,SAAW4iD,EAAYC,QAAQC,IAAI9iD,QAC9E2iD,EAAYE,QAAQlR,MAAM3xC,SAAW4iD,EAAYC,QAAQlR,MAAM3xC,QAC/D2iD,EAAYE,QAAQE,OAAO/iD,QAAU4iD,EAAYC,QAAQE,OAAO/iD,OAE3D,IAAgBmC,IAAI+G,KACpB05C,EAAYn4C,OAAOzK,QACnB,IAAgBmC,IAAIqH,KAChBm5C,EAAYl4C,OAAOzK,QACjB,OAAckJ,EAAQM,IAE1B,OAAK+4C,EA3BpB,SAAoBr5C,EAAQM,GACxB,IAAInD,EACJ,MAAM28C,EAAgB,GAChBC,EAAW,CAAEtR,MAAO,EAAGmR,IAAK,EAAGC,OAAQ,GAC7C,IAAK,IAAI77C,EAAI,EAAGA,EAAIsC,EAAOiB,OAAOzK,OAAQkH,IAAK,CAC3C,MAAMrI,EAAO2K,EAAO05C,MAAMh8C,GACpBi8C,EAAcj6C,EAAO25C,QAAQhkD,GAAMokD,EAASpkD,IAC5CukD,EAAoD,QAArC/8C,EAAK6C,EAAOuB,OAAO04C,UAAiC,IAAP98C,EAAgBA,EAAK,EACvF28C,EAAc97C,GAAKk8C,EACnBH,EAASpkD,IACb,CACA,OAAOmkD,CACX,CAe6BK,CAAWV,EAAaC,GAAcA,EAAYn4C,QAASg9B,KAGhF,QAAQ,EAAM,mBAAmBv+B,WAAgBM,8KAC1C,OAAaN,EAAQM,GAChC,oBC1FJ,SAAS85C,EAAaz3C,EAAGC,GACrB,OAAQoN,GAAOA,EAAI,EAAIpN,EAAID,CAC/B,iFCCA,SAAS03C,EAAIv0C,EAAM00B,EAAIxqB,GACnB,GAAoB,iBAATlK,GACO,iBAAP00B,GACM,iBAANxqB,EACP,OAAO,OAAUlK,EAAM00B,EAAIxqB,GAG/B,OADc,QAASlK,EAChB2xC,CAAM3xC,EAAM00B,EACvB,qCCUA,MAAM0e,EAAY,CAACpzC,EAAM00B,EAAIh+B,IAClBsJ,GAAQ00B,EAAK10B,GAAQtJ,6CCtBhC,MAAM89C,EAAkB,IAAI58C,IAAI,CAAC,OAAQ,WAMzC,SAAS68C,EAAcv6C,EAAQM,GAC3B,OAAIg6C,EAAgBrhD,IAAI+G,GACZgQ,GAAOA,GAAK,EAAIhQ,EAASM,EAGzB0P,GAAOA,GAAK,EAAI1P,EAASN,CAEzC,qDCXA,SAASw6C,EAAcxE,GACnB,MAAM33C,EAAS,CAAC,GAEhB,OADA,IAAA4E,GAAW5E,EAAQ23C,EAAIl/C,OAAS,GACzBuH,CACX,iECFA,SAASo8C,EAAWp8C,EAAQq8C,GACxB,MAAMz+C,EAAMoC,EAAOA,EAAOvH,OAAS,GACnC,IAAK,IAAIkH,EAAI,EAAGA,GAAK08C,EAAW18C,IAAK,CACjC,MAAM28C,GAAiB,OAAS,EAAGD,EAAW18C,GAC9CK,EAAO1H,MAAK,OAAUsF,EAAK,EAAG0+C,GAClC,CACJ,oBCVA,SAASC,EAAqBv8C,EAAQ7I,GAClC,OAAO6I,EAAO+C,KAAKy5C,GAAMA,EAAIrlD,GACjC,oDCKA,MAAMslD,EAAmB,CAACn4C,EAAGC,IAAO1C,GAAM0C,EAAED,EAAEzC,IACxC66C,EAAO,IAAIC,IAAiBA,EAAajnC,OAAO+mC,kECLtD,SAASG,IAEL,GADA,IAAyBnlD,SAAU,EAC9B,IAEL,GAAIqR,OAAO+zC,WAAY,CACnB,MAAMC,EAAmBh0C,OAAO+zC,WAAW,4BACrCE,EAA8B,IAAO,IAAqBtlD,QAAUqlD,EAAiBz9B,QAC3Fy9B,EAAiBE,YAAYD,GAC7BA,GACJ,MAEI,IAAqBtlD,SAAU,CAEvC,6CCfA,MAAMwlD,EAAuB,CAAExlD,QAAS,MAClCylD,EAA2B,CAAEzlD,SAAS,8DCA5C,MAAM0lD,EAAiBt7C,GACZtD,QAAQsD,GAAkB,iBAANA,GAAkBA,EAAEm6C,KAAOn6C,EAAEu7C,SAEtDC,EAAgCx7C,IAE3B,OAAkBA,GAAKA,EAAEA,EAAEpJ,OAAS,IAAM,EAAIoJ,oBCPzD,SAASy7C,EAAe5/C,EAAMg4C,GAC1B,IAAKx1C,MAAMC,QAAQu1C,GACf,OAAO,EACX,MAAM6H,EAAa7H,EAAKj9C,OACxB,GAAI8kD,IAAe7/C,EAAKjF,OACpB,OAAO,EACX,IAAK,IAAIkH,EAAI,EAAGA,EAAI49C,EAAY59C,IAC5B,GAAI+1C,EAAK/1C,KAAOjC,EAAKiC,GACjB,OAAO,EAEf,OAAO,CACX,sFCTA,MAAM69C,oBACF,WAAAjnD,GACIK,KAAK6mD,cAAgB,EACzB,CACA,GAAA5lC,CAAItD,GAEA,OADA,QAAc3d,KAAK6mD,cAAelpC,GAC3B,KAAM,QAAW3d,KAAK6mD,cAAelpC,EAChD,CACA,MAAAlK,CAAO/F,EAAGC,EAAGE,GACT,MAAMi5C,EAAmB9mD,KAAK6mD,cAAchlD,OAC5C,GAAKilD,EAEL,GAAyB,IAArBA,EAIA9mD,KAAK6mD,cAAc,GAAGn5C,EAAGC,EAAGE,QAG5B,IAAK,IAAI9E,EAAI,EAAGA,EAAI+9C,EAAkB/9C,IAAK,CAKvC,MAAM4U,EAAU3d,KAAK6mD,cAAc99C,GACnC4U,GAAWA,EAAQjQ,EAAGC,EAAGE,EAC7B,CAER,CACA,OAAAk5C,GACI,OAAO/mD,KAAK6mD,cAAchlD,MAC9B,CACA,KAAAsf,GACInhB,KAAK6mD,cAAchlD,OAAS,CAChC,sDC3BJ,SAASmlD,EAAYC,GACjB,MAAM1wC,GAAM,IAAAC,QAAO,MAInB,OAHoB,OAAhBD,EAAI1V,UACJ0V,EAAI1V,QAAUomD,KAEX1wC,EAAI1V,OACf,qCCfA,MAAMqmD,EAAwB,CAC1BrmD,SAAS,sDCEb,MAAMsmD,YAA4B,EAAY,EAAAC,gBAAkB,EAAAjtC,4BCGhE,SAASktC,EAAkB9iD,EAAU+iD,GACjC,OAAOA,EAAgB/iD,GAAY,IAAO+iD,GAAiB,CAC/D,0GCEA,MAIMC,EAAsB,CACxB1mD,aAASc,GAOb,MAAM6lD,YASF,WAAA7nD,CAAYsnD,EAAM/nD,EAAU,CAAC,GAKzBc,KAAKynD,QAAU,UAQfznD,KAAK0nD,iBAAmB,KAIxB1nD,KAAKurC,OAAS,CAAC,EACfvrC,KAAK2nD,gBAAkB,CAAC18C,EAAGgL,GAAS,KAChC,MAAM3T,EAAc,IAAK+B,MAMrBrE,KAAK4nD,YAActlD,GACnBtC,KAAK6nD,oBAET7nD,KAAK8+C,KAAO9+C,KAAKa,QACjBb,KAAK8nD,WAAW78C,GAEZjL,KAAKa,UAAYb,KAAK8+C,MAAQ9+C,KAAKurC,OAAOwc,QAC1C/nD,KAAKurC,OAAOwc,OAAOt0C,OAAOzT,KAAKa,SAG/BoV,GAAUjW,KAAKurC,OAAOyc,eACtBhoD,KAAKurC,OAAOyc,cAAcv0C,OAAOzT,KAAKa,QAC1C,EAEJb,KAAKmgD,aAAc,EACnBngD,KAAK8nD,WAAWb,GAChBjnD,KAAKY,MAAQ1B,EAAQ0B,KACzB,CACA,UAAAknD,CAAWjnD,GA/DC,IAAC9B,EAgETiB,KAAKa,QAAUA,EACfb,KAAK4nD,UAAY,IAAKvjD,MACQ,OAA1BrE,KAAK0nD,uBAAyC/lD,IAAZd,IAClCb,KAAK0nD,kBAnEA3oD,EAmE2BiB,KAAKa,SAlErCyN,MAAM6U,WAAWpkB,KAoEzB,CACA,iBAAA8oD,CAAkBI,EAAiBjoD,KAAKa,SACpCb,KAAKioD,eAAiBA,EACtBjoD,KAAKkoD,cAAgBloD,KAAK4nD,SAC9B,CAyCA,QAAAO,CAASC,GAIL,OAAOpoD,KAAKysC,GAAG,SAAU2b,EAC7B,CACA,EAAA3b,CAAG/uB,EAAWqD,GACL/gB,KAAKurC,OAAO7tB,KACb1d,KAAKurC,OAAO7tB,GAAa,IAAI,KAEjC,MAAMowB,EAAc9tC,KAAKurC,OAAO7tB,GAAWuD,IAAIF,GAC/C,MAAkB,WAAdrD,EACO,KACHowB,IAKA,KAAM9uB,MAAK,KACFhf,KAAKurC,OAAOwc,OAAOhB,WACpB/mD,KAAKmD,MACT,GACF,EAGH2qC,CACX,CACA,cAAAua,GACI,IAAK,MAAMC,KAAiBtoD,KAAKurC,OAC7BvrC,KAAKurC,OAAO+c,GAAennC,OAEnC,CAMA,MAAAonC,CAAOC,EAAeC,GAClBzoD,KAAKwoD,cAAgBA,EACrBxoD,KAAKyoD,kBAAoBA,CAC7B,CAgBA,GAAAxmD,CAAIgJ,EAAGgL,GAAS,GACPA,GAAWjW,KAAKwoD,cAIjBxoD,KAAKwoD,cAAcv9C,EAAGjL,KAAK2nD,iBAH3B3nD,KAAK2nD,gBAAgB18C,EAAGgL,EAKhC,CACA,eAAA5S,CAAgBy7C,EAAMj+C,EAAS6K,GAC3B1L,KAAKiC,IAAIpB,GACTb,KAAK8+C,UAAOn9C,EACZ3B,KAAKioD,eAAiBnJ,EACtB9+C,KAAKkoD,cAAgBloD,KAAK4nD,UAAYl8C,CAC1C,CAKA,IAAAgkC,CAAKzkC,EAAGy9C,GAAe,GACnB1oD,KAAK2nD,gBAAgB18C,GACrBjL,KAAK8+C,KAAO7zC,EACZjL,KAAKkoD,cAAgBloD,KAAKioD,oBAAiBtmD,EAC3C+mD,GAAgB1oD,KAAKmD,OACjBnD,KAAKyoD,mBACLzoD,KAAKyoD,mBACb,CAQA,GAAAz3C,GAII,OAHIu2C,EAAoB1mD,SACpB0mD,EAAoB1mD,QAAQa,KAAK1B,MAE9BA,KAAKa,OAChB,CAIA,WAAA8nD,GACI,OAAO3oD,KAAK8+C,IAChB,CAQA,WAAAluC,GACI,MAAMtO,EAAc,IAAK+B,MACzB,IAAKrE,KAAK0nD,uBACkB/lD,IAAxB3B,KAAKioD,gBACL3lD,EAActC,KAAK4nD,UAnOJ,GAoOf,OAAO,EAEX,MAAMl8C,EAAQ3E,KAAKC,IAAIhH,KAAK4nD,UAAY5nD,KAAKkoD,cAtO1B,IAwOnB,OAAO,OAAkB/kC,WAAWnjB,KAAKa,SACrCsiB,WAAWnjB,KAAKioD,gBAAiBv8C,EACzC,CAaA,KAAAtM,CAAM6kB,GAEF,OADAjkB,KAAKmD,OACE,IAAI6B,SAASL,IAChB3E,KAAKmgD,aAAc,EACnBngD,KAAKX,UAAY4kB,EAAetf,GAC5B3E,KAAKurC,OAAOqd,gBACZ5oD,KAAKurC,OAAOqd,eAAen1C,QAC/B,IACD/O,MAAK,KACA1E,KAAKurC,OAAOsd,mBACZ7oD,KAAKurC,OAAOsd,kBAAkBp1C,SAElCzT,KAAK8oD,gBAAgB,GAE7B,CAMA,IAAA3lD,GACQnD,KAAKX,YACLW,KAAKX,UAAU8D,OACXnD,KAAKurC,OAAOwd,iBACZ/oD,KAAKurC,OAAOwd,gBAAgBt1C,UAGpCzT,KAAK8oD,gBACT,CAMA,WAAAE,GACI,QAAShpD,KAAKX,SAClB,CACA,cAAAypD,UACW9oD,KAAKX,SAChB,CAUA,OAAA4pD,GACIjpD,KAAKqoD,iBACLroD,KAAKmD,OACDnD,KAAKyoD,mBACLzoD,KAAKyoD,mBAEb,EAEJ,SAAS3oD,EAAYmnD,EAAM/nD,GACvB,OAAO,IAAIsoD,YAAYP,EAAM/nD,EACjC,qDC3RA,MAAMgqD,EAAM,CACRx0C,MAAoB,eAAc,KAClC20B,MAhCJ,SAAkBp+B,GACd,IAAIpN,EAAI,GACJoQ,EAAI,GACJN,EAAI,GACJD,EAAI,GAmBR,OAjBIzC,EAAEpJ,OAAS,GACXhE,EAAIoN,EAAEoxC,UAAU,EAAG,GACnBpuC,EAAIhD,EAAEoxC,UAAU,EAAG,GACnB1uC,EAAI1C,EAAEoxC,UAAU,EAAG,GACnB3uC,EAAIzC,EAAEoxC,UAAU,EAAG,KAInBx+C,EAAIoN,EAAEoxC,UAAU,EAAG,GACnBpuC,EAAIhD,EAAEoxC,UAAU,EAAG,GACnB1uC,EAAI1C,EAAEoxC,UAAU,EAAG,GACnB3uC,EAAIzC,EAAEoxC,UAAU,EAAG,GACnBx+C,GAAKA,EACLoQ,GAAKA,EACLN,GAAKA,EACLD,GAAKA,GAEF,CACHw0C,IAAKiH,SAAStrD,EAAG,IACjBskD,MAAOgH,SAASl7C,EAAG,IACnBm0C,KAAM+G,SAASx7C,EAAG,IAClBs0C,MAAOv0C,EAAIy7C,SAASz7C,EAAG,IAAM,IAAM,EAE3C,EAIIiY,UAAW,IAAKA,kGC/BpB,MAAMyjC,EAAO,CACT10C,MAAoB,OAAc,MAAO,OACzC20B,OAAqB,OAAW,MAAO,aAAc,aACrD1jB,UAAW,EAAGm8B,MAAKC,aAAYC,YAAWC,MAAOoH,EAAU,KAC/C,QACJtiD,KAAKE,MAAM66C,GACX,KACA,KAAQn8B,WAAU,OAASo8B,IAC3B,KACA,KAAQp8B,WAAU,OAASq8B,IAC3B,MACA,OAAS,KAAMr8B,UAAU0jC,IACzB,gFCbZ,MAAM7V,EAAQ,CACV9+B,KAAOzJ,GAAM,IAAKyJ,KAAKzJ,IAAM,IAAIyJ,KAAKzJ,IAAM,IAAKyJ,KAAKzJ,GACtDo+B,MAAQp+B,GACA,IAAKyJ,KAAKzJ,GACH,IAAKo+B,MAAMp+B,GAEb,IAAKyJ,KAAKzJ,GACR,IAAKo+B,MAAMp+B,GAGX,IAAIo+B,MAAMp+B,GAGzB0a,UAAY1a,GACY,iBAANA,EACRA,EACAA,EAAEb,eAAe,OACb,IAAKub,UAAU1a,GACf,IAAK0a,UAAU1a,2FCjBjC,MACMq+C,EAAU,IACT,KACH3jC,UAAY1a,GAAMlE,KAAKE,MAHN,CAACgE,IAAM,OAAM,EAAG,IAAKA,GAGTs+C,CAAat+C,KAExCu+C,EAAO,CACT90C,MAAoB,OAAc,MAAO,OACzC20B,OAAqB,OAAW,MAAO,QAAS,QAChD1jB,UAAW,EAAGu8B,MAAKC,QAAOC,OAAMH,MAAOoH,EAAU,KAAQ,QACrDC,EAAQ3jC,UAAUu8B,GAClB,KACAoH,EAAQ3jC,UAAUw8B,GAClB,KACAmH,EAAQ3jC,UAAUy8B,GAClB,MACA,OAAS,KAAMz8B,UAAU0jC,IACzB,wFCbR,MAAMI,EAAgB,CAAC/oD,EAAMgpD,IAAcz+C,GAChCtD,QAAsB,iBAANsD,GACnB,IAAiByJ,KAAKzJ,IACtBA,EAAEuJ,WAAW9T,IACZgpD,KACI,OAAUz+C,IACXjF,OAAOuE,UAAUH,eAAeC,KAAKY,EAAGy+C,IAE9CC,EAAa,CAACC,EAAOC,EAAOC,IAAW7+C,IACzC,GAAiB,iBAANA,EACP,OAAOA,EACX,MAAOyC,EAAGC,EAAGE,EAAGo0C,GAASh3C,EAAEimC,MAAM,KACjC,MAAO,CACH,CAAC0Y,GAAQzmC,WAAWzV,GACpB,CAACm8C,GAAQ1mC,WAAWxV,GACpB,CAACm8C,GAAQ3mC,WAAWtV,GACpBo0C,WAAiBtgD,IAAVsgD,EAAsB9+B,WAAW8+B,GAAS,EACpD,iECnBL,MAAM8H,EAAc,IAAIthD,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASuhD,EAAmB/+C,GACxB,MAAOpL,EAAMd,GAASkM,EAAEg/C,MAAM,GAAI,GAAG9X,MAAM,KAC3C,GAAa,gBAATtyC,EACA,OAAOoL,EACX,MAAO25C,GAAU7lD,EAAMmyC,MAAM,MAAe,GAC5C,IAAK0T,EACD,OAAO35C,EACX,MAAMi/C,EAAOnrD,EAAM6xC,QAAQgU,EAAQ,IACnC,IAAI3W,EAAe8b,EAAY/lD,IAAInE,GAAQ,EAAI,EAG/C,OAFI+kD,IAAW7lD,IACXkvC,GAAgB,KACbpuC,EAAO,IAAMouC,EAAeic,EAAO,GAC9C,CACA,MAAMC,EAAgB,uBAChBlgD,EAAS,IACR,IACHopC,kBAAoBpoC,IAChB,MAAMm/C,EAAYn/C,EAAEimC,MAAMiZ,GAC1B,OAAOC,EAAYA,EAAUj+C,IAAI69C,GAAoBvwC,KAAK,KAAOxO,CAAC,kGCZ1E,MAAMo/C,EAAe,SACfC,EAAc,QACdC,EAAY,MACZC,EAAqB,OACrBC,EAAc,MAEdC,EAAe,kOACrB,SAASC,EAAoB5rD,GACzB,MAAM6rD,EAAgB7rD,EAAMoR,WACtB7D,EAAS,GACTo4C,EAAU,CACZlR,MAAO,GACPoR,OAAQ,GACRD,IAAK,IAEHI,EAAQ,GACd,IAAIh8C,EAAI,EACR,MAmBMopC,EAnBYyY,EAAcha,QAAQ8Z,GAAeG,IAC/C,IAAMn2C,KAAKm2C,IACXnG,EAAQlR,MAAM9xC,KAAKqH,GACnBg8C,EAAMrjD,KAAK4oD,GACXh+C,EAAO5K,KAAK,IAAM2nC,MAAMwhB,KAEnBA,EAAYr2C,WAAWg2C,IAC5B9F,EAAQC,IAAIjjD,KAAKqH,GACjBg8C,EAAMrjD,KAAK6oD,GACXj+C,EAAO5K,KAAKmpD,KAGZnG,EAAQE,OAAOljD,KAAKqH,GACpBg8C,EAAMrjD,KAAK2oD,GACX/9C,EAAO5K,KAAKyhB,WAAW0nC,OAEzB9hD,EACK0hD,KAEatY,MAAMsY,GAC9B,MAAO,CAAEn+C,SAAQ6lC,QAAOuS,UAASK,QACrC,CACA,SAAS+F,EAAkB7/C,GACvB,OAAO0/C,EAAoB1/C,GAAGqB,MAClC,CACA,SAASi9B,EAAkB/hB,GACvB,MAAM,MAAE2qB,EAAK,MAAE4S,GAAU4F,EAAoBnjC,GACvCujC,EAAc5Y,EAAMtwC,OAC1B,OAAQoJ,IACJ,IAAIq6B,EAAS,GACb,IAAK,IAAIv8B,EAAI,EAAGA,EAAIgiD,EAAahiD,IAE7B,GADAu8B,GAAU6M,EAAMppC,QACHpH,IAATsJ,EAAElC,GAAkB,CACpB,MAAMrI,EAAOqkD,EAAMh8C,GAEfu8B,GADA5kC,IAAS2pD,GACC,OAASp/C,EAAElC,IAEhBrI,IAAS4pD,EACJ,IAAM3kC,UAAU1a,EAAElC,IAGlBkC,EAAElC,EAEpB,CAEJ,OAAOu8B,CAAM,CAErB,CACA,MAAM0lB,EAAwB//C,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMggD,EAAU,CACZv2C,KAhFJ,SAAczJ,GACV,IAAI/C,EAAIwpB,EACR,OAAQpjB,MAAMrD,IACG,iBAANA,KAC0B,QAA9B/C,EAAK+C,EAAEimC,MAAM,YAAgC,IAAPhpC,OAAgB,EAASA,EAAGrG,SAAW,KAC3C,QAA9B6vB,EAAKzmB,EAAEimC,MAAM,YAAgC,IAAPxf,OAAgB,EAASA,EAAG7vB,SAAW,GAChF,CACZ,EA0EIwnC,MAAOyhB,EACPvhB,oBACA8J,kBATJ,SAA2BpoC,GACvB,MAAMigD,EAASJ,EAAkB7/C,GAEjC,OADoBs+B,EAAkBt+B,EAC/BkgD,CAAYD,EAAO/+C,IAAI6+C,GAClC,yECjFA,MAAMpG,EAAS,CACXlwC,KAAOzJ,GAAmB,iBAANA,EACpBo+B,MAAOlmB,WACPwC,UAAY1a,GAAMA,GAEhBg3C,EAAQ,IACP2C,EACHj/B,UAAY1a,IAAM,OAAM,EAAG,EAAGA,IAE5BysB,EAAQ,IACPktB,EACH/3C,QAAS,oFCbb,MAAMu+C,EAAkBlB,IAAS,CAC7Bx1C,KAAOzJ,GAAmB,iBAANA,GAAkBA,EAAEogD,SAASnB,IAAiC,IAAxBj/C,EAAEknC,MAAM,KAAKtwC,OACvEwnC,MAAOlmB,WACPwC,UAAY1a,GAAM,GAAGA,IAAIi/C,MAEvBoB,EAAwBF,EAAe,OACvC7lD,EAAwB6lD,EAAe,KACvCv1B,EAAmBu1B,EAAe,MAClC/W,EAAmB+W,EAAe,MAClChX,EAAmBgX,EAAe,MAClCG,EAAqB,IACpBhmD,EACH8jC,MAAQp+B,GAAM1F,EAAQ8jC,MAAMp+B,GAAK,IACjC0a,UAAY1a,GAAM1F,EAAQogB,UAAc,IAAJ1a,uCCbxC,MAAMugD,EAAa,wJCAnB,MAAMC,EAAa,gDCAnB,SAASC,EAAUzgD,GACf,OAAY,MAALA,CACX,qDCAA,MAAM0gD,EAAY1gD,GAAMlE,KAAKE,MAAU,IAAJgE,GAAc,uCCFjD,MAAM2gD,EAAmB,yKCEzB,SAASC,EAAqBv6C,EAAe/T,GACzC,MAAMyuC,EAAa16B,EAAcS,SAAS,cAK1C,IAAI,OAAwBi6B,GACxB,OAAOA,EAAW/qB,IAAI1jB,EAE9B,qDCTA,SAASuuD,EAAwB/sD,GAC7B,OAAO4I,SAAQ,OAAc5I,IAAUA,EAAMkiB,IACjD,qCCJA,MAAM8qC,EAAiBhtD,GAAU4I,QAAQ5I,GAASA,EAAM6R,4ECQxD,SAASo7C,EAAmBjtD,GACxB,MAAMktD,GAAiB,OAAcltD,GAASA,EAAMiS,MAAQjS,EAC5D,OAAO,OAAcktD,GACfA,EAAezF,UACfyF,CACV,6ECXA,MAAMC,0BACF,WAAAvsD,CAAYgS,GAER3R,KAAKmD,KAAO,IAAMnD,KAAKmsD,OAAO,QAC9BnsD,KAAK2R,WAAaA,EAAW1H,OAAOtC,QACxC,CACA,YAAIkC,GAEA,OAAO7E,QAAQsN,IAAItS,KAAK2R,WAAWxF,KAAK9M,GAAc,aAAcA,EAAYA,EAAUwK,SAAWxK,IACzG,CAIA,MAAA+sD,CAAOC,GACH,OAAOrsD,KAAK2R,WAAW,GAAG06C,EAC9B,CACA,MAAAC,CAAOD,EAAUE,GACb,IAAK,IAAIxjD,EAAI,EAAGA,EAAI/I,KAAK2R,WAAW9P,OAAQkH,IACxC/I,KAAK2R,WAAW5I,GAAGsjD,GAAYE,CAEvC,CACA,cAAA3pD,CAAeC,EAAUouC,GACrB,MAAM4V,EAAgB7mD,KAAK2R,WAAWxF,KAAK9M,IACnC,UAA4BA,EAAUuD,eAC/BvD,EAAUuD,eAAeC,GAEP,mBAAbouC,EACLA,EAAS5xC,QADf,IAIT,MAAO,KACHwnD,EAActzC,SAAQ,CAACrR,EAAQ6G,KAC3B7G,GAAUA,IACVlC,KAAK2R,WAAW5I,GAAG5F,MAAM,GAC3B,CAEV,CACA,QAAId,GACA,OAAOrC,KAAKosD,OAAO,OACvB,CACA,QAAI/pD,CAAKA,GACLrC,KAAKssD,OAAO,OAAQjqD,EACxB,CACA,SAAIG,GACA,OAAOxC,KAAKosD,OAAO,QACvB,CACA,SAAI5pD,CAAMA,GACNxC,KAAKssD,OAAO,QAAS9pD,EACzB,CACA,aAAI7B,GACA,OAAOX,KAAKosD,OAAO,YACvB,CACA,YAAI7rD,GACA,IAAI6G,EAAM,EACV,IAAK,IAAI2B,EAAI,EAAGA,EAAI/I,KAAK2R,WAAW9P,OAAQkH,IACxC3B,EAAML,KAAKK,IAAIA,EAAKpH,KAAK2R,WAAW5I,GAAGxI,UAE3C,OAAO6G,CACX,CACA,MAAA+kD,CAAOK,GACHxsD,KAAK2R,WAAW4B,SAASoT,GAAaA,EAAS6lC,MACnD,CACA,OAAA1nD,GACI9E,KAAKmsD,OAAO,UAChB,CACA,IAAAppD,GACI/C,KAAKmsD,OAAO,OAChB,CACA,KAAAjpD,GACIlD,KAAKmsD,OAAO,QAChB,CACA,MAAAjqD,GACIlC,KAAKmsD,OAAO,SAChB,CACA,QAAA5oD,GACIvD,KAAKmsD,OAAO,WAChB,0ECxEJ,MAAMM,8BAA8B,IAChC,IAAA/nD,CAAKgoD,EAAWC,GACZ,OAAO3nD,QAAQsN,IAAItS,KAAK2R,YAAYjN,KAAKgoD,GAAWE,MAAMD,EAC9D,8CCLJ,MAAME,EAAuB,IAC7B,SAASC,EAAsBxmD,GAC3B,IAAI/F,EAAW,EAEf,IAAIc,EAAQiF,EAAUQ,KAAKvG,GAC3B,MAAQc,EAAMC,MAAQf,EAAWssD,GAC7BtsD,GAHa,GAIbc,EAAQiF,EAAUQ,KAAKvG,GAE3B,OAAOA,GAAYssD,EAAuBriC,IAAWjqB,CACzD,oBCdA,SAASa,EAAYV,GACjB,MAAuB,mBAATA,CAClB,oCCFA,SAASqsD,EAAmBt8C,EAAYlT,GACpC,OAAOkT,EACDA,EAAWlT,IACTkT,EAAoB,SACpBA,OACF9O,CACV,oCCNA,SAASiB,EAAevD,EAAWwD,GAC/BxD,EAAUwD,SAAWA,EACrBxD,EAAU2C,SAAW,IACzB,uGCCA,SAASgrD,EAAuB3jD,GAC5B,OAAO1B,QAA2B,mBAAX0B,IAAyB,WAC3CA,GACkB,iBAAXA,IACHA,KAAU4jD,IAAwB,YACvC,OAAmB5jD,IAClBC,MAAMC,QAAQF,IAAWA,EAAO6jD,MAAMF,GAC/C,CACA,MAAMG,EAAsB,EAAEz/C,EAAGC,EAAGE,EAAGvQ,KAAO,gBAAgBoQ,MAAMC,MAAME,MAAMvQ,KAC1E2vD,EAAuB,CACzB1vC,OAAQ,SACR9c,KAAM,OACNuc,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXtB,OAAsBuxC,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DrxC,QAAuBqxC,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDxxC,OAAsBwxC,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9DzxC,QAAuByxC,EAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAASC,EAAwB/jD,EAAQ9I,GACrC,OAAK8I,EAGsB,mBAAXA,IAAyB,UAC9B,OAAqBA,EAAQ9I,IAE/B,OAAmB8I,GACjB8jD,EAAoB9jD,GAEtBC,MAAMC,QAAQF,GACZA,EAAO8C,KAAKkhD,GAAkBD,EAAwBC,EAAe9sD,IACxE0sD,EAAqBhwC,UAGlBgwC,EAAqB5jD,QAb5B,CAeR,qDCtCA,MAAMikD,EAAuB,CAACjkD,EAAQ9I,EACtCgtD,EAAa,MAET,IAAIC,EAAS,GACb,MAAMC,EAAY1mD,KAAKK,IAAIL,KAAKE,MAAM1G,EAAWgtD,GAAa,GAC9D,IAAK,IAAIxkD,EAAI,EAAGA,EAAI0kD,EAAW1kD,IAC3BykD,GAAUnkD,GAAO,OAAS,EAAGokD,EAAY,EAAG1kD,IAAM,KAEtD,MAAO,UAAUykD,EAAOnR,UAAU,EAAGmR,EAAO3rD,OAAS,KAAK,4CCX9D,MAAM4f,EAAa,CACftjB,GAAG,EACHC,GAAG,GAEP,SAASsvD,IACL,OAAOjsC,EAAWtjB,GAAKsjB,EAAWrjB,CACtC,oDCJA,SAASuvD,EAAY7qC,GACjB,MAAa,MAATA,GAAyB,MAATA,EACZ,IAAWA,GACJ,MAGP,IAAWA,IAAQ,EACZ,KACH,IAAWA,IAAQ,CAAK,GAK5B,IAAW3kB,GAAK,IAAWC,EACpB,MAGP,IAAWD,EAAI,IAAWC,GAAI,EACvB,KACH,IAAWD,EAAI,IAAWC,GAAI,CAAK,EAInD,gECtBA,SAASwvD,EAAa3vC,GAClB,QAA+B,UAAtBA,EAAM4vC,cAA2B,SAC9C,CAQA,SAASnhC,EAAMohC,EAAmBC,EAAc7uD,EAAU,CAAC,GACvD,MAAO8uD,EAAUC,EAAc/rD,IAAU,OAAa4rD,EAAmB5uD,GACnEgvD,EAAkBC,IACpB,IAAKP,EAAaO,GACd,OACJ,MAAM,OAAE9iD,GAAW8iD,EACbC,EAAaL,EAAa1iD,EAAQ8iD,GACxC,GAA0B,mBAAfC,IAA8B/iD,EACrC,OACJ,MAAMgjD,EAAkBC,IACfV,EAAaU,KAElBF,EAAWE,GACXjjD,EAAOyS,oBAAoB,eAAgBuwC,GAAe,EAE9DhjD,EAAOwS,iBAAiB,eAAgBwwC,EAAgBJ,EAAa,EAKzE,OAHAD,EAASz6C,SAASxT,IACdA,EAAQ8d,iBAAiB,eAAgBqwC,EAAgBD,EAAa,IAEnE/rD,CACX,uICrBA,SAASqsD,EAAkBtwC,GACvB,OAAO,OAAiBA,MAAW,QACvC,CAoBA,SAASuwC,EAAMC,EAAkBC,EAAcxvD,EAAU,CAAC,GACtD,MAAOyvD,EAASV,EAAcW,IAAgB,OAAaH,EAAkBvvD,GACvE2vD,EAAc7lC,IAChB,MAAM3d,EAAS2d,EAAW8lC,cAC1B,IAAKzjD,IAAWkjD,EAAkBvlC,IAAe,IAAWhlB,IAAIqH,GAC5D,OACJ,IAAW4V,IAAI5V,IACf,OAAe2d,EAAY,OAC3B,MAAM+lC,EAAaL,EAAarjD,EAAQ2d,GAClCgmC,EAAe,CAAC/lC,EAAUwC,KAC5BpgB,EAAOyS,oBAAoB,YAAamxC,GACxC5jD,EAAOyS,oBAAoB,gBAAiBoxC,IAC5C,OAAejmC,EAAU,WACpBslC,EAAkBtlC,IAAc,IAAWjlB,IAAIqH,KAGpD,IAAWgN,OAAOhN,GACQ,mBAAf0jD,GACPA,EAAW9lC,EAAU,CAAEwC,YAC3B,EAEEwjC,EAAeE,IACjB,MAAMC,IAAaD,EAAQE,YA0CjBpxC,EAxCSkxC,EAwCFG,EAxCWjkD,aAAkBf,QACpCe,EAAOu/B,wBACP,CACE/0B,KAAM,EACNF,IAAK,EACLI,MAAO7D,OAAOq9C,WACdroC,OAAQhV,OAAOs9C,aAmC3BvxC,EAAMwxC,QAAUH,EAAKz5C,MACzBoI,EAAMwxC,QAAUH,EAAKv5C,OACrBkI,EAAMyxC,QAAUJ,EAAK35C,KACrBsI,EAAMyxC,QAAUJ,EAAKpoC,QAJ7B,IAAsBjJ,EAAOqxC,EA/BbN,EAAaG,GADbC,MAIwB/jD,aAAkBf,WACtC,OAAce,EAAQ8jD,EAAQ9jD,SACtC,EAEE6jD,EAAmBS,IACrBX,EAAaW,GAAa,EAAM,EAEpCtkD,EAAOwS,iBAAiB,YAAaoxC,EAAahB,GAClD5iD,EAAOwS,iBAAiB,gBAAiBqxC,EAAiBjB,GAC1D5iD,EAAOwS,iBAAiB,qBAAsBqxC,EAAiBjB,EAAa,EAiBhF,OAfAU,EAAQp7C,SAASlI,IAEb,IAAIukD,GAA8B,GADlCvkD,EAASnM,EAAQwsB,gBAAkBxZ,OAAS7G,aAEtBxH,cAClB+rD,GAA8B,GACzB,OAA4BvkD,IACO,OAApCA,EAAOgvC,aAAa,cACpBhvC,EAAOksC,SAAW,IAG1BlsC,EAAOwS,iBAAiB,cAAegxC,EAAYZ,GAC/C2B,GACAvkD,EAAOwS,iBAAiB,SAAUI,IAAU,OAAoBA,EAAOgwC,IAAeA,EAC1F,IAEGW,CACX,qCClGA,MAAMiB,EAAoB,IAAIpnD,IAAI,CAC9B,SACA,QACA,SACA,WACA,MAEJ,SAASqnD,EAA4B/vD,GACjC,OAAQ8vD,EAAkB7rD,IAAIjE,EAAQyyC,WACZ,IAAtBzyC,EAAQw3C,QAChB,qDCLA,SAASwY,EAAahvC,GAClB,OAAQ9C,IACc,UAAdA,EAAM1gB,KAEVwjB,EAAS9C,EAAM,CAEvB,CACA,SAAS+xC,EAAiB3kD,EAAQ3K,GAC9B2K,EAAO4kD,cAAc,IAAIC,aAAa,UAAYxvD,EAAM,CAAEyvD,WAAW,EAAMC,SAAS,IACxF,CACA,MAAMC,EAAsB,CAACC,EAAYrC,KACrC,MAAMluD,EAAUuwD,EAAWxB,cAC3B,IAAK/uD,EACD,OACJ,MAAMwwD,EAAgBR,GAAa,KAC/B,GAAI,IAAW/rD,IAAIjE,GACf,OACJiwD,EAAiBjwD,EAAS,QAC1B,MAAMywD,EAAcT,GAAa,KAC7BC,EAAiBjwD,EAAS,KAAK,IAGnCA,EAAQ8d,iBAAiB,QAAS2yC,EAAavC,GAC/CluD,EAAQ8d,iBAAiB,QAFN,IAAMmyC,EAAiBjwD,EAAS,WAENkuD,EAAa,IAE9DluD,EAAQ8d,iBAAiB,UAAW0yC,EAAetC,GAInDluD,EAAQ8d,iBAAiB,QAAQ,IAAM9d,EAAQ+d,oBAAoB,UAAWyyC,IAAgBtC,EAAa,qCClC/G,MAAMwC,EAAa,IAAI9vC,0BCAvB,SAAS+vC,EAAezyC,EAAO0yC,GAC3B,MAAMC,EAAa,GAAGD,kBACtB,GAAI1yC,EAAM5S,kBAAkBf,SACxBsmD,KAAc3yC,EAAM5S,aACA1J,IAApBsc,EAAM4yC,UACN,IACI5yC,EAAM5S,OAAOulD,GAAY3yC,EAAM4yC,UACnC,CACA,MAAO/iD,GAAK,CAEpB,qDCHA,MAAMgjD,EAAgB,CAACz7C,EAAQ7B,MACtBA,IAGI6B,IAAW7B,GAITs9C,EAAcz7C,EAAQ7B,EAAMu9C,mDCf3C,MAAMC,EAAoB/yC,GACI,UAAtBA,EAAM4vC,YACyB,iBAAjB5vC,EAAMgzC,QAAuBhzC,EAAMgzC,QAAU,GAWhC,IAApBhzC,EAAMkyC,6DCXrB,SAASe,EAAapD,EAAmB5uD,GACrC,MAAM8uD,GAAW,OAAgBF,GAC3BqD,EAAyB,IAAIC,gBAOnC,MAAO,CAACpD,EANa,CACjBpwC,SAAS,KACN1e,EACHmyD,OAAQF,EAAuBE,QAEpB,IAAMF,EAAuBG,QAEhD,qCCZA,MAAMC,EAAsBloD,GAAWC,MAAMC,QAAQF,IAAgC,iBAAdA,EAAO,qBCA9E,SAASmoD,EAAgB1D,EAAmB2D,EAAOC,GAC/C,IAAIxpD,EACJ,GAAI4lD,aAA6B6D,YAC7B,MAAO,CAAC7D,GAEP,GAAiC,iBAAtBA,EAAgC,CAC5C,IAAI9+C,EAAO+H,SACP06C,IAMAziD,EAAOyiD,EAAM5wD,SAEjB,MAAMmtD,EAAqH,QAAzG9lD,EAAKwpD,aAAqD,EAASA,EAAc5D,UAAuC,IAAP5lD,EAAgBA,EAAK8G,EAAK4iD,iBAAiB9D,GAC9K,OAAOE,EAAW1kD,MAAMuH,KAAKm9C,GAAY,EAC7C,CACA,OAAO1kD,MAAMuH,KAAKi9C,EACtB,qDCfA,MAAM+D,EAAgB,CAClBC,kBAAcnwD,sCCHlB,MAAMowD,GAAqC,eAAa,KACpD,IACIh7C,SACKC,cAAc,OACdvN,QAAQ,CAAE0sB,QAAS,GAAK,CAAE9sB,OAAQ,gBAC3C,CACA,MAAOyE,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,8ECRH,SAASkkD,EAAajxC,EAAUkxC,GAC5B,MAAMC,GAAW,OAAKnxC,GACtB,MAAO,KAAQ,IAAI7Y,EAAI,OAA8C,QAAtCA,EAAK,IAAc+pD,UAAkC,IAAP/pD,EAAgBA,EAAKgqD,GAAU,CAChH,qCCJA,MAAMC,GAAyB,gBAAK,SAAgCxwD,IAA1BuQ,OAAOkgD,4ECDjD,IAAIC,EAAU,IACVC,EAAY,sBCFhB,SAASC,EAAKxxC,GACV,IAAI5S,EACJ,MAAO,UACYxM,IAAXwM,IACAA,EAAS4S,KACN5S,EAEf,qDCPA,MAAMqkD,EAAQC,GAAQA,qCCYtB,MAAMlrD,EAAW,CAACsJ,EAAM00B,EAAIxmC,KACxB,MAAM2zD,EAAmBntB,EAAK10B,EAC9B,OAA4B,IAArB6hD,EAAyB,GAAK3zD,EAAQ8R,GAAQ6hD,CAAgB,6CCRzE,MAAMC,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe","sources":["webpack://frontend/./node_modules/lucide-react/dist/esm/icons/arrow-right-to-line.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/arrow-right.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/chevrons-left-right.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/circle-check.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/dot.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/ghost.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/group.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/hand-platter.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/link-2.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/package-2.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/plus.js","webpack://frontend/./node_modules/lucide-react/dist/esm/icons/wrench.js","webpack://frontend/./node_modules/lodash-es/isNil.js","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/LazyContext.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/PresenceContext.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/anticipate.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/back.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/circ.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/ease.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/easing/utils/map.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/events/add-dom-event.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/events/event-info.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/frameloop/batcher.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/frameloop/frame.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/frameloop/microtask.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/frameloop/order.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/frameloop/render-step.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/focus.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/hover.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/pan/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/gestures/press.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/Feature.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/animations.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/definitions.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/drag.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/gestures.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/load-features.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/models.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/node/state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/shared/stack.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/styles/transform.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/projection/utils/measure.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/VisualElement.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/components/create-factory.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/create.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/components/motion/elements.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/use-render.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/config-motion.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/use-props.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/parse-transform.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/render.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/store.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/use-props.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/measure.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/setters.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/stats/animation-count.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/stats/buffer.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/array.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/clamp.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/delay.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/distance.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/get-context-window.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/interpolate.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/is-browser.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/color.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/complex.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/number.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/default.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/offsets/time.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/pipe.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/resolve-value.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/use-constant.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hex.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/color/utils.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/complex/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://frontend/./node_modules/motion/dist/es/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/controls/Group.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/hover.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/index.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/capture-pointer.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/flags.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/memo.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-utils/dist/es/errors.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-utils/dist/es/memo.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-utils/dist/es/noop.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-utils/dist/es/progress.mjs","webpack://frontend/./node_modules/motion/dist/es/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M17 12H3\", key: \"8awo09\" }],\n  [\"path\", { d: \"m11 18 6-6-6-6\", key: \"8c2y43\" }],\n  [\"path\", { d: \"M21 5v14\", key: \"nzette\" }]\n];\nconst ArrowRightToLine = createLucideIcon(\"arrow-right-to-line\", __iconNode);\n\nexport { __iconNode, ArrowRightToLine as default };\n//# sourceMappingURL=arrow-right-to-line.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"m12 5 7 7-7 7\", key: \"xquz4c\" }]\n];\nconst ArrowRight = createLucideIcon(\"arrow-right\", __iconNode);\n\nexport { __iconNode, ArrowRight as default };\n//# sourceMappingURL=arrow-right.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m9 7-5 5 5 5\", key: \"j5w590\" }],\n  [\"path\", { d: \"m15 7 5 5-5 5\", key: \"1bl6da\" }]\n];\nconst ChevronsLeftRight = createLucideIcon(\"chevrons-left-right\", __iconNode);\n\nexport { __iconNode, ChevronsLeftRight as default };\n//# sourceMappingURL=chevrons-left-right.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m9 12 2 2 4-4\", key: \"dzmm74\" }]\n];\nconst CircleCheck = createLucideIcon(\"circle-check\", __iconNode);\n\nexport { __iconNode, CircleCheck as default };\n//# sourceMappingURL=circle-check.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"circle\", { cx: \"12.1\", cy: \"12.1\", r: \"1\", key: \"18d7e5\" }]];\nconst Dot = createLucideIcon(\"dot\", __iconNode);\n\nexport { __iconNode, Dot as default };\n//# sourceMappingURL=dot.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M9 10h.01\", key: \"qbtxuw\" }],\n  [\"path\", { d: \"M15 10h.01\", key: \"1qmjsl\" }],\n  [\n    \"path\",\n    {\n      d: \"M12 2a8 8 0 0 0-8 8v12l3-3 2.5 2.5L12 19l2.5 2.5L17 19l3 3V10a8 8 0 0 0-8-8z\",\n      key: \"uwwb07\"\n    }\n  ]\n];\nconst Ghost = createLucideIcon(\"ghost\", __iconNode);\n\nexport { __iconNode, Ghost as default };\n//# sourceMappingURL=ghost.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 7V5c0-1.1.9-2 2-2h2\", key: \"adw53z\" }],\n  [\"path\", { d: \"M17 3h2c1.1 0 2 .9 2 2v2\", key: \"an4l38\" }],\n  [\"path\", { d: \"M21 17v2c0 1.1-.9 2-2 2h-2\", key: \"144t0e\" }],\n  [\"path\", { d: \"M7 21H5c-1.1 0-2-.9-2-2v-2\", key: \"rtnfgi\" }],\n  [\"rect\", { width: \"7\", height: \"5\", x: \"7\", y: \"7\", rx: \"1\", key: \"1eyiv7\" }],\n  [\"rect\", { width: \"7\", height: \"5\", x: \"10\", y: \"12\", rx: \"1\", key: \"1qlmkx\" }]\n];\nconst Group = createLucideIcon(\"group\", __iconNode);\n\nexport { __iconNode, Group as default };\n//# sourceMappingURL=group.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M12 3V2\", key: \"ar7q03\" }],\n  [\n    \"path\",\n    {\n      d: \"m15.4 17.4 3.2-2.8a2 2 0 1 1 2.8 2.9l-3.6 3.3c-.7.8-1.7 1.2-2.8 1.2h-4c-1.1 0-2.1-.4-2.8-1.2l-1.302-1.464A1 1 0 0 0 6.151 19H5\",\n      key: \"n2g93r\"\n    }\n  ],\n  [\"path\", { d: \"M2 14h12a2 2 0 0 1 0 4h-2\", key: \"1o2jem\" }],\n  [\"path\", { d: \"M4 10h16\", key: \"img6z1\" }],\n  [\"path\", { d: \"M5 10a7 7 0 0 1 14 0\", key: \"1ega1o\" }],\n  [\"path\", { d: \"M5 14v6a1 1 0 0 1-1 1H2\", key: \"1hescx\" }]\n];\nconst HandPlatter = createLucideIcon(\"hand-platter\", __iconNode);\n\nexport { __iconNode, HandPlatter as default };\n//# sourceMappingURL=hand-platter.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M9 17H7A5 5 0 0 1 7 7h2\", key: \"8i5ue5\" }],\n  [\"path\", { d: \"M15 7h2a5 5 0 1 1 0 10h-2\", key: \"1b9ql8\" }],\n  [\"line\", { x1: \"8\", x2: \"16\", y1: \"12\", y2: \"12\", key: \"1jonct\" }]\n];\nconst Link2 = createLucideIcon(\"link-2\", __iconNode);\n\nexport { __iconNode, Link2 as default };\n//# sourceMappingURL=link-2.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M3 9h18v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V9Z\", key: \"1ront0\" }],\n  [\"path\", { d: \"m3 9 2.45-4.9A2 2 0 0 1 7.24 3h9.52a2 2 0 0 1 1.8 1.1L21 9\", key: \"19h2x1\" }],\n  [\"path\", { d: \"M12 3v6\", key: \"1holv5\" }]\n];\nconst Package2 = createLucideIcon(\"package-2\", __iconNode);\n\nexport { __iconNode, Package2 as default };\n//# sourceMappingURL=package-2.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M5 12h14\", key: \"1ays0h\" }],\n  [\"path\", { d: \"M12 5v14\", key: \"s699le\" }]\n];\nconst Plus = createLucideIcon(\"plus\", __iconNode);\n\nexport { __iconNode, Plus as default };\n//# sourceMappingURL=plus.js.map\n","/**\n * @license lucide-react v0.498.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z\",\n      key: \"cbrjhi\"\n    }\n  ]\n];\nconst Wrench = createLucideIcon(\"wrench\", __iconNode);\n\nexport { __iconNode, Wrench as default };\n//# sourceMappingURL=wrench.js.map\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { isGenerator } from '../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { attachTimeline } from '../../../../../motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs';\nimport { isWaapiSupportedEasing } from '../../../../../motion-dom/dist/es/animation/waapi/utils/easing.mjs';\nimport { supportsLinearEasing } from '../../../../../motion-dom/dist/es/utils/supports/linear-easing.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../../../../motion-dom/dist/es/animation/generators/utils/calc-duration.mjs';\nimport { isGenerator } from '../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { isGenerator } from '../../../../../../motion-dom/dist/es/animation/generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { mapEasingToNativeEasing } from '../../../../../../motion-dom/dist/es/animation/waapi/utils/easing.mjs';\nimport { activeAnimations } from '../../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../../stats/buffer.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import '../../../../../../../motion-utils/dist/es/errors.mjs';\nimport { memo } from '../../../../../../../motion-utils/dist/es/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../../../../../../motion-dom/dist/es/animation/generators/utils/calc-duration.mjs';\nimport { generateLinearEasing } from '../../../../../../motion-dom/dist/es/animation/waapi/utils/linear.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { GroupPlaybackControls } from '../../../../../motion-dom/dist/es/animation/controls/Group.mjs';\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { secondsToMilliseconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const parent = element.offsetParent;\n            const parentWidth = parent instanceof HTMLElement ? parent.offsetWidth || 0 : 0;\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n            size.right = parentWidth - size.width - size.left;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent, anchorX }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n        right: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left, right } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        const x = anchorX === \"left\" ? `left: ${left}` : `right: ${right}`;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            ${x}px !important;\n            top: ${top}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, anchorX, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = (jsx(PopChild, { isPresent: isPresent, anchorX: anchorX, children: children }));\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { usePresence } from './use-presence.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, anchorX = \"left\", }) => {\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return null;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = propagate && !isParentPresent\n                ? false\n                : presentChildren === renderedChildren ||\n                    presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, anchorX: anchorX, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { isBezierDefinition } from '../../../../../motion-dom/dist/es/utils/is-bezier-definition.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { isPrimaryPointer } from '../../../../motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { setDragLock } from '../../../../../motion-dom/dist/es/gestures/drag/state/set-active.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, rebaseAxisConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { progress } from '../../../../../../motion-utils/dist/es/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { hover } from '../../../../motion-dom/dist/es/gestures/hover.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { isPrimaryPointer } from '../../../../../motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { press } from '../../../../motion-dom/dist/es/gestures/press/index.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from '../../../../motion-utils/dist/es/errors.mjs';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { progress } from '../../../../../motion-utils/dist/es/progress.mjs';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../../motion-utils/dist/es/noop.mjs';\nimport { getValueTransition } from '../../../../../motion-dom/dist/es/animation/utils/get-value-transition.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","\"use client\";\nimport { createMotionComponent } from './create.mjs';\n\n/**\n * HTML components\n */\nconst MotionA = /*@__PURE__*/ createMotionComponent(\"a\");\nconst MotionAbbr = /*@__PURE__*/ createMotionComponent(\"abbr\");\nconst MotionAddress = /*@__PURE__*/ createMotionComponent(\"address\");\nconst MotionArea = /*@__PURE__*/ createMotionComponent(\"area\");\nconst MotionArticle = /*@__PURE__*/ createMotionComponent(\"article\");\nconst MotionAside = /*@__PURE__*/ createMotionComponent(\"aside\");\nconst MotionAudio = /*@__PURE__*/ createMotionComponent(\"audio\");\nconst MotionB = /*@__PURE__*/ createMotionComponent(\"b\");\nconst MotionBase = /*@__PURE__*/ createMotionComponent(\"base\");\nconst MotionBdi = /*@__PURE__*/ createMotionComponent(\"bdi\");\nconst MotionBdo = /*@__PURE__*/ createMotionComponent(\"bdo\");\nconst MotionBig = /*@__PURE__*/ createMotionComponent(\"big\");\nconst MotionBlockquote = \n/*@__PURE__*/ createMotionComponent(\"blockquote\");\nconst MotionBody = /*@__PURE__*/ createMotionComponent(\"body\");\nconst MotionButton = /*@__PURE__*/ createMotionComponent(\"button\");\nconst MotionCanvas = /*@__PURE__*/ createMotionComponent(\"canvas\");\nconst MotionCaption = /*@__PURE__*/ createMotionComponent(\"caption\");\nconst MotionCite = /*@__PURE__*/ createMotionComponent(\"cite\");\nconst MotionCode = /*@__PURE__*/ createMotionComponent(\"code\");\nconst MotionCol = /*@__PURE__*/ createMotionComponent(\"col\");\nconst MotionColgroup = /*@__PURE__*/ createMotionComponent(\"colgroup\");\nconst MotionData = /*@__PURE__*/ createMotionComponent(\"data\");\nconst MotionDatalist = /*@__PURE__*/ createMotionComponent(\"datalist\");\nconst MotionDd = /*@__PURE__*/ createMotionComponent(\"dd\");\nconst MotionDel = /*@__PURE__*/ createMotionComponent(\"del\");\nconst MotionDetails = /*@__PURE__*/ createMotionComponent(\"details\");\nconst MotionDfn = /*@__PURE__*/ createMotionComponent(\"dfn\");\nconst MotionDialog = /*@__PURE__*/ createMotionComponent(\"dialog\");\nconst MotionDiv = /*@__PURE__*/ createMotionComponent(\"div\");\nconst MotionDl = /*@__PURE__*/ createMotionComponent(\"dl\");\nconst MotionDt = /*@__PURE__*/ createMotionComponent(\"dt\");\nconst MotionEm = /*@__PURE__*/ createMotionComponent(\"em\");\nconst MotionEmbed = /*@__PURE__*/ createMotionComponent(\"embed\");\nconst MotionFieldset = /*@__PURE__*/ createMotionComponent(\"fieldset\");\nconst MotionFigcaption = \n/*@__PURE__*/ createMotionComponent(\"figcaption\");\nconst MotionFigure = /*@__PURE__*/ createMotionComponent(\"figure\");\nconst MotionFooter = /*@__PURE__*/ createMotionComponent(\"footer\");\nconst MotionForm = /*@__PURE__*/ createMotionComponent(\"form\");\nconst MotionH1 = /*@__PURE__*/ createMotionComponent(\"h1\");\nconst MotionH2 = /*@__PURE__*/ createMotionComponent(\"h2\");\nconst MotionH3 = /*@__PURE__*/ createMotionComponent(\"h3\");\nconst MotionH4 = /*@__PURE__*/ createMotionComponent(\"h4\");\nconst MotionH5 = /*@__PURE__*/ createMotionComponent(\"h5\");\nconst MotionH6 = /*@__PURE__*/ createMotionComponent(\"h6\");\nconst MotionHead = /*@__PURE__*/ createMotionComponent(\"head\");\nconst MotionHeader = /*@__PURE__*/ createMotionComponent(\"header\");\nconst MotionHgroup = /*@__PURE__*/ createMotionComponent(\"hgroup\");\nconst MotionHr = /*@__PURE__*/ createMotionComponent(\"hr\");\nconst MotionHtml = /*@__PURE__*/ createMotionComponent(\"html\");\nconst MotionI = /*@__PURE__*/ createMotionComponent(\"i\");\nconst MotionIframe = /*@__PURE__*/ createMotionComponent(\"iframe\");\nconst MotionImg = /*@__PURE__*/ createMotionComponent(\"img\");\nconst MotionInput = /*@__PURE__*/ createMotionComponent(\"input\");\nconst MotionIns = /*@__PURE__*/ createMotionComponent(\"ins\");\nconst MotionKbd = /*@__PURE__*/ createMotionComponent(\"kbd\");\nconst MotionKeygen = /*@__PURE__*/ createMotionComponent(\"keygen\");\nconst MotionLabel = /*@__PURE__*/ createMotionComponent(\"label\");\nconst MotionLegend = /*@__PURE__*/ createMotionComponent(\"legend\");\nconst MotionLi = /*@__PURE__*/ createMotionComponent(\"li\");\nconst MotionLink = /*@__PURE__*/ createMotionComponent(\"link\");\nconst MotionMain = /*@__PURE__*/ createMotionComponent(\"main\");\nconst MotionMap = /*@__PURE__*/ createMotionComponent(\"map\");\nconst MotionMark = /*@__PURE__*/ createMotionComponent(\"mark\");\nconst MotionMenu = /*@__PURE__*/ createMotionComponent(\"menu\");\nconst MotionMenuitem = /*@__PURE__*/ createMotionComponent(\"menuitem\");\nconst MotionMeter = /*@__PURE__*/ createMotionComponent(\"meter\");\nconst MotionNav = /*@__PURE__*/ createMotionComponent(\"nav\");\nconst MotionObject = /*@__PURE__*/ createMotionComponent(\"object\");\nconst MotionOl = /*@__PURE__*/ createMotionComponent(\"ol\");\nconst MotionOptgroup = /*@__PURE__*/ createMotionComponent(\"optgroup\");\nconst MotionOption = /*@__PURE__*/ createMotionComponent(\"option\");\nconst MotionOutput = /*@__PURE__*/ createMotionComponent(\"output\");\nconst MotionP = /*@__PURE__*/ createMotionComponent(\"p\");\nconst MotionParam = /*@__PURE__*/ createMotionComponent(\"param\");\nconst MotionPicture = /*@__PURE__*/ createMotionComponent(\"picture\");\nconst MotionPre = /*@__PURE__*/ createMotionComponent(\"pre\");\nconst MotionProgress = /*@__PURE__*/ createMotionComponent(\"progress\");\nconst MotionQ = /*@__PURE__*/ createMotionComponent(\"q\");\nconst MotionRp = /*@__PURE__*/ createMotionComponent(\"rp\");\nconst MotionRt = /*@__PURE__*/ createMotionComponent(\"rt\");\nconst MotionRuby = /*@__PURE__*/ createMotionComponent(\"ruby\");\nconst MotionS = /*@__PURE__*/ createMotionComponent(\"s\");\nconst MotionSamp = /*@__PURE__*/ createMotionComponent(\"samp\");\nconst MotionScript = /*@__PURE__*/ createMotionComponent(\"script\");\nconst MotionSection = /*@__PURE__*/ createMotionComponent(\"section\");\nconst MotionSelect = /*@__PURE__*/ createMotionComponent(\"select\");\nconst MotionSmall = /*@__PURE__*/ createMotionComponent(\"small\");\nconst MotionSource = /*@__PURE__*/ createMotionComponent(\"source\");\nconst MotionSpan = /*@__PURE__*/ createMotionComponent(\"span\");\nconst MotionStrong = /*@__PURE__*/ createMotionComponent(\"strong\");\nconst MotionStyle = /*@__PURE__*/ createMotionComponent(\"style\");\nconst MotionSub = /*@__PURE__*/ createMotionComponent(\"sub\");\nconst MotionSummary = /*@__PURE__*/ createMotionComponent(\"summary\");\nconst MotionSup = /*@__PURE__*/ createMotionComponent(\"sup\");\nconst MotionTable = /*@__PURE__*/ createMotionComponent(\"table\");\nconst MotionTbody = /*@__PURE__*/ createMotionComponent(\"tbody\");\nconst MotionTd = /*@__PURE__*/ createMotionComponent(\"td\");\nconst MotionTextarea = /*@__PURE__*/ createMotionComponent(\"textarea\");\nconst MotionTfoot = /*@__PURE__*/ createMotionComponent(\"tfoot\");\nconst MotionTh = /*@__PURE__*/ createMotionComponent(\"th\");\nconst MotionThead = /*@__PURE__*/ createMotionComponent(\"thead\");\nconst MotionTime = /*@__PURE__*/ createMotionComponent(\"time\");\nconst MotionTitle = /*@__PURE__*/ createMotionComponent(\"title\");\nconst MotionTr = /*@__PURE__*/ createMotionComponent(\"tr\");\nconst MotionTrack = /*@__PURE__*/ createMotionComponent(\"track\");\nconst MotionU = /*@__PURE__*/ createMotionComponent(\"u\");\nconst MotionUl = /*@__PURE__*/ createMotionComponent(\"ul\");\nconst MotionVideo = /*@__PURE__*/ createMotionComponent(\"video\");\nconst MotionWbr = /*@__PURE__*/ createMotionComponent(\"wbr\");\nconst MotionWebview = /*@__PURE__*/ createMotionComponent(\"webview\");\n/**\n * SVG components\n */\nconst MotionAnimate = /*@__PURE__*/ createMotionComponent(\"animate\");\nconst MotionCircle = /*@__PURE__*/ createMotionComponent(\"circle\");\nconst MotionDefs = /*@__PURE__*/ createMotionComponent(\"defs\");\nconst MotionDesc = /*@__PURE__*/ createMotionComponent(\"desc\");\nconst MotionEllipse = /*@__PURE__*/ createMotionComponent(\"ellipse\");\nconst MotionG = /*@__PURE__*/ createMotionComponent(\"g\");\nconst MotionImage = /*@__PURE__*/ createMotionComponent(\"image\");\nconst MotionLine = /*@__PURE__*/ createMotionComponent(\"line\");\nconst MotionFilter = /*@__PURE__*/ createMotionComponent(\"filter\");\nconst MotionMarker = /*@__PURE__*/ createMotionComponent(\"marker\");\nconst MotionMask = /*@__PURE__*/ createMotionComponent(\"mask\");\nconst MotionMetadata = /*@__PURE__*/ createMotionComponent(\"metadata\");\nconst MotionPath = /*@__PURE__*/ createMotionComponent(\"path\");\nconst MotionPattern = /*@__PURE__*/ createMotionComponent(\"pattern\");\nconst MotionPolygon = /*@__PURE__*/ createMotionComponent(\"polygon\");\nconst MotionPolyline = /*@__PURE__*/ createMotionComponent(\"polyline\");\nconst MotionRect = /*@__PURE__*/ createMotionComponent(\"rect\");\nconst MotionStop = /*@__PURE__*/ createMotionComponent(\"stop\");\nconst MotionSvg = /*@__PURE__*/ createMotionComponent(\"svg\");\nconst MotionSymbol = /*@__PURE__*/ createMotionComponent(\"symbol\");\nconst MotionText = /*@__PURE__*/ createMotionComponent(\"text\");\nconst MotionTspan = /*@__PURE__*/ createMotionComponent(\"tspan\");\nconst MotionUse = /*@__PURE__*/ createMotionComponent(\"use\");\nconst MotionView = /*@__PURE__*/ createMotionComponent(\"view\");\nconst MotionClipPath = /*@__PURE__*/ createMotionComponent(\"clipPath\");\nconst MotionFeBlend = /*@__PURE__*/ createMotionComponent(\"feBlend\");\nconst MotionFeColorMatrix = \n/*@__PURE__*/ createMotionComponent(\"feColorMatrix\");\nconst MotionFeComponentTransfer = /*@__PURE__*/ createMotionComponent(\"feComponentTransfer\");\nconst MotionFeComposite = \n/*@__PURE__*/ createMotionComponent(\"feComposite\");\nconst MotionFeConvolveMatrix = \n/*@__PURE__*/ createMotionComponent(\"feConvolveMatrix\");\nconst MotionFeDiffuseLighting = \n/*@__PURE__*/ createMotionComponent(\"feDiffuseLighting\");\nconst MotionFeDisplacementMap = \n/*@__PURE__*/ createMotionComponent(\"feDisplacementMap\");\nconst MotionFeDistantLight = \n/*@__PURE__*/ createMotionComponent(\"feDistantLight\");\nconst MotionFeDropShadow = \n/*@__PURE__*/ createMotionComponent(\"feDropShadow\");\nconst MotionFeFlood = /*@__PURE__*/ createMotionComponent(\"feFlood\");\nconst MotionFeFuncA = /*@__PURE__*/ createMotionComponent(\"feFuncA\");\nconst MotionFeFuncB = /*@__PURE__*/ createMotionComponent(\"feFuncB\");\nconst MotionFeFuncG = /*@__PURE__*/ createMotionComponent(\"feFuncG\");\nconst MotionFeFuncR = /*@__PURE__*/ createMotionComponent(\"feFuncR\");\nconst MotionFeGaussianBlur = \n/*@__PURE__*/ createMotionComponent(\"feGaussianBlur\");\nconst MotionFeImage = /*@__PURE__*/ createMotionComponent(\"feImage\");\nconst MotionFeMerge = /*@__PURE__*/ createMotionComponent(\"feMerge\");\nconst MotionFeMergeNode = \n/*@__PURE__*/ createMotionComponent(\"feMergeNode\");\nconst MotionFeMorphology = \n/*@__PURE__*/ createMotionComponent(\"feMorphology\");\nconst MotionFeOffset = /*@__PURE__*/ createMotionComponent(\"feOffset\");\nconst MotionFePointLight = \n/*@__PURE__*/ createMotionComponent(\"fePointLight\");\nconst MotionFeSpecularLighting = \n/*@__PURE__*/ createMotionComponent(\"feSpecularLighting\");\nconst MotionFeSpotLight = \n/*@__PURE__*/ createMotionComponent(\"feSpotLight\");\nconst MotionFeTile = /*@__PURE__*/ createMotionComponent(\"feTile\");\nconst MotionFeTurbulence = \n/*@__PURE__*/ createMotionComponent(\"feTurbulence\");\nconst MotionForeignObject = \n/*@__PURE__*/ createMotionComponent(\"foreignObject\");\nconst MotionLinearGradient = \n/*@__PURE__*/ createMotionComponent(\"linearGradient\");\nconst MotionRadialGradient = \n/*@__PURE__*/ createMotionComponent(\"radialGradient\");\nconst MotionTextPath = /*@__PURE__*/ createMotionComponent(\"textPath\");\n\nexport { MotionA, MotionAbbr, MotionAddress, MotionAnimate, MotionArea, MotionArticle, MotionAside, MotionAudio, MotionB, MotionBase, MotionBdi, MotionBdo, MotionBig, MotionBlockquote, MotionBody, MotionButton, MotionCanvas, MotionCaption, MotionCircle, MotionCite, MotionClipPath, MotionCode, MotionCol, MotionColgroup, MotionData, MotionDatalist, MotionDd, MotionDefs, MotionDel, MotionDesc, MotionDetails, MotionDfn, MotionDialog, MotionDiv, MotionDl, MotionDt, MotionEllipse, MotionEm, MotionEmbed, MotionFeBlend, MotionFeColorMatrix, MotionFeComponentTransfer, MotionFeComposite, MotionFeConvolveMatrix, MotionFeDiffuseLighting, MotionFeDisplacementMap, MotionFeDistantLight, MotionFeDropShadow, MotionFeFlood, MotionFeFuncA, MotionFeFuncB, MotionFeFuncG, MotionFeFuncR, MotionFeGaussianBlur, MotionFeImage, MotionFeMerge, MotionFeMergeNode, MotionFeMorphology, MotionFeOffset, MotionFePointLight, MotionFeSpecularLighting, MotionFeSpotLight, MotionFeTile, MotionFeTurbulence, MotionFieldset, MotionFigcaption, MotionFigure, MotionFilter, MotionFooter, MotionForeignObject, MotionForm, MotionG, MotionH1, MotionH2, MotionH3, MotionH4, MotionH5, MotionH6, MotionHead, MotionHeader, MotionHgroup, MotionHr, MotionHtml, MotionI, MotionIframe, MotionImage, MotionImg, MotionInput, MotionIns, MotionKbd, MotionKeygen, MotionLabel, MotionLegend, MotionLi, MotionLine, MotionLinearGradient, MotionLink, MotionMain, MotionMap, MotionMark, MotionMarker, MotionMask, MotionMenu, MotionMenuitem, MotionMetadata, MotionMeter, MotionNav, MotionObject, MotionOl, MotionOptgroup, MotionOption, MotionOutput, MotionP, MotionParam, MotionPath, MotionPattern, MotionPicture, MotionPolygon, MotionPolyline, MotionPre, MotionProgress, MotionQ, MotionRadialGradient, MotionRect, MotionRp, MotionRt, MotionRuby, MotionS, MotionSamp, MotionScript, MotionSection, MotionSelect, MotionSmall, MotionSource, MotionSpan, MotionStop, MotionStrong, MotionStyle, MotionSub, MotionSummary, MotionSup, MotionSvg, MotionSymbol, MotionTable, MotionTbody, MotionTd, MotionText, MotionTextPath, MotionTextarea, MotionTfoot, MotionTh, MotionThead, MotionTime, MotionTitle, MotionTr, MotionTrack, MotionTspan, MotionU, MotionUl, MotionUse, MotionVideo, MotionView, MotionWbr, MotionWebview };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { invariant } from '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.13\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.13 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import '../../../../motion-utils/dist/es/errors.mjs';\nimport { secondsToMilliseconds } from '../../../../motion-utils/dist/es/time-conversion.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { invariant } from '../../../../motion-utils/dist/es/errors.mjs';\nimport { noop } from '../../../../motion-utils/dist/es/noop.mjs';\nimport { progress } from '../../../../motion-utils/dist/es/progress.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../../../../../motion-utils/dist/es/errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { progress } from '../../../../../motion-utils/dist/es/progress.mjs';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.4.13\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import '../../../../../../motion-utils/dist/es/errors.mjs';\nimport { progress } from '../../../../../../motion-utils/dist/es/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { capturePointer } from '../utils/capture-pointer.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!target || !isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        capturePointer(startEvent, \"set\");\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            target.removeEventListener(\"pointerup\", onPointerUp);\n            target.removeEventListener(\"pointercancel\", onPointerCancel);\n            capturePointer(endEvent, \"release\");\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            const isOutside = !upEvent.isTrusted\n                ? false\n                : checkOutside(upEvent, target instanceof Element\n                    ? target.getBoundingClientRect()\n                    : {\n                        left: 0,\n                        top: 0,\n                        right: window.innerWidth,\n                        bottom: window.innerHeight,\n                    });\n            if (isOutside) {\n                onPointerEnd(upEvent, false);\n            }\n            else {\n                onPointerEnd(upEvent, !(target instanceof Element) ||\n                    isNodeOrChild(target, upEvent.target));\n            }\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        target.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        target.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n        target.addEventListener(\"lostpointercapture\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        target = options.useGlobalTarget ? window : target;\n        let canAddKeyboardAccessibility = false;\n        if (target instanceof HTMLElement) {\n            canAddKeyboardAccessibility = true;\n            if (!isElementKeyboardAccessible(target) &&\n                target.getAttribute(\"tabindex\") === null) {\n                target.tabIndex = 0;\n            }\n        }\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (canAddKeyboardAccessibility) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n        }\n    });\n    return cancelEvents;\n}\nfunction checkOutside(event, rect) {\n    return (event.clientX < rect.left ||\n        event.clientX > rect.right ||\n        event.clientY < rect.top ||\n        event.clientY > rect.bottom);\n}\n\nexport { press };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","function capturePointer(event, action) {\n    const actionName = `${action}PointerCapture`;\n    if (event.target instanceof Element &&\n        actionName in event.target &&\n        event.pointerId !== undefined) {\n        try {\n            event.target[actionName](event.pointerId);\n        }\n        catch (e) { }\n    }\n}\n\nexport { capturePointer };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { memo } from '../../../../../motion-utils/dist/es/memo.mjs';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import '../../../../../motion-utils/dist/es/errors.mjs';\nimport { memo } from '../../../../../motion-utils/dist/es/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n"],"names":["ArrowRightToLine","d","key","ArrowRight","ChevronsLeftRight","CircleCheck","cx","cy","r","Dot","Ghost","Group","width","height","x","y","rx","HandPlatter","Link2","x1","x2","y1","y2","Package2","Plus","Wrench","value","animateSingleValue","keyframes","options","motionValue$1","start","animation","unsupportedEasingFunctions","anticipate","backInOut","circInOut","AcceleratedAnimation","constructor","super","name","motionValue","element","this","resolver","resolvedKeyframes","finalKeyframe","onKeyframesResolved","scheduleResolve","initPlayback","duration","times","ease","type","startTime","owner","current","onComplete","onUpdate","pregeneratedAnimation","sampleAnimation","repeat","delay","isGenerator","state","done","pregeneratedKeyframes","t","sample","push","undefined","pregenerateKeyframes","length","calcStartTime","pendingTimeline","onfinish","set","cancel","resolveFinishedPromise","resolved","time","currentTime","newTime","speed","playbackRate","newSpeed","playState","attachTimeline","timeline","_resolved","play","isStopped","updateFinishedPromise","pause","stop","sampleTime","setWithVelocity","onStop","complete","finish","supports","repeatDelay","repeatType","damping","HTMLElement","transformTemplate","getProps","has","BaseAnimation","autoplay","hasAttemptedResolve","createdAt","now","resolvedAt","velocity","resolvedAnimation","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","allowFlatten","Promise","generators","decay","inertia","tween","spring","percentToProgress","percent","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","KeyframeResolver$1","KeyframeResolver","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","reverse","calculatedDuration","resolvedDuration","totalDuration","mainThread","tick","timestamp","next","Math","min","round","timeWithoutDelay","isInDelayPhase","max","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","Boolean","isAnimationFinished","driver","hasChanged","isScheduled","resume","onPlay","_a","stopDriver","frameloopDriver","update","passTimestamp","isProcessing","acceleratedValues","Set","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","i","hasKeyframesChanged","startWaapiAnimation","valueName","keyframeOptions","offset","easing","Array","isArray","waapi","animate","fill","iterations","direction","finished","finally","isNotNull","getFinalKeyframe","filter","index","supportsWaapi","hasOwnProperty","call","Element","prototype","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","restDelta","restSpeed","origin","nearestBoundary","v","abs","amplitude","ideal","target","calcDelta","exp","calcLatest","applyFriction","delta","latest","timeReachedBoundary","spring$1","checkCatchBoundary","stiffness","hasUpdatedFrame","keyframeValues","easingFunctions","map","absoluteTimes","mapTimeToKeyframe","values","splice","springDefaults","mass","bounce","visualDuration","granular","default","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","s","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","a","b","calcAngularFreq","c","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","sqrt","durationKeys","physicsKeys","isSpringType","keys","some","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","animateMotionValue","transition","isHandoff","valueTransition","getVelocity","from","shouldSkip","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","getDefaultTransition","transitionEnd","animations","animationTypeState","animationState","getState","getValue","latestValues","valueTarget","window","MotionHandoffAnimation","appearId","shouldReduceMotion","all","animateVariant","variant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","definition","resolvedDefinition","optimizedAppearDataAttribute","getOptimisedAppearId","props","underDampedSpring","keyframesTransition","valueKey","startsWith","isAnimatable","test","isAnimationControls","isKeyframesTarget","isNone","isTransitionDefined","_delay","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","childRef","isPresent","parent","offsetParent","parentWidth","offsetWidth","sizeRef","offsetHeight","top","offsetTop","left","offsetLeft","right","componentDidUpdate","render","children","PopChild","anchorX","id","useId","ref","useRef","nonce","useContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","isComplete","context","useMemo","register","delete","random","_","Provider","Map","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","includes","join","exitingChildren","nextChildren","forceRender","L","Fragment","isEveryExitComplete","isExitComplete","usePresence","subscribe","useEffect","getChildKey","onlyElements","filtered","Children","isValidElement","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","useCreateMotionContext","variantLabelsAsDependency","prop","MotionContext","getCurrentTreeVariants","inherit","PresenceContext","SwitchLayoutGroupContext","backOut","backIn","circIn","acos","circOut","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","isEasingArray","easingLookup","linear","easingDefinitionToFunction","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","extractEventInfo","event","point","pageX","pageY","addPointerInfo","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","read","resolveKeyframes","preRender","postRender","processBatch","useManualTiming","performance","process","schedule","step","keepAlive","immediate","frame","cancelFrame","frameData","frameSteps","requestAnimationFrame","microtask","cancelMicrotask","queueMicrotask","stepsOrder","createRenderStep","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","queue","add","frameloop","clear","clearTime","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","originPoint","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","dragSnapToOrigin","panSession","onSessionStart","pauseAnimation","stopAnimation","onStart","info","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","axis","getAxisMotionValue","layout","measuredAxis","layoutBox","parseFloat","setActive","onMove","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","onSessionEnd","resumeAnimation","getAnimationState","getTransformPagePoint","contextWindow","startAnimation","onDragEnd","end","_point","shouldDrag","axisValue","dragConstraints","dragElastic","measure","prevConstraints","resolveRefConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","transform","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","translate","DragGesture","node","removeGroupControls","removeListeners","controls","mount","dragControls","unmount","applyConstraints","calcRelativeAxisConstraints","calcRelativeConstraints","bottom","calcViewportAxisConstraints","layoutAxis","constraintsAxis","calcViewportConstraints","calcOrigin","source","sourceLength","targetLength","rebaseAxisConstraints","relativeConstraints","defaultElastic","resolveDragElastic","resolveAxisElastic","minLabel","maxLabel","resolvePointElastic","label","FocusGesture","arguments","isActive","onFocus","isFocusVisible","matches","onBlur","handleHoverEvent","lifecycle","whileHover","HoverGesture","_element","startEvent","endEvent","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","handlePointerMove","transformPoint","handlePointerUp","onEnd","panInfo","initialInfo","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","Infinity","asyncHandler","PanGesture","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","handlePressEvent","HTMLButtonElement","disabled","whileTap","PressGesture","success","useGlobalTarget","globalTapTarget","Feature","isMounted","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","AnimationFeature","updateAnimationControlsSubscription","unmountControls","prevAnimate","reset","exit","featureProps","focus","hover","tap","pan","inView","featureDefinitions","isEnabled","ProjectionNode","MeasureLayout","gestureAnimations","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","defaultScaleCorrectors","group","didUpdate","setOptions","hasEverUpdated","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","loadFeatures","features","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","entry","isIntersecting","onViewportEnter","onViewportLeave","IntersectionObserver","prevViewport","hasViewportOptionChanged","observerCallbacks","observers","fireObserverCallback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","initIntersectionObserver","observe","unobserve","createRendererMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","_b","MotionComponent","externalRef","configAndProps","useLayoutId","visualState","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","motionComponentSymbol","Symbol","for","useMotionRef","instance","onMount","useVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","initialPromotionConfig","layoutScroll","layoutRoot","getClosestProjectingNode","alwaysMeasureLayout","animationType","createProjectionNode","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animateChanges","MotionHandoffMarkAsComplete","allowProjection","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","validMotionProps","isValidMotionProp","borders","numBorders","asNumber","isPx","px","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","opacity","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","rotate","radiusName","compress","convertBoundingBoxToBox","convertBoxToBoundingBox","transformBoxPoints","topLeft","bottomRight","copyAxisInto","originAxis","copyBoxInto","box","originBox","copyAxisDeltaInto","originDelta","scale","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","projectionDelta","display","scroll","transformBox","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","scaleX","originX","scaleY","originY","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","isNear","maxDistance","calcAxisDelta","calcBoxDelta","calcRelativeAxis","relative","calcRelativeBox","calcRelativeAxisPosition","calcRelativePosition","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","createDelta","createBox","isAxisDeltaZero","isDeltaZero","axisEquals","boxEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","DocumentProjectionNode","attachResizeListener","measureScroll","documentElement","scrollLeft","body","scrollTop","checkIsScrollRoot","rootProjectionNode","HTMLProjectionNode","defaultParent","documentNode","resetTransform","getComputedStyle","position","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","animationTarget","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","animationId","isTreeAnimating","isLayoutDirty","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isUpdating","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","addProjectionMetrics","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","depth","notifyListeners","args","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","hasAnimatedSinceResize","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","resumeFrom","resumingFrom","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","snapshot","measuredBox","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","scheduleRender","removeTransform","pageBox","measurePageBox","removeElementScroll","roundAxis","measureViewportBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","nodeBox","setTargetDelta","targetDelta","crossfade","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","prevProjectionDelta","createProjectionDeltas","hide","show","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","animationValues","completeAnimation","preserveOpacity","exitAnimationComplete","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","preserveFollowOpacity","shouldPreserveFollowOpacity","getPrevLead","prevLead","hasDistortingTransform","z","rotateX","rotateY","rotateZ","skewX","skewY","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","transformOrigin","correct","isCSSVariable","corrected","num","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","toLowerCase","roundPoint","globalProjectionState","NodeStack","indexOfNode","findIndex","member","pixelsToPercent","pixels","correctBorderRadius","correctBoxShadow","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","scaleCorrectors","addScaleCorrector","correctors","buildProjectionTransform","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","getBoundingClientRect","viewportBox","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","isVariantNode","isControllingVariants","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","manuallyAnimateOnMount","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","feature","valueIsTransform","onBindTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","handleChildMotionValue","getVariant","variants","getClosestVariantNode","closestVariantNode","addValue","existingValue","removeValue","unsubscribe","removeValueFromRenderState","hasValue","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","getBaseTarget","valueFromInitial","createMotionComponentFactory","forwardMotionProps","createMotionComponent","MotionDiv","DOMKeyframesResolver","unresolvedKeyframes","readKeyframes","keyframe","trim","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","createDomVisualElement","createUseRender","visualProps","u","filteredProps","elementProps","camelToDash","str","replace","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","match","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","shouldForward","isValidProp","require","filterProps","isDom","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","isSVGComponent","indexOf","isSVGElement","SVGElement","tagName","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","paddingLeft","paddingRight","paddingTop","paddingBottom","_bbox","translateX","translateY","getAnimatableNone","defaultValueType","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","dimensionValueTypes","vw","vh","findDimensionValueType","find","valueTypes","findValueType","getValueAsType","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","numberValueTypes","zIndex","fillOpacity","strokeOpacity","numOctaves","testValueType","transformValueTypes","scaleZ","skew","translateZ","perspective","originZ","auto","int","HTMLVisualElement","computedStyle","m","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","buildHTMLStyles","hasTransformOrigin","valueAsType","translateAlias","numTransforms","buildTransform","transformString","transformIsDefault","valueIsDefault","createHtmlRenderState","positionalKeys","transformPropOrder","transformProps","invalidTemplates","makeNoneKeyframesAnimatable","animatableTemplate","noneIndex","radToDeg","rad","angle","atan2","rebaseAngle","matrix2dParsers","atan","matrix3dParsers","defaultTransformValue","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","readTransformValue","renderHTML","setProperty","newValues","liveStyle","visualElementStore","SVGVisualElement","isSVGTag","updateDimensions","dimensions","defaultType","getAttribute","layoutProps","svgMotionConfig","needsMeasure","lowercaseSVGElements","useSVGProps","_isStatic","attrs","rawStyles","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","camelCaseAttributes","createSvgRenderState","tag","updateSVGDimensions","getBBox","dashKeys","array","camelKeys","buildSVGPath","spacing","useDashCase","renderSVG","_styleProp","setAttribute","charAt","substring","calcSVGTransformOrigin","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createState","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","prev","valueHasChanged","fallbackAnimation","initialTransition","fallbackTarget","shouldAnimate","setAnimateFunction","makeAnimator","createTypeState","whileInView","whileDrag","whileFocus","compareByDepth","FlatTree","isDirty","numVariantProps","getVariantContext","isVariantLabel","updateMotionValuesFromProps","nextValue","prevValue","hasAnimated","resolveVariant","getValueState","resolveVariantFromProps","setMotionValue","setTarget","variantPriorityOrder","variantProps","activeAnimations","statsBuffer","MotionGlobalConfig","addUniqueItem","arr","item","removeItem","clamp","timeout","checkElapsed","distance2D","xDelta","yDelta","getContextWindow","ownerDocument","defaultView","hueToRgb","q","hslaToRgba","hue","saturation","lightness","alpha","red","green","blue","interpolate","input","isClamp","mixer","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","isBrowser","isNumericalString","isRefObject","isZeroValueString","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","mixNumber","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","indexes","var","number","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mixImmediate","mix","invisibleValues","mixVisibility","defaultOffset","fillOffset","remaining","offsetProgress","convertOffsetToTimes","o","combineFunctions","pipe","transformers","initPrefersReducedMotion","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","prefersReducedMotion","hasReducedMotionListener","isCustomValue","toValue","resolveFinalValueInKeyframes","shallowCompare","prevLength","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","instantAnimationState","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","hex","parseInt","hsla","alpha$1","rgbUnit","clampRgbUnit","rgba","isColorString","testProp","splitColor","aName","bName","cName","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","complex","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","colorRegex","floatRegex","isNullish","sanitize","singleColorRegex","addValueToWillChange","isWillChangeMotionValue","isMotionValue","resolveMotionValue","unwrappedValue","BaseGroupPlaybackControls","runAll","getAll","propName","setAll","newValue","methodName","GroupPlaybackControls","onResolve","onReject","catch","maxGeneratorDuration","calcGeneratorDuration","getValueTransition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","generateLinearEasing","resolution","points","numPoints","isDragActive","setDragLock","isValidHover","pointerType","elementOrSelector","onHoverStart","elements","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isValidPressEvent","press","targetOrSelector","onPressStart","targets","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","isOutside","isTrusted","rect","innerWidth","innerHeight","clientX","clientY","cancelEvent","canAddKeyboardAccessibility","focusableElements","isElementKeyboardAccessible","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","isPrimary","bubbles","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","isPressing","capturePointer","action","actionName","pointerId","isNodeOrChild","parentElement","isPrimaryPointer","button","setupGesture","gestureAbortController","AbortController","signal","abort","isBezierDefinition","resolveElements","scope","selectorCache","EventTarget","querySelectorAll","supportsFlags","linearEasing","supportsLinearEasing","memoSupports","supportsFlag","memoized","supportsScrollTimeline","ScrollTimeline","warning","invariant","memo","noop","any","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds"],"sourceRoot":""}