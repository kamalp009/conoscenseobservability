{"version":3,"file":"vendors-node_modules_chart_js_dist_chart_mjs.fa090a3b989d4b143ddd.js","mappings":"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","sources":["webpack://frontend/./node_modules/chart.js/dist/chart.mjs"],"sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n"],"names":["animator","Animator","constructor","this","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","r","call","window","_update","Date","now","remaining","running","items","length","item","i","draw","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","c","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","_fn","_easing","e","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","d","animationOptions","Object","keys","animation","describe","_fallback","_indexable","_scriptable","name","colors","properties","numbers","resize","show","animations","visible","hide","v","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","key","option","_animateOptions","values","newOptions","options","$shared","assign","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","props","charAt","value","size","scaleClip","scale","allowedOverflow","opts","reverse","end","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","s","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","id","getStackKey","_top","_bottom","getFirstScaleId","scales","filter","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","x","y","xid","xAxisID","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","data","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","u","_dataCheck","adata","Array","convertObjectDataToArray","isExtensible","l","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","t","b","top","right","bottom","left","disabled","toClip","clip","defaultClip","elements","area","chartArea","drawActiveElementsOnTop","element","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","parent","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","cache","cacheKey","sharing","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","_","sort","a","getAllScaleValues","curr","_length","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","base","borderProps","enableBorderRadius","parseEdge","orig","v1","v2","startEnd","setInflateAmount","inflateAmount","ratio","defaults","prototype","BarController","iAxisKey","vAxisKey","obj","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","skipNull","val","isNaN","indexOf","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","overrides","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","plugins","tooltip","title","DoughnutController","innerRadius","outerRadius","offsetX","offsetY","getter","_getRotation","rotation","_getCircumference","circumference","_getRotationExtents","T","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","calcMin","maxX","maxY","H","minX","P","minY","getRatioAndOffset","maxWidth","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","descriptors","aspectRatio","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","onClick","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","slice","LineController","line","_dataset","animationsDisabled","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","directUpdate","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","fill","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","ret","defaultRoutes","formatters","numeric","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","format","logarithmic","pow","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","result","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","len","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","round","majorStart","majorEnd","bounds","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","callback","minor","align","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","getTickMarkLength","getTitleHeight","fallback","font","lineHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","setContext","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","margins","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","sqrt","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","j","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","string","gc","gcLen","garbageCollect","valueAt","idx","getValueForPixel","pixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","w","h","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","strokeColor","strokeWidth","backdrop","tickTextAlign","labelPadding","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","Error","itemDefaults","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","routeDefaults","registerDefaults","unregister","registry","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","interaction","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","intersect","lookupMethod","el","getRange","lo","hi","evaluateInteractionItems","handler","getIntersectItems","includeInvisible","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","pt1","pt2","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","setLayoutDims","layouts","params","wrap","stackWeight","includes","_stack","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","positions","margin","fitBoxes","boxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","node","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","currentDevicePixelRatio","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","proxy","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","local","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","toLowerCase","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","console","error","_proxy","warn","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","resolver","subPrefixes","getResolver","isScriptable","isIndexable","hasFunction","needContext","subResolver","descriptorDefaults","resolverCache","p","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","maintainAspectRatio","responsive","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","hover","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","lastEvent","determineLastEvent","onHover","invalidatePlugins","enumerable","clipArc","pixelMargin","angleMargin","closePath","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","PI","p8","outerStartX","outerStartY","outerEndX","outerEndY","borderJoinStyle","inner","lineJoin","fullCircles","drawFullCircleBorders","defineProperties","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","translate","drawArc","setStyle","lineCap","borderCapStyle","previous","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","tension","cubicInterpolationMode","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segments","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","capBezierPoints","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","rect","inflateRect","refRect","BarElement","addRectPath","cleanDecimatedDataset","defineProperty","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","pointCount","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","configurable","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","fillOption","parseFillOption","parseFloat","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtl","rtlHelper","hitbox","leftForLtr","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","textWidth","setWidth","lineDash","drawOptions","SQRT2","xPlus","yBoxTop","xBoxLeft","drawLegendBox","strikethrough","fillText","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","lines","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","cornerRadius","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","isFinite","relativeLabelSize","minSpacing","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","decimalPlaces","generateTicks$1","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","m","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","rotate","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","formatter","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sourceRoot":""}