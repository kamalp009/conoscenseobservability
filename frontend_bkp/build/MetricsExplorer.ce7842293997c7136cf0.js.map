{"version":3,"file":"MetricsExplorer.ce7842293997c7136cf0.js","mappings":"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","sources":["webpack://frontend/./src/api/metricsExplorer/getInspectMetricsDetails.ts","webpack://frontend/./src/api/metricsExplorer/getMetricDetails.ts","webpack://frontend/./src/api/metricsExplorer/getMetricsList.ts","webpack://frontend/./src/api/metricsExplorer/getMetricsTreeMap.ts","webpack://frontend/./src/api/metricsExplorer/updateMetricMetadata.ts","webpack://frontend/./src/container/MetricsExplorer/Explorer/Explorer.tsx","webpack://frontend/./src/container/MetricsExplorer/Explorer/QuerySection.tsx","webpack://frontend/./src/container/MetricsExplorer/Explorer/TimeSeries.tsx","webpack://frontend/./src/container/MetricsExplorer/Explorer/index.ts","webpack://frontend/./src/container/MetricsExplorer/Explorer/types.ts","webpack://frontend/./src/container/MetricsExplorer/Explorer/utils.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/ExpandedView.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/GraphPopover.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/GraphView.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/Inspect.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/QueryBuilder.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/Stepper.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/TableView.tsx","webpack://frontend/./src/container/MetricsExplorer/Inspect/constants.ts","webpack://frontend/./src/container/MetricsExplorer/Inspect/index.ts","webpack://frontend/./src/container/MetricsExplorer/Inspect/types.ts","webpack://frontend/./src/container/MetricsExplorer/Inspect/useInspectMetrics.ts","webpack://frontend/./src/container/MetricsExplorer/Inspect/utils.tsx","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/AllAttributes.tsx","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/DashboardsAndAlertsPopover.tsx","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/Metadata.tsx","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/MetricDetails.tsx","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/constants.ts","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/index.ts","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/utils.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/MetricNameSearch.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/MetricTypeSearch.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/MetricsSearch.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/MetricsTable.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/MetricsTreemap.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/Summary.tsx","webpack://frontend/./src/container/MetricsExplorer/Summary/constants.ts","webpack://frontend/./src/container/MetricsExplorer/Summary/index.ts","webpack://frontend/./src/container/MetricsExplorer/Summary/types.ts","webpack://frontend/./src/container/MetricsExplorer/Summary/utils.tsx","webpack://frontend/./src/container/TimeSeriesView/utils.ts","webpack://frontend/./src/container/TracesExplorer/QuerySection/styles.ts","webpack://frontend/./src/hooks/metricsExplorer/useGetInspectMetricsDetails.ts","webpack://frontend/./src/hooks/metricsExplorer/useGetMetricDetails.ts","webpack://frontend/./src/hooks/metricsExplorer/useGetMetricsList.ts","webpack://frontend/./src/hooks/metricsExplorer/useGetMetricsListFilterValues.ts","webpack://frontend/./src/hooks/metricsExplorer/useGetMetricsTreeMap.ts","webpack://frontend/./src/hooks/metricsExplorer/useUpdateMetricMetadata.ts","webpack://frontend/./src/pages/MetricsExplorer/MetricsExplorerPage.tsx","webpack://frontend/./src/pages/MetricsExplorer/constants.tsx","webpack://frontend/./src/pages/MetricsExplorer/index.ts","webpack://frontend/./src/container/MetricsExplorer/Explorer/Explorer.styles.scss","webpack://frontend/./src/container/MetricsExplorer/Inspect/Inspect.styles.scss","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/MetricDetails.styles.scss","webpack://frontend/./src/container/MetricsExplorer/Summary/Summary.styles.scss","webpack://frontend/./src/pages/MetricsExplorer/MetricsExplorerPage.styles.scss","webpack://frontend/./src/container/MetricsExplorer/Explorer/Explorer.styles.scss?3941","webpack://frontend/./src/container/MetricsExplorer/Inspect/Inspect.styles.scss?ac7a","webpack://frontend/./src/container/MetricsExplorer/MetricDetails/MetricDetails.styles.scss?712d","webpack://frontend/./src/container/MetricsExplorer/Summary/Summary.styles.scss?f25c","webpack://frontend/./src/pages/MetricsExplorer/MetricsExplorerPage.styles.scss?e496"],"sourcesContent":["import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\n\nexport interface InspectMetricsRequest {\n\tmetricName: string;\n\tstart: number;\n\tend: number;\n\tfilters: TagFilter;\n}\n\nexport interface InspectMetricsResponse {\n\tstatus: string;\n\tdata: {\n\t\tseries: InspectMetricsSeries[];\n\t};\n}\n\nexport interface InspectMetricsSeries {\n\ttitle?: string;\n\tstrokeColor?: string;\n\tlabels: Record<string, string>;\n\tlabelsArray: Array<Record<string, string>>;\n\tvalues: InspectMetricsTimestampValue[];\n}\n\ninterface InspectMetricsTimestampValue {\n\ttimestamp: number;\n\tvalue: string;\n}\n\nexport const getInspectMetricsDetails = async (\n\trequest: InspectMetricsRequest,\n\tsignal?: AbortSignal,\n\theaders?: Record<string, string>,\n): Promise<SuccessResponse<InspectMetricsResponse> | ErrorResponse> => {\n\ttry {\n\t\tconst response = await axios.post(`/metrics/inspect`, request, {\n\t\t\tsignal,\n\t\t\theaders,\n\t\t});\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: 'Success',\n\t\t\tpayload: response.data,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n","import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\nimport { MetricType } from './getMetricsList';\n\nexport interface MetricDetails {\n\tname: string;\n\tdescription: string;\n\ttype: string;\n\tunit: string;\n\ttimeseries: number;\n\tsamples: number;\n\ttimeSeriesTotal: number;\n\ttimeSeriesActive: number;\n\tlastReceived: string;\n\tattributes: MetricDetailsAttribute[] | null;\n\tmetadata?: {\n\t\tmetric_type: MetricType;\n\t\tdescription: string;\n\t\tunit: string;\n\t\ttemporality?: Temporality;\n\t};\n\talerts: MetricDetailsAlert[] | null;\n\tdashboards: MetricDetailsDashboard[] | null;\n}\n\nexport enum Temporality {\n\tCUMULATIVE = 'Cumulative',\n\tDELTA = 'Delta',\n}\n\nexport interface MetricDetailsAttribute {\n\tkey: string;\n\tvalue: string[];\n\tvalueCount: number;\n}\n\nexport interface MetricDetailsAlert {\n\talert_name: string;\n\talert_id: string;\n}\n\nexport interface MetricDetailsDashboard {\n\tdashboard_name: string;\n\tdashboard_id: string;\n}\n\nexport interface MetricDetailsResponse {\n\tstatus: string;\n\tdata: MetricDetails;\n}\n\nexport const getMetricDetails = async (\n\tmetricName: string,\n\tsignal?: AbortSignal,\n\theaders?: Record<string, string>,\n): Promise<SuccessResponse<MetricDetailsResponse> | ErrorResponse> => {\n\ttry {\n\t\tconst response = await axios.get(`/metrics/${metricName}/metadata`, {\n\t\t\tsignal,\n\t\t\theaders,\n\t\t});\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: 'Success',\n\t\t\tpayload: response.data,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n","import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport {\n\tOrderByPayload,\n\tTreemapViewType,\n} from 'container/MetricsExplorer/Summary/types';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { BaseAutocompleteData } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\n\nexport interface MetricsListPayload {\n\tfilters: TagFilter;\n\tgroupBy?: BaseAutocompleteData[];\n\toffset?: number;\n\tlimit?: number;\n\torderBy?: OrderByPayload;\n}\n\nexport enum MetricType {\n\tSUM = 'Sum',\n\tGAUGE = 'Gauge',\n\tHISTOGRAM = 'Histogram',\n\tSUMMARY = 'Summary',\n\tEXPONENTIAL_HISTOGRAM = 'ExponentialHistogram',\n}\n\nexport interface MetricsListItemData {\n\tmetric_name: string;\n\tdescription: string;\n\ttype: MetricType;\n\tunit: string;\n\t[TreemapViewType.TIMESERIES]: number;\n\t[TreemapViewType.SAMPLES]: number;\n\tlastReceived: string;\n}\n\nexport interface MetricsListResponse {\n\tstatus: string;\n\tdata: {\n\t\tmetrics: MetricsListItemData[];\n\t\ttotal?: number;\n\t};\n}\n\nexport const getMetricsList = async (\n\tprops: MetricsListPayload,\n\tsignal?: AbortSignal,\n\theaders?: Record<string, string>,\n): Promise<SuccessResponse<MetricsListResponse> | ErrorResponse> => {\n\ttry {\n\t\tconst response = await axios.post('/metrics', props, {\n\t\t\tsignal,\n\t\t\theaders,\n\t\t});\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: response.data.status,\n\t\t\tpayload: response.data,\n\t\t\tparams: props,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n","import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport { TreemapViewType } from 'container/MetricsExplorer/Summary/types';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\n\nexport interface MetricsTreeMapPayload {\n\tfilters: TagFilter;\n\tlimit?: number;\n\ttreemap?: TreemapViewType;\n}\n\nexport interface MetricsTreeMapResponse {\n\tstatus: string;\n\tdata: {\n\t\t[TreemapViewType.TIMESERIES]: TimeseriesData[];\n\t\t[TreemapViewType.SAMPLES]: SamplesData[];\n\t};\n}\n\nexport interface TimeseriesData {\n\tpercentage: number;\n\ttotal_value: number;\n\tmetric_name: string;\n}\n\nexport interface SamplesData {\n\tpercentage: number;\n\tmetric_name: string;\n}\n\nexport const getMetricsTreeMap = async (\n\tprops: MetricsTreeMapPayload,\n\tsignal?: AbortSignal,\n\theaders?: Record<string, string>,\n): Promise<SuccessResponse<MetricsTreeMapResponse> | ErrorResponse> => {\n\ttry {\n\t\tconst response = await axios.post('/metrics/treemap', props, {\n\t\t\tsignal,\n\t\t\theaders,\n\t\t});\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: response.data.status,\n\t\t\tpayload: response.data,\n\t\t\tparams: props,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n","import axios from 'api';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\nimport { Temporality } from './getMetricDetails';\nimport { MetricType } from './getMetricsList';\n\nexport interface UpdateMetricMetadataProps {\n\tdescription: string;\n\tmetricType: MetricType;\n\ttemporality?: Temporality;\n\tisMonotonic?: boolean;\n}\n\nexport interface UpdateMetricMetadataResponse {\n\tsuccess: boolean;\n\tmessage: string;\n}\n\nconst updateMetricMetadata = async (\n\tmetricName: string,\n\tprops: UpdateMetricMetadataProps,\n): Promise<SuccessResponse<UpdateMetricMetadataResponse> | ErrorResponse> => {\n\tconst response = await axios.post(`/metrics/${metricName}/metadata`, {\n\t\t...props,\n\t});\n\n\treturn {\n\t\tstatusCode: 200,\n\t\terror: null,\n\t\tmessage: response.data.status,\n\t\tpayload: response.data.data,\n\t};\n};\n\nexport default updateMetricMetadata;\n","import './Explorer.styles.scss';\n\nimport * as Sentry from '@sentry/react';\nimport { Switch } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { initialQueriesMap, PANEL_TYPES } from 'constants/queryBuilder';\nimport ExplorerOptionWrapper from 'container/ExplorerOptions/ExplorerOptionWrapper';\nimport RightToolbarActions from 'container/QueryBuilder/components/ToolbarActions/RightToolbarActions';\nimport DateTimeSelector from 'container/TopNav/DateTimeSelectionV2';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { useShareBuilderUrl } from 'hooks/queryBuilder/useShareBuilderUrl';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport ErrorBoundaryFallback from 'pages/ErrorBoundaryFallback/ErrorBoundaryFallback';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom-v5-compat';\nimport { Dashboard } from 'types/api/dashboard/getAll';\nimport { Query } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { generateExportToDashboardLink } from 'utils/dashboard/generateExportToDashboardLink';\nimport { v4 as uuid } from 'uuid';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport QuerySection from './QuerySection';\nimport TimeSeries from './TimeSeries';\nimport { ExplorerTabs } from './types';\nimport { splitQueryIntoOneChartPerQuery } from './utils';\n\nconst ONE_CHART_PER_QUERY_ENABLED_KEY = 'isOneChartPerQueryEnabled';\n\nfunction Explorer(): JSX.Element {\n\tconst {\n\t\thandleRunQuery,\n\t\tstagedQuery,\n\t\tupdateAllQueriesOperators,\n\t\tcurrentQuery,\n\t} = useQueryBuilder();\n\tconst { safeNavigate } = useSafeNavigate();\n\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst isOneChartPerQueryEnabled =\n\t\tsearchParams.get(ONE_CHART_PER_QUERY_ENABLED_KEY) === 'true';\n\n\tconst [showOneChartPerQuery, toggleShowOneChartPerQuery] = useState(\n\t\tisOneChartPerQueryEnabled,\n\t);\n\tconst [selectedTab] = useState<ExplorerTabs>(ExplorerTabs.TIME_SERIES);\n\n\tconst handleToggleShowOneChartPerQuery = (): void => {\n\t\ttoggleShowOneChartPerQuery(!showOneChartPerQuery);\n\t\tsetSearchParams({\n\t\t\t...Object.fromEntries(searchParams),\n\t\t\t[ONE_CHART_PER_QUERY_ENABLED_KEY]: (!showOneChartPerQuery).toString(),\n\t\t});\n\t};\n\n\tconst exportDefaultQuery = useMemo(\n\t\t() =>\n\t\t\tupdateAllQueriesOperators(\n\t\t\t\tcurrentQuery || initialQueriesMap[DataSource.METRICS],\n\t\t\t\tPANEL_TYPES.TIME_SERIES,\n\t\t\t\tDataSource.METRICS,\n\t\t\t),\n\t\t[currentQuery, updateAllQueriesOperators],\n\t);\n\n\tuseShareBuilderUrl(exportDefaultQuery);\n\n\tconst handleExport = useCallback(\n\t\t(\n\t\t\tdashboard: Dashboard | null,\n\t\t\t_isNewDashboard?: boolean,\n\t\t\tqueryToExport?: Query,\n\t\t): void => {\n\t\t\tif (!dashboard) return;\n\n\t\t\tconst widgetId = uuid();\n\n\t\t\tconst dashboardEditView = generateExportToDashboardLink({\n\t\t\t\tquery: queryToExport || exportDefaultQuery,\n\t\t\t\tpanelType: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tdashboardId: dashboard.id,\n\t\t\t\twidgetId,\n\t\t\t});\n\n\t\t\tsafeNavigate(dashboardEditView);\n\t\t},\n\t\t[exportDefaultQuery, safeNavigate],\n\t);\n\n\tconst splitedQueries = useMemo(\n\t\t() =>\n\t\t\tsplitQueryIntoOneChartPerQuery(\n\t\t\t\tstagedQuery || initialQueriesMap[DataSource.METRICS],\n\t\t\t),\n\t\t[stagedQuery],\n\t);\n\n\tuseEffect(() => {\n\t\tlogEvent(MetricsExplorerEvents.TabChanged, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'explorer',\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Sentry.ErrorBoundary fallback={<ErrorBoundaryFallback />}>\n\t\t\t<div className=\"metrics-explorer-explore-container\">\n\t\t\t\t<div className=\"explore-header\">\n\t\t\t\t\t<div className=\"explore-header-left-actions\">\n\t\t\t\t\t\t<span>1 chart/query</span>\n\t\t\t\t\t\t<Switch\n\t\t\t\t\t\t\tchecked={showOneChartPerQuery}\n\t\t\t\t\t\t\tonChange={handleToggleShowOneChartPerQuery}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"explore-header-right-actions\">\n\t\t\t\t\t\t<DateTimeSelector showAutoRefresh />\n\t\t\t\t\t\t<RightToolbarActions onStageRunQuery={handleRunQuery} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<QuerySection />\n\t\t\t\t{/* TODO: Enable once we have resolved all related metrics issues */}\n\t\t\t\t{/* <Button.Group className=\"explore-tabs\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvalue={ExplorerTabs.TIME_SERIES}\n\t\t\t\t\t\tclassName={classNames('tab', {\n\t\t\t\t\t\t\t'selected-view': selectedTab === ExplorerTabs.TIME_SERIES,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonClick={(): void => setSelectedTab(ExplorerTabs.TIME_SERIES)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography.Text>Time series</Typography.Text>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvalue={ExplorerTabs.RELATED_METRICS}\n\t\t\t\t\t\tclassName={classNames('tab', {\n\t\t\t\t\t\t\t'selected-view': selectedTab === ExplorerTabs.RELATED_METRICS,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonClick={(): void => setSelectedTab(ExplorerTabs.RELATED_METRICS)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography.Text>Related</Typography.Text>\n\t\t\t\t\t</Button>\n\t\t\t\t</Button.Group> */}\n\t\t\t\t<div className=\"explore-content\">\n\t\t\t\t\t{selectedTab === ExplorerTabs.TIME_SERIES && (\n\t\t\t\t\t\t<TimeSeries showOneChartPerQuery={showOneChartPerQuery} />\n\t\t\t\t\t)}\n\t\t\t\t\t{/* TODO: Enable once we have resolved all related metrics issues */}\n\t\t\t\t\t{/* {selectedTab === ExplorerTabs.RELATED_METRICS && (\n\t\t\t\t\t\t<RelatedMetrics metricNames={metricNames} />\n\t\t\t\t\t)} */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<ExplorerOptionWrapper\n\t\t\t\tdisabled={!stagedQuery}\n\t\t\t\tquery={exportDefaultQuery}\n\t\t\t\tsourcepage={DataSource.METRICS}\n\t\t\t\tonExport={handleExport}\n\t\t\t\tisOneChartPerQuery={showOneChartPerQuery}\n\t\t\t\tsplitedQueries={splitedQueries}\n\t\t\t/>\n\t\t</Sentry.ErrorBoundary>\n\t);\n}\n\nexport default Explorer;\n","import { Button } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport { QueryBuilder } from 'container/QueryBuilder';\nimport { ButtonWrapper } from 'container/TracesExplorer/QuerySection/styles';\nimport { useGetPanelTypesQueryParam } from 'hooks/queryBuilder/useGetPanelTypesQueryParam';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { DataSource } from 'types/common/queryBuilder';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\n\nfunction QuerySection(): JSX.Element {\n\tconst { handleRunQuery } = useQueryBuilder();\n\n\tconst panelTypes = useGetPanelTypesQueryParam(PANEL_TYPES.TIME_SERIES);\n\n\treturn (\n\t\t<div className=\"query-section\">\n\t\t\t<QueryBuilder\n\t\t\t\tpanelType={panelTypes}\n\t\t\t\tconfig={{ initialDataSource: DataSource.METRICS, queryVariant: 'static' }}\n\t\t\t\tversion=\"v4\"\n\t\t\t\tactions={\n\t\t\t\t\t<ButtonWrapper>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\thandleRunQuery();\n\t\t\t\t\t\t\t\tlogEvent(MetricsExplorerEvents.QueryBuilderQueryChanged, {\n\t\t\t\t\t\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'explorer',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRun Query\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonWrapper>\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default QuerySection;\n","import classNames from 'classnames';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport { initialQueriesMap, PANEL_TYPES } from 'constants/queryBuilder';\nimport { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport { BuilderUnitsFilter } from 'container/QueryBuilder/filters/BuilderUnitsFilter/BuilderUnits';\nimport TimeSeriesView from 'container/TimeSeriesView/TimeSeriesView';\nimport { convertDataValueToMs } from 'container/TimeSeriesView/utils';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { GetMetricQueryRange } from 'lib/dashboard/getQueryResults';\nimport { useMemo, useState } from 'react';\nimport { useQueries } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'store/reducers';\nimport { SuccessResponse } from 'types/api';\nimport { MetricRangePayloadProps } from 'types/api/metrics/getQueryRange';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { GlobalReducer } from 'types/reducer/globalTime';\n\nimport { TimeSeriesProps } from './types';\nimport { splitQueryIntoOneChartPerQuery } from './utils';\n\nfunction TimeSeries({ showOneChartPerQuery }: TimeSeriesProps): JSX.Element {\n\tconst { stagedQuery, currentQuery } = useQueryBuilder();\n\n\tconst { selectedTime: globalSelectedTime, maxTime, minTime } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\n\tconst isValidToConvertToMs = useMemo(() => {\n\t\tconst isValid: boolean[] = [];\n\n\t\tcurrentQuery.builder.queryData.forEach(\n\t\t\t({ aggregateAttribute, aggregateOperator }) => {\n\t\t\t\tconst isExistDurationNanoAttribute =\n\t\t\t\t\taggregateAttribute.key === 'durationNano' ||\n\t\t\t\t\taggregateAttribute.key === 'duration_nano';\n\n\t\t\t\tconst isCountOperator =\n\t\t\t\t\taggregateOperator === 'count' || aggregateOperator === 'count_distinct';\n\n\t\t\t\tisValid.push(!isCountOperator && isExistDurationNanoAttribute);\n\t\t\t},\n\t\t);\n\n\t\treturn isValid.every(Boolean);\n\t}, [currentQuery]);\n\n\tconst queryPayloads = useMemo(\n\t\t() =>\n\t\t\tshowOneChartPerQuery\n\t\t\t\t? splitQueryIntoOneChartPerQuery(\n\t\t\t\t\t\tstagedQuery || initialQueriesMap[DataSource.METRICS],\n\t\t\t\t  )\n\t\t\t\t: [stagedQuery || initialQueriesMap[DataSource.METRICS]],\n\t\t[showOneChartPerQuery, stagedQuery],\n\t);\n\n\tconst [yAxisUnit, setYAxisUnit] = useState<string>('');\n\n\tconst queries = useQueries(\n\t\tqueryPayloads.map((payload, index) => ({\n\t\t\tqueryKey: [\n\t\t\t\tREACT_QUERY_KEY.GET_QUERY_RANGE,\n\t\t\t\tpayload,\n\t\t\t\tENTITY_VERSION_V4,\n\t\t\t\tglobalSelectedTime,\n\t\t\t\tmaxTime,\n\t\t\t\tminTime,\n\t\t\t\tindex,\n\t\t\t],\n\t\t\tqueryFn: (): Promise<SuccessResponse<MetricRangePayloadProps>> =>\n\t\t\t\tGetMetricQueryRange(\n\t\t\t\t\t{\n\t\t\t\t\t\tquery: payload,\n\t\t\t\t\t\tgraphType: PANEL_TYPES.TIME_SERIES,\n\t\t\t\t\t\tselectedTime: 'GLOBAL_TIME',\n\t\t\t\t\t\tglobalSelectedInterval: globalSelectedTime,\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\tdataSource: DataSource.METRICS,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tENTITY_VERSION_V4,\n\t\t\t\t),\n\t\t\tenabled: !!payload,\n\t\t})),\n\t);\n\n\tconst data = useMemo(() => queries.map(({ data }) => data) ?? [], [queries]);\n\n\tconst responseData = useMemo(\n\t\t() =>\n\t\t\tdata.map((datapoint) =>\n\t\t\t\tisValidToConvertToMs ? convertDataValueToMs(datapoint) : datapoint,\n\t\t\t),\n\t\t[data, isValidToConvertToMs],\n\t);\n\n\tconst changeLayoutForOneChartPerQuery = useMemo(\n\t\t() => showOneChartPerQuery && queries.length > 1,\n\t\t[showOneChartPerQuery, queries],\n\t);\n\n\tconst onUnitChangeHandler = (value: string): void => {\n\t\tsetYAxisUnit(value);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<BuilderUnitsFilter onChange={onUnitChangeHandler} yAxisUnit={yAxisUnit} />\n\t\t\t<div\n\t\t\t\tclassName={classNames({\n\t\t\t\t\t'time-series-container': changeLayoutForOneChartPerQuery,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t{responseData.map((datapoint, index) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"time-series-view\"\n\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TimeSeriesView\n\t\t\t\t\t\t\tisFilterApplied={false}\n\t\t\t\t\t\t\tisError={queries[index].isError}\n\t\t\t\t\t\t\tisLoading={queries[index].isLoading}\n\t\t\t\t\t\t\tdata={datapoint}\n\t\t\t\t\t\t\tyAxisUnit={yAxisUnit}\n\t\t\t\t\t\t\tdataSource={DataSource.METRICS}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default TimeSeries;\n","import Explorer from './Explorer';\n\nexport default Explorer;\n","import { RelatedMetric } from 'api/metricsExplorer/getRelatedMetrics';\nimport { UseQueryResult } from 'react-query';\nimport { SuccessResponse } from 'types/api';\nimport { MetricRangePayloadProps } from 'types/api/metrics/getQueryRange';\n\nexport enum ExplorerTabs {\n\tTIME_SERIES = 'time-series',\n\tRELATED_METRICS = 'related-metrics',\n}\n\nexport interface TimeSeriesProps {\n\tshowOneChartPerQuery: boolean;\n}\n\nexport interface RelatedMetricsProps {\n\tmetricNames: string[];\n}\n\nexport interface RelatedMetricsCardProps {\n\tmetric: RelatedMetricWithQueryResult;\n}\n\nexport interface UseGetRelatedMetricsGraphsProps {\n\tselectedMetricName: string | null;\n\tstartMs: number;\n\tendMs: number;\n}\n\nexport interface UseGetRelatedMetricsGraphsReturn {\n\trelatedMetrics: RelatedMetricWithQueryResult[];\n\tisRelatedMetricsLoading: boolean;\n\tisRelatedMetricsError: boolean;\n}\n\nexport interface RelatedMetricWithQueryResult extends RelatedMetric {\n\tqueryResult: UseQueryResult<SuccessResponse<MetricRangePayloadProps>, unknown>;\n}\n","import { Query } from 'types/api/queryBuilder/queryBuilderData';\nimport { v4 as uuid } from 'uuid';\n\nexport const splitQueryIntoOneChartPerQuery = (query: Query): Query[] => {\n\tconst queries: Query[] = [];\n\n\tquery.builder.queryData.forEach((currentQuery) => {\n\t\tconst newQuery = {\n\t\t\t...query,\n\t\t\tid: uuid(),\n\t\t\tbuilder: {\n\t\t\t\t...query.builder,\n\t\t\t\tqueryData: [currentQuery],\n\t\t\t\tqueryFormulas: [],\n\t\t\t},\n\t\t};\n\t\tqueries.push(newQuery);\n\t});\n\n\tquery.builder.queryFormulas.forEach((currentFormula) => {\n\t\tconst newQuery = {\n\t\t\t...query,\n\t\t\tid: uuid(),\n\t\t\tbuilder: {\n\t\t\t\t...query.builder,\n\t\t\t\tqueryFormulas: [currentFormula],\n\t\t\t\tqueryData: query.builder.queryData.map((currentQuery) => ({\n\t\t\t\t\t...currentQuery,\n\t\t\t\t\tdisabled: true,\n\t\t\t\t})),\n\t\t\t},\n\t\t};\n\t\tqueries.push(newQuery);\n\t});\n\n\treturn queries;\n};\n","/* eslint-disable sonarjs/no-identical-functions */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { Color } from '@signozhq/design-tokens';\nimport { Card, Tooltip, Typography } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport logEvent from 'api/common/logEvent';\nimport { InspectMetricsSeries } from 'api/metricsExplorer/getInspectMetricsDetails';\nimport classNames from 'classnames';\nimport ResizeTable from 'components/ResizeTable/ResizeTable';\nimport { DataType } from 'container/LogDetailedView/TableView';\nimport { ArrowDownCircle, ArrowRightCircle, Focus } from 'lucide-react';\nimport { useEffect, useMemo, useState } from 'react';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport {\n\tSPACE_AGGREGATION_OPTIONS_FOR_EXPANDED_VIEW,\n\tTIME_AGGREGATION_OPTIONS,\n} from './constants';\nimport {\n\tExpandedViewProps,\n\tInspectionStep,\n\tSpaceAggregationOptions,\n\tTimeAggregationOptions,\n} from './types';\nimport {\n\tformatTimestampToFullDateTime,\n\tgetRawDataFromTimeSeries,\n\tgetSpaceAggregatedDataFromTimeSeries,\n} from './utils';\n\nfunction ExpandedView({\n\toptions,\n\tspaceAggregationSeriesMap,\n\tstep,\n\tmetricInspectionOptions,\n\ttimeAggregatedSeriesMap,\n}: ExpandedViewProps): JSX.Element {\n\tconst [\n\t\tselectedTimeSeries,\n\t\tsetSelectedTimeSeries,\n\t] = useState<InspectMetricsSeries | null>(null);\n\n\tuseEffect(() => {\n\t\tlogEvent(MetricsExplorerEvents.InspectPointClicked, {\n\t\t\t[MetricsExplorerEventKeys.Modal]: 'inspect',\n\t\t\t[MetricsExplorerEventKeys.Filters]: metricInspectionOptions.filters,\n\t\t\t[MetricsExplorerEventKeys.TimeAggregationInterval]:\n\t\t\t\tmetricInspectionOptions.timeAggregationInterval,\n\t\t\t[MetricsExplorerEventKeys.TimeAggregationOption]:\n\t\t\t\tmetricInspectionOptions.timeAggregationOption,\n\t\t\t[MetricsExplorerEventKeys.SpaceAggregationOption]:\n\t\t\t\tmetricInspectionOptions.spaceAggregationOption,\n\t\t\t[MetricsExplorerEventKeys.SpaceAggregationLabels]:\n\t\t\t\tmetricInspectionOptions.spaceAggregationLabels,\n\t\t});\n\t}, [metricInspectionOptions]);\n\n\tuseEffect(() => {\n\t\tif (step !== InspectionStep.COMPLETED) {\n\t\t\tsetSelectedTimeSeries(options?.timeSeries ?? null);\n\t\t} else {\n\t\t\tsetSelectedTimeSeries(null);\n\t\t}\n\t}, [step, options?.timeSeries]);\n\n\tconst spaceAggregatedData = useMemo(() => {\n\t\tif (\n\t\t\t!options?.timeSeries ||\n\t\t\t!options?.timestamp ||\n\t\t\tstep !== InspectionStep.COMPLETED\n\t\t) {\n\t\t\treturn [];\n\t\t}\n\t\treturn getSpaceAggregatedDataFromTimeSeries(\n\t\t\toptions?.timeSeries,\n\t\t\tspaceAggregationSeriesMap,\n\t\t\toptions?.timestamp,\n\t\t\ttrue,\n\t\t);\n\t}, [options?.timeSeries, options?.timestamp, spaceAggregationSeriesMap, step]);\n\n\tconst rawData = useMemo(() => {\n\t\tif (!selectedTimeSeries || !options?.timestamp) {\n\t\t\treturn [];\n\t\t}\n\t\treturn getRawDataFromTimeSeries(selectedTimeSeries, options?.timestamp, true);\n\t}, [selectedTimeSeries, options?.timestamp]);\n\n\tconst absoluteValue = useMemo(\n\t\t() =>\n\t\t\toptions?.timeSeries?.values.find(\n\t\t\t\t(value) => value.timestamp >= options?.timestamp,\n\t\t\t)?.value ?? options?.value,\n\t\t[options],\n\t);\n\n\tconst timeAggregatedData = useMemo(() => {\n\t\tif (step !== InspectionStep.SPACE_AGGREGATION || !options?.timestamp) {\n\t\t\treturn [];\n\t\t}\n\t\treturn (\n\t\t\ttimeAggregatedSeriesMap\n\t\t\t\t.get(options?.timestamp)\n\t\t\t\t?.filter(\n\t\t\t\t\t(popoverData) =>\n\t\t\t\t\t\tpopoverData.title && popoverData.title === options.timeSeries?.title,\n\t\t\t\t) ?? []\n\t\t);\n\t}, [\n\t\tstep,\n\t\toptions?.timestamp,\n\t\toptions?.timeSeries?.title,\n\t\ttimeAggregatedSeriesMap,\n\t]);\n\n\tconst tableData = useMemo(() => {\n\t\tif (!selectedTimeSeries) {\n\t\t\treturn [];\n\t\t}\n\t\treturn Object.entries(selectedTimeSeries.labels).map(([key, value]) => ({\n\t\t\tlabel: key,\n\t\t\tvalue,\n\t\t}));\n\t}, [selectedTimeSeries]);\n\n\tconst columns: ColumnsType<DataType> = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Label',\n\t\t\t\tdataIndex: 'label',\n\t\t\t\tkey: 'label',\n\t\t\t\twidth: 50,\n\t\t\t\talign: 'left',\n\t\t\t\tclassName: 'labels-key',\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Value',\n\t\t\t\tdataIndex: 'value',\n\t\t\t\tkey: 'value',\n\t\t\t\twidth: 50,\n\t\t\t\talign: 'left',\n\t\t\t\tellipsis: true,\n\t\t\t\tclassName: 'labels-value',\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\treturn (\n\t\t<div className=\"expanded-view\">\n\t\t\t<div className=\"expanded-view-header\">\n\t\t\t\t<Typography.Title level={5}>\n\t\t\t\t\t<Focus size={16} color={Color.BG_VANILLA_100} />\n\t\t\t\t\t<div>POINT INSPECTOR</div>\n\t\t\t\t</Typography.Title>\n\t\t\t</div>\n\t\t\t{/* Show only when space aggregation is completed */}\n\t\t\t{step === InspectionStep.COMPLETED && (\n\t\t\t\t<div className=\"graph-popover\">\n\t\t\t\t\t<Card className=\"graph-popover-card\" size=\"small\">\n\t\t\t\t\t\t{/* Header */}\n\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-header-text\">\n\t\t\t\t\t\t\t\t{formatTimestampToFullDateTime(options?.timestamp ?? 0)}\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text strong>\n\t\t\t\t\t\t\t\t{`${absoluteValue} is the ${\n\t\t\t\t\t\t\t\t\tSPACE_AGGREGATION_OPTIONS_FOR_EXPANDED_VIEW[\n\t\t\t\t\t\t\t\t\t\tmetricInspectionOptions.spaceAggregationOption ??\n\t\t\t\t\t\t\t\t\t\t\tSpaceAggregationOptions.SUM_BY\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t} of`}\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Table */}\n\t\t\t\t\t\t<div className=\"graph-popover-section\">\n\t\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-row-label\">\n\t\t\t\t\t\t\t\t\tVALUES\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t\t<div className=\"graph-popover-inner-row\">\n\t\t\t\t\t\t\t\t\t{spaceAggregatedData?.map(({ value, title, timestamp }) => (\n\t\t\t\t\t\t\t\t\t\t<Tooltip key={`${title}-${timestamp}-${value}`} title={value}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"graph-popover-cell\" data-testid=\"graph-popover-cell\">\n\t\t\t\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-row-label\">\n\t\t\t\t\t\t\t\t\tTIME SERIES\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t\t<div className=\"graph-popover-inner-row\">\n\t\t\t\t\t\t\t\t\t{spaceAggregatedData?.map(({ title, timeSeries }) => (\n\t\t\t\t\t\t\t\t\t\t<Tooltip key={title} title={title}>\n\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\tdata-testid=\"graph-popover-cell\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={classNames('graph-popover-cell', 'timeseries-cell', {\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected: title === selectedTimeSeries?.title,\n\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetSelectedTimeSeries(timeSeries ?? null);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t\t\t\t\t\t{selectedTimeSeries?.title === title ? (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowDownCircle color={Color.BG_FOREST_300} size={12} />\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ArrowRightCircle size={12} />\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* Show only for space aggregated or raw data */}\n\t\t\t{selectedTimeSeries && step !== InspectionStep.SPACE_AGGREGATION && (\n\t\t\t\t<div className=\"graph-popover\">\n\t\t\t\t\t<Card className=\"graph-popover-card\" size=\"small\">\n\t\t\t\t\t\t{/* Header */}\n\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t{step !== InspectionStep.COMPLETED && (\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-header-text\">\n\t\t\t\t\t\t\t\t\t{formatTimestampToFullDateTime(options?.timestamp ?? 0)}\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Typography.Text strong>\n\t\t\t\t\t\t\t\t{step === InspectionStep.COMPLETED\n\t\t\t\t\t\t\t\t\t? `${\n\t\t\t\t\t\t\t\t\t\t\tselectedTimeSeries?.values.find(\n\t\t\t\t\t\t\t\t\t\t\t\t(value) => value?.timestamp >= (options?.timestamp || 0),\n\t\t\t\t\t\t\t\t\t\t\t)?.value ?? options?.value\n\t\t\t\t\t\t\t\t\t  } is the ${\n\t\t\t\t\t\t\t\t\t\t\tTIME_AGGREGATION_OPTIONS[\n\t\t\t\t\t\t\t\t\t\t\t\tmetricInspectionOptions.timeAggregationOption ??\n\t\t\t\t\t\t\t\t\t\t\t\t\tTimeAggregationOptions.SUM\n\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t  } of`\n\t\t\t\t\t\t\t\t\t: selectedTimeSeries?.values.find(\n\t\t\t\t\t\t\t\t\t\t\t(value) => value?.timestamp >= (options?.timestamp || 0),\n\t\t\t\t\t\t\t\t\t  )?.value ?? options?.value}\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Table */}\n\t\t\t\t\t\t<div className=\"graph-popover-section\">\n\t\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-row-label\">\n\t\t\t\t\t\t\t\t\tRAW VALUES\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t\t<div className=\"graph-popover-inner-row\">\n\t\t\t\t\t\t\t\t\t{rawData?.map(({ value: rawValue, timestamp, title }) => (\n\t\t\t\t\t\t\t\t\t\t<Tooltip key={`${title}-${timestamp}-${rawValue}`} title={rawValue}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"graph-popover-cell\" data-testid=\"graph-popover-cell\">\n\t\t\t\t\t\t\t\t\t\t\t\t{rawValue}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-row-label\">\n\t\t\t\t\t\t\t\t\tTIMESTAMPS\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t\t<div className=\"graph-popover-inner-row\">\n\t\t\t\t\t\t\t\t\t{rawData?.map(({ timestamp }) => (\n\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\tkey={timestamp}\n\t\t\t\t\t\t\t\t\t\t\ttitle={formatTimestampToFullDateTime(timestamp ?? '', true)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"graph-popover-cell\" data-testid=\"graph-popover-cell\">\n\t\t\t\t\t\t\t\t\t\t\t\t{formatTimestampToFullDateTime(timestamp ?? '', true)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* Show raw values breakdown only for time aggregated data */}\n\t\t\t{selectedTimeSeries && step === InspectionStep.SPACE_AGGREGATION && (\n\t\t\t\t<div className=\"graph-popover\">\n\t\t\t\t\t<Card className=\"graph-popover-card\" size=\"small\">\n\t\t\t\t\t\t{/* Header */}\n\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-header-text\">\n\t\t\t\t\t\t\t\t{formatTimestampToFullDateTime(options?.timestamp ?? 0)}\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text strong>\n\t\t\t\t\t\t\t\t{`${absoluteValue} is the ${\n\t\t\t\t\t\t\t\t\tTIME_AGGREGATION_OPTIONS[\n\t\t\t\t\t\t\t\t\t\tmetricInspectionOptions.timeAggregationOption ??\n\t\t\t\t\t\t\t\t\t\t\tTimeAggregationOptions.SUM\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t} of`}\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{/* Table */}\n\t\t\t\t\t\t<div className=\"graph-popover-section\">\n\t\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-row-label\">\n\t\t\t\t\t\t\t\t\tRAW VALUES\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t\t<div className=\"graph-popover-inner-row\">\n\t\t\t\t\t\t\t\t\t{timeAggregatedData?.map(({ value, title, timestamp }) => (\n\t\t\t\t\t\t\t\t\t\t<Tooltip key={`${title}-${timestamp}-${value}`} title={value}>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"graph-popover-cell\" data-testid=\"graph-popover-cell\">\n\t\t\t\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"graph-popover-row\">\n\t\t\t\t\t\t\t\t<Typography.Text className=\"graph-popover-row-label\">\n\t\t\t\t\t\t\t\t\tTIMESTAMPS\n\t\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t\t<div className=\"graph-popover-inner-row\">\n\t\t\t\t\t\t\t\t\t{timeAggregatedData?.map(({ timestamp }) => (\n\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\tkey={timestamp}\n\t\t\t\t\t\t\t\t\t\t\ttitle={formatTimestampToFullDateTime(timestamp ?? '', true)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"graph-popover-cell\" data-testid=\"graph-popover-cell\">\n\t\t\t\t\t\t\t\t\t\t\t\t{formatTimestampToFullDateTime(timestamp ?? '', true)}\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Card>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{/* Labels */}\n\t\t\t{selectedTimeSeries && (\n\t\t\t\t<>\n\t\t\t\t\t<Typography.Title\n\t\t\t\t\t\tlevel={5}\n\t\t\t\t\t>{`${selectedTimeSeries?.title} Labels`}</Typography.Title>\n\t\t\t\t\t<ResizeTable\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttableLayout=\"fixed\"\n\t\t\t\t\t\tdataSource={tableData}\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\tscroll={{ y: 600 }}\n\t\t\t\t\t\tclassName=\"labels-table\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default ExpandedView;\n","import { Button, Card, Typography } from 'antd';\nimport { ArrowRight } from 'lucide-react';\nimport { useMemo } from 'react';\n\nimport { GraphPopoverProps } from './types';\nimport { formatTimestampToFullDateTime } from './utils';\n\nfunction GraphPopover({\n\toptions,\n\tpopoverRef,\n\topenInExpandedView,\n}: GraphPopoverProps): JSX.Element | null {\n\tconst { x, y, value, timestamp, timeSeries } = options || {\n\t\tx: 0,\n\t\ty: 0,\n\t\tvalue: 0,\n\t\ttimestamp: 0,\n\t\ttimeSeries: null,\n\t};\n\n\tconst closestTimestamp = useMemo(() => {\n\t\tif (!timeSeries) {\n\t\t\treturn timestamp;\n\t\t}\n\t\treturn timeSeries?.values.reduce((prev, curr) => {\n\t\t\tconst prevDiff = Math.abs(prev.timestamp - timestamp);\n\t\t\tconst currDiff = Math.abs(curr.timestamp - timestamp);\n\t\t\treturn prevDiff < currDiff ? prev : curr;\n\t\t}).timestamp;\n\t}, [timeSeries, timestamp]);\n\n\tconst closestValue = useMemo(() => {\n\t\tif (!timeSeries) {\n\t\t\treturn value;\n\t\t}\n\t\tconst index = timeSeries.values.findIndex(\n\t\t\t(value) => value.timestamp === closestTimestamp,\n\t\t);\n\t\treturn index !== undefined && index >= 0\n\t\t\t? timeSeries?.values[index].value\n\t\t\t: null;\n\t}, [timeSeries, closestTimestamp, value]);\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\ttop: y + 10,\n\t\t\t\tleft: x + 10,\n\t\t\t}}\n\t\t\tref={popoverRef}\n\t\t\tclassName=\"inspect-graph-popover\"\n\t\t>\n\t\t\t<Card className=\"inspect-graph-popover-content\" size=\"small\">\n\t\t\t\t<div className=\"inspect-graph-popover-row\">\n\t\t\t\t\t<Typography.Text type=\"secondary\">\n\t\t\t\t\t\t{formatTimestampToFullDateTime(closestTimestamp)}\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t<Typography.Text>{Number(closestValue).toFixed(2)}</Typography.Text>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inspect-graph-popover-button-row\">\n\t\t\t\t\t<Button size=\"small\" type=\"primary\" onClick={openInExpandedView}>\n\t\t\t\t\t\t<Typography.Text>View details</Typography.Text>\n\t\t\t\t\t\t<ArrowRight size={10} />\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default GraphPopover;\n","import { Color } from '@signozhq/design-tokens';\nimport { Button, Skeleton, Switch, Typography } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport Uplot from 'components/Uplot';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { useResizeObserver } from 'hooks/useDimensions';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { AppState } from 'store/reducers';\nimport { GlobalReducer } from 'types/reducer/globalTime';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport { formatNumberIntoHumanReadableFormat } from '../Summary/utils';\nimport { METRIC_TYPE_TO_COLOR_MAP, METRIC_TYPE_TO_ICON_MAP } from './constants';\nimport GraphPopover from './GraphPopover';\nimport TableView from './TableView';\nimport { GraphPopoverOptions, GraphViewProps } from './types';\nimport { HoverPopover, onGraphClick, onGraphHover } from './utils';\n\nfunction GraphView({\n\tinspectMetricsTimeSeries,\n\tformattedInspectMetricsTimeSeries,\n\tmetricUnit,\n\tmetricName,\n\tmetricType,\n\tspaceAggregationSeriesMap,\n\tinspectionStep,\n\tsetPopoverOptions,\n\tpopoverOptions,\n\tsetShowExpandedView,\n\tsetExpandedViewOptions,\n\tmetricInspectionOptions,\n\tisInspectMetricsRefetching,\n}: GraphViewProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\tconst graphRef = useRef<HTMLDivElement>(null);\n\tconst dimensions = useResizeObserver(graphRef);\n\tconst { maxTime, minTime } = useSelector<AppState, GlobalReducer>(\n\t\t(state) => state.globalTime,\n\t);\n\tconst start = useMemo(() => Math.floor(Number(minTime) / 1000000000), [\n\t\tminTime,\n\t]);\n\tconst end = useMemo(() => Math.floor(Number(maxTime) / 1000000000), [maxTime]);\n\tconst [showGraphPopover, setShowGraphPopover] = useState(false);\n\tconst [showHoverPopover, setShowHoverPopover] = useState(false);\n\tconst [\n\t\thoverPopoverOptions,\n\t\tsetHoverPopoverOptions,\n\t] = useState<GraphPopoverOptions | null>(null);\n\tconst [viewType, setViewType] = useState<'graph' | 'table'>('graph');\n\n\tconst popoverRef = useRef<HTMLDivElement>(null);\n\n\tuseEffect(() => {\n\t\tfunction handleClickOutside(event: MouseEvent): void {\n\t\t\tif (\n\t\t\t\tpopoverRef.current &&\n\t\t\t\t!popoverRef.current.contains(event.target as Node) &&\n\t\t\t\tgraphRef.current &&\n\t\t\t\t!graphRef.current.contains(event.target as Node)\n\t\t\t) {\n\t\t\t\tsetShowGraphPopover(false);\n\t\t\t}\n\t\t}\n\n\t\tdocument.addEventListener('mousedown', handleClickOutside);\n\t\treturn (): void => {\n\t\t\tdocument.removeEventListener('mousedown', handleClickOutside);\n\t\t};\n\t}, [popoverRef, graphRef]);\n\n\tconst options: uPlot.Options = useMemo(\n\t\t() => ({\n\t\t\twidth: dimensions.width,\n\t\t\theight: 500,\n\t\t\tlegend: {\n\t\t\t\tshow: false,\n\t\t\t},\n\t\t\taxes: [\n\t\t\t\t{\n\t\t\t\t\tstroke: isDarkMode ? Color.TEXT_VANILLA_400 : Color.BG_SLATE_400,\n\t\t\t\t\tgrid: {\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t},\n\t\t\t\t\tvalues: (_, vals): string[] =>\n\t\t\t\t\t\tvals.map((v) => {\n\t\t\t\t\t\t\tconst d = new Date(v);\n\t\t\t\t\t\t\tconst date = `${String(d.getDate()).padStart(2, '0')}/${String(\n\t\t\t\t\t\t\t\td.getMonth() + 1,\n\t\t\t\t\t\t\t).padStart(2, '0')}`;\n\t\t\t\t\t\t\tconst time = `${String(d.getHours()).padStart(2, '0')}:${String(\n\t\t\t\t\t\t\t\td.getMinutes(),\n\t\t\t\t\t\t\t).padStart(2, '0')}:${String(d.getSeconds()).padStart(2, '0')}`;\n\t\t\t\t\t\t\treturn `${date}\\n${time}`; // two-line label\n\t\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: metricUnit || '',\n\t\t\t\t\tstroke: isDarkMode ? Color.TEXT_VANILLA_400 : Color.BG_SLATE_400,\n\t\t\t\t\tgrid: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tstroke: isDarkMode ? Color.BG_SLATE_500 : Color.BG_SLATE_200,\n\t\t\t\t\t},\n\t\t\t\t\tvalues: (_, vals): string[] =>\n\t\t\t\t\t\tvals.map((v) => formatNumberIntoHumanReadableFormat(v, false)),\n\t\t\t\t},\n\t\t\t],\n\t\t\tseries: [\n\t\t\t\t{ label: 'Time' }, // This config is required as a placeholder for x-axis,\n\t\t\t\t...formattedInspectMetricsTimeSeries.slice(1).map((_, index) => ({\n\t\t\t\t\tdrawStyle: 'line',\n\t\t\t\t\tlineInterpolation: 'spline',\n\t\t\t\t\tshow: true,\n\t\t\t\t\tlabel: String.fromCharCode(65 + (index % 26)),\n\t\t\t\t\tstroke: inspectMetricsTimeSeries[index]?.strokeColor,\n\t\t\t\t\twidth: 2,\n\t\t\t\t\tspanGaps: true,\n\t\t\t\t\tpoints: {\n\t\t\t\t\t\tsize: 5,\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\tstroke: inspectMetricsTimeSeries[index]?.strokeColor,\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tx: {\n\t\t\t\t\t\t\tmin: start,\n\t\t\t\t\t\t\tmax: end,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t],\n\t\t\thooks: {\n\t\t\t\tready: [\n\t\t\t\t\t(u: uPlot): void => {\n\t\t\t\t\t\tu.over.addEventListener('click', (e) => {\n\t\t\t\t\t\t\tonGraphClick(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\tpopoverRef,\n\t\t\t\t\t\t\t\tsetPopoverOptions,\n\t\t\t\t\t\t\t\tinspectMetricsTimeSeries,\n\t\t\t\t\t\t\t\tshowGraphPopover,\n\t\t\t\t\t\t\t\tsetShowGraphPopover,\n\t\t\t\t\t\t\t\tformattedInspectMetricsTimeSeries,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tu.over.addEventListener('mousemove', (e) => {\n\t\t\t\t\t\t\tonGraphHover(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tu,\n\t\t\t\t\t\t\t\tsetHoverPopoverOptions,\n\t\t\t\t\t\t\t\tinspectMetricsTimeSeries,\n\t\t\t\t\t\t\t\tformattedInspectMetricsTimeSeries,\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tu.over.addEventListener('mouseenter', () => {\n\t\t\t\t\t\t\tsetShowHoverPopover(true);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tu.over.addEventListener('mouseleave', () => {\n\t\t\t\t\t\t\tsetShowHoverPopover(false);\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t}),\n\t\t[\n\t\t\tdimensions.width,\n\t\t\tisDarkMode,\n\t\t\tmetricUnit,\n\t\t\tformattedInspectMetricsTimeSeries,\n\t\t\tinspectMetricsTimeSeries,\n\t\t\tstart,\n\t\t\tend,\n\t\t\tsetPopoverOptions,\n\t\t\tshowGraphPopover,\n\t\t],\n\t);\n\n\tconst MetricTypeIcon = metricType ? METRIC_TYPE_TO_ICON_MAP[metricType] : null;\n\n\treturn (\n\t\t<div className=\"inspect-metrics-graph-view\" ref={graphRef}>\n\t\t\t<div className=\"inspect-metrics-graph-view-header\">\n\t\t\t\t<Button.Group>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"metric-name-button-label\"\n\t\t\t\t\t\tsize=\"middle\"\n\t\t\t\t\t\ticon={\n\t\t\t\t\t\t\tMetricTypeIcon && metricType ? (\n\t\t\t\t\t\t\t\t<MetricTypeIcon\n\t\t\t\t\t\t\t\t\tsize={14}\n\t\t\t\t\t\t\t\t\tcolor={METRIC_TYPE_TO_COLOR_MAP[metricType]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) : null\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t>\n\t\t\t\t\t\t{metricName}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button className=\"time-series-button-label\" size=\"middle\" disabled>\n\t\t\t\t\t\t{/* First time series in that of timestamps. Hence -1 */}\n\t\t\t\t\t\t{`${formattedInspectMetricsTimeSeries.length - 1} time series`}\n\t\t\t\t\t</Button>\n\t\t\t\t</Button.Group>\n\t\t\t\t<div className=\"view-toggle-button\">\n\t\t\t\t\t<Switch\n\t\t\t\t\t\tchecked={viewType === 'graph'}\n\t\t\t\t\t\tonChange={(checked): void => {\n\t\t\t\t\t\t\tconst newViewType = checked ? 'graph' : 'table';\n\t\t\t\t\t\t\tsetViewType(newViewType);\n\t\t\t\t\t\t\tlogEvent(MetricsExplorerEvents.InspectViewChanged, {\n\t\t\t\t\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'inspect',\n\t\t\t\t\t\t\t\t[MetricsExplorerEventKeys.InspectView]: newViewType,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<Typography.Text>\n\t\t\t\t\t\t{viewType === 'graph' ? 'Graph View' : 'Table View'}\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"graph-view-container\">\n\t\t\t\t{viewType === 'graph' &&\n\t\t\t\t\t(isInspectMetricsRefetching ? (\n\t\t\t\t\t\t<Skeleton active />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Uplot data={formattedInspectMetricsTimeSeries} options={options} />\n\t\t\t\t\t))}\n\n\t\t\t\t{viewType === 'table' && (\n\t\t\t\t\t<TableView\n\t\t\t\t\t\tinspectionStep={inspectionStep}\n\t\t\t\t\t\tinspectMetricsTimeSeries={inspectMetricsTimeSeries}\n\t\t\t\t\t\tsetShowExpandedView={setShowExpandedView}\n\t\t\t\t\t\tsetExpandedViewOptions={setExpandedViewOptions}\n\t\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t\t\tisInspectMetricsRefetching={isInspectMetricsRefetching}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{showGraphPopover && (\n\t\t\t\t<GraphPopover\n\t\t\t\t\toptions={popoverOptions}\n\t\t\t\t\tspaceAggregationSeriesMap={spaceAggregationSeriesMap}\n\t\t\t\t\tpopoverRef={popoverRef}\n\t\t\t\t\tstep={inspectionStep}\n\t\t\t\t\topenInExpandedView={(): void => {\n\t\t\t\t\t\tsetShowGraphPopover(false);\n\t\t\t\t\t\tsetShowExpandedView(true);\n\t\t\t\t\t\tsetExpandedViewOptions(popoverOptions);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{showHoverPopover && !showGraphPopover && hoverPopoverOptions && (\n\t\t\t\t<HoverPopover\n\t\t\t\t\toptions={hoverPopoverOptions}\n\t\t\t\t\tstep={inspectionStep}\n\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default GraphView;\n","import './Inspect.styles.scss';\n\nimport * as Sentry from '@sentry/react';\nimport { Color } from '@signozhq/design-tokens';\nimport { Button, Drawer, Empty, Skeleton, Typography } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { useGetMetricDetails } from 'hooks/metricsExplorer/useGetMetricDetails';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { useQueryOperations } from 'hooks/queryBuilder/useQueryBuilderOperations';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { Compass } from 'lucide-react';\nimport ErrorBoundaryFallback from 'pages/ErrorBoundaryFallback/ErrorBoundaryFallback';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport ExpandedView from './ExpandedView';\nimport GraphView from './GraphView';\nimport QueryBuilder from './QueryBuilder';\nimport Stepper from './Stepper';\nimport {\n\tGraphPopoverOptions,\n\tInspectProps,\n\tMetricInspectionAction,\n} from './types';\nimport { useInspectMetrics } from './useInspectMetrics';\n\nfunction Inspect({\n\tmetricName: defaultMetricName,\n\tisOpen,\n\tonClose,\n}: InspectProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\tconst [metricName, setMetricName] = useState<string | null>(defaultMetricName);\n\tconst [\n\t\tpopoverOptions,\n\t\tsetPopoverOptions,\n\t] = useState<GraphPopoverOptions | null>(null);\n\tconst [\n\t\texpandedViewOptions,\n\t\tsetExpandedViewOptions,\n\t] = useState<GraphPopoverOptions | null>(null);\n\tconst [showExpandedView, setShowExpandedView] = useState(false);\n\n\tconst { data: metricDetailsData } = useGetMetricDetails(metricName ?? '', {\n\t\tenabled: !!metricName,\n\t});\n\n\tconst { currentQuery } = useQueryBuilder();\n\tconst { handleChangeQueryData } = useQueryOperations({\n\t\tindex: 0,\n\t\tquery: currentQuery.builder.queryData[0],\n\t\tentityVersion: '',\n\t});\n\n\tconst updatedCurrentQuery = useMemo(\n\t\t() => ({\n\t\t\t...currentQuery,\n\t\t\tbuilder: {\n\t\t\t\t...currentQuery.builder,\n\t\t\t\tqueryData: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...currentQuery.builder.queryData[0],\n\t\t\t\t\t\taggregateOperator: 'noop',\n\t\t\t\t\t\taggregateAttribute: {\n\t\t\t\t\t\t\t...currentQuery.builder.queryData[0].aggregateAttribute,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t}),\n\t\t[currentQuery],\n\t);\n\n\tconst searchQuery = updatedCurrentQuery?.builder?.queryData[0] || null;\n\n\tuseEffect(() => {\n\t\thandleChangeQueryData('filters', {\n\t\t\top: 'AND',\n\t\t\titems: [],\n\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst {\n\t\tinspectMetricsTimeSeries,\n\t\tinspectMetricsStatusCode,\n\t\tisInspectMetricsLoading,\n\t\tisInspectMetricsError,\n\t\tformattedInspectMetricsTimeSeries,\n\t\tspaceAggregationLabels,\n\t\tmetricInspectionOptions,\n\t\tdispatchMetricInspectionOptions,\n\t\tinspectionStep,\n\t\tisInspectMetricsRefetching,\n\t\tspaceAggregatedSeriesMap: spaceAggregationSeriesMap,\n\t\taggregatedTimeSeries,\n\t\ttimeAggregatedSeriesMap,\n\t\treset,\n\t} = useInspectMetrics(metricName);\n\n\tconst handleDispatchMetricInspectionOptions = useCallback(\n\t\t(action: MetricInspectionAction): void => {\n\t\t\tdispatchMetricInspectionOptions(action);\n\t\t\tlogEvent(MetricsExplorerEvents.InspectQueryChanged, {\n\t\t\t\t[MetricsExplorerEventKeys.Modal]: 'inspect',\n\t\t\t\t[MetricsExplorerEventKeys.Filters]: metricInspectionOptions.filters,\n\t\t\t\t[MetricsExplorerEventKeys.TimeAggregationInterval]:\n\t\t\t\t\tmetricInspectionOptions.timeAggregationInterval,\n\t\t\t\t[MetricsExplorerEventKeys.TimeAggregationOption]:\n\t\t\t\t\tmetricInspectionOptions.timeAggregationOption,\n\t\t\t\t[MetricsExplorerEventKeys.SpaceAggregationOption]:\n\t\t\t\t\tmetricInspectionOptions.spaceAggregationOption,\n\t\t\t\t[MetricsExplorerEventKeys.SpaceAggregationLabels]:\n\t\t\t\t\tmetricInspectionOptions.spaceAggregationLabels,\n\t\t\t});\n\t\t},\n\t\t[dispatchMetricInspectionOptions, metricInspectionOptions],\n\t);\n\n\tconst selectedMetricType = useMemo(\n\t\t() => metricDetailsData?.payload?.data?.metadata?.metric_type,\n\t\t[metricDetailsData],\n\t);\n\n\tconst selectedMetricUnit = useMemo(\n\t\t() => metricDetailsData?.payload?.data?.metadata?.unit,\n\t\t[metricDetailsData],\n\t);\n\n\tconst resetInspection = useCallback(() => {\n\t\tsetShowExpandedView(false);\n\t\tsetPopoverOptions(null);\n\t\tsetExpandedViewOptions(null);\n\t\treset();\n\t}, [reset]);\n\n\t// Reset inspection when the selected metric changes\n\tuseEffect(() => {\n\t\tresetInspection();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [metricName]);\n\n\t// Hide expanded view whenever inspection step changes\n\tuseEffect(() => {\n\t\tsetShowExpandedView(false);\n\t\tsetExpandedViewOptions(null);\n\t}, [inspectionStep]);\n\n\tconst content = useMemo(() => {\n\t\tif (isInspectMetricsLoading && !isInspectMetricsRefetching) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tdata-testid=\"inspect-metrics-loading\"\n\t\t\t\t\tclassName=\"inspect-metrics-fallback\"\n\t\t\t\t>\n\t\t\t\t\t<Skeleton active />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (isInspectMetricsError || inspectMetricsStatusCode !== 200) {\n\t\t\tconst errorMessage =\n\t\t\t\tinspectMetricsStatusCode === 400\n\t\t\t\t\t? 'The time range is too large. Please modify it to be within 30 minutes.'\n\t\t\t\t\t: 'Error loading inspect metrics.';\n\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tdata-testid=\"inspect-metrics-error\"\n\t\t\t\t\tclassName=\"inspect-metrics-fallback\"\n\t\t\t\t>\n\t\t\t\t\t<Empty description={errorMessage} />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tif (!inspectMetricsTimeSeries.length) {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tdata-testid=\"inspect-metrics-empty\"\n\t\t\t\t\tclassName=\"inspect-metrics-fallback\"\n\t\t\t\t>\n\t\t\t\t\t<Empty description=\"No time series found for this metric to inspect.\" />\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"inspect-metrics-content\">\n\t\t\t\t<div className=\"inspect-metrics-content-first-col\">\n\t\t\t\t\t<GraphView\n\t\t\t\t\t\tinspectMetricsTimeSeries={aggregatedTimeSeries}\n\t\t\t\t\t\tformattedInspectMetricsTimeSeries={formattedInspectMetricsTimeSeries}\n\t\t\t\t\t\tresetInspection={resetInspection}\n\t\t\t\t\t\tmetricName={metricName}\n\t\t\t\t\t\tmetricUnit={selectedMetricUnit}\n\t\t\t\t\t\tmetricType={selectedMetricType}\n\t\t\t\t\t\tspaceAggregationSeriesMap={spaceAggregationSeriesMap}\n\t\t\t\t\t\tinspectionStep={inspectionStep}\n\t\t\t\t\t\tsetPopoverOptions={setPopoverOptions}\n\t\t\t\t\t\tsetShowExpandedView={setShowExpandedView}\n\t\t\t\t\t\tshowExpandedView={showExpandedView}\n\t\t\t\t\t\tsetExpandedViewOptions={setExpandedViewOptions}\n\t\t\t\t\t\tpopoverOptions={popoverOptions}\n\t\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t\t\tisInspectMetricsRefetching={isInspectMetricsRefetching}\n\t\t\t\t\t/>\n\t\t\t\t\t<QueryBuilder\n\t\t\t\t\t\tmetricName={metricName}\n\t\t\t\t\t\tmetricType={selectedMetricType}\n\t\t\t\t\t\tsetMetricName={setMetricName}\n\t\t\t\t\t\tspaceAggregationLabels={spaceAggregationLabels}\n\t\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t\t\tdispatchMetricInspectionOptions={handleDispatchMetricInspectionOptions}\n\t\t\t\t\t\tinspectionStep={inspectionStep}\n\t\t\t\t\t\tinspectMetricsTimeSeries={inspectMetricsTimeSeries}\n\t\t\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inspect-metrics-content-second-col\">\n\t\t\t\t\t<Stepper\n\t\t\t\t\t\tinspectionStep={inspectionStep}\n\t\t\t\t\t\tresetInspection={resetInspection}\n\t\t\t\t\t/>\n\t\t\t\t\t{showExpandedView && (\n\t\t\t\t\t\t<ExpandedView\n\t\t\t\t\t\t\toptions={expandedViewOptions}\n\t\t\t\t\t\t\tspaceAggregationSeriesMap={spaceAggregationSeriesMap}\n\t\t\t\t\t\t\tstep={inspectionStep}\n\t\t\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t\t\t\ttimeAggregatedSeriesMap={timeAggregatedSeriesMap}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}, [\n\t\tisInspectMetricsLoading,\n\t\tisInspectMetricsRefetching,\n\t\tisInspectMetricsError,\n\t\tinspectMetricsStatusCode,\n\t\tinspectMetricsTimeSeries,\n\t\taggregatedTimeSeries,\n\t\tformattedInspectMetricsTimeSeries,\n\t\tresetInspection,\n\t\tmetricName,\n\t\tselectedMetricUnit,\n\t\tselectedMetricType,\n\t\tspaceAggregationSeriesMap,\n\t\tinspectionStep,\n\t\tshowExpandedView,\n\t\tpopoverOptions,\n\t\tmetricInspectionOptions,\n\t\tspaceAggregationLabels,\n\t\thandleDispatchMetricInspectionOptions,\n\t\tsearchQuery,\n\t\texpandedViewOptions,\n\t\ttimeAggregatedSeriesMap,\n\t]);\n\n\tuseEffect(() => {\n\t\tlogEvent(MetricsExplorerEvents.ModalOpened, {\n\t\t\t[MetricsExplorerEventKeys.Modal]: 'inspect',\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Sentry.ErrorBoundary fallback={<ErrorBoundaryFallback />}>\n\t\t\t<Drawer\n\t\t\t\twidth=\"100%\"\n\t\t\t\ttitle={\n\t\t\t\t\t<div className=\"inspect-metrics-title\">\n\t\t\t\t\t\t<Typography.Text>Metrics Explorer —</Typography.Text>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"inspect-metrics-button\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\ticon={<Compass size={14} />}\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tInspect Metric\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\topen={isOpen}\n\t\t\t\tonClose={onClose}\n\t\t\t\tstyle={{\n\t\t\t\t\toverscrollBehavior: 'contain',\n\t\t\t\t\tbackground: isDarkMode ? Color.BG_INK_400 : Color.BG_VANILLA_100,\n\t\t\t\t}}\n\t\t\t\tclassName=\"inspect-metrics-modal\"\n\t\t\t\tdestroyOnClose\n\t\t\t>\n\t\t\t\t{content}\n\t\t\t</Drawer>\n\t\t</Sentry.ErrorBoundary>\n\t);\n}\n\nexport default Inspect;\n","import { Button, Card } from 'antd';\nimport { Atom } from 'lucide-react';\n\nimport { QueryBuilderProps } from './types';\nimport {\n\tMetricFilters,\n\tMetricNameSearch,\n\tMetricSpaceAggregation,\n\tMetricTimeAggregation,\n} from './utils';\n\nfunction QueryBuilder({\n\tmetricName,\n\tsetMetricName,\n\tspaceAggregationLabels,\n\tmetricInspectionOptions,\n\tdispatchMetricInspectionOptions,\n\tinspectionStep,\n\tinspectMetricsTimeSeries,\n\tsearchQuery,\n\tmetricType,\n}: QueryBuilderProps): JSX.Element {\n\treturn (\n\t\t<div className=\"inspect-metrics-query-builder\">\n\t\t\t<div className=\"inspect-metrics-query-builder-header\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"query-builder-button-label\"\n\t\t\t\t\tsize=\"middle\"\n\t\t\t\t\ticon={<Atom size={14} />}\n\t\t\t\t\tdisabled\n\t\t\t\t>\n\t\t\t\t\tQuery Builder\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<Card className=\"inspect-metrics-query-builder-content\">\n\t\t\t\t<MetricNameSearch metricName={metricName} setMetricName={setMetricName} />\n\t\t\t\t<MetricFilters\n\t\t\t\t\tdispatchMetricInspectionOptions={dispatchMetricInspectionOptions}\n\t\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\t\tmetricName={metricName}\n\t\t\t\t\tmetricType={metricType || null}\n\t\t\t\t/>\n\t\t\t\t<MetricTimeAggregation\n\t\t\t\t\tinspectionStep={inspectionStep}\n\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t\tdispatchMetricInspectionOptions={dispatchMetricInspectionOptions}\n\t\t\t\t\tinspectMetricsTimeSeries={inspectMetricsTimeSeries}\n\t\t\t\t/>\n\t\t\t\t<MetricSpaceAggregation\n\t\t\t\t\tinspectionStep={inspectionStep}\n\t\t\t\t\tspaceAggregationLabels={spaceAggregationLabels}\n\t\t\t\t\tmetricInspectionOptions={metricInspectionOptions}\n\t\t\t\t\tdispatchMetricInspectionOptions={dispatchMetricInspectionOptions}\n\t\t\t\t/>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default QueryBuilder;\n","import '../../Home/HomeChecklist/HomeChecklist.styles.scss';\n\nimport { Color } from '@signozhq/design-tokens';\nimport { Button, Typography } from 'antd';\nimport classNames from 'classnames';\nimport { ArrowUpRightFromSquare, RefreshCcw } from 'lucide-react';\n\nimport { SPACE_AGGREGATION_LINK, TEMPORAL_AGGREGATION_LINK } from './constants';\nimport { InspectionStep, StepperProps } from './types';\n\nfunction Stepper({\n\tinspectionStep,\n\tresetInspection,\n}: StepperProps): JSX.Element {\n\treturn (\n\t\t<div className=\"home-checklist-container\">\n\t\t\t<div className=\"home-checklist-title\">\n\t\t\t\t<Typography.Text>\n\t\t\t\t\t👋 Hello, welcome to the Metrics Inspector\n\t\t\t\t</Typography.Text>\n\t\t\t\t<Typography.Text>Let’s get you started...</Typography.Text>\n\t\t\t</div>\n\t\t\t<div className=\"completed-checklist-container whats-next-checklist-container\">\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t'completed-checklist-item':\n\t\t\t\t\t\t\tinspectionStep > InspectionStep.TIME_AGGREGATION,\n\t\t\t\t\t\t'whats-next-checklist-item':\n\t\t\t\t\t\t\tinspectionStep <= InspectionStep.TIME_AGGREGATION,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t'completed-checklist-item-title':\n\t\t\t\t\t\t\t\tinspectionStep > InspectionStep.TIME_AGGREGATION,\n\t\t\t\t\t\t\t'whats-next-checklist-item-title':\n\t\t\t\t\t\t\t\tinspectionStep <= InspectionStep.TIME_AGGREGATION,\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\tFirst, align the data by selecting a{' '}\n\t\t\t\t\t\t<Typography.Link href={TEMPORAL_AGGREGATION_LINK} target=\"_blank\">\n\t\t\t\t\t\t\tTemporal Aggregation{' '}\n\t\t\t\t\t\t\t<ArrowUpRightFromSquare color={Color.BG_ROBIN_500} size={10} />\n\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t'completed-checklist-item':\n\t\t\t\t\t\t\tinspectionStep > InspectionStep.SPACE_AGGREGATION,\n\t\t\t\t\t\t'whats-next-checklist-item':\n\t\t\t\t\t\t\tinspectionStep <= InspectionStep.SPACE_AGGREGATION,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t'completed-checklist-item-title':\n\t\t\t\t\t\t\t\tinspectionStep > InspectionStep.SPACE_AGGREGATION,\n\t\t\t\t\t\t\t'whats-next-checklist-item-title':\n\t\t\t\t\t\t\t\tinspectionStep <= InspectionStep.SPACE_AGGREGATION,\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd a{' '}\n\t\t\t\t\t\t<Typography.Link href={SPACE_AGGREGATION_LINK} target=\"_blank\">\n\t\t\t\t\t\t\tSpatial Aggregation{' '}\n\t\t\t\t\t\t\t<ArrowUpRightFromSquare color={Color.BG_ROBIN_500} size={10} />\n\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"completed-message-container\">\n\t\t\t\t{inspectionStep === InspectionStep.COMPLETED && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Typography.Text>\n\t\t\t\t\t\t\t🎉 Ta-da! You have completed your metric query tutorial.\n\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t<Typography.Text>\n\t\t\t\t\t\t\tYou can inspect a new metric or reset the query builder.\n\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t<Button icon={<RefreshCcw size={12} />} onClick={resetInspection}>\n\t\t\t\t\t\t\tReset query\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Stepper;\n","import { Card, Flex, Table, Typography } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport { InspectMetricsSeries } from 'api/metricsExplorer/getInspectMetricsDetails';\nimport { useCallback, useMemo } from 'react';\n\nimport { TableViewProps } from './types';\nimport { formatTimestampToFullDateTime } from './utils';\n\nfunction TableView({\n\tinspectMetricsTimeSeries,\n\tsetShowExpandedView,\n\tsetExpandedViewOptions,\n\tisInspectMetricsRefetching,\n\tmetricInspectionOptions,\n}: TableViewProps): JSX.Element {\n\tconst isSpaceAggregatedWithoutLabel = useMemo(\n\t\t() =>\n\t\t\t!!metricInspectionOptions.spaceAggregationOption &&\n\t\t\tmetricInspectionOptions.spaceAggregationLabels.length === 0,\n\t\t[metricInspectionOptions],\n\t);\n\tconst labelKeys = useMemo(() => {\n\t\tif (isSpaceAggregatedWithoutLabel) {\n\t\t\treturn [];\n\t\t}\n\t\tif (inspectMetricsTimeSeries.length > 0) {\n\t\t\treturn Object.keys(inspectMetricsTimeSeries[0].labels);\n\t\t}\n\t\treturn [];\n\t}, [inspectMetricsTimeSeries, isSpaceAggregatedWithoutLabel]);\n\n\tconst getDynamicColumnStyle = (strokeColor?: string): React.CSSProperties => {\n\t\tconst style: React.CSSProperties = {\n\t\t\tmaxWidth: '200px',\n\t\t\twhiteSpace: 'nowrap',\n\t\t\toverflow: 'hidden',\n\t\t\ttextOverflow: 'ellipsis',\n\t\t};\n\t\tif (strokeColor) {\n\t\t\tstyle.color = strokeColor;\n\t\t}\n\t\treturn style;\n\t};\n\n\tconst columns = useMemo(\n\t\t() => [\n\t\t\t...labelKeys.map((label) => ({\n\t\t\t\ttitle: label,\n\t\t\t\tdataIndex: label,\n\t\t\t\talign: 'left',\n\t\t\t\trender: (text: string): JSX.Element => (\n\t\t\t\t\t<div style={getDynamicColumnStyle()}>{text}</div>\n\t\t\t\t),\n\t\t\t})),\n\t\t\t{\n\t\t\t\ttitle: 'Values',\n\t\t\t\tdataIndex: 'values',\n\t\t\t\talign: 'left',\n\t\t\t\tsticky: 'right',\n\t\t\t},\n\t\t],\n\t\t[labelKeys],\n\t);\n\tconst openExpandedView = useCallback(\n\t\t(series: InspectMetricsSeries, value: string, timestamp: number): void => {\n\t\t\tsetShowExpandedView(true);\n\t\t\tsetExpandedViewOptions({\n\t\t\t\tx: timestamp,\n\t\t\t\ty: Number(value),\n\t\t\t\tvalue: Number(value),\n\t\t\t\ttimestamp,\n\t\t\t\ttimeSeries: series,\n\t\t\t});\n\t\t},\n\t\t[setShowExpandedView, setExpandedViewOptions],\n\t);\n\n\tconst dataSource = useMemo(\n\t\t() =>\n\t\t\tinspectMetricsTimeSeries.map((series, index) => {\n\t\t\t\tconst labelData = labelKeys.reduce((acc, label) => {\n\t\t\t\t\tacc[label] = (\n\t\t\t\t\t\t<div style={getDynamicColumnStyle(series.strokeColor)}>\n\t\t\t\t\t\t\t{series.labels[label]}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} as Record<string, JSX.Element>);\n\n\t\t\t\treturn {\n\t\t\t\t\tkey: index,\n\t\t\t\t\t...labelData,\n\t\t\t\t\tvalues: (\n\t\t\t\t\t\t<div className=\"table-view-values-header\">\n\t\t\t\t\t\t\t<Flex gap={8}>\n\t\t\t\t\t\t\t\t{series.values.map((value) => {\n\t\t\t\t\t\t\t\t\tconst formattedValue = `(${formatTimestampToFullDateTime(\n\t\t\t\t\t\t\t\t\t\tvalue.timestamp,\n\t\t\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\t\t)}, ${value.value})`;\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\t\t\tkey={formattedValue}\n\t\t\t\t\t\t\t\t\t\t\tonClick={(): void =>\n\t\t\t\t\t\t\t\t\t\t\t\topenExpandedView(series, value.value, value.timestamp)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Typography.Text>{formattedValue}</Typography.Text>\n\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}),\n\t\t[inspectMetricsTimeSeries, labelKeys, openExpandedView],\n\t);\n\n\treturn (\n\t\t<Table\n\t\t\tclassName=\"inspect-metrics-table-view\"\n\t\t\tdataSource={dataSource}\n\t\t\tcolumns={\n\t\t\t\tcolumns as ColumnsType<{\n\t\t\t\t\tvalues: JSX.Element;\n\t\t\t\t\tkey: number;\n\t\t\t\t}>\n\t\t\t}\n\t\t\tscroll={{ x: '100%' }}\n\t\t\tloading={isInspectMetricsRefetching}\n\t\t/>\n\t);\n}\n\nexport default TableView;\n","import { Color } from '@signozhq/design-tokens';\nimport { MetricType } from 'api/metricsExplorer/getMetricsList';\nimport {\n\tBarChart,\n\tBarChart2,\n\tBarChartHorizontal,\n\tDiff,\n\tGauge,\n\tLucideProps,\n} from 'lucide-react';\nimport { ForwardRefExoticComponent, RefAttributes } from 'react';\n\nimport {\n\tMetricInspectionOptions,\n\tSpaceAggregationOptions,\n\tTimeAggregationOptions,\n} from './types';\n\nexport const INSPECT_FEATURE_FLAG_KEY = 'metrics-explorer-inspect-feature-flag';\n\nexport const METRIC_TYPE_TO_COLOR_MAP: Record<MetricType, string> = {\n\t[MetricType.GAUGE]: Color.BG_SAKURA_500,\n\t[MetricType.HISTOGRAM]: Color.BG_SIENNA_500,\n\t[MetricType.SUM]: Color.BG_ROBIN_500,\n\t[MetricType.SUMMARY]: Color.BG_FOREST_500,\n\t[MetricType.EXPONENTIAL_HISTOGRAM]: Color.BG_AQUA_500,\n};\n\nexport const METRIC_TYPE_TO_ICON_MAP: Record<\n\tMetricType,\n\tForwardRefExoticComponent<\n\t\tOmit<LucideProps, 'ref'> & RefAttributes<SVGSVGElement>\n\t>\n> = {\n\t[MetricType.GAUGE]: Gauge,\n\t[MetricType.HISTOGRAM]: BarChart2,\n\t[MetricType.SUM]: Diff,\n\t[MetricType.SUMMARY]: BarChartHorizontal,\n\t[MetricType.EXPONENTIAL_HISTOGRAM]: BarChart,\n};\n\nexport const TIME_AGGREGATION_OPTIONS: Record<\n\tTimeAggregationOptions,\n\tstring\n> = {\n\t[TimeAggregationOptions.LATEST]: 'Latest',\n\t[TimeAggregationOptions.SUM]: 'Sum',\n\t[TimeAggregationOptions.AVG]: 'Avg',\n\t[TimeAggregationOptions.MIN]: 'Min',\n\t[TimeAggregationOptions.MAX]: 'Max',\n\t[TimeAggregationOptions.COUNT]: 'Count',\n};\n\nexport const SPACE_AGGREGATION_OPTIONS: Record<\n\tSpaceAggregationOptions,\n\tstring\n> = {\n\t[SpaceAggregationOptions.SUM_BY]: 'Sum by',\n\t[SpaceAggregationOptions.MIN_BY]: 'Min by',\n\t[SpaceAggregationOptions.MAX_BY]: 'Max by',\n\t[SpaceAggregationOptions.AVG_BY]: 'Avg by',\n};\n\nexport const SPACE_AGGREGATION_OPTIONS_FOR_EXPANDED_VIEW: Record<\n\tSpaceAggregationOptions,\n\tstring\n> = {\n\t[SpaceAggregationOptions.SUM_BY]: 'Sum',\n\t[SpaceAggregationOptions.MIN_BY]: 'Min',\n\t[SpaceAggregationOptions.MAX_BY]: 'Max',\n\t[SpaceAggregationOptions.AVG_BY]: 'Avg',\n};\n\nexport const INITIAL_INSPECT_METRICS_OPTIONS: MetricInspectionOptions = {\n\ttimeAggregationOption: undefined,\n\ttimeAggregationInterval: undefined,\n\tspaceAggregationOption: undefined,\n\tspaceAggregationLabels: [],\n\tfilters: {\n\t\titems: [],\n\t\top: 'AND',\n\t},\n};\n\nexport const TEMPORAL_AGGREGATION_LINK =\n\t'https://signoz.io/docs/metrics-management/types-and-aggregation/#step-2-temporal-aggregation';\n\nexport const SPACE_AGGREGATION_LINK =\n\t'https://signoz.io/docs/metrics-management/types-and-aggregation/#step-3-spatial-aggregation';\n\nexport const GRAPH_CLICK_PIXEL_TOLERANCE = 10;\n","import Inspect from './Inspect';\n\nexport default Inspect;\n","import { InspectMetricsSeries } from 'api/metricsExplorer/getInspectMetricsDetails';\nimport { MetricType } from 'api/metricsExplorer/getMetricsList';\nimport {\n\tIBuilderQuery,\n\tTagFilter,\n} from 'types/api/queryBuilder/queryBuilderData';\nimport { AlignedData } from 'uplot';\n\nexport type InspectProps = {\n\tmetricName: string | null;\n\tisOpen: boolean;\n\tonClose: () => void;\n};\n\nexport interface UseInspectMetricsReturnData {\n\tinspectMetricsTimeSeries: InspectMetricsSeries[];\n\tinspectMetricsStatusCode: number;\n\tisInspectMetricsLoading: boolean;\n\tisInspectMetricsError: boolean;\n\tformattedInspectMetricsTimeSeries: AlignedData;\n\tspaceAggregationLabels: string[];\n\tmetricInspectionOptions: MetricInspectionOptions;\n\tdispatchMetricInspectionOptions: (action: MetricInspectionAction) => void;\n\tinspectionStep: InspectionStep;\n\tisInspectMetricsRefetching: boolean;\n\tspaceAggregatedSeriesMap: Map<string, InspectMetricsSeries[]>;\n\taggregatedTimeSeries: InspectMetricsSeries[];\n\ttimeAggregatedSeriesMap: Map<number, GraphPopoverData[]>;\n\treset: () => void;\n}\n\nexport interface GraphViewProps {\n\tinspectMetricsTimeSeries: InspectMetricsSeries[];\n\tmetricUnit: string | undefined;\n\tmetricName: string | null;\n\tmetricType?: MetricType | undefined;\n\tformattedInspectMetricsTimeSeries: AlignedData;\n\tresetInspection: () => void;\n\tspaceAggregationSeriesMap: Map<string, InspectMetricsSeries[]>;\n\tinspectionStep: InspectionStep;\n\tsetPopoverOptions: (options: GraphPopoverOptions | null) => void;\n\tpopoverOptions: GraphPopoverOptions | null;\n\tshowExpandedView: boolean;\n\tsetShowExpandedView: (showExpandedView: boolean) => void;\n\tsetExpandedViewOptions: (options: GraphPopoverOptions | null) => void;\n\tmetricInspectionOptions: MetricInspectionOptions;\n\tisInspectMetricsRefetching: boolean;\n}\n\nexport interface QueryBuilderProps {\n\tmetricName: string | null;\n\tsetMetricName: (metricName: string) => void;\n\tmetricType: MetricType | undefined;\n\tspaceAggregationLabels: string[];\n\tmetricInspectionOptions: MetricInspectionOptions;\n\tdispatchMetricInspectionOptions: (action: MetricInspectionAction) => void;\n\tinspectionStep: InspectionStep;\n\tinspectMetricsTimeSeries: InspectMetricsSeries[];\n\tsearchQuery: IBuilderQuery;\n}\n\nexport interface MetricNameSearchProps {\n\tmetricName: string | null;\n\tsetMetricName: (metricName: string) => void;\n}\n\nexport interface MetricFiltersProps {\n\tsearchQuery: IBuilderQuery;\n\tdispatchMetricInspectionOptions: (action: MetricInspectionAction) => void;\n\tmetricName: string | null;\n\tmetricType: MetricType | null;\n}\n\nexport interface MetricTimeAggregationProps {\n\tmetricInspectionOptions: MetricInspectionOptions;\n\tdispatchMetricInspectionOptions: (action: MetricInspectionAction) => void;\n\tinspectionStep: InspectionStep;\n\tinspectMetricsTimeSeries: InspectMetricsSeries[];\n}\n\nexport interface MetricSpaceAggregationProps {\n\tspaceAggregationLabels: string[];\n\tmetricInspectionOptions: MetricInspectionOptions;\n\tdispatchMetricInspectionOptions: (action: MetricInspectionAction) => void;\n\tinspectionStep: InspectionStep;\n}\n\nexport enum TimeAggregationOptions {\n\tLATEST = 'latest',\n\tSUM = 'sum',\n\tAVG = 'avg',\n\tMIN = 'min',\n\tMAX = 'max',\n\tCOUNT = 'count',\n}\n\nexport enum SpaceAggregationOptions {\n\tSUM_BY = 'sum_by',\n\tMIN_BY = 'min_by',\n\tMAX_BY = 'max_by',\n\tAVG_BY = 'avg_by',\n}\n\nexport interface MetricInspectionOptions {\n\ttimeAggregationOption: TimeAggregationOptions | undefined;\n\ttimeAggregationInterval: number | undefined;\n\tspaceAggregationOption: SpaceAggregationOptions | undefined;\n\tspaceAggregationLabels: string[];\n\tfilters: TagFilter;\n}\n\nexport type MetricInspectionAction =\n\t| { type: 'SET_TIME_AGGREGATION_OPTION'; payload: TimeAggregationOptions }\n\t| { type: 'SET_TIME_AGGREGATION_INTERVAL'; payload: number }\n\t| { type: 'SET_SPACE_AGGREGATION_OPTION'; payload: SpaceAggregationOptions }\n\t| { type: 'SET_SPACE_AGGREGATION_LABELS'; payload: string[] }\n\t| { type: 'SET_FILTERS'; payload: TagFilter }\n\t| { type: 'RESET_INSPECTION' };\n\nexport enum InspectionStep {\n\tTIME_AGGREGATION = 1,\n\tSPACE_AGGREGATION = 2,\n\tCOMPLETED = 3,\n}\n\nexport interface StepperProps {\n\tinspectionStep: InspectionStep;\n\tresetInspection: () => void;\n}\n\nexport interface GraphPopoverOptions {\n\tx: number;\n\ty: number;\n\tvalue: number;\n\ttimestamp: number;\n\ttimeSeries: InspectMetricsSeries | undefined;\n}\n\nexport interface GraphPopoverProps {\n\tspaceAggregationSeriesMap: Map<string, InspectMetricsSeries[]>;\n\toptions: GraphPopoverOptions | null;\n\tpopoverRef: React.RefObject<HTMLDivElement>;\n\tstep: InspectionStep;\n\topenInExpandedView: () => void;\n}\n\nexport interface GraphPopoverData {\n\ttimestamp?: number;\n\tvalue: string;\n\ttitle?: string;\n\ttype: 'instance' | 'aggregated';\n\ttimeSeries?: InspectMetricsSeries;\n}\n\nexport interface ExpandedViewProps {\n\toptions: GraphPopoverOptions | null;\n\tspaceAggregationSeriesMap: Map<string, InspectMetricsSeries[]>;\n\tstep: InspectionStep;\n\tmetricInspectionOptions: MetricInspectionOptions;\n\ttimeAggregatedSeriesMap: Map<number, GraphPopoverData[]>;\n}\n\nexport interface TableViewProps {\n\tinspectionStep: InspectionStep;\n\tinspectMetricsTimeSeries: InspectMetricsSeries[];\n\tsetShowExpandedView: (showExpandedView: boolean) => void;\n\tsetExpandedViewOptions: (options: GraphPopoverOptions | null) => void;\n\tmetricInspectionOptions: MetricInspectionOptions;\n\tisInspectMetricsRefetching: boolean;\n}\n\nexport interface TableViewDataItem {\n\ttitle: JSX.Element;\n\tvalues: JSX.Element;\n\tkey: number;\n}\n","import { InspectMetricsSeries } from 'api/metricsExplorer/getInspectMetricsDetails';\nimport { themeColors } from 'constants/theme';\nimport { useGetInspectMetricsDetails } from 'hooks/metricsExplorer/useGetInspectMetricsDetails';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { generateColor } from 'lib/uPlotLib/utils/generateColor';\nimport { useCallback, useEffect, useMemo, useReducer, useState } from 'react';\n\nimport { INITIAL_INSPECT_METRICS_OPTIONS } from './constants';\nimport {\n\tGraphPopoverData,\n\tInspectionStep,\n\tMetricInspectionAction,\n\tMetricInspectionOptions,\n\tUseInspectMetricsReturnData,\n} from './types';\nimport {\n\tapplySpaceAggregation,\n\tapplyTimeAggregation,\n\tgetAllTimestampsOfMetrics,\n} from './utils';\n\nconst metricInspectionReducer = (\n\tstate: MetricInspectionOptions,\n\taction: MetricInspectionAction,\n): MetricInspectionOptions => {\n\tswitch (action.type) {\n\t\tcase 'SET_TIME_AGGREGATION_OPTION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttimeAggregationOption: action.payload,\n\t\t\t};\n\t\tcase 'SET_TIME_AGGREGATION_INTERVAL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttimeAggregationInterval: action.payload,\n\t\t\t};\n\t\tcase 'SET_SPACE_AGGREGATION_OPTION':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspaceAggregationOption: action.payload,\n\t\t\t};\n\t\tcase 'SET_SPACE_AGGREGATION_LABELS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tspaceAggregationLabels: action.payload,\n\t\t\t};\n\t\tcase 'SET_FILTERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilters: action.payload,\n\t\t\t};\n\t\tcase 'RESET_INSPECTION':\n\t\t\treturn { ...INITIAL_INSPECT_METRICS_OPTIONS };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport function useInspectMetrics(\n\tmetricName: string | null,\n): UseInspectMetricsReturnData {\n\t// Inspect Metrics API Call and data formatting\n\tconst { start, end } = useMemo(() => {\n\t\tconst now = Date.now();\n\t\treturn {\n\t\t\tstart: now - 30 * 60 * 1000, // 30 minutes ago\n\t\t\tend: now, // now\n\t\t};\n\t}, []);\n\n\t// Inspect metrics data selection\n\tconst [metricInspectionOptions, dispatchMetricInspectionOptions] = useReducer(\n\t\tmetricInspectionReducer,\n\t\tINITIAL_INSPECT_METRICS_OPTIONS,\n\t);\n\n\tconst {\n\t\tdata: inspectMetricsData,\n\t\tisLoading: isInspectMetricsLoading,\n\t\tisError: isInspectMetricsError,\n\t\tisRefetching: isInspectMetricsRefetching,\n\t} = useGetInspectMetricsDetails(\n\t\t{\n\t\t\tmetricName: metricName ?? '',\n\t\t\tstart,\n\t\t\tend,\n\t\t\tfilters: metricInspectionOptions.filters,\n\t\t},\n\t\t{\n\t\t\tenabled: !!metricName,\n\t\t\tkeepPreviousData: true,\n\t\t},\n\t);\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst inspectMetricsTimeSeries = useMemo(() => {\n\t\tconst series = inspectMetricsData?.payload?.data?.series ?? [];\n\n\t\treturn series.map((series, index) => {\n\t\t\tconst title = `TS${index + 1}`;\n\t\t\tconst strokeColor = generateColor(\n\t\t\t\ttitle,\n\t\t\t\tisDarkMode ? themeColors.chartcolors : themeColors.lightModeColor,\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...series,\n\t\t\t\tvalues: [...series.values].sort((a, b) => a.timestamp - b.timestamp),\n\t\t\t\ttitle,\n\t\t\t\tstrokeColor,\n\t\t\t};\n\t\t});\n\t}, [inspectMetricsData, isDarkMode]);\n\n\tconst inspectMetricsStatusCode = useMemo(\n\t\t() => inspectMetricsData?.statusCode || 200,\n\t\t[inspectMetricsData],\n\t);\n\n\t// Evaluate inspection step\n\tconst inspectionStep = useMemo(() => {\n\t\tif (metricInspectionOptions.spaceAggregationOption) {\n\t\t\treturn InspectionStep.COMPLETED;\n\t\t}\n\t\tif (\n\t\t\tmetricInspectionOptions.timeAggregationOption &&\n\t\t\tmetricInspectionOptions.timeAggregationInterval\n\t\t) {\n\t\t\treturn InspectionStep.SPACE_AGGREGATION;\n\t\t}\n\t\treturn InspectionStep.TIME_AGGREGATION;\n\t}, [metricInspectionOptions]);\n\n\tconst [spaceAggregatedSeriesMap, setSpaceAggregatedSeriesMap] = useState<\n\t\tMap<string, InspectMetricsSeries[]>\n\t>(new Map());\n\tconst [timeAggregatedSeriesMap, setTimeAggregatedSeriesMap] = useState<\n\t\tMap<number, GraphPopoverData[]>\n\t>(new Map());\n\tconst [aggregatedTimeSeries, setAggregatedTimeSeries] = useState<\n\t\tInspectMetricsSeries[]\n\t>(inspectMetricsTimeSeries);\n\n\tuseEffect(() => {\n\t\tsetAggregatedTimeSeries(inspectMetricsTimeSeries);\n\t}, [inspectMetricsTimeSeries]);\n\n\tconst formattedInspectMetricsTimeSeries = useMemo(() => {\n\t\tlet timeSeries: InspectMetricsSeries[] = [...inspectMetricsTimeSeries];\n\n\t\t// Apply time aggregation once required options are set\n\t\tif (\n\t\t\tinspectionStep >= InspectionStep.SPACE_AGGREGATION &&\n\t\t\tmetricInspectionOptions.timeAggregationOption &&\n\t\t\tmetricInspectionOptions.timeAggregationInterval\n\t\t) {\n\t\t\tconst {\n\t\t\t\ttimeAggregatedSeries,\n\t\t\t\ttimeAggregatedSeriesMap,\n\t\t\t} = applyTimeAggregation(inspectMetricsTimeSeries, metricInspectionOptions);\n\t\t\ttimeSeries = timeAggregatedSeries;\n\t\t\tsetTimeAggregatedSeriesMap(timeAggregatedSeriesMap);\n\t\t\tsetAggregatedTimeSeries(timeSeries);\n\t\t}\n\t\t// Apply space aggregation\n\t\tif (inspectionStep === InspectionStep.COMPLETED) {\n\t\t\tconst { aggregatedSeries, spaceAggregatedSeriesMap } = applySpaceAggregation(\n\t\t\t\ttimeSeries,\n\t\t\t\tmetricInspectionOptions,\n\t\t\t);\n\t\t\ttimeSeries = aggregatedSeries;\n\t\t\tsetSpaceAggregatedSeriesMap(spaceAggregatedSeriesMap);\n\t\t\tsetAggregatedTimeSeries(aggregatedSeries);\n\t\t}\n\n\t\tconst timestamps = getAllTimestampsOfMetrics(timeSeries);\n\n\t\tconst timeseriesArray = timeSeries.map((series) => {\n\t\t\tconst valuesMap = new Map<number, number>();\n\n\t\t\tseries.values.forEach(({ timestamp, value }) => {\n\t\t\t\tvaluesMap.set(timestamp, parseFloat(value));\n\t\t\t});\n\n\t\t\treturn timestamps.map((timestamp) => valuesMap.get(timestamp) ?? NaN);\n\t\t});\n\n\t\tconst rawData = [timestamps, ...timeseriesArray];\n\t\treturn rawData.map((series) => new Float64Array(series));\n\t}, [inspectMetricsTimeSeries, inspectionStep, metricInspectionOptions]);\n\n\tconst spaceAggregationLabels = useMemo(() => {\n\t\tconst labels = new Set<string>();\n\t\tinspectMetricsData?.payload?.data.series.forEach((series) => {\n\t\t\tObject.keys(series.labels).forEach((label) => {\n\t\t\t\tlabels.add(label);\n\t\t\t});\n\t\t});\n\t\treturn Array.from(labels);\n\t}, [inspectMetricsData]);\n\n\tconst reset = useCallback(() => {\n\t\tdispatchMetricInspectionOptions({\n\t\t\ttype: 'RESET_INSPECTION',\n\t\t});\n\t\tsetSpaceAggregatedSeriesMap(new Map());\n\t\tsetTimeAggregatedSeriesMap(new Map());\n\t\tsetAggregatedTimeSeries(inspectMetricsTimeSeries);\n\t}, [dispatchMetricInspectionOptions, inspectMetricsTimeSeries]);\n\n\treturn {\n\t\tinspectMetricsTimeSeries,\n\t\tinspectMetricsStatusCode,\n\t\tisInspectMetricsLoading,\n\t\tisInspectMetricsError,\n\t\tformattedInspectMetricsTimeSeries,\n\t\tspaceAggregationLabels,\n\t\tmetricInspectionOptions,\n\t\tdispatchMetricInspectionOptions,\n\t\tinspectionStep,\n\t\tisInspectMetricsRefetching,\n\t\tspaceAggregatedSeriesMap,\n\t\taggregatedTimeSeries,\n\t\ttimeAggregatedSeriesMap,\n\t\treset,\n\t};\n}\n","/* eslint-disable no-nested-ternary */\nimport { Card, Input, Select, Typography } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { InspectMetricsSeries } from 'api/metricsExplorer/getInspectMetricsDetails';\nimport { MetricType } from 'api/metricsExplorer/getMetricsList';\nimport classNames from 'classnames';\nimport { initialQueriesMap } from 'constants/queryBuilder';\nimport { AggregatorFilter } from 'container/QueryBuilder/filters';\nimport QueryBuilderSearch from 'container/QueryBuilder/filters/QueryBuilderSearch';\nimport { useQueryOperations } from 'hooks/queryBuilder/useQueryBuilderOperations';\nimport { HardHat } from 'lucide-react';\nimport { useMemo, useState } from 'react';\nimport {\n\tBaseAutocompleteData,\n\tDataTypes,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport {\n\tSPACE_AGGREGATION_OPTIONS,\n\tTIME_AGGREGATION_OPTIONS,\n} from './constants';\nimport {\n\tGraphPopoverData,\n\tGraphPopoverOptions,\n\tInspectionStep,\n\tMetricFiltersProps,\n\tMetricInspectionOptions,\n\tMetricNameSearchProps,\n\tMetricSpaceAggregationProps,\n\tMetricTimeAggregationProps,\n\tSpaceAggregationOptions,\n\tTimeAggregationOptions,\n} from './types';\n\n/**\n * Check if the inspect feature flag is enabled\n * returns true if the feature flag is enabled, false otherwise\n * Show the inspect button in  metrics explorer if the feature flag is enabled\n */\nexport function isInspectEnabled(metricType: MetricType | undefined): boolean {\n\treturn metricType === MetricType.GAUGE;\n}\n\nexport function getAllTimestampsOfMetrics(\n\tinspectMetricsTimeSeries: InspectMetricsSeries[],\n): number[] {\n\treturn Array.from(\n\t\tnew Set(\n\t\t\tinspectMetricsTimeSeries\n\t\t\t\t.flatMap((series) => series.values.map((value) => value.timestamp))\n\t\t\t\t.sort((a, b) => a - b),\n\t\t),\n\t);\n}\n\nexport function getDefaultTimeAggregationInterval(\n\ttimeSeries: InspectMetricsSeries | undefined,\n): number {\n\tif (!timeSeries) {\n\t\treturn 60;\n\t}\n\tconst reportingInterval =\n\t\ttimeSeries.values.length > 1\n\t\t\t? Math.abs(timeSeries.values[1].timestamp - timeSeries.values[0].timestamp) /\n\t\t\t  1000\n\t\t\t: 0;\n\treturn Math.max(60, reportingInterval);\n}\n\nexport function MetricNameSearch({\n\tmetricName,\n\tsetMetricName,\n}: MetricNameSearchProps): JSX.Element {\n\tconst [searchText, setSearchText] = useState(metricName);\n\n\tconst handleSetMetricName = (value: BaseAutocompleteData): void => {\n\t\tsetMetricName(value.key);\n\t};\n\n\tconst handleChange = (value: BaseAutocompleteData): void => {\n\t\tsetSearchText(value.key);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tdata-testid=\"metric-name-search\"\n\t\t\tclassName=\"inspect-metrics-input-group metric-name-search\"\n\t\t>\n\t\t\t<Typography.Text>From</Typography.Text>\n\t\t\t<AggregatorFilter\n\t\t\t\tdefaultValue={searchText ?? ''}\n\t\t\t\tquery={initialQueriesMap[DataSource.METRICS].builder.queryData[0]}\n\t\t\t\tonSelect={handleSetMetricName}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport function MetricFilters({\n\tdispatchMetricInspectionOptions,\n\tsearchQuery,\n\tmetricName,\n\tmetricType,\n}: MetricFiltersProps): JSX.Element {\n\tconst { handleChangeQueryData } = useQueryOperations({\n\t\tindex: 0,\n\t\tquery: searchQuery,\n\t\tentityVersion: '',\n\t});\n\n\tconst aggregateAttribute = useMemo(\n\t\t() => ({\n\t\t\tkey: metricName ?? '',\n\t\t\tdataType: DataTypes.String,\n\t\t\ttype: metricType,\n\t\t\tisColumn: true,\n\t\t\tisJSON: false,\n\t\t\tid: `${metricName}--${DataTypes.String}--${metricType}--true`,\n\t\t}),\n\t\t[metricName, metricType],\n\t);\n\n\treturn (\n\t\t<div\n\t\t\tdata-testid=\"metric-filters\"\n\t\t\tclassName=\"inspect-metrics-input-group metric-filters\"\n\t\t>\n\t\t\t<Typography.Text>Where</Typography.Text>\n\t\t\t<QueryBuilderSearch\n\t\t\t\tquery={{\n\t\t\t\t\t...searchQuery,\n\t\t\t\t\taggregateAttribute,\n\t\t\t\t}}\n\t\t\t\tonChange={(value): void => {\n\t\t\t\t\thandleChangeQueryData('filters', value);\n\t\t\t\t\tlogEvent(MetricsExplorerEvents.FilterApplied, {\n\t\t\t\t\t\t[MetricsExplorerEventKeys.Modal]: 'inspect',\n\t\t\t\t\t});\n\t\t\t\t\tdispatchMetricInspectionOptions({\n\t\t\t\t\t\ttype: 'SET_FILTERS',\n\t\t\t\t\t\tpayload: value,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t\tsuffixIcon={<HardHat size={16} />}\n\t\t\t\tdisableNavigationShortcuts\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport function MetricTimeAggregation({\n\tmetricInspectionOptions,\n\tdispatchMetricInspectionOptions,\n\tinspectionStep,\n\tinspectMetricsTimeSeries,\n}: MetricTimeAggregationProps): JSX.Element {\n\treturn (\n\t\t<div\n\t\t\tdata-testid=\"metric-time-aggregation\"\n\t\t\tclassName=\"metric-time-aggregation\"\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={classNames('metric-time-aggregation-header', {\n\t\t\t\t\t'selected-step': inspectionStep === InspectionStep.TIME_AGGREGATION,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Typography.Text>AGGREGATE BY TIME</Typography.Text>\n\t\t\t</div>\n\t\t\t<div className=\"metric-time-aggregation-content\">\n\t\t\t\t<div className=\"inspect-metrics-input-group\">\n\t\t\t\t\t<Typography.Text>Align with</Typography.Text>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={metricInspectionOptions.timeAggregationOption}\n\t\t\t\t\t\tonChange={(value): void => {\n\t\t\t\t\t\t\tdispatchMetricInspectionOptions({\n\t\t\t\t\t\t\t\ttype: 'SET_TIME_AGGREGATION_OPTION',\n\t\t\t\t\t\t\t\tpayload: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// set the time aggregation interval to the default value if it is not set\n\t\t\t\t\t\t\tif (!metricInspectionOptions.timeAggregationInterval) {\n\t\t\t\t\t\t\t\tdispatchMetricInspectionOptions({\n\t\t\t\t\t\t\t\t\ttype: 'SET_TIME_AGGREGATION_INTERVAL',\n\t\t\t\t\t\t\t\t\tpayload: getDefaultTimeAggregationInterval(\n\t\t\t\t\t\t\t\t\t\tinspectMetricsTimeSeries[0],\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{ width: 130 }}\n\t\t\t\t\t\tplaceholder=\"Select option\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{Object.entries(TIME_AGGREGATION_OPTIONS).map(([key, value]) => (\n\t\t\t\t\t\t\t<Select.Option key={key} value={key}>\n\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inspect-metrics-input-group\">\n\t\t\t\t\t<Typography.Text>aggregated every</Typography.Text>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tclassName=\"no-arrows-input\"\n\t\t\t\t\t\tvalue={metricInspectionOptions.timeAggregationInterval}\n\t\t\t\t\t\tplaceholder=\"Select interval...\"\n\t\t\t\t\t\tsuffix=\"seconds\"\n\t\t\t\t\t\tonChange={(e): void => {\n\t\t\t\t\t\t\tdispatchMetricInspectionOptions({\n\t\t\t\t\t\t\t\ttype: 'SET_TIME_AGGREGATION_INTERVAL',\n\t\t\t\t\t\t\t\tpayload: parseInt(e.target.value, 10),\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonWheel={(e): void => (e.target as HTMLInputElement).blur()}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport function MetricSpaceAggregation({\n\tspaceAggregationLabels,\n\tmetricInspectionOptions,\n\tdispatchMetricInspectionOptions,\n\tinspectionStep,\n}: MetricSpaceAggregationProps): JSX.Element {\n\treturn (\n\t\t<div\n\t\t\tdata-testid=\"metric-space-aggregation\"\n\t\t\tclassName=\"metric-space-aggregation\"\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName={classNames('metric-space-aggregation-header', {\n\t\t\t\t\t'selected-step': inspectionStep === InspectionStep.SPACE_AGGREGATION,\n\t\t\t\t})}\n\t\t\t>\n\t\t\t\t<Typography.Text>AGGREGATE BY LABELS</Typography.Text>\n\t\t\t</div>\n\t\t\t<div className=\"metric-space-aggregation-content\">\n\t\t\t\t<div className=\"metric-space-aggregation-content-left\">\n\t\t\t\t\t<Select\n\t\t\t\t\t\tvalue={metricInspectionOptions.spaceAggregationOption}\n\t\t\t\t\t\tplaceholder=\"Select option\"\n\t\t\t\t\t\tonChange={(value): void => {\n\t\t\t\t\t\t\tdispatchMetricInspectionOptions({\n\t\t\t\t\t\t\t\ttype: 'SET_SPACE_AGGREGATION_OPTION',\n\t\t\t\t\t\t\t\tpayload: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={{ width: 130 }}\n\t\t\t\t\t\tdisabled={inspectionStep === InspectionStep.TIME_AGGREGATION}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* eslint-disable-next-line sonarjs/no-identical-functions */}\n\t\t\t\t\t\t{Object.entries(SPACE_AGGREGATION_OPTIONS).map(([key, value]) => (\n\t\t\t\t\t\t\t<Select.Option key={key} value={key}>\n\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\t\t\t\t<Select\n\t\t\t\t\tmode=\"multiple\"\n\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\tplaceholder=\"Search for attributes...\"\n\t\t\t\t\tvalue={metricInspectionOptions.spaceAggregationLabels}\n\t\t\t\t\tonChange={(value): void => {\n\t\t\t\t\t\tdispatchMetricInspectionOptions({\n\t\t\t\t\t\t\ttype: 'SET_SPACE_AGGREGATION_LABELS',\n\t\t\t\t\t\t\tpayload: value,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={inspectionStep === InspectionStep.TIME_AGGREGATION}\n\t\t\t\t>\n\t\t\t\t\t{spaceAggregationLabels.map((label) => (\n\t\t\t\t\t\t<Select.Option key={label} value={label}>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</Select.Option>\n\t\t\t\t\t))}\n\t\t\t\t</Select>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport function applyFilters(\n\tinspectMetricsTimeSeries: InspectMetricsSeries[],\n\tfilters: TagFilter,\n): InspectMetricsSeries[] {\n\treturn inspectMetricsTimeSeries.filter((series) =>\n\t\tfilters.items.every((filter) => {\n\t\t\tif ((filter.key?.key || '') in series.labels) {\n\t\t\t\tconst value = series.labels[filter.key?.key ?? ''];\n\t\t\t\tswitch (filter.op) {\n\t\t\t\t\tcase '=':\n\t\t\t\t\t\treturn value === filter.value;\n\t\t\t\t\tcase '!=':\n\t\t\t\t\t\treturn value !== filter.value;\n\t\t\t\t\tcase 'in':\n\t\t\t\t\t\treturn (filter.value as string[]).includes(value as string);\n\t\t\t\t\tcase 'nin':\n\t\t\t\t\t\treturn !(filter.value as string[]).includes(value as string);\n\t\t\t\t\tcase 'like':\n\t\t\t\t\t\treturn value.includes(filter.value as string);\n\t\t\t\t\tcase 'nlike':\n\t\t\t\t\t\treturn !value.includes(filter.value as string);\n\t\t\t\t\tcase 'contains':\n\t\t\t\t\t\treturn value.includes(filter.value as string);\n\t\t\t\t\tcase 'ncontains':\n\t\t\t\t\t\treturn !value.includes(filter.value as string);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}),\n\t);\n}\n\nexport function applyTimeAggregation(\n\tinspectMetricsTimeSeries: InspectMetricsSeries[],\n\tmetricInspectionOptions: MetricInspectionOptions,\n): {\n\ttimeAggregatedSeries: InspectMetricsSeries[];\n\ttimeAggregatedSeriesMap: Map<number, GraphPopoverData[]>;\n} {\n\tconst {\n\t\ttimeAggregationOption,\n\t\ttimeAggregationInterval,\n\t} = metricInspectionOptions;\n\n\tif (!timeAggregationInterval) {\n\t\treturn {\n\t\t\ttimeAggregatedSeries: inspectMetricsTimeSeries,\n\t\t\ttimeAggregatedSeriesMap: new Map(),\n\t\t};\n\t}\n\n\t// Group timestamps into intervals and aggregate values for each series independently\n\tconst timeAggregatedSeriesMap: Map<number, GraphPopoverData[]> = new Map();\n\n\tconst timeAggregatedSeries: InspectMetricsSeries[] = inspectMetricsTimeSeries.map(\n\t\t(series) => {\n\t\t\tconst groupedTimestamps = new Map<number, number[]>();\n\n\t\t\tseries.values.forEach(({ timestamp, value }) => {\n\t\t\t\tconst intervalBucket =\n\t\t\t\t\tMath.floor(timestamp / (timeAggregationInterval * 1000)) *\n\t\t\t\t\t(timeAggregationInterval * 1000);\n\n\t\t\t\tif (!groupedTimestamps.has(intervalBucket)) {\n\t\t\t\t\tgroupedTimestamps.set(intervalBucket, []);\n\t\t\t\t}\n\t\t\t\tif (!timeAggregatedSeriesMap.has(intervalBucket)) {\n\t\t\t\t\ttimeAggregatedSeriesMap.set(intervalBucket, []);\n\t\t\t\t}\n\n\t\t\t\tgroupedTimestamps.get(intervalBucket)?.push(parseFloat(value));\n\t\t\t\ttimeAggregatedSeriesMap.get(intervalBucket)?.push({\n\t\t\t\t\ttimestamp,\n\t\t\t\t\tvalue,\n\t\t\t\t\ttype: 'instance',\n\t\t\t\t\ttitle: series.title,\n\t\t\t\t\ttimeSeries: series,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tconst aggregatedValues = Array.from(groupedTimestamps.entries()).map(\n\t\t\t\t([intervalStart, values]) => {\n\t\t\t\t\tlet aggregatedValue: number;\n\n\t\t\t\t\tswitch (timeAggregationOption) {\n\t\t\t\t\t\tcase TimeAggregationOptions.LATEST:\n\t\t\t\t\t\t\taggregatedValue = values[values.length - 1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TimeAggregationOptions.SUM:\n\t\t\t\t\t\t\taggregatedValue = values.reduce((sum, val) => sum + val, 0);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TimeAggregationOptions.AVG:\n\t\t\t\t\t\t\taggregatedValue =\n\t\t\t\t\t\t\t\tvalues.reduce((sum, val) => sum + val, 0) / values.length;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TimeAggregationOptions.MIN:\n\t\t\t\t\t\t\taggregatedValue = Math.min(...values);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TimeAggregationOptions.MAX:\n\t\t\t\t\t\t\taggregatedValue = Math.max(...values);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase TimeAggregationOptions.COUNT:\n\t\t\t\t\t\t\taggregatedValue = values.length;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\taggregatedValue = values[values.length - 1];\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttimestamp: intervalStart,\n\t\t\t\t\t\tvalue: aggregatedValue.toString(),\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t);\n\n\t\t\treturn {\n\t\t\t\t...series,\n\t\t\t\tvalues: aggregatedValues,\n\t\t\t};\n\t\t},\n\t);\n\n\treturn { timeAggregatedSeries, timeAggregatedSeriesMap };\n}\n\nexport function applySpaceAggregation(\n\tinspectMetricsTimeSeries: InspectMetricsSeries[],\n\tmetricInspectionOptions: MetricInspectionOptions,\n): {\n\taggregatedSeries: InspectMetricsSeries[];\n\tspaceAggregatedSeriesMap: Map<string, InspectMetricsSeries[]>;\n} {\n\t// Group series by selected space aggregation labels\n\tconst groupedSeries = new Map<string, InspectMetricsSeries[]>();\n\n\tinspectMetricsTimeSeries.forEach((series) => {\n\t\t// Create composite key from selected labels\n\t\tconst key = metricInspectionOptions.spaceAggregationLabels\n\t\t\t.map((label) => `${label}:${series.labels[label]}`)\n\t\t\t.join(',');\n\n\t\tif (!groupedSeries.has(key)) {\n\t\t\tgroupedSeries.set(key, []);\n\t\t}\n\t\tgroupedSeries.get(key)?.push(series);\n\t});\n\n\t// Aggregate each group based on space aggregation option\n\tconst aggregatedSeries: InspectMetricsSeries[] = [];\n\n\tgroupedSeries.forEach((seriesGroup, key) => {\n\t\t// Get the first series to use as template for labels and timestamps\n\t\tconst templateSeries = seriesGroup[0];\n\n\t\t// Create a map of timestamp to array of values across all series in group\n\t\tconst timestampValuesMap = new Map<number, number[]>();\n\n\t\t// Collect values for each timestamp across all series\n\t\tseriesGroup.forEach((series) => {\n\t\t\tseries.values.forEach(({ timestamp, value }) => {\n\t\t\t\tif (!timestampValuesMap.has(timestamp)) {\n\t\t\t\t\ttimestampValuesMap.set(timestamp, []);\n\t\t\t\t}\n\t\t\t\ttimestampValuesMap.get(timestamp)?.push(parseFloat(value));\n\t\t\t});\n\t\t});\n\n\t\t// Aggregate values based on selected space aggregation option\n\t\tconst aggregatedValues = Array.from(timestampValuesMap.entries()).map(\n\t\t\t([timestamp, values]) => {\n\t\t\t\tlet aggregatedValue: number;\n\n\t\t\t\tswitch (metricInspectionOptions.spaceAggregationOption) {\n\t\t\t\t\tcase SpaceAggregationOptions.SUM_BY:\n\t\t\t\t\t\taggregatedValue = values.reduce((sum, val) => sum + val, 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SpaceAggregationOptions.AVG_BY:\n\t\t\t\t\t\taggregatedValue =\n\t\t\t\t\t\t\tvalues.reduce((sum, val) => sum + val, 0) / values.length;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SpaceAggregationOptions.MIN_BY:\n\t\t\t\t\t\taggregatedValue = Math.min(...values);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase SpaceAggregationOptions.MAX_BY:\n\t\t\t\t\t\taggregatedValue = Math.max(...values);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// eslint-disable-next-line prefer-destructuring\n\t\t\t\t\t\taggregatedValue = values[0];\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttimestamp,\n\t\t\t\t\tvalue: (aggregatedValue || 0).toString(),\n\t\t\t\t};\n\t\t\t},\n\t\t);\n\n\t\t// Create aggregated series with original labels\n\t\taggregatedSeries.push({\n\t\t\t...templateSeries,\n\t\t\tvalues: aggregatedValues.sort((a, b) => a.timestamp - b.timestamp),\n\t\t\ttitle: key.split(',').join(' '),\n\t\t});\n\t});\n\n\treturn {\n\t\taggregatedSeries,\n\t\tspaceAggregatedSeriesMap: groupedSeries,\n\t};\n}\n\nexport function getSeriesIndexFromPixel(\n\te: MouseEvent,\n\tu: uPlot,\n\tformattedInspectMetricsTimeSeries: uPlot.AlignedData,\n): number {\n\tconst bbox = u.over.getBoundingClientRect(); // plot area only\n\tconst left = e.clientX - bbox.left;\n\tconst top = e.clientY - bbox.top;\n\n\tconst timestampIndex = u.posToIdx(left);\n\tlet seriesIndex = -1;\n\tlet closestPixelDiff = Infinity;\n\n\tfor (let i = 1; i < formattedInspectMetricsTimeSeries.length; i++) {\n\t\tconst series = formattedInspectMetricsTimeSeries[i];\n\t\tconst seriesValue = series[timestampIndex];\n\n\t\tif (\n\t\t\tseriesValue !== undefined &&\n\t\t\tseriesValue !== null &&\n\t\t\t!Number.isNaN(seriesValue)\n\t\t) {\n\t\t\tconst seriesYPx = u.valToPos(seriesValue, 'y');\n\t\t\tconst pixelDiff = Math.abs(seriesYPx - top);\n\n\t\t\tif (pixelDiff < closestPixelDiff) {\n\t\t\t\tclosestPixelDiff = pixelDiff;\n\t\t\t\tseriesIndex = i;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn seriesIndex;\n}\n\nexport function onGraphClick(\n\te: MouseEvent,\n\tu: uPlot,\n\tpopoverRef: React.RefObject<HTMLDivElement>,\n\tsetPopoverOptions: (options: GraphPopoverOptions | null) => void,\n\tinspectMetricsTimeSeries: InspectMetricsSeries[],\n\tshowPopover: boolean,\n\tsetShowPopover: (showPopover: boolean) => void,\n\tformattedInspectMetricsTimeSeries: uPlot.AlignedData,\n): void {\n\tif (popoverRef.current && popoverRef.current.contains(e.target as Node)) {\n\t\t// Clicked inside the popover, don't close\n\t\treturn;\n\t}\n\t// If popover is already open, close it\n\tif (showPopover) {\n\t\tsetShowPopover(false);\n\t\treturn;\n\t}\n\t// Get which series the user clicked on\n\t// If no series is clicked, return\n\tconst seriesIndex = getSeriesIndexFromPixel(\n\t\te,\n\t\tu,\n\t\tformattedInspectMetricsTimeSeries,\n\t);\n\tif (seriesIndex <= 0) return;\n\n\tconst series = inspectMetricsTimeSeries[seriesIndex - 1];\n\n\tconst { left } = u.over.getBoundingClientRect();\n\tconst x = e.clientX - left;\n\tconst xVal = u.posToVal(x, 'x'); // Get actual x-axis value\n\n\tconst closestPoint = series?.values.reduce((prev, curr) => {\n\t\tconst prevDiff = Math.abs(prev.timestamp - xVal);\n\t\tconst currDiff = Math.abs(curr.timestamp - xVal);\n\t\treturn prevDiff < currDiff ? prev : curr;\n\t});\n\n\tsetPopoverOptions({\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t\tvalue: parseFloat(closestPoint?.value ?? '0'),\n\t\ttimestamp: closestPoint?.timestamp,\n\t\ttimeSeries: series,\n\t});\n\tsetShowPopover(true);\n}\n\nexport function getRawDataFromTimeSeries(\n\ttimeSeries: InspectMetricsSeries,\n\ttimestamp: number,\n\tshowAll = false,\n): GraphPopoverData[] {\n\tif (showAll) {\n\t\treturn timeSeries.values.map((value) => ({\n\t\t\ttimestamp: value.timestamp,\n\t\t\ttype: 'instance',\n\t\t\tvalue: value.value,\n\t\t\ttitle: timeSeries.title,\n\t\t}));\n\t}\n\n\tconst timestampIndex = timeSeries.values.findIndex(\n\t\t(value) => value.timestamp >= timestamp,\n\t);\n\tconst timestamps = [];\n\tif (timestampIndex !== undefined) {\n\t\tfor (\n\t\t\tlet i = Math.max(0, timestampIndex - 2);\n\t\t\ti <= Math.min((timeSeries?.values?.length ?? 0) - 1, timestampIndex + 2);\n\t\t\ti++\n\t\t) {\n\t\t\ttimestamps.push(timeSeries?.values?.[i]);\n\t\t}\n\t}\n\treturn timestamps.map((timestamp) => ({\n\t\ttimestamp: timestamp.timestamp,\n\t\ttype: 'instance',\n\t\tvalue: timestamp.value,\n\t\ttitle: timeSeries.title,\n\t}));\n}\n\nexport function getSpaceAggregatedDataFromTimeSeries(\n\ttimeSeries: InspectMetricsSeries,\n\tspaceAggregatedSeriesMap: Map<string, InspectMetricsSeries[]>,\n\ttimestamp: number,\n\tshowAll = false,\n): GraphPopoverData[] {\n\tif (spaceAggregatedSeriesMap.size === 0) {\n\t\treturn [];\n\t}\n\n\tconst appliedLabels =\n\t\tArray.from(spaceAggregatedSeriesMap.keys())[0]\n\t\t\t?.split(',')\n\t\t\t.map((label) => label.split(':')[0]) || [];\n\n\tlet matchingSeries: InspectMetricsSeries[] = [];\n\tspaceAggregatedSeriesMap.forEach((series) => {\n\t\tlet isMatching = true;\n\t\tappliedLabels.forEach((label) => {\n\t\t\tif (timeSeries.labels[label] !== series[0].labels[label]) {\n\t\t\t\tisMatching = false;\n\t\t\t}\n\t\t});\n\t\tif (isMatching) {\n\t\t\tmatchingSeries = series;\n\t\t}\n\t});\n\n\treturn matchingSeries\n\t\t.slice(0, showAll ? matchingSeries.length : 5)\n\t\t.map((series) => {\n\t\t\tconst timestampIndex = series.values.findIndex(\n\t\t\t\t(value) => value.timestamp >= timestamp,\n\t\t\t);\n\t\t\tconst value = series.values[timestampIndex]?.value;\n\t\t\treturn {\n\t\t\t\ttimeseries: Object.entries(series.labels)\n\t\t\t\t\t.map(([key, value]) => `${key}:${value}`)\n\t\t\t\t\t.join(','),\n\t\t\t\ttype: 'aggregated',\n\t\t\t\tvalue: value ?? '-',\n\t\t\t\ttitle: series.title,\n\t\t\t\ttimeSeries: series,\n\t\t\t};\n\t\t});\n}\n\nexport const formatTimestampToFullDateTime = (\n\ttimestamp: string | number,\n\treturnOnlyTime = false,\n): string => {\n\tconst date = new Date(Number(timestamp));\n\n\tconst datePart = date.toLocaleDateString('en-US', {\n\t\tmonth: 'short',\n\t\tday: 'numeric',\n\t\tyear: 'numeric',\n\t});\n\n\tconst timePart = date.toLocaleTimeString('en-US', {\n\t\thour12: false,\n\t\thour: '2-digit',\n\t\tminute: '2-digit',\n\t\tsecond: '2-digit',\n\t});\n\n\tif (returnOnlyTime) {\n\t\treturn timePart;\n\t}\n\n\treturn `${datePart} ⎯ ${timePart}`;\n};\n\nexport function getTimeSeriesLabel(\n\ttimeSeries: InspectMetricsSeries | null,\n\ttextColor: string | undefined,\n): JSX.Element {\n\treturn (\n\t\t<>\n\t\t\t{Object.entries(timeSeries?.labels ?? {}).map(([key, value]) => (\n\t\t\t\t<span key={key}>\n\t\t\t\t\t<Typography.Text style={{ color: textColor, fontWeight: 600 }}>\n\t\t\t\t\t\t{key}\n\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t: {value}{' '}\n\t\t\t\t</span>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport function HoverPopover({\n\toptions,\n\tstep,\n\tmetricInspectionOptions,\n}: {\n\toptions: GraphPopoverOptions;\n\tstep: InspectionStep;\n\tmetricInspectionOptions: MetricInspectionOptions;\n}): JSX.Element {\n\tconst closestTimestamp = useMemo(() => {\n\t\tif (!options.timeSeries) {\n\t\t\treturn options.timestamp;\n\t\t}\n\t\treturn options.timeSeries?.values.reduce((prev, curr) => {\n\t\t\tconst prevDiff = Math.abs(prev.timestamp - options.timestamp);\n\t\t\tconst currDiff = Math.abs(curr.timestamp - options.timestamp);\n\t\t\treturn prevDiff < currDiff ? prev : curr;\n\t\t}).timestamp;\n\t}, [options.timeSeries, options.timestamp]);\n\n\tconst closestValue = useMemo(() => {\n\t\tif (!options.timeSeries) {\n\t\t\treturn options.value;\n\t\t}\n\t\tconst index = options.timeSeries.values.findIndex(\n\t\t\t(value) => value.timestamp === closestTimestamp,\n\t\t);\n\t\treturn index !== undefined && index >= 0\n\t\t\t? options.timeSeries?.values[index].value\n\t\t\t: null;\n\t}, [options.timeSeries, closestTimestamp, options.value]);\n\n\tconst title = useMemo(() => {\n\t\tif (\n\t\t\tstep === InspectionStep.COMPLETED &&\n\t\t\tmetricInspectionOptions.spaceAggregationLabels.length === 0\n\t\t) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (step === InspectionStep.COMPLETED && options.timeSeries?.title) {\n\t\t\treturn options.timeSeries.title;\n\t\t}\n\t\tif (!options.timeSeries) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn getTimeSeriesLabel(\n\t\t\toptions.timeSeries,\n\t\t\toptions.timeSeries?.strokeColor,\n\t\t);\n\t}, [step, options.timeSeries, metricInspectionOptions]);\n\n\treturn (\n\t\t<Card\n\t\t\tclassName=\"hover-popover-card\"\n\t\t\tstyle={{\n\t\t\t\ttop: options.y + 10,\n\t\t\t\tleft: options.x + 10,\n\t\t\t}}\n\t\t>\n\t\t\t<div className=\"hover-popover-row\">\n\t\t\t\t<Typography.Text>\n\t\t\t\t\t{formatTimestampToFullDateTime(closestTimestamp ?? 0)}\n\t\t\t\t</Typography.Text>\n\t\t\t\t<Typography.Text>{Number(closestValue).toFixed(2)}</Typography.Text>\n\t\t\t</div>\n\t\t\t{options.timeSeries && (\n\t\t\t\t<Typography.Text\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: options.timeSeries?.strokeColor,\n\t\t\t\t\t\tfontWeight: 200,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</Typography.Text>\n\t\t\t)}\n\t\t</Card>\n\t);\n}\n\nexport function onGraphHover(\n\te: MouseEvent,\n\tu: uPlot,\n\tsetPopoverOptions: (options: GraphPopoverOptions | null) => void,\n\tinspectMetricsTimeSeries: InspectMetricsSeries[],\n\tformattedInspectMetricsTimeSeries: uPlot.AlignedData,\n): void {\n\tconst { left, top } = u.over.getBoundingClientRect();\n\tconst x = e.clientX - left;\n\tconst y = e.clientY - top;\n\tconst xVal = u.posToVal(x, 'x'); // Get actual x-axis value\n\tconst yVal = u.posToVal(y, 'y'); // Get actual y-axis value value (metric value)\n\n\t// Get which series the user clicked on\n\tconst seriesIndex = getSeriesIndexFromPixel(\n\t\te,\n\t\tu,\n\t\tformattedInspectMetricsTimeSeries,\n\t);\n\tif (seriesIndex === -1) {\n\t\tsetPopoverOptions({\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\tvalue: yVal,\n\t\t\ttimestamp: xVal,\n\t\t\ttimeSeries: undefined,\n\t\t});\n\t\treturn;\n\t}\n\n\tconst series = inspectMetricsTimeSeries[seriesIndex - 1];\n\n\tsetPopoverOptions({\n\t\tx: e.clientX,\n\t\ty: e.clientY,\n\t\tvalue: yVal,\n\t\ttimestamp: xVal,\n\t\ttimeSeries: series,\n\t});\n}\n","import { Button, Collapse, Input, Menu, Popover, Typography } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport logEvent from 'api/common/logEvent';\nimport { ResizeTable } from 'components/ResizeTable';\nimport { DataType } from 'container/LogDetailedView/TableView';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { Compass, Copy, Search } from 'lucide-react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useCopyToClipboard } from 'react-use';\n\nimport { PANEL_TYPES } from '../../../constants/queryBuilder';\nimport ROUTES from '../../../constants/routes';\nimport { useHandleExplorerTabChange } from '../../../hooks/useHandleExplorerTabChange';\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport { AllAttributesProps, AllAttributesValueProps } from './types';\nimport { getMetricDetailsQuery } from './utils';\n\nexport function AllAttributesValue({\n\tfilterKey,\n\tfilterValue,\n\tgoToMetricsExploreWithAppliedAttribute,\n}: AllAttributesValueProps): JSX.Element {\n\tconst [visibleIndex, setVisibleIndex] = useState(5);\n\tconst [attributePopoverKey, setAttributePopoverKey] = useState<string | null>(\n\t\tnull,\n\t);\n\tconst [, copyToClipboard] = useCopyToClipboard();\n\tconst { notifications } = useNotifications();\n\n\tconst handleShowMore = (): void => {\n\t\tsetVisibleIndex(visibleIndex + 5);\n\t};\n\n\tconst handleMenuItemClick = useCallback(\n\t\t(key: string, attribute: string): void => {\n\t\t\tswitch (key) {\n\t\t\t\tcase 'open-in-explorer':\n\t\t\t\t\tgoToMetricsExploreWithAppliedAttribute(filterKey, attribute);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'copy-attribute':\n\t\t\t\t\tcopyToClipboard(attribute);\n\t\t\t\t\tnotifications.success({\n\t\t\t\t\t\tmessage: 'Attribute copied!',\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tsetAttributePopoverKey(null);\n\t\t},\n\t\t[\n\t\t\tgoToMetricsExploreWithAppliedAttribute,\n\t\t\tfilterKey,\n\t\t\tcopyToClipboard,\n\t\t\tnotifications,\n\t\t],\n\t);\n\n\tconst attributePopoverContent = useCallback(\n\t\t(attribute: string) => (\n\t\t\t<Menu\n\t\t\t\titems={[\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <Compass size={16} />,\n\t\t\t\t\t\tlabel: 'Open in Explorer',\n\t\t\t\t\t\tkey: 'open-in-explorer',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ticon: <Copy size={16} />,\n\t\t\t\t\t\tlabel: 'Copy Attribute',\n\t\t\t\t\t\tkey: 'copy-attribute',\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t\tonClick={(info): void => {\n\t\t\t\t\thandleMenuItemClick(info.key, attribute);\n\t\t\t\t}}\n\t\t\t/>\n\t\t),\n\t\t[handleMenuItemClick],\n\t);\n\treturn (\n\t\t<div className=\"all-attributes-value\">\n\t\t\t{filterValue.slice(0, visibleIndex).map((attribute) => (\n\t\t\t\t<Popover\n\t\t\t\t\tkey={attribute}\n\t\t\t\t\tcontent={attributePopoverContent(attribute)}\n\t\t\t\t\ttrigger=\"click\"\n\t\t\t\t\topen={attributePopoverKey === `${filterKey}-${attribute}`}\n\t\t\t\t\tonOpenChange={(open): void => {\n\t\t\t\t\t\tif (!open) {\n\t\t\t\t\t\t\tsetAttributePopoverKey(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetAttributePopoverKey(`${filterKey}-${attribute}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Button key={attribute} type=\"text\">\n\t\t\t\t\t\t<Typography.Text>{attribute}</Typography.Text>\n\t\t\t\t\t</Button>\n\t\t\t\t</Popover>\n\t\t\t))}\n\t\t\t{visibleIndex < filterValue.length && (\n\t\t\t\t<Button type=\"text\" onClick={handleShowMore}>\n\t\t\t\t\tShow More\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nfunction AllAttributes({\n\tmetricName,\n\tattributes,\n\tmetricType,\n}: AllAttributesProps): JSX.Element {\n\tconst [searchString, setSearchString] = useState('');\n\tconst [activeKey, setActiveKey] = useState<string | string[]>(\n\t\t'all-attributes',\n\t);\n\n\tconst { handleExplorerTabChange } = useHandleExplorerTabChange();\n\n\tconst goToMetricsExplorerwithAppliedSpaceAggregation = useCallback(\n\t\t(groupBy: string) => {\n\t\t\tconst compositeQuery = getMetricDetailsQuery(\n\t\t\t\tmetricName,\n\t\t\t\tmetricType,\n\t\t\t\tundefined,\n\t\t\t\tgroupBy,\n\t\t\t);\n\t\t\thandleExplorerTabChange(\n\t\t\t\tPANEL_TYPES.TIME_SERIES,\n\t\t\t\t{\n\t\t\t\t\tquery: compositeQuery,\n\t\t\t\t\tname: metricName,\n\t\t\t\t\tid: metricName,\n\t\t\t\t},\n\t\t\t\tROUTES.METRICS_EXPLORER_EXPLORER,\n\t\t\t);\n\t\t\tlogEvent(MetricsExplorerEvents.OpenInExplorerClicked, {\n\t\t\t\t[MetricsExplorerEventKeys.MetricName]: metricName,\n\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t\t[MetricsExplorerEventKeys.Modal]: 'metric-details',\n\t\t\t\t[MetricsExplorerEventKeys.AttributeKey]: groupBy,\n\t\t\t});\n\t\t},\n\t\t[metricName, metricType, handleExplorerTabChange],\n\t);\n\n\tconst goToMetricsExploreWithAppliedAttribute = useCallback(\n\t\t(key: string, value: string) => {\n\t\t\tconst compositeQuery = getMetricDetailsQuery(metricName, metricType, {\n\t\t\t\tkey,\n\t\t\t\tvalue,\n\t\t\t});\n\t\t\thandleExplorerTabChange(\n\t\t\t\tPANEL_TYPES.TIME_SERIES,\n\t\t\t\t{\n\t\t\t\t\tquery: compositeQuery,\n\t\t\t\t\tname: metricName,\n\t\t\t\t\tid: metricName,\n\t\t\t\t},\n\t\t\t\tROUTES.METRICS_EXPLORER_EXPLORER,\n\t\t\t);\n\t\t\tlogEvent(MetricsExplorerEvents.OpenInExplorerClicked, {\n\t\t\t\t[MetricsExplorerEventKeys.MetricName]: metricName,\n\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t\t[MetricsExplorerEventKeys.Modal]: 'metric-details',\n\t\t\t\t[MetricsExplorerEventKeys.AttributeKey]: key,\n\t\t\t\t[MetricsExplorerEventKeys.AttributeValue]: value,\n\t\t\t});\n\t\t},\n\t\t[metricName, metricType, handleExplorerTabChange],\n\t);\n\n\tconst filteredAttributes = useMemo(\n\t\t() =>\n\t\t\tattributes.filter(\n\t\t\t\t(attribute) =>\n\t\t\t\t\tattribute.key.toLowerCase().includes(searchString.toLowerCase()) ||\n\t\t\t\t\tattribute.value.some((value) =>\n\t\t\t\t\t\tvalue.toLowerCase().includes(searchString.toLowerCase()),\n\t\t\t\t\t),\n\t\t\t),\n\t\t[attributes, searchString],\n\t);\n\n\tconst tableData = useMemo(\n\t\t() =>\n\t\t\tfilteredAttributes\n\t\t\t\t? filteredAttributes.map((attribute) => ({\n\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\tlabel: attribute.key,\n\t\t\t\t\t\t\tcontribution: attribute.valueCount,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\tkey: attribute.key,\n\t\t\t\t\t\t\tvalue: attribute.value,\n\t\t\t\t\t\t},\n\t\t\t\t  }))\n\t\t\t\t: [],\n\t\t[filteredAttributes],\n\t);\n\n\tconst columns: ColumnsType<DataType> = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Key',\n\t\t\t\tdataIndex: 'key',\n\t\t\t\tkey: 'key',\n\t\t\t\twidth: 50,\n\t\t\t\talign: 'left',\n\t\t\t\tclassName: 'metric-metadata-key',\n\t\t\t\trender: (field: { label: string; contribution: number }): JSX.Element => (\n\t\t\t\t\t<div className=\"all-attributes-key\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tonClick={(): void =>\n\t\t\t\t\t\t\t\tgoToMetricsExplorerwithAppliedSpaceAggregation(field.label)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography.Text>{field.label}</Typography.Text>\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Typography.Text className=\"all-attributes-contribution\">\n\t\t\t\t\t\t\t{field.contribution}\n\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Value',\n\t\t\t\tdataIndex: 'value',\n\t\t\t\tkey: 'value',\n\t\t\t\twidth: 50,\n\t\t\t\talign: 'left',\n\t\t\t\tellipsis: true,\n\t\t\t\tclassName: 'metric-metadata-value',\n\t\t\t\trender: (field: { key: string; value: string[] }): JSX.Element => (\n\t\t\t\t\t<AllAttributesValue\n\t\t\t\t\t\tfilterKey={field.key}\n\t\t\t\t\t\tfilterValue={field.value}\n\t\t\t\t\t\tgoToMetricsExploreWithAppliedAttribute={\n\t\t\t\t\t\t\tgoToMetricsExploreWithAppliedAttribute\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[\n\t\t\tgoToMetricsExploreWithAppliedAttribute,\n\t\t\tgoToMetricsExplorerwithAppliedSpaceAggregation,\n\t\t],\n\t);\n\n\tconst items = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tlabel: (\n\t\t\t\t\t<div className=\"metrics-accordion-header\">\n\t\t\t\t\t\t<Typography.Text>All Attributes</Typography.Text>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName=\"all-attributes-search-input\"\n\t\t\t\t\t\t\tplaceholder=\"Search\"\n\t\t\t\t\t\t\tvalue={searchString}\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tsuffix={<Search size={12} />}\n\t\t\t\t\t\t\tonChange={(e): void => {\n\t\t\t\t\t\t\t\tsetSearchString(e.target.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={(e): void => {\n\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tkey: 'all-attributes',\n\t\t\t\tchildren: (\n\t\t\t\t\t<ResizeTable\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttableLayout=\"fixed\"\n\t\t\t\t\t\tdataSource={tableData}\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\tclassName=\"metrics-accordion-content all-attributes-content\"\n\t\t\t\t\t\tscroll={{ y: 600 }}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[columns, tableData, searchString],\n\t);\n\n\treturn (\n\t\t<Collapse\n\t\t\tbordered\n\t\t\tclassName=\"metrics-accordion metrics-metadata-accordion\"\n\t\t\tactiveKey={activeKey}\n\t\t\tonChange={(keys): void => setActiveKey(keys)}\n\t\t\titems={items}\n\t\t/>\n\t);\n}\n\nexport default AllAttributes;\n","import { Color } from '@signozhq/design-tokens';\nimport { Dropdown, Typography } from 'antd';\nimport { QueryParams } from 'constants/query';\nimport ROUTES from 'constants/routes';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport history from 'lib/history';\nimport { Bell, Grid } from 'lucide-react';\nimport { useMemo } from 'react';\nimport { generatePath } from 'react-router-dom';\n\nimport { DashboardsAndAlertsPopoverProps } from './types';\n\nfunction DashboardsAndAlertsPopover({\n\talerts,\n\tdashboards,\n}: DashboardsAndAlertsPopoverProps): JSX.Element | null {\n\tconst { safeNavigate } = useSafeNavigate();\n\tconst params = useUrlQuery();\n\n\tconst alertsPopoverContent = useMemo(() => {\n\t\tif (alerts && alerts.length > 0) {\n\t\t\treturn alerts.map((alert) => ({\n\t\t\t\tkey: alert.alert_id,\n\t\t\t\tlabel: (\n\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\tkey={alert.alert_id}\n\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\tparams.set(QueryParams.ruleId, alert.alert_id);\n\t\t\t\t\t\t\thistory.push(`${ROUTES.ALERT_OVERVIEW}?${params.toString()}`);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"dashboards-popover-content-item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{alert.alert_name || alert.alert_id}\n\t\t\t\t\t</Typography.Link>\n\t\t\t\t),\n\t\t\t}));\n\t\t}\n\t\treturn null;\n\t}, [alerts, params]);\n\n\tconst uniqueDashboards = useMemo(\n\t\t() =>\n\t\t\tdashboards?.filter(\n\t\t\t\t(item, index, self) =>\n\t\t\t\t\tindex === self.findIndex((t) => t.dashboard_id === item.dashboard_id),\n\t\t\t),\n\t\t[dashboards],\n\t);\n\n\tconst dashboardsPopoverContent = useMemo(() => {\n\t\tif (uniqueDashboards && uniqueDashboards.length > 0) {\n\t\t\treturn uniqueDashboards.map((dashboard) => ({\n\t\t\t\tkey: dashboard.dashboard_id,\n\t\t\t\tlabel: (\n\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\tkey={dashboard.dashboard_id}\n\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\tsafeNavigate(\n\t\t\t\t\t\t\t\tgeneratePath(ROUTES.DASHBOARD, {\n\t\t\t\t\t\t\t\t\tdashboardId: dashboard.dashboard_id,\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"dashboards-popover-content-item\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{dashboard.dashboard_name || dashboard.dashboard_id}\n\t\t\t\t\t</Typography.Link>\n\t\t\t\t),\n\t\t\t}));\n\t\t}\n\t\treturn null;\n\t}, [uniqueDashboards, safeNavigate]);\n\n\tif (!dashboardsPopoverContent && !alertsPopoverContent) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"dashboards-and-alerts-popover-container\">\n\t\t\t{dashboardsPopoverContent && (\n\t\t\t\t<Dropdown\n\t\t\t\t\tmenu={{\n\t\t\t\t\t\titems: dashboardsPopoverContent,\n\t\t\t\t\t}}\n\t\t\t\t\tplacement=\"bottomLeft\"\n\t\t\t\t\ttrigger={['click']}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"dashboards-and-alerts-popover dashboards-popover\"\n\t\t\t\t\t\tstyle={{ backgroundColor: `${Color.BG_SIENNA_500}33` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Grid size={12} color={Color.BG_SIENNA_500} />\n\t\t\t\t\t\t<Typography.Text>\n\t\t\t\t\t\t\t{uniqueDashboards?.length} dashboard\n\t\t\t\t\t\t\t{uniqueDashboards?.length === 1 ? '' : 's'}\n\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t</div>\n\t\t\t\t</Dropdown>\n\t\t\t)}\n\t\t\t{alertsPopoverContent && (\n\t\t\t\t<Dropdown\n\t\t\t\t\tmenu={{\n\t\t\t\t\t\titems: alertsPopoverContent,\n\t\t\t\t\t}}\n\t\t\t\t\tplacement=\"bottomLeft\"\n\t\t\t\t\ttrigger={['click']}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"dashboards-and-alerts-popover alerts-popover\"\n\t\t\t\t\t\tstyle={{ backgroundColor: `${Color.BG_SAKURA_500}33` }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Bell size={12} color={Color.BG_SAKURA_500} />\n\t\t\t\t\t\t<Typography.Text>\n\t\t\t\t\t\t\t{alerts?.length} alert {alerts?.length === 1 ? 'rule' : 'rules'}\n\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t</div>\n\t\t\t\t</Dropdown>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default DashboardsAndAlertsPopover;\n","import { Button, Collapse, Input, Select, Typography } from 'antd';\nimport { ColumnsType } from 'antd/es/table';\nimport logEvent from 'api/common/logEvent';\nimport { Temporality } from 'api/metricsExplorer/getMetricDetails';\nimport { MetricType } from 'api/metricsExplorer/getMetricsList';\nimport { UpdateMetricMetadataProps } from 'api/metricsExplorer/updateMetricMetadata';\nimport { ResizeTable } from 'components/ResizeTable';\nimport FieldRenderer from 'container/LogDetailedView/FieldRenderer';\nimport { DataType } from 'container/LogDetailedView/TableView';\nimport { useUpdateMetricMetadata } from 'hooks/metricsExplorer/useUpdateMetricMetadata';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { Edit2, Save, X } from 'lucide-react';\nimport { useCallback, useMemo, useState } from 'react';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport {\n\tMETRIC_TYPE_LABEL_MAP,\n\tMETRIC_TYPE_VALUES_MAP,\n} from '../Summary/constants';\nimport { MetricTypeRenderer } from '../Summary/utils';\nimport { METRIC_METADATA_KEYS } from './constants';\nimport { MetadataProps } from './types';\nimport { determineIsMonotonic } from './utils';\n\nfunction Metadata({\n\tmetricName,\n\tmetadata,\n\trefetchMetricDetails,\n}: MetadataProps): JSX.Element {\n\tconst [isEditing, setIsEditing] = useState(false);\n\tconst [\n\t\tmetricMetadata,\n\t\tsetMetricMetadata,\n\t] = useState<UpdateMetricMetadataProps>({\n\t\tmetricType: metadata?.metric_type || MetricType.SUM,\n\t\tdescription: metadata?.description || '',\n\t\ttemporality: metadata?.temporality,\n\t});\n\tconst { notifications } = useNotifications();\n\tconst {\n\t\tmutate: updateMetricMetadata,\n\t\tisLoading: isUpdatingMetricsMetadata,\n\t} = useUpdateMetricMetadata();\n\tconst [activeKey, setActiveKey] = useState<string | string[]>(\n\t\t'metric-metadata',\n\t);\n\n\tconst tableData = useMemo(\n\t\t() =>\n\t\t\tmetadata\n\t\t\t\t? Object.keys({\n\t\t\t\t\t\t...metadata,\n\t\t\t\t\t\ttemporality: metadata?.temporality,\n\t\t\t\t  })\n\t\t\t\t\t\t// Filter out monotonic as user input is not required\n\t\t\t\t\t\t.filter((key) => key !== 'monotonic')\n\t\t\t\t\t\t.map((key) => ({\n\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\tvalue: {\n\t\t\t\t\t\t\t\tvalue: metadata[key as keyof typeof metadata],\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}))\n\t\t\t\t: [],\n\t\t[metadata],\n\t);\n\n\tconst columns: ColumnsType<DataType> = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\ttitle: 'Key',\n\t\t\t\tdataIndex: 'key',\n\t\t\t\tkey: 'key',\n\t\t\t\twidth: 50,\n\t\t\t\talign: 'left',\n\t\t\t\tclassName: 'metric-metadata-key',\n\t\t\t\trender: (field: string): JSX.Element => (\n\t\t\t\t\t<FieldRenderer\n\t\t\t\t\t\tfield={\n\t\t\t\t\t\t\tMETRIC_METADATA_KEYS[field as keyof typeof METRIC_METADATA_KEYS] || ''\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t},\n\t\t\t{\n\t\t\t\ttitle: 'Value',\n\t\t\t\tdataIndex: 'value',\n\t\t\t\tkey: 'value',\n\t\t\t\twidth: 50,\n\t\t\t\talign: 'left',\n\t\t\t\tellipsis: true,\n\t\t\t\tclassName: 'metric-metadata-value',\n\t\t\t\trender: (field: { value: string; key: string }): JSX.Element => {\n\t\t\t\t\tif (!isEditing || field.key === 'unit') {\n\t\t\t\t\t\tif (field.key === 'metric_type') {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t<MetricTypeRenderer type={field.value as MetricType} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <FieldRenderer field={field.value || '-'} />;\n\t\t\t\t\t}\n\t\t\t\t\tif (field.key === 'metric_type') {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\toptions={Object.entries(METRIC_TYPE_VALUES_MAP).map(([key]) => ({\n\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\tlabel: METRIC_TYPE_LABEL_MAP[key as MetricType],\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\t\tdefaultValue={metricMetadata.metricType}\n\t\t\t\t\t\t\t\tonChange={(value): void => {\n\t\t\t\t\t\t\t\t\tsetMetricMetadata((prev) => ({\n\t\t\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\t\t\tmetricType: value as MetricType,\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tif (field.key === 'temporality') {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\t\toptions={Object.values(Temporality).map((key) => ({\n\t\t\t\t\t\t\t\t\tvalue: key,\n\t\t\t\t\t\t\t\t\tlabel: key,\n\t\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\t\tdefaultValue={metricMetadata.temporality}\n\t\t\t\t\t\t\t\tonChange={(value): void => {\n\t\t\t\t\t\t\t\t\tsetMetricMetadata((prev) => ({\n\t\t\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\t\t\ttemporality: value as Temporality,\n\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname={field.key}\n\t\t\t\t\t\t\tdefaultValue={\n\t\t\t\t\t\t\t\tmetricMetadata[\n\t\t\t\t\t\t\t\t\tfield.key as Exclude<keyof UpdateMetricMetadataProps, 'isMonotonic'>\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange={(e): void => {\n\t\t\t\t\t\t\t\tsetMetricMetadata((prev) => ({\n\t\t\t\t\t\t\t\t\t...prev,\n\t\t\t\t\t\t\t\t\t[field.key]: e.target.value,\n\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t[isEditing, metricMetadata, setMetricMetadata],\n\t);\n\n\tconst handleSave = useCallback(() => {\n\t\tupdateMetricMetadata(\n\t\t\t{\n\t\t\t\tmetricName,\n\t\t\t\tpayload: {\n\t\t\t\t\t...metricMetadata,\n\t\t\t\t\tisMonotonic: determineIsMonotonic(\n\t\t\t\t\t\tmetricMetadata.metricType,\n\t\t\t\t\t\tmetricMetadata.temporality,\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tonSuccess: (response): void => {\n\t\t\t\t\tif (response?.statusCode === 200) {\n\t\t\t\t\t\tlogEvent(MetricsExplorerEvents.MetricMetadataUpdated, {\n\t\t\t\t\t\t\t[MetricsExplorerEventKeys.MetricName]: metricName,\n\t\t\t\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t\t\t\t\t[MetricsExplorerEventKeys.Modal]: 'metric-details',\n\t\t\t\t\t\t});\n\t\t\t\t\t\tnotifications.success({\n\t\t\t\t\t\t\tmessage: 'Metadata updated successfully',\n\t\t\t\t\t\t});\n\t\t\t\t\t\trefetchMetricDetails();\n\t\t\t\t\t\tsetIsEditing(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnotifications.error({\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t'Failed to update metadata, please try again. If the issue persists, please contact support.',\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tonError: (): void =>\n\t\t\t\t\tnotifications.error({\n\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t'Failed to update metadata, please try again. If the issue persists, please contact support.',\n\t\t\t\t\t}),\n\t\t\t},\n\t\t);\n\t}, [\n\t\tupdateMetricMetadata,\n\t\tmetricName,\n\t\tmetricMetadata,\n\t\tnotifications,\n\t\trefetchMetricDetails,\n\t]);\n\n\tconst actionButton = useMemo(() => {\n\t\tif (isEditing) {\n\t\t\treturn (\n\t\t\t\t<div className=\"action-menu\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"action-button\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonClick={(e): void => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tsetIsEditing(false);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isUpdatingMetricsMetadata}\n\t\t\t\t\t>\n\t\t\t\t\t\t<X size={14} />\n\t\t\t\t\t\t<Typography.Text>Cancel</Typography.Text>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"action-button\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonClick={(e): void => {\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\thandleSave();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdisabled={isUpdatingMetricsMetadata}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Save size={14} />\n\t\t\t\t\t\t<Typography.Text>Save</Typography.Text>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"action-menu\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"action-button\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonClick={(e): void => {\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tsetIsEditing(true);\n\t\t\t\t\t}}\n\t\t\t\t\tdisabled={isUpdatingMetricsMetadata}\n\t\t\t\t>\n\t\t\t\t\t<Edit2 size={14} />\n\t\t\t\t\t<Typography.Text>Edit</Typography.Text>\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t);\n\t}, [handleSave, isEditing, isUpdatingMetricsMetadata]);\n\n\tconst items = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tlabel: (\n\t\t\t\t\t<div className=\"metrics-accordion-header metrics-metadata-header\">\n\t\t\t\t\t\t<Typography.Text>Metadata</Typography.Text>\n\t\t\t\t\t\t{actionButton}\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tkey: 'metric-metadata',\n\t\t\t\tchildren: (\n\t\t\t\t\t<ResizeTable\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\ttableLayout=\"fixed\"\n\t\t\t\t\t\tdataSource={tableData}\n\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\tclassName=\"metrics-accordion-content metrics-metadata-container\"\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t},\n\t\t],\n\t\t[actionButton, columns, tableData],\n\t);\n\n\treturn (\n\t\t<Collapse\n\t\t\tbordered\n\t\t\tclassName=\"metrics-accordion metrics-metadata-accordion\"\n\t\t\tactiveKey={activeKey}\n\t\t\tonChange={(keys): void => setActiveKey(keys)}\n\t\t\titems={items}\n\t\t/>\n\t);\n}\n\nexport default Metadata;\n","import './MetricDetails.styles.scss';\nimport '../Summary/Summary.styles.scss';\n\nimport { Color } from '@signozhq/design-tokens';\nimport {\n\tButton,\n\tDivider,\n\tDrawer,\n\tEmpty,\n\tSkeleton,\n\tTooltip,\n\tTypography,\n} from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { useGetMetricDetails } from 'hooks/metricsExplorer/useGetMetricDetails';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { Compass, Crosshair, X } from 'lucide-react';\nimport { useCallback, useEffect, useMemo } from 'react';\n\nimport { PANEL_TYPES } from '../../../constants/queryBuilder';\nimport ROUTES from '../../../constants/routes';\nimport { useHandleExplorerTabChange } from '../../../hooks/useHandleExplorerTabChange';\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport { isInspectEnabled } from '../Inspect/utils';\nimport { formatNumberIntoHumanReadableFormat } from '../Summary/utils';\nimport AllAttributes from './AllAttributes';\nimport DashboardsAndAlertsPopover from './DashboardsAndAlertsPopover';\nimport Metadata from './Metadata';\nimport { MetricDetailsProps } from './types';\nimport {\n\tformatNumberToCompactFormat,\n\tformatTimestampToReadableDate,\n\tgetMetricDetailsQuery,\n} from './utils';\n\nfunction MetricDetails({\n\tonClose,\n\tisOpen,\n\tmetricName,\n\topenInspectModal,\n}: MetricDetailsProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\tconst { handleExplorerTabChange } = useHandleExplorerTabChange();\n\n\tconst {\n\t\tdata,\n\t\tisLoading,\n\t\tisFetching,\n\t\terror: metricDetailsError,\n\t\trefetch: refetchMetricDetails,\n\t} = useGetMetricDetails(metricName ?? '', {\n\t\tenabled: !!metricName,\n\t});\n\n\tconst metric = data?.payload?.data;\n\n\tconst lastReceived = useMemo(() => {\n\t\tif (!metric) return null;\n\t\treturn formatTimestampToReadableDate(metric.lastReceived);\n\t}, [metric]);\n\n\tconst showInspectFeature = useMemo(\n\t\t() => isInspectEnabled(metric?.metadata?.metric_type),\n\t\t[metric],\n\t);\n\n\tconst isMetricDetailsLoading = isLoading || isFetching;\n\n\tconst timeSeries = useMemo(() => {\n\t\tif (!metric) return null;\n\t\tconst timeSeriesActive = formatNumberToCompactFormat(metric.timeSeriesActive);\n\t\tconst timeSeriesTotal = formatNumberToCompactFormat(metric.timeSeriesTotal);\n\n\t\treturn (\n\t\t\t<Tooltip\n\t\t\t\ttitle=\"Active time series are those that have received data points in the last 1\n\t\t\t\t\thour.\"\n\t\t\t\tplacement=\"top\"\n\t\t\t>\n\t\t\t\t<span>{`${timeSeriesTotal} total ⎯ ${timeSeriesActive} active`}</span>\n\t\t\t</Tooltip>\n\t\t);\n\t}, [metric]);\n\n\tconst goToMetricsExplorerwithSelectedMetric = useCallback(() => {\n\t\tif (metricName) {\n\t\t\tconst compositeQuery = getMetricDetailsQuery(\n\t\t\t\tmetricName,\n\t\t\t\tmetric?.metadata?.metric_type,\n\t\t\t);\n\t\t\thandleExplorerTabChange(\n\t\t\t\tPANEL_TYPES.TIME_SERIES,\n\t\t\t\t{\n\t\t\t\t\tquery: compositeQuery,\n\t\t\t\t\tname: metricName,\n\t\t\t\t\tid: metricName,\n\t\t\t\t},\n\t\t\t\tROUTES.METRICS_EXPLORER_EXPLORER,\n\t\t\t);\n\t\t\tlogEvent(MetricsExplorerEvents.OpenInExplorerClicked, {\n\t\t\t\t[MetricsExplorerEventKeys.MetricName]: metricName,\n\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t\t[MetricsExplorerEventKeys.Modal]: 'metric-details',\n\t\t\t});\n\t\t}\n\t}, [metricName, handleExplorerTabChange, metric?.metadata?.metric_type]);\n\n\tconst isMetricDetailsError = metricDetailsError || !metric;\n\n\tuseEffect(() => {\n\t\tlogEvent(MetricsExplorerEvents.ModalOpened, {\n\t\t\t[MetricsExplorerEventKeys.Modal]: 'metric-details',\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<Drawer\n\t\t\twidth=\"60%\"\n\t\t\ttitle={\n\t\t\t\t<div className=\"metric-details-header\">\n\t\t\t\t\t<div className=\"metric-details-title\">\n\t\t\t\t\t\t<Divider type=\"vertical\" />\n\t\t\t\t\t\t<Typography.Text>{metric?.name}</Typography.Text>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"metric-details-header-buttons\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={goToMetricsExplorerwithSelectedMetric}\n\t\t\t\t\t\t\ticon={<Compass size={16} />}\n\t\t\t\t\t\t\tdisabled={!metricName}\n\t\t\t\t\t\t\tdata-testid=\"open-in-explorer-button\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tOpen in Explorer\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t{/* Show the based on the feature flag. Will remove before releasing the feature */}\n\t\t\t\t\t\t{showInspectFeature && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName=\"inspect-metrics-button\"\n\t\t\t\t\t\t\t\taria-label=\"Inspect Metric\"\n\t\t\t\t\t\t\t\ticon={<Crosshair size={18} />}\n\t\t\t\t\t\t\t\tonClick={(): void => {\n\t\t\t\t\t\t\t\t\tif (metric?.name) {\n\t\t\t\t\t\t\t\t\t\topenInspectModal(metric.name);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdata-testid=\"inspect-metric-button\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tplacement=\"right\"\n\t\t\tonClose={onClose}\n\t\t\topen={isOpen}\n\t\t\tstyle={{\n\t\t\t\toverscrollBehavior: 'contain',\n\t\t\t\tbackground: isDarkMode ? Color.BG_INK_400 : Color.BG_VANILLA_100,\n\t\t\t}}\n\t\t\tclassName=\"metric-details-drawer\"\n\t\t\tdestroyOnClose\n\t\t\tcloseIcon={<X size={16} />}\n\t\t>\n\t\t\t{isMetricDetailsLoading && (\n\t\t\t\t<div data-testid=\"metric-details-skeleton\">\n\t\t\t\t\t<Skeleton active />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{isMetricDetailsError && !isMetricDetailsLoading && (\n\t\t\t\t<Empty description=\"Error fetching metric details\" />\n\t\t\t)}\n\t\t\t{!isMetricDetailsLoading && !isMetricDetailsError && (\n\t\t\t\t<div className=\"metric-details-content\">\n\t\t\t\t\t<div className=\"metric-details-content-grid\">\n\t\t\t\t\t\t<div className=\"labels-row\">\n\t\t\t\t\t\t\t<Typography.Text type=\"secondary\" className=\"metric-details-grid-label\">\n\t\t\t\t\t\t\t\tSAMPLES\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text type=\"secondary\" className=\"metric-details-grid-label\">\n\t\t\t\t\t\t\t\tTIME SERIES\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text type=\"secondary\" className=\"metric-details-grid-label\">\n\t\t\t\t\t\t\t\tLAST RECEIVED\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"values-row\">\n\t\t\t\t\t\t\t<Typography.Text className=\"metric-details-grid-value\">\n\t\t\t\t\t\t\t\t<Tooltip title={metric?.samples.toLocaleString()}>\n\t\t\t\t\t\t\t\t\t{formatNumberIntoHumanReadableFormat(metric?.samples)}\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text className=\"metric-details-grid-value\">\n\t\t\t\t\t\t\t\t<Tooltip title={timeSeries}>{timeSeries}</Tooltip>\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t\t<Typography.Text className=\"metric-details-grid-value\">\n\t\t\t\t\t\t\t\t<Tooltip title={lastReceived}>{lastReceived}</Tooltip>\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DashboardsAndAlertsPopover\n\t\t\t\t\t\tdashboards={metric.dashboards}\n\t\t\t\t\t\talerts={metric.alerts}\n\t\t\t\t\t/>\n\t\t\t\t\t<Metadata\n\t\t\t\t\t\tmetricName={metric?.name}\n\t\t\t\t\t\tmetadata={metric.metadata}\n\t\t\t\t\t\trefetchMetricDetails={refetchMetricDetails}\n\t\t\t\t\t/>\n\t\t\t\t\t{metric.attributes && (\n\t\t\t\t\t\t<AllAttributes\n\t\t\t\t\t\t\tmetricName={metric?.name}\n\t\t\t\t\t\t\tattributes={metric.attributes}\n\t\t\t\t\t\t\tmetricType={metric?.metadata?.metric_type}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</Drawer>\n\t);\n}\n\nexport default MetricDetails;\n","export const METRIC_METADATA_KEYS = {\n\tdescription: 'Description',\n\tunit: 'Unit',\n\tmetric_type: 'Metric Type',\n\ttemporality: 'Temporality',\n};\n","import MetricDetails from './MetricDetails';\n\nexport default MetricDetails;\n","import { Temporality } from 'api/metricsExplorer/getMetricDetails';\nimport { MetricType } from 'api/metricsExplorer/getMetricsList';\nimport { initialQueriesMap } from 'constants/queryBuilder';\nimport { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { Query } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\n\nexport function formatTimestampToReadableDate(timestamp: string): string {\n\tconst date = new Date(timestamp);\n\tconst now = new Date();\n\tconst diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n\n\tif (diffInSeconds < 60) return 'Few seconds ago';\n\n\tconst diffInMinutes = Math.floor(diffInSeconds / 60);\n\tif (diffInMinutes < 60)\n\t\treturn `${diffInMinutes} minute${diffInMinutes > 1 ? 's' : ''} ago`;\n\n\tconst diffInHours = Math.floor(diffInMinutes / 60);\n\tif (diffInHours < 24)\n\t\treturn `${diffInHours} hour${diffInHours > 1 ? 's' : ''} ago`;\n\n\tconst diffInDays = Math.floor(diffInHours / 24);\n\tif (diffInDays === 1) {\n\t\treturn `Yesterday at ${date\n\t\t\t.getHours()\n\t\t\t.toString()\n\t\t\t.padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n\t}\n\tif (diffInDays < 7) return `${diffInDays} days ago`;\n\n\treturn date.toLocaleDateString();\n}\n\nexport function formatNumberToCompactFormat(num: number): string {\n\treturn new Intl.NumberFormat('en-US', {\n\t\tnotation: 'compact',\n\t\tmaximumFractionDigits: 1,\n\t}).format(num);\n}\n\nexport function determineIsMonotonic(\n\tmetricType: MetricType,\n\ttemporality?: Temporality,\n): boolean {\n\tif (\n\t\tmetricType === MetricType.HISTOGRAM ||\n\t\tmetricType === MetricType.EXPONENTIAL_HISTOGRAM\n\t) {\n\t\treturn true;\n\t}\n\tif (metricType === MetricType.GAUGE || metricType === MetricType.SUMMARY) {\n\t\treturn false;\n\t}\n\tif (metricType === MetricType.SUM) {\n\t\treturn temporality === Temporality.CUMULATIVE;\n\t}\n\treturn false;\n}\n\nexport function getMetricDetailsQuery(\n\tmetricName: string,\n\tmetricType: MetricType | undefined,\n\tfilter?: { key: string; value: string },\n\tgroupBy?: string,\n): Query {\n\tlet timeAggregation;\n\tlet spaceAggregation;\n\tlet aggregateOperator;\n\tswitch (metricType) {\n\t\tcase MetricType.SUM:\n\t\t\ttimeAggregation = 'rate';\n\t\t\tspaceAggregation = 'sum';\n\t\t\taggregateOperator = 'rate';\n\t\t\tbreak;\n\t\tcase MetricType.GAUGE:\n\t\t\ttimeAggregation = 'avg';\n\t\t\tspaceAggregation = 'avg';\n\t\t\taggregateOperator = 'avg';\n\t\t\tbreak;\n\t\tcase MetricType.SUMMARY:\n\t\t\ttimeAggregation = 'noop';\n\t\t\tspaceAggregation = 'sum';\n\t\t\taggregateOperator = 'noop';\n\t\t\tbreak;\n\t\tcase MetricType.HISTOGRAM:\n\t\tcase MetricType.EXPONENTIAL_HISTOGRAM:\n\t\t\ttimeAggregation = 'noop';\n\t\t\tspaceAggregation = 'p90';\n\t\t\taggregateOperator = 'noop';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ttimeAggregation = 'noop';\n\t\t\tspaceAggregation = 'noop';\n\t\t\taggregateOperator = 'noop';\n\t\t\tbreak;\n\t}\n\n\treturn {\n\t\t...initialQueriesMap[DataSource.METRICS],\n\t\tbuilder: {\n\t\t\tqueryData: [\n\t\t\t\t{\n\t\t\t\t\t...initialQueriesMap[DataSource.METRICS].builder.queryData[0],\n\t\t\t\t\taggregateAttribute: {\n\t\t\t\t\t\tkey: metricName,\n\t\t\t\t\t\ttype: metricType ?? '',\n\t\t\t\t\t\tid: `${metricName}----${metricType}---string--`,\n\t\t\t\t\t\tisColumn: true,\n\t\t\t\t\t\tisJSON: false,\n\t\t\t\t\t},\n\t\t\t\t\taggregateOperator,\n\t\t\t\t\ttimeAggregation,\n\t\t\t\t\tspaceAggregation,\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\top: 'AND',\n\t\t\t\t\t\titems: filter\n\t\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\top: '=',\n\t\t\t\t\t\t\t\t\t\tid: filter.key,\n\t\t\t\t\t\t\t\t\t\tvalue: filter.value,\n\t\t\t\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\t\t\t\tkey: filter.key,\n\t\t\t\t\t\t\t\t\t\t\ttype: DataTypes.String,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t  ]\n\t\t\t\t\t\t\t: [],\n\t\t\t\t\t},\n\t\t\t\t\tgroupBy: groupBy\n\t\t\t\t\t\t? [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tkey: groupBy,\n\t\t\t\t\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\t\t\t\t\ttype: 'tag',\n\t\t\t\t\t\t\t\t\tisColumn: false,\n\t\t\t\t\t\t\t\t\tisJSON: false,\n\t\t\t\t\t\t\t\t\tid: `${groupBy}--string--tag--false`,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t  ]\n\t\t\t\t\t\t: [],\n\t\t\t\t},\n\t\t\t],\n\t\t\tqueryFormulas: [],\n\t\t},\n\t};\n}\n","import {\n\tButton,\n\tEmpty,\n\tInput,\n\tInputRef,\n\tMenu,\n\tMenuRef,\n\tPopover,\n\tSpin,\n} from 'antd';\nimport { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport { useGetMetricsListFilterValues } from 'hooks/metricsExplorer/useGetMetricsListFilterValues';\nimport useDebouncedFn from 'hooks/useDebouncedFunction';\nimport { Search } from 'lucide-react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom-v5-compat';\nimport { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\n\nimport { SUMMARY_FILTERS_KEY } from './constants';\n\nfunction MetricNameSearch({\n\tqueryFilters,\n}: {\n\tqueryFilters: TagFilter;\n}): JSX.Element {\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\n\tconst [isPopoverOpen, setIsPopoverOpen] = useState<boolean>(false);\n\tconst [searchString, setSearchString] = useState<string>('');\n\tconst [debouncedSearchString, setDebouncedSearchString] = useState<string>('');\n\tconst [highlightedIndex, setHighlightedIndex] = useState<number>(-1);\n\tconst menuRef = useRef<MenuRef | null>(null);\n\tconst inputRef = useRef<InputRef | null>(null);\n\n\tuseEffect(() => {\n\t\tif (isPopoverOpen) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tinputRef.current?.focus();\n\t\t\t}, 0); // Ensures focus happens after popover opens\n\t\t\tsetHighlightedIndex(-1);\n\t\t}\n\t}, [isPopoverOpen]);\n\n\tconst {\n\t\tdata: metricNameFilterValuesData,\n\t\tisLoading: isLoadingMetricNameFilterValues,\n\t\tisError: isErrorMetricNameFilterValues,\n\t} = useGetMetricsListFilterValues(\n\t\t{\n\t\t\tsearchText: debouncedSearchString,\n\t\t\tfilterKey: 'metric_name',\n\t\t\tfilterAttributeKeyDataType: DataTypes.String,\n\t\t\tlimit: 10,\n\t\t},\n\t\t{\n\t\t\tenabled: isPopoverOpen,\n\t\t\trefetchOnWindowFocus: false,\n\t\t\tqueryKey: [\n\t\t\t\tREACT_QUERY_KEY.GET_METRICS_LIST_FILTER_VALUES,\n\t\t\t\t'metric_name',\n\t\t\t\tdebouncedSearchString,\n\t\t\t\tisPopoverOpen,\n\t\t\t],\n\t\t},\n\t);\n\n\tconst handleSelect = useCallback(\n\t\t(selectedMetricName: string): void => {\n\t\t\tconst newFilters = {\n\t\t\t\titems: [\n\t\t\t\t\t...queryFilters.items,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'metric_name',\n\t\t\t\t\t\top: 'CONTAINS',\n\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\tid: 'metric_name',\n\t\t\t\t\t\t\tkey: 'metric_name',\n\t\t\t\t\t\t\ttype: 'tag',\n\t\t\t\t\t\t},\n\t\t\t\t\t\tvalue: selectedMetricName,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\top: 'and',\n\t\t\t};\n\t\t\tsetSearchParams({\n\t\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t\t[SUMMARY_FILTERS_KEY]: JSON.stringify(newFilters),\n\t\t\t});\n\t\t\tsetIsPopoverOpen(false);\n\t\t},\n\t\t[queryFilters.items, setSearchParams, searchParams],\n\t);\n\n\tconst metricNameFilterValues = useMemo(\n\t\t() => metricNameFilterValuesData?.payload?.data?.filterValues || [],\n\t\t[metricNameFilterValuesData],\n\t);\n\n\tconst handleKeyDown = useCallback(\n\t\t(event: React.KeyboardEvent<HTMLInputElement>) => {\n\t\t\tif (!isPopoverOpen) return;\n\n\t\t\tif (event.key === 'ArrowDown') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tsetHighlightedIndex((prev) => {\n\t\t\t\t\tconst nextIndex = prev < metricNameFilterValues.length - 1 ? prev + 1 : 0;\n\t\t\t\t\tmenuRef.current?.focus();\n\t\t\t\t\treturn nextIndex;\n\t\t\t\t});\n\t\t\t} else if (event.key === 'ArrowUp') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tsetHighlightedIndex((prev) => {\n\t\t\t\t\tconst prevIndex = prev > 0 ? prev - 1 : metricNameFilterValues.length - 1;\n\t\t\t\t\tmenuRef.current?.focus();\n\t\t\t\t\treturn prevIndex;\n\t\t\t\t});\n\t\t\t} else if (event.key === 'Enter') {\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// If there is a highlighted item, select it\n\t\t\t\tif (highlightedIndex >= 0 && metricNameFilterValues[highlightedIndex]) {\n\t\t\t\t\thandleSelect(metricNameFilterValues[highlightedIndex]);\n\t\t\t\t} else if (highlightedIndex === -1 && searchString) {\n\t\t\t\t\t// If there is no highlighted item and there is a search string, select the search string\n\t\t\t\t\thandleSelect(searchString);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t[\n\t\t\tisPopoverOpen,\n\t\t\thighlightedIndex,\n\t\t\tmetricNameFilterValues,\n\t\t\tsearchString,\n\t\t\thandleSelect,\n\t\t],\n\t);\n\n\tconst popoverItems = useMemo(() => {\n\t\tconst items: JSX.Element[] = [];\n\t\tif (searchString) {\n\t\t\titems.push(\n\t\t\t\t<Menu.Item\n\t\t\t\t\tkey={searchString}\n\t\t\t\t\tonClick={(): void => handleSelect(searchString)}\n\t\t\t\t\tclassName={highlightedIndex === 0 ? 'highlighted' : ''}\n\t\t\t\t>\n\t\t\t\t\t{searchString}\n\t\t\t\t</Menu.Item>,\n\t\t\t);\n\t\t}\n\t\tif (isLoadingMetricNameFilterValues) {\n\t\t\titems.push(<Spin />);\n\t\t} else if (isErrorMetricNameFilterValues) {\n\t\t\titems.push(<Empty description=\"Error fetching metric names\" />);\n\t\t} else if (metricNameFilterValues?.length === 0) {\n\t\t\titems.push(<Empty description=\"No metric names found\" />);\n\t\t} else {\n\t\t\titems.push(\n\t\t\t\t...metricNameFilterValues.map((filterValue, index) => (\n\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\tkey={filterValue}\n\t\t\t\t\t\tonClick={(): void => handleSelect(filterValue)}\n\t\t\t\t\t\tclassName={highlightedIndex === index ? 'highlighted' : ''}\n\t\t\t\t\t>\n\t\t\t\t\t\t{filterValue}\n\t\t\t\t\t</Menu.Item>\n\t\t\t\t)),\n\t\t\t);\n\t\t}\n\t\treturn items;\n\t}, [\n\t\thandleSelect,\n\t\thighlightedIndex,\n\t\tisErrorMetricNameFilterValues,\n\t\tisLoadingMetricNameFilterValues,\n\t\tmetricNameFilterValues,\n\t\tsearchString,\n\t]);\n\n\tconst debouncedUpdate = useDebouncedFn((value) => {\n\t\tsetDebouncedSearchString(value as string);\n\t}, 400);\n\n\tconst handleInputChange = useCallback(\n\t\t(e: React.ChangeEvent<HTMLInputElement>): void => {\n\t\t\tconst value = e.target.value.trim();\n\t\t\tsetSearchString(value);\n\t\t\tdebouncedUpdate(value);\n\t\t},\n\t\t[debouncedUpdate],\n\t);\n\n\tconst popoverContent = useMemo(\n\t\t() => (\n\t\t\t<div className=\"metric-name-search-popover\">\n\t\t\t\t<Input\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\tplaceholder=\"Search...\"\n\t\t\t\t\tvalue={searchString}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tbordered\n\t\t\t\t/>\n\t\t\t\t<Menu ref={menuRef} className=\"metric-name-search-popover-menu\">\n\t\t\t\t\t{popoverItems}\n\t\t\t\t</Menu>\n\t\t\t</div>\n\t\t),\n\t\t[handleKeyDown, searchString, handleInputChange, popoverItems],\n\t);\n\n\tuseEffect(() => {\n\t\tif (!isPopoverOpen) {\n\t\t\tsetSearchString('');\n\t\t\tsetDebouncedSearchString('');\n\t\t}\n\t}, [isPopoverOpen]);\n\n\treturn (\n\t\t<Popover\n\t\t\tcontent={popoverContent}\n\t\t\ttrigger=\"click\"\n\t\t\topen={isPopoverOpen}\n\t\t\tonOpenChange={(val): void => setIsPopoverOpen(val)}\n\t\t>\n\t\t\t<Button\n\t\t\t\ttype=\"text\"\n\t\t\t\tshape=\"circle\"\n\t\t\t\tonClick={(e): void => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}}\n\t\t\t\ticon={<Search size={14} />}\n\t\t\t/>\n\t\t</Popover>\n\t);\n}\n\nexport default MetricNameSearch;\n","import { Button, Menu, Popover, Tooltip } from 'antd';\nimport { MetricType } from 'api/metricsExplorer/getMetricsList';\nimport { Search } from 'lucide-react';\nimport { useCallback, useMemo, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom-v5-compat';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\n\nimport {\n\tMETRIC_TYPE_LABEL_MAP,\n\tMETRIC_TYPE_VALUES_MAP,\n\tSUMMARY_FILTERS_KEY,\n} from './constants';\n\nfunction MetricTypeSearch({\n\tqueryFilters,\n}: {\n\tqueryFilters: TagFilter;\n}): JSX.Element {\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\n\tconst [isPopoverOpen, setIsPopoverOpen] = useState<boolean>(false);\n\n\tconst menuItems = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tkey: 'all',\n\t\t\t\tvalue: 'All',\n\t\t\t},\n\t\t\t...Object.keys(METRIC_TYPE_LABEL_MAP).map((key) => ({\n\t\t\t\tkey: METRIC_TYPE_VALUES_MAP[key as MetricType],\n\t\t\t\tvalue: METRIC_TYPE_LABEL_MAP[key as MetricType],\n\t\t\t})),\n\t\t],\n\t\t[],\n\t);\n\n\tconst handleSelect = useCallback(\n\t\t(selectedMetricType: string): void => {\n\t\t\tif (selectedMetricType !== 'all') {\n\t\t\t\tconst newFilters = {\n\t\t\t\t\titems: [\n\t\t\t\t\t\t...queryFilters.items,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tid: 'metric_type',\n\t\t\t\t\t\t\top: '=',\n\t\t\t\t\t\t\tkey: {\n\t\t\t\t\t\t\t\tid: 'metric_type',\n\t\t\t\t\t\t\t\tkey: 'metric_type',\n\t\t\t\t\t\t\t\ttype: 'tag',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tvalue: selectedMetricType,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t\top: 'AND',\n\t\t\t\t};\n\t\t\t\tsetSearchParams({\n\t\t\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t\t\t[SUMMARY_FILTERS_KEY]: JSON.stringify(newFilters),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst newFilters = {\n\t\t\t\t\titems: queryFilters.items.filter((item) => item.id !== 'metric_type'),\n\t\t\t\t\top: 'AND',\n\t\t\t\t};\n\t\t\t\tsetSearchParams({\n\t\t\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t\t\t[SUMMARY_FILTERS_KEY]: JSON.stringify(newFilters),\n\t\t\t\t});\n\t\t\t}\n\t\t\tsetIsPopoverOpen(false);\n\t\t},\n\t\t[queryFilters.items, setSearchParams, searchParams],\n\t);\n\n\tconst menu = (\n\t\t<Menu>\n\t\t\t{menuItems.map((menuItem) => (\n\t\t\t\t<Menu.Item\n\t\t\t\t\tkey={menuItem.key}\n\t\t\t\t\tonClick={(): void => handleSelect(menuItem.key)}\n\t\t\t\t>\n\t\t\t\t\t{menuItem.value}\n\t\t\t\t</Menu.Item>\n\t\t\t))}\n\t\t</Menu>\n\t);\n\n\treturn (\n\t\t<Popover\n\t\t\tcontent={menu}\n\t\t\ttrigger=\"click\"\n\t\t\topen={isPopoverOpen}\n\t\t\tonOpenChange={(val): void => setIsPopoverOpen(val)}\n\t\t>\n\t\t\t<Tooltip title=\"Filter by metric type\">\n\t\t\t\t<Button type=\"text\" shape=\"circle\" icon={<Search size={14} />} />\n\t\t\t</Tooltip>\n\t\t</Popover>\n\t);\n}\n\nexport default MetricTypeSearch;\n","import { Tooltip } from 'antd';\nimport QueryBuilderSearch from 'container/QueryBuilder/filters/QueryBuilderSearch';\nimport DateTimeSelectionV2 from 'container/TopNav/DateTimeSelectionV2';\nimport { HardHat, Info } from 'lucide-react';\n\nimport { MetricsSearchProps } from './types';\n\nfunction MetricsSearch({ query, onChange }: MetricsSearchProps): JSX.Element {\n\treturn (\n\t\t<div className=\"metrics-search-container\">\n\t\t\t<div className=\"qb-search-container\">\n\t\t\t\t<Tooltip\n\t\t\t\t\ttitle=\"Use filters to refine metrics based on attributes. Example: service_name=api - Shows all metrics associated with the API service\"\n\t\t\t\t\tplacement=\"right\"\n\t\t\t\t>\n\t\t\t\t\t<Info size={16} />\n\t\t\t\t</Tooltip>\n\t\t\t\t<QueryBuilderSearch\n\t\t\t\t\tquery={query}\n\t\t\t\t\tonChange={onChange}\n\t\t\t\t\tsuffixIcon={<HardHat size={16} />}\n\t\t\t\t\tisMetricsExplorer\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"metrics-search-options\">\n\t\t\t\t<DateTimeSelectionV2\n\t\t\t\t\tshowAutoRefresh={false}\n\t\t\t\t\tshowRefreshText={false}\n\t\t\t\t\thideShareModal\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default MetricsSearch;\n","import { LoadingOutlined } from '@ant-design/icons';\nimport {\n\tSpin,\n\tTable,\n\tTablePaginationConfig,\n\tTableProps,\n\tTooltip,\n\tTypography,\n} from 'antd';\nimport { SorterResult } from 'antd/es/table/interface';\nimport { Info } from 'lucide-react';\nimport { useCallback } from 'react';\n\nimport { MetricsListItemRowData, MetricsTableProps } from './types';\nimport { getMetricsTableColumns } from './utils';\n\nfunction MetricsTable({\n\tisLoading,\n\tisError,\n\tdata,\n\tpageSize,\n\tcurrentPage,\n\tonPaginationChange,\n\tsetOrderBy,\n\ttotalCount,\n\topenMetricDetails,\n\tqueryFilters,\n}: MetricsTableProps): JSX.Element {\n\tconst handleTableChange: TableProps<MetricsListItemRowData>['onChange'] = useCallback(\n\t\t(\n\t\t\t_pagination: TablePaginationConfig,\n\t\t\t_filters: Record<string, (string | number | boolean)[] | null>,\n\t\t\tsorter:\n\t\t\t\t| SorterResult<MetricsListItemRowData>\n\t\t\t\t| SorterResult<MetricsListItemRowData>[],\n\t\t): void => {\n\t\t\tif ('field' in sorter && sorter.order) {\n\t\t\t\tsetOrderBy({\n\t\t\t\t\tcolumnName: sorter.field as string,\n\t\t\t\t\torder: sorter.order === 'ascend' ? 'asc' : 'desc',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetOrderBy({\n\t\t\t\t\tcolumnName: 'samples',\n\t\t\t\t\torder: 'desc',\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[setOrderBy],\n\t);\n\n\treturn (\n\t\t<div className=\"metrics-table-container\">\n\t\t\t{!isError && !isLoading && (\n\t\t\t\t<div className=\"metrics-table-title\" data-testid=\"metrics-table-title\">\n\t\t\t\t\t<Typography.Title level={4} className=\"metrics-table-title\">\n\t\t\t\t\t\tList View\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\ttitle=\"The table displays all metrics in the selected time range. Each row represents a unique metric, and its metric name, and metadata like description, type, unit, and samples/timeseries cardinality observed in the selected time range.\"\n\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Info size={16} />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<Table\n\t\t\t\tloading={{\n\t\t\t\t\tspinning: isLoading,\n\t\t\t\t\tindicator: (\n\t\t\t\t\t\t<Spin\n\t\t\t\t\t\t\tdata-testid=\"metrics-table-loading-state\"\n\t\t\t\t\t\t\tindicator={<LoadingOutlined size={14} spin />}\n\t\t\t\t\t\t/>\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t\tdataSource={data}\n\t\t\t\tcolumns={getMetricsTableColumns(queryFilters)}\n\t\t\t\tlocale={{\n\t\t\t\t\temptyText: isLoading ? null : (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"no-metrics-message-container\"\n\t\t\t\t\t\t\tdata-testid={\n\t\t\t\t\t\t\t\tisError ? 'metrics-table-error-state' : 'metrics-table-empty-state'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tsrc=\"/Icons/emptyState.svg\"\n\t\t\t\t\t\t\t\talt=\"thinking-emoji\"\n\t\t\t\t\t\t\t\tclassName=\"empty-state-svg\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Typography.Text className=\"no-metrics-message\">\n\t\t\t\t\t\t\t\t{isError\n\t\t\t\t\t\t\t\t\t? 'Error fetching metrics. If the problem persists, please contact support.'\n\t\t\t\t\t\t\t\t\t: 'This query had no results. Edit your query and try again!'}\n\t\t\t\t\t\t\t</Typography.Text>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t\ttableLayout=\"fixed\"\n\t\t\t\tonChange={handleTableChange}\n\t\t\t\tpagination={{\n\t\t\t\t\tcurrent: currentPage,\n\t\t\t\t\tpageSize,\n\t\t\t\t\tshowSizeChanger: true,\n\t\t\t\t\thideOnSinglePage: false,\n\t\t\t\t\tonChange: onPaginationChange,\n\t\t\t\t\ttotal: totalCount,\n\t\t\t\t}}\n\t\t\t\tonRow={(record): { onClick: () => void; className: string } => ({\n\t\t\t\t\tonClick: (): void => openMetricDetails(record.key, 'list'),\n\t\t\t\t\tclassName: 'clickable-row',\n\t\t\t\t})}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default MetricsTable;\n","import { Group } from '@visx/group';\nimport { Treemap } from '@visx/hierarchy';\nimport { Empty, Select, Skeleton, Tooltip, Typography } from 'antd';\nimport { stratify, treemapBinary } from 'd3-hierarchy';\nimport { Info } from 'lucide-react';\nimport { useMemo } from 'react';\nimport { useWindowSize } from 'react-use';\n\nimport {\n\tTREEMAP_HEIGHT,\n\tTREEMAP_MARGINS,\n\tTREEMAP_SQUARE_PADDING,\n\tTREEMAP_VIEW_OPTIONS,\n} from './constants';\nimport { MetricsTreemapProps, TreemapTile, TreemapViewType } from './types';\nimport {\n\tgetTreemapTileStyle,\n\tgetTreemapTileTextStyle,\n\ttransformTreemapData,\n} from './utils';\n\nfunction MetricsTreemap({\n\tviewType,\n\tdata,\n\tisLoading,\n\tisError,\n\topenMetricDetails,\n\tsetHeatmapView,\n}: MetricsTreemapProps): JSX.Element {\n\tconst { width: windowWidth } = useWindowSize();\n\n\tconst treemapWidth = useMemo(\n\t\t() =>\n\t\t\tMath.max(\n\t\t\t\twindowWidth - TREEMAP_MARGINS.LEFT - TREEMAP_MARGINS.RIGHT - 70,\n\t\t\t\t300,\n\t\t\t),\n\t\t[windowWidth],\n\t);\n\n\tconst treemapData = useMemo(() => {\n\t\tconst extracedTreemapData =\n\t\t\t(viewType === TreemapViewType.TIMESERIES\n\t\t\t\t? data?.data?.[TreemapViewType.TIMESERIES]\n\t\t\t\t: data?.data?.[TreemapViewType.SAMPLES]) || [];\n\t\treturn transformTreemapData(extracedTreemapData, viewType);\n\t}, [data, viewType]);\n\n\tconst transformedTreemapData = stratify<TreemapTile>()\n\t\t.id((d) => d.id)\n\t\t.parentId((d) => d.parent)(treemapData)\n\t\t.sum((d) => d.size ?? 0);\n\n\tconst xMax = treemapWidth - TREEMAP_MARGINS.LEFT - TREEMAP_MARGINS.RIGHT;\n\tconst yMax = TREEMAP_HEIGHT - TREEMAP_MARGINS.TOP - TREEMAP_MARGINS.BOTTOM;\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<div data-testid=\"metrics-treemap-loading-state\">\n\t\t\t\t<Skeleton\n\t\t\t\t\tstyle={{ width: treemapWidth, height: TREEMAP_HEIGHT + 55 }}\n\t\t\t\t\tactive\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (\n\t\t!data ||\n\t\t!data.data ||\n\t\t(data?.status === 'success' && !data?.data?.[viewType])\n\t) {\n\t\treturn (\n\t\t\t<Empty\n\t\t\t\tdescription=\"No metrics found\"\n\t\t\t\tdata-testid=\"metrics-treemap-empty-state\"\n\t\t\t\tstyle={{ width: treemapWidth, height: TREEMAP_HEIGHT, paddingTop: 30 }}\n\t\t\t/>\n\t\t);\n\t}\n\n\tif (data?.status === 'error' || isError) {\n\t\treturn (\n\t\t\t<Empty\n\t\t\t\tdescription=\"Error fetching metrics. If the problem persists, please contact support.\"\n\t\t\t\tdata-testid=\"metrics-treemap-error-state\"\n\t\t\t\tstyle={{ width: treemapWidth, height: TREEMAP_HEIGHT, paddingTop: 30 }}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"metrics-treemap-container\"\n\t\t\tdata-testid=\"metrics-treemap-container\"\n\t\t>\n\t\t\t<div className=\"metrics-treemap-title\">\n\t\t\t\t<div className=\"metrics-treemap-title-left\">\n\t\t\t\t\t<Typography.Title level={4}>Proportion View</Typography.Title>\n\t\t\t\t\t<Tooltip\n\t\t\t\t\t\ttitle=\"The treemap displays the proportion of samples/timeseries in the selected time range. Each tile represents a unique metric, and its size indicates the percentage of samples/timeseries it contributes to the total.\"\n\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Info size={16} />\n\t\t\t\t\t</Tooltip>\n\t\t\t\t</div>\n\t\t\t\t<Select\n\t\t\t\t\toptions={TREEMAP_VIEW_OPTIONS}\n\t\t\t\t\tvalue={viewType}\n\t\t\t\t\tonChange={setHeatmapView}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<svg\n\t\t\t\twidth={treemapWidth}\n\t\t\t\theight={TREEMAP_HEIGHT}\n\t\t\t\tclassName=\"metrics-treemap\"\n\t\t\t>\n\t\t\t\t<rect\n\t\t\t\t\twidth={treemapWidth}\n\t\t\t\t\theight={TREEMAP_HEIGHT}\n\t\t\t\t\trx={14}\n\t\t\t\t\tfill=\"transparent\"\n\t\t\t\t/>\n\t\t\t\t<Treemap<TreemapTile>\n\t\t\t\t\ttop={TREEMAP_MARGINS.TOP}\n\t\t\t\t\troot={transformedTreemapData}\n\t\t\t\t\tsize={[xMax, yMax]}\n\t\t\t\t\ttile={treemapBinary}\n\t\t\t\t\tround\n\t\t\t\t>\n\t\t\t\t\t{(treemap): JSX.Element => (\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t{treemap\n\t\t\t\t\t\t\t\t.descendants()\n\t\t\t\t\t\t\t\t.reverse()\n\t\t\t\t\t\t\t\t.map((node, i) => {\n\t\t\t\t\t\t\t\t\tconst nodeWidth = node.x1 - node.x0 - TREEMAP_SQUARE_PADDING;\n\t\t\t\t\t\t\t\t\tconst nodeHeight = node.y1 - node.y0 - TREEMAP_SQUARE_PADDING;\n\t\t\t\t\t\t\t\t\tif (nodeWidth < 0 || nodeHeight < 0) {\n\t\t\t\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Group\n\t\t\t\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\t\t\t\t\t\tkey={node.data.id || `node-${i}`}\n\t\t\t\t\t\t\t\t\t\t\ttop={node.y0 + TREEMAP_MARGINS.TOP}\n\t\t\t\t\t\t\t\t\t\t\tleft={node.x0 + TREEMAP_MARGINS.LEFT}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{node.depth > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={`${node.data.id}: ${node.data.displayValue}%`}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplacement=\"top\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<foreignObject\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth={nodeWidth}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theight={nodeHeight}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(): void => openMetricDetails(node.data.id, 'treemap')}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...getTreemapTileStyle(node.data),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t...getTreemapTileTextStyle(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{`${node.data.displayValue}%`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</foreignObject>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t)}\n\t\t\t\t</Treemap>\n\t\t\t</svg>\n\t\t</div>\n\t);\n}\n\nexport default MetricsTreemap;\n","import './Summary.styles.scss';\n\nimport * as Sentry from '@sentry/react';\nimport logEvent from 'api/common/logEvent';\nimport { initialQueriesMap } from 'constants/queryBuilder';\nimport { usePageSize } from 'container/InfraMonitoringK8s/utils';\nimport { useGetMetricsList } from 'hooks/metricsExplorer/useGetMetricsList';\nimport { useGetMetricsTreeMap } from 'hooks/metricsExplorer/useGetMetricsTreeMap';\nimport ErrorBoundaryFallback from 'pages/ErrorBoundaryFallback/ErrorBoundaryFallback';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSearchParams } from 'react-router-dom-v5-compat';\nimport { AppState } from 'store/reducers';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\nimport { GlobalReducer } from 'types/reducer/globalTime';\n\nimport { MetricsExplorerEventKeys, MetricsExplorerEvents } from '../events';\nimport InspectModal from '../Inspect';\nimport MetricDetails from '../MetricDetails';\nimport {\n\tIS_INSPECT_MODAL_OPEN_KEY,\n\tIS_METRIC_DETAILS_OPEN_KEY,\n\tSELECTED_METRIC_NAME_KEY,\n\tSUMMARY_FILTERS_KEY,\n} from './constants';\nimport MetricsSearch from './MetricsSearch';\nimport MetricsTable from './MetricsTable';\nimport MetricsTreemap from './MetricsTreemap';\nimport { OrderByPayload, TreemapViewType } from './types';\nimport {\n\tconvertNanoToMilliseconds,\n\tformatDataForMetricsTable,\n\tgetMetricsListQuery,\n} from './utils';\n\nconst DEFAULT_ORDER_BY: OrderByPayload = {\n\tcolumnName: 'samples',\n\torder: 'desc',\n};\n\nfunction Summary(): JSX.Element {\n\tconst { pageSize, setPageSize } = usePageSize('metricsExplorer');\n\tconst [currentPage, setCurrentPage] = useState(1);\n\tconst [orderBy, setOrderBy] = useState<OrderByPayload>(DEFAULT_ORDER_BY);\n\tconst [heatmapView, setHeatmapView] = useState<TreemapViewType>(\n\t\tTreemapViewType.TIMESERIES,\n\t);\n\n\tconst [searchParams, setSearchParams] = useSearchParams();\n\tconst [isMetricDetailsOpen, setIsMetricDetailsOpen] = useState(\n\t\t() => searchParams.get(IS_METRIC_DETAILS_OPEN_KEY) === 'true' || false,\n\t);\n\tconst [isInspectModalOpen, setIsInspectModalOpen] = useState(\n\t\t() => searchParams.get(IS_INSPECT_MODAL_OPEN_KEY) === 'true' || false,\n\t);\n\tconst [selectedMetricName, setSelectedMetricName] = useState(\n\t\t() => searchParams.get(SELECTED_METRIC_NAME_KEY) || null,\n\t);\n\n\tconst { maxTime, minTime } = useSelector<AppState, GlobalReducer>(\n\t\t(state) => state.globalTime,\n\t);\n\n\tconst queryFilters: TagFilter = useMemo(() => {\n\t\tconst encodedFilters = searchParams.get(SUMMARY_FILTERS_KEY);\n\t\tif (encodedFilters) {\n\t\t\treturn JSON.parse(encodedFilters);\n\t\t}\n\t\treturn {\n\t\t\titems: [],\n\t\t\top: 'AND',\n\t\t};\n\t}, [searchParams]);\n\n\tuseEffect(() => {\n\t\tlogEvent(MetricsExplorerEvents.TabChanged, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t});\n\t}, []);\n\n\tuseEffect(() => {\n\t\tlogEvent(MetricsExplorerEvents.TimeUpdated, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t});\n\t}, [maxTime, minTime]);\n\n\t// This is used to avoid the filters from being serialized with the id\n\tconst queryFiltersWithoutId = useMemo(() => {\n\t\tconst filtersWithoutId = {\n\t\t\t...queryFilters,\n\t\t\titems: queryFilters.items.map(({ id, ...rest }) => rest),\n\t\t};\n\t\treturn JSON.stringify(filtersWithoutId);\n\t}, [queryFilters]);\n\n\tconst metricsListQuery = useMemo(() => {\n\t\tconst baseQuery = getMetricsListQuery();\n\t\treturn {\n\t\t\t...baseQuery,\n\t\t\tlimit: pageSize,\n\t\t\toffset: (currentPage - 1) * pageSize,\n\t\t\tfilters: queryFilters,\n\t\t\tstart: convertNanoToMilliseconds(minTime),\n\t\t\tend: convertNanoToMilliseconds(maxTime),\n\t\t\torderBy,\n\t\t};\n\t}, [queryFilters, minTime, maxTime, orderBy, pageSize, currentPage]);\n\n\tconst metricsTreemapQuery = useMemo(\n\t\t() => ({\n\t\t\tlimit: 100,\n\t\t\tfilters: queryFilters,\n\t\t\ttreemap: heatmapView,\n\t\t\tstart: convertNanoToMilliseconds(minTime),\n\t\t\tend: convertNanoToMilliseconds(maxTime),\n\t\t}),\n\t\t[queryFilters, heatmapView, minTime, maxTime],\n\t);\n\n\tconst {\n\t\tdata: metricsData,\n\t\tisLoading: isMetricsLoading,\n\t\tisFetching: isMetricsFetching,\n\t\tisError: isMetricsError,\n\t} = useGetMetricsList(metricsListQuery, {\n\t\tenabled: !!metricsListQuery && !isInspectModalOpen,\n\t\tqueryKey: [\n\t\t\t'metricsList',\n\t\t\tqueryFiltersWithoutId,\n\t\t\torderBy,\n\t\t\tpageSize,\n\t\t\tcurrentPage,\n\t\t\tminTime,\n\t\t\tmaxTime,\n\t\t],\n\t});\n\n\tconst isListViewError = useMemo(\n\t\t() => isMetricsError || !!(metricsData && metricsData.statusCode !== 200),\n\t\t[isMetricsError, metricsData],\n\t);\n\n\tconst {\n\t\tdata: treeMapData,\n\t\tisLoading: isTreeMapLoading,\n\t\tisFetching: isTreeMapFetching,\n\t\tisError: isTreeMapError,\n\t} = useGetMetricsTreeMap(metricsTreemapQuery, {\n\t\tenabled: !!metricsTreemapQuery && !isInspectModalOpen,\n\t\tqueryKey: [\n\t\t\t'metricsTreemap',\n\t\t\tqueryFiltersWithoutId,\n\t\t\theatmapView,\n\t\t\tminTime,\n\t\t\tmaxTime,\n\t\t],\n\t});\n\n\tconst isProportionViewError = useMemo(\n\t\t() => isTreeMapError || treeMapData?.statusCode !== 200,\n\t\t[isTreeMapError, treeMapData],\n\t);\n\n\tconst handleFilterChange = useCallback(\n\t\t(value: TagFilter) => {\n\t\t\tsetSearchParams({\n\t\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t\t[SUMMARY_FILTERS_KEY]: JSON.stringify(value),\n\t\t\t});\n\t\t\tsetCurrentPage(1);\n\t\t\tlogEvent(MetricsExplorerEvents.FilterApplied, {\n\t\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t});\n\t\t},\n\t\t[setSearchParams, searchParams],\n\t);\n\n\tconst searchQuery = useMemo(\n\t\t() => ({\n\t\t\t...initialQueriesMap.metrics.builder.queryData[0],\n\t\t\tfilters: queryFilters,\n\t\t}),\n\t\t[queryFilters],\n\t);\n\n\tconst onPaginationChange = (page: number, pageSize: number): void => {\n\t\tsetCurrentPage(page);\n\t\tsetPageSize(pageSize);\n\t\tlogEvent(MetricsExplorerEvents.PageNumberChanged, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t[MetricsExplorerEventKeys.PageNumber]: page,\n\t\t});\n\t\tlogEvent(MetricsExplorerEvents.PageSizeChanged, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t[MetricsExplorerEventKeys.PageSize]: pageSize,\n\t\t});\n\t};\n\n\tconst formattedMetricsData = useMemo(\n\t\t() => formatDataForMetricsTable(metricsData?.payload?.data?.metrics || []),\n\t\t[metricsData],\n\t);\n\n\tconst openMetricDetails = (\n\t\tmetricName: string,\n\t\tview: 'list' | 'treemap',\n\t): void => {\n\t\tsetSelectedMetricName(metricName);\n\t\tsetIsMetricDetailsOpen(true);\n\t\tsetSearchParams({\n\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t[IS_METRIC_DETAILS_OPEN_KEY]: 'true',\n\t\t\t[SELECTED_METRIC_NAME_KEY]: metricName,\n\t\t});\n\t\tlogEvent(MetricsExplorerEvents.MetricClicked, {\n\t\t\t[MetricsExplorerEventKeys.MetricName]: metricName,\n\t\t\t[MetricsExplorerEventKeys.View]: view,\n\t\t});\n\t};\n\n\tconst closeMetricDetails = (): void => {\n\t\tsetSelectedMetricName(null);\n\t\tsetIsMetricDetailsOpen(false);\n\t\tsetSearchParams({\n\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t[IS_METRIC_DETAILS_OPEN_KEY]: 'false',\n\t\t\t[SELECTED_METRIC_NAME_KEY]: '',\n\t\t});\n\t};\n\n\tconst openInspectModal = (metricName: string): void => {\n\t\tsetSelectedMetricName(metricName);\n\t\tsetIsInspectModalOpen(true);\n\t\tsetIsMetricDetailsOpen(false);\n\t\tsetSearchParams({\n\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t[IS_INSPECT_MODAL_OPEN_KEY]: 'true',\n\t\t\t[SELECTED_METRIC_NAME_KEY]: metricName,\n\t\t});\n\t};\n\n\tconst closeInspectModal = (): void => {\n\t\tsetIsInspectModalOpen(false);\n\t\tsetSelectedMetricName(null);\n\t\tsetSearchParams({\n\t\t\t...Object.fromEntries(searchParams.entries()),\n\t\t\t[IS_INSPECT_MODAL_OPEN_KEY]: 'false',\n\t\t\t[SELECTED_METRIC_NAME_KEY]: '',\n\t\t});\n\t};\n\n\tconst handleSetHeatmapView = (view: TreemapViewType): void => {\n\t\tsetHeatmapView(view);\n\t\tlogEvent(MetricsExplorerEvents.TreemapViewChanged, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t[MetricsExplorerEventKeys.ViewType]: view,\n\t\t});\n\t};\n\n\tconst handleSetOrderBy = (orderBy: OrderByPayload): void => {\n\t\tsetOrderBy(orderBy);\n\t\tlogEvent(MetricsExplorerEvents.OrderByApplied, {\n\t\t\t[MetricsExplorerEventKeys.Tab]: 'summary',\n\t\t\t[MetricsExplorerEventKeys.ColumnName]: orderBy.columnName,\n\t\t\t[MetricsExplorerEventKeys.Order]: orderBy.order,\n\t\t});\n\t};\n\n\treturn (\n\t\t<Sentry.ErrorBoundary fallback={<ErrorBoundaryFallback />}>\n\t\t\t<div className=\"metrics-explorer-summary-tab\">\n\t\t\t\t<MetricsSearch query={searchQuery} onChange={handleFilterChange} />\n\t\t\t\t<MetricsTreemap\n\t\t\t\t\tdata={treeMapData?.payload}\n\t\t\t\t\tisLoading={isTreeMapLoading || isTreeMapFetching}\n\t\t\t\t\tisError={isProportionViewError}\n\t\t\t\t\tviewType={heatmapView}\n\t\t\t\t\topenMetricDetails={openMetricDetails}\n\t\t\t\t\tsetHeatmapView={handleSetHeatmapView}\n\t\t\t\t/>\n\t\t\t\t<MetricsTable\n\t\t\t\t\tisLoading={isMetricsLoading || isMetricsFetching}\n\t\t\t\t\tisError={isListViewError}\n\t\t\t\t\tdata={formattedMetricsData}\n\t\t\t\t\tpageSize={pageSize}\n\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\tonPaginationChange={onPaginationChange}\n\t\t\t\t\tsetOrderBy={handleSetOrderBy}\n\t\t\t\t\ttotalCount={metricsData?.payload?.data?.total || 0}\n\t\t\t\t\topenMetricDetails={openMetricDetails}\n\t\t\t\t\tqueryFilters={queryFilters}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{isMetricDetailsOpen && (\n\t\t\t\t<MetricDetails\n\t\t\t\t\tisOpen={isMetricDetailsOpen}\n\t\t\t\t\tonClose={closeMetricDetails}\n\t\t\t\t\tmetricName={selectedMetricName}\n\t\t\t\t\tisModalTimeSelection={false}\n\t\t\t\t\topenInspectModal={openInspectModal}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isInspectModalOpen && (\n\t\t\t\t<InspectModal\n\t\t\t\t\tisOpen={isInspectModalOpen}\n\t\t\t\t\tonClose={closeInspectModal}\n\t\t\t\t\tmetricName={selectedMetricName}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Sentry.ErrorBoundary>\n\t);\n}\n\nexport default Summary;\n","import { MetricType } from 'api/metricsExplorer/getMetricsList';\n\nimport { TreemapViewType } from './types';\n\nexport const METRICS_TABLE_PAGE_SIZE = 10;\n\nexport const TREEMAP_VIEW_OPTIONS: {\n\tvalue: TreemapViewType;\n\tlabel: string;\n}[] = [\n\t{ value: TreemapViewType.TIMESERIES, label: 'Time Series' },\n\t{ value: TreemapViewType.SAMPLES, label: 'Samples' },\n];\n\nexport const TREEMAP_HEIGHT = 200;\nexport const TREEMAP_SQUARE_PADDING = 5;\n\nexport const TREEMAP_MARGINS = { TOP: 10, LEFT: 10, RIGHT: 10, BOTTOM: 10 };\n\nexport const METRIC_TYPE_LABEL_MAP = {\n\t[MetricType.SUM]: 'Sum',\n\t[MetricType.GAUGE]: 'Gauge',\n\t[MetricType.HISTOGRAM]: 'Histogram',\n\t[MetricType.SUMMARY]: 'Summary',\n\t[MetricType.EXPONENTIAL_HISTOGRAM]: 'Exp. Histogram',\n};\n\nexport const METRIC_TYPE_VALUES_MAP = {\n\t[MetricType.SUM]: 'Sum',\n\t[MetricType.GAUGE]: 'Gauge',\n\t[MetricType.HISTOGRAM]: 'Histogram',\n\t[MetricType.SUMMARY]: 'Summary',\n\t[MetricType.EXPONENTIAL_HISTOGRAM]: 'ExponentialHistogram',\n};\n\nexport const IS_METRIC_DETAILS_OPEN_KEY = 'isMetricDetailsOpen';\nexport const IS_INSPECT_MODAL_OPEN_KEY = 'isInspectModalOpen';\nexport const SELECTED_METRIC_NAME_KEY = 'selectedMetricName';\nexport const SUMMARY_FILTERS_KEY = 'summaryFilters';\n","import Summary from './Summary';\n\nexport default Summary;\n","import { MetricsTreeMapResponse } from 'api/metricsExplorer/getMetricsTreeMap';\nimport React from 'react';\nimport {\n\tIBuilderQuery,\n\tTagFilter,\n} from 'types/api/queryBuilder/queryBuilderData';\n\nexport interface MetricsTableProps {\n\tisLoading: boolean;\n\tisError: boolean;\n\tdata: MetricsListItemRowData[];\n\tpageSize: number;\n\tcurrentPage: number;\n\tonPaginationChange: (page: number, pageSize: number) => void;\n\tsetOrderBy: (orderBy: OrderByPayload) => void;\n\ttotalCount: number;\n\topenMetricDetails: (metricName: string, view: 'list' | 'treemap') => void;\n\tqueryFilters: TagFilter;\n}\n\nexport interface MetricsSearchProps {\n\tquery: IBuilderQuery;\n\tonChange: (value: TagFilter) => void;\n}\n\nexport interface MetricsTreemapProps {\n\tdata: MetricsTreeMapResponse | null | undefined;\n\tisLoading: boolean;\n\tisError: boolean;\n\tviewType: TreemapViewType;\n\topenMetricDetails: (metricName: string, view: 'list' | 'treemap') => void;\n\tsetHeatmapView: (value: TreemapViewType) => void;\n}\n\nexport interface OrderByPayload {\n\tcolumnName: string;\n\torder: 'asc' | 'desc';\n}\n\nexport interface MetricsListItemRowData {\n\tkey: string;\n\tmetric_name: React.ReactNode;\n\tdescription: React.ReactNode;\n\tmetric_type: React.ReactNode;\n\tunit: React.ReactNode;\n\tsamples: React.ReactNode;\n\ttimeseries: React.ReactNode;\n}\n\nexport enum TreemapViewType {\n\tTIMESERIES = 'timeseries',\n\tSAMPLES = 'samples',\n}\n\nexport interface TreemapTile {\n\tid: string;\n\tsize: number;\n\tdisplayValue: number | string | null;\n\tparent: string | null;\n}\n","import { Color } from '@signozhq/design-tokens';\nimport { Tooltip, Typography } from 'antd';\nimport { ColumnType } from 'antd/es/table';\nimport {\n\tMetricsListItemData,\n\tMetricsListPayload,\n\tMetricType,\n} from 'api/metricsExplorer/getMetricsList';\nimport {\n\tSamplesData,\n\tTimeseriesData,\n} from 'api/metricsExplorer/getMetricsTreeMap';\nimport {\n\tBarChart,\n\tBarChart2,\n\tBarChartHorizontal,\n\tDiff,\n\tGauge,\n} from 'lucide-react';\nimport { useMemo } from 'react';\nimport { TagFilter } from 'types/api/queryBuilder/queryBuilderData';\n\nimport { METRIC_TYPE_LABEL_MAP } from './constants';\nimport MetricNameSearch from './MetricNameSearch';\nimport MetricTypeSearch from './MetricTypeSearch';\nimport { MetricsListItemRowData, TreemapTile, TreemapViewType } from './types';\n\nexport const getMetricsTableColumns = (\n\tqueryFilters: TagFilter,\n): ColumnType<MetricsListItemRowData>[] => [\n\t{\n\t\ttitle: (\n\t\t\t<div className=\"metric-name-column-header\">\n\t\t\t\t<span className=\"metric-name-column-header-text\">METRIC</span>\n\t\t\t\t<MetricNameSearch queryFilters={queryFilters} />\n\t\t\t</div>\n\t\t),\n\t\tdataIndex: 'metric_name',\n\t\twidth: 400,\n\t\tsorter: false,\n\t\trender: (value: string): React.ReactNode => (\n\t\t\t<div className=\"metric-name-column-value\">{value}</div>\n\t\t),\n\t},\n\t{\n\t\ttitle: 'DESCRIPTION',\n\t\tdataIndex: 'description',\n\t\twidth: 400,\n\t\trender: (value: string): React.ReactNode => (\n\t\t\t<div className=\"metric-description-column-value\">{value}</div>\n\t\t),\n\t},\n\t{\n\t\ttitle: (\n\t\t\t<div className=\"metric-type-column-header\">\n\t\t\t\t<span className=\"metric-type-column-header-text\">TYPE</span>\n\t\t\t\t<MetricTypeSearch queryFilters={queryFilters} />\n\t\t\t</div>\n\t\t),\n\t\tdataIndex: 'metric_type',\n\t\tsorter: false,\n\t\twidth: 150,\n\t},\n\t{\n\t\ttitle: 'UNIT',\n\t\tdataIndex: 'unit',\n\t\twidth: 150,\n\t},\n\t{\n\t\ttitle: 'SAMPLES',\n\t\tdataIndex: TreemapViewType.SAMPLES,\n\t\twidth: 150,\n\t\tsorter: true,\n\t},\n\t{\n\t\ttitle: 'TIME SERIES',\n\t\tdataIndex: TreemapViewType.TIMESERIES,\n\t\twidth: 150,\n\t\tsorter: true,\n\t},\n];\n\nexport const getMetricsListQuery = (): MetricsListPayload => ({\n\tfilters: {\n\t\titems: [],\n\t\top: 'and',\n\t},\n\torderBy: { columnName: 'metric_name', order: 'asc' },\n});\n\nexport function MetricTypeRenderer({\n\ttype,\n}: {\n\ttype: MetricType;\n}): JSX.Element {\n\tconst [icon, color] = useMemo(() => {\n\t\tswitch (type) {\n\t\t\tcase MetricType.SUM:\n\t\t\t\treturn [\n\t\t\t\t\t<Diff key={type} size={12} color={Color.BG_ROBIN_500} />,\n\t\t\t\t\tColor.BG_ROBIN_500,\n\t\t\t\t];\n\t\t\tcase MetricType.GAUGE:\n\t\t\t\treturn [\n\t\t\t\t\t<Gauge key={type} size={12} color={Color.BG_SAKURA_500} />,\n\t\t\t\t\tColor.BG_SAKURA_500,\n\t\t\t\t];\n\t\t\tcase MetricType.HISTOGRAM:\n\t\t\t\treturn [\n\t\t\t\t\t<BarChart2 key={type} size={12} color={Color.BG_SIENNA_500} />,\n\t\t\t\t\tColor.BG_SIENNA_500,\n\t\t\t\t];\n\t\t\tcase MetricType.SUMMARY:\n\t\t\t\treturn [\n\t\t\t\t\t<BarChartHorizontal key={type} size={12} color={Color.BG_FOREST_500} />,\n\t\t\t\t\tColor.BG_FOREST_500,\n\t\t\t\t];\n\t\t\tcase MetricType.EXPONENTIAL_HISTOGRAM:\n\t\t\t\treturn [\n\t\t\t\t\t<BarChart key={type} size={12} color={Color.BG_AQUA_500} />,\n\t\t\t\t\tColor.BG_AQUA_500,\n\t\t\t\t];\n\t\t\tdefault:\n\t\t\t\treturn [null, ''];\n\t\t}\n\t}, [type]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"metric-type-renderer\"\n\t\t\tstyle={{\n\t\t\t\tbackgroundColor: `${color}33`,\n\t\t\t\tborder: `1px solid ${color}`,\n\t\t\t\tcolor,\n\t\t\t}}\n\t\t>\n\t\t\t{icon}\n\t\t\t<Typography.Text style={{ color, fontSize: 12 }}>\n\t\t\t\t{METRIC_TYPE_LABEL_MAP[type]}\n\t\t\t</Typography.Text>\n\t\t</div>\n\t);\n}\n\nfunction ValidateRowValueWrapper({\n\tvalue,\n\tchildren,\n}: {\n\tvalue: string | number | null;\n\tchildren: React.ReactNode;\n}): JSX.Element {\n\tif (!value) {\n\t\treturn <div>-</div>;\n\t}\n\treturn <div>{children}</div>;\n}\n\nexport const formatNumberIntoHumanReadableFormat = (\n\tnum: number,\n\taddPlusSign = true,\n): string => {\n\tfunction format(num: number, divisor: number, suffix: string): string {\n\t\tconst value = num / divisor;\n\t\treturn value % 1 === 0\n\t\t\t? `${value}${suffix}${addPlusSign ? '+' : ''}`\n\t\t\t: `${value.toFixed(1).replace(/\\.0$/, '')}${suffix}${\n\t\t\t\t\taddPlusSign ? '+' : ''\n\t\t\t  }`;\n\t}\n\n\tif (num >= 1_000_000_000) {\n\t\treturn format(num, 1_000_000_000, 'B');\n\t}\n\tif (num >= 1_000_000) {\n\t\treturn format(num, 1_000_000, 'M');\n\t}\n\tif (num >= 1_000) {\n\t\treturn format(num, 1_000, 'K');\n\t}\n\treturn num.toString();\n};\n\nexport const formatDataForMetricsTable = (\n\tdata: MetricsListItemData[],\n): MetricsListItemRowData[] =>\n\tdata.map((metric) => ({\n\t\tkey: metric.metric_name,\n\t\tmetric_name: (\n\t\t\t<ValidateRowValueWrapper value={metric.metric_name}>\n\t\t\t\t<Tooltip title={metric.metric_name}>{metric.metric_name}</Tooltip>\n\t\t\t</ValidateRowValueWrapper>\n\t\t),\n\t\tdescription: (\n\t\t\t<ValidateRowValueWrapper value={metric.description}>\n\t\t\t\t<Tooltip className=\"description-tooltip\" title={metric.description}>\n\t\t\t\t\t{metric.description}\n\t\t\t\t</Tooltip>\n\t\t\t</ValidateRowValueWrapper>\n\t\t),\n\t\tmetric_type: <MetricTypeRenderer type={metric.type} />,\n\t\tunit: (\n\t\t\t<ValidateRowValueWrapper value={metric.unit}>\n\t\t\t\t{metric.unit}\n\t\t\t</ValidateRowValueWrapper>\n\t\t),\n\t\t[TreemapViewType.SAMPLES]: (\n\t\t\t<ValidateRowValueWrapper value={metric[TreemapViewType.SAMPLES]}>\n\t\t\t\t<Tooltip title={metric[TreemapViewType.SAMPLES].toLocaleString()}>\n\t\t\t\t\t{formatNumberIntoHumanReadableFormat(metric[TreemapViewType.SAMPLES])}\n\t\t\t\t</Tooltip>\n\t\t\t</ValidateRowValueWrapper>\n\t\t),\n\t\t[TreemapViewType.TIMESERIES]: (\n\t\t\t<ValidateRowValueWrapper value={metric[TreemapViewType.TIMESERIES]}>\n\t\t\t\t<Tooltip title={metric[TreemapViewType.TIMESERIES].toLocaleString()}>\n\t\t\t\t\t{formatNumberIntoHumanReadableFormat(metric[TreemapViewType.TIMESERIES])}\n\t\t\t\t</Tooltip>\n\t\t\t</ValidateRowValueWrapper>\n\t\t),\n\t}));\n\nexport const transformTreemapData = (\n\tdata: TimeseriesData[] | SamplesData[],\n\tviewType: TreemapViewType,\n): TreemapTile[] => {\n\tconst totalSize = (data as (TimeseriesData | SamplesData)[]).reduce(\n\t\t(acc: number, item: TimeseriesData | SamplesData) => acc + item.percentage,\n\t\t0,\n\t);\n\n\tconst children = data.map((item) => ({\n\t\tid: item.metric_name,\n\t\tsize: totalSize > 0 ? Number((item.percentage / totalSize).toFixed(2)) : 0,\n\t\tdisplayValue: Number(item.percentage).toFixed(2),\n\t\tparent: viewType,\n\t}));\n\n\treturn [\n\t\t{\n\t\t\tid: viewType,\n\t\t\tsize: 0,\n\t\t\tparent: null,\n\t\t\tdisplayValue: null,\n\t\t},\n\t\t...children,\n\t];\n};\n\nconst getTreemapTileBackgroundColor = (node: TreemapTile): string => {\n\tconst size = node.size * 10;\n\tif (size > 0.8) {\n\t\treturn Color.BG_AMBER_600;\n\t}\n\tif (size > 0.6) {\n\t\treturn Color.BG_AMBER_500;\n\t}\n\tif (size > 0.4) {\n\t\treturn Color.BG_AMBER_400;\n\t}\n\tif (size > 0.2) {\n\t\treturn Color.BG_AMBER_300;\n\t}\n\tif (size > 0.1) {\n\t\treturn Color.BG_AMBER_200;\n\t}\n\treturn Color.BG_AMBER_100;\n};\n\nexport const getTreemapTileStyle = (\n\tnode: TreemapTile,\n): React.CSSProperties => ({\n\toverflow: 'visible',\n\tcursor: 'pointer',\n\tbackgroundColor: getTreemapTileBackgroundColor(node),\n\tborderRadius: 4,\n});\n\nexport const getTreemapTileTextStyle = (): React.CSSProperties => ({\n\twidth: '100%',\n\theight: '100%',\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n\tfontSize: '12px',\n\tfontWeight: 'bold',\n\tcolor: Color.TEXT_SLATE_400,\n\ttextAlign: 'center',\n\tpadding: '4px',\n});\n\nexport const convertNanoToMilliseconds = (time: number): number =>\n\tMath.floor(time / 1000000);\n","import { SuccessResponse } from 'types/api/index';\nimport { MetricRangePayloadProps } from 'types/api/metrics/getQueryRange';\nimport { QueryData } from 'types/api/widgets/getQuery';\n\nexport const convertDataValueToMs = (\n\tdata?: SuccessResponse<MetricRangePayloadProps>,\n): SuccessResponse<MetricRangePayloadProps> | undefined => {\n\tconst convertedData = data;\n\n\tconst convertedResult: QueryData[] = data?.payload?.data?.result\n\t\t? data.payload.data.result.map((item) => {\n\t\t\t\tconst values: [number, string][] = item.values.map((value) => {\n\t\t\t\t\tconst [first = 0, second = ''] = value || [];\n\t\t\t\t\treturn [first, String(Number(second) / 1000000)];\n\t\t\t\t});\n\n\t\t\t\treturn { ...item, values };\n\t\t  })\n\t\t: [];\n\n\tif (convertedData?.payload?.data?.result && convertedResult) {\n\t\tconvertedData.payload.data.result = convertedResult;\n\t}\n\n\treturn convertedData;\n};\n","import { Card, Col } from 'antd';\nimport styled from 'styled-components';\n\nexport const Container = styled(Card)`\n\tborder: none;\n\tbackground: inherit;\n\n\t.ant-card-body {\n\t\tpadding: 0;\n\t}\n`;\n\nexport const ButtonWrapper = styled(Col)`\n\tmargin-left: auto;\n`;\n","import {\n\tgetInspectMetricsDetails,\n\tInspectMetricsRequest,\n\tInspectMetricsResponse,\n} from 'api/metricsExplorer/getInspectMetricsDetails';\nimport { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport { useMemo } from 'react';\nimport { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\ntype UseGetInspectMetricsDetails = (\n\trequestData: InspectMetricsRequest,\n\toptions?: UseQueryOptions<\n\t\tSuccessResponse<InspectMetricsResponse> | ErrorResponse,\n\t\tError\n\t>,\n\theaders?: Record<string, string>,\n) => UseQueryResult<\n\tSuccessResponse<InspectMetricsResponse> | ErrorResponse,\n\tError\n>;\n\nexport const useGetInspectMetricsDetails: UseGetInspectMetricsDetails = (\n\trequestData,\n\toptions,\n\theaders,\n) => {\n\tconst queryKey = useMemo(() => {\n\t\tif (options?.queryKey && Array.isArray(options.queryKey)) {\n\t\t\treturn [...options.queryKey];\n\t\t}\n\n\t\tif (options?.queryKey && typeof options.queryKey === 'string') {\n\t\t\treturn options.queryKey;\n\t\t}\n\n\t\treturn [\n\t\t\tREACT_QUERY_KEY.GET_INSPECT_METRICS_DETAILS,\n\t\t\trequestData.metricName,\n\t\t\trequestData.start,\n\t\t\trequestData.end,\n\t\t\trequestData.filters,\n\t\t];\n\t}, [options?.queryKey, requestData]);\n\n\treturn useQuery<\n\t\tSuccessResponse<InspectMetricsResponse> | ErrorResponse,\n\t\tError\n\t>({\n\t\tqueryFn: ({ signal }) =>\n\t\t\tgetInspectMetricsDetails(requestData, signal, headers),\n\t\t...options,\n\t\tqueryKey,\n\t});\n};\n","import {\n\tgetMetricDetails,\n\tMetricDetailsResponse,\n} from 'api/metricsExplorer/getMetricDetails';\nimport { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport { useMemo } from 'react';\nimport { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\ntype UseGetMetricDetails = (\n\tmetricName: string,\n\toptions?: UseQueryOptions<\n\t\tSuccessResponse<MetricDetailsResponse> | ErrorResponse,\n\t\tError\n\t>,\n\theaders?: Record<string, string>,\n) => UseQueryResult<\n\tSuccessResponse<MetricDetailsResponse> | ErrorResponse,\n\tError\n>;\n\nexport const useGetMetricDetails: UseGetMetricDetails = (\n\tmetricName,\n\toptions,\n\theaders,\n) => {\n\tconst queryKey = useMemo(() => {\n\t\tif (options?.queryKey && Array.isArray(options.queryKey)) {\n\t\t\treturn [...options.queryKey];\n\t\t}\n\n\t\tif (options?.queryKey && typeof options.queryKey === 'string') {\n\t\t\treturn options.queryKey;\n\t\t}\n\n\t\treturn [REACT_QUERY_KEY.GET_METRIC_DETAILS, metricName];\n\t}, [options?.queryKey, metricName]);\n\n\treturn useQuery<SuccessResponse<MetricDetailsResponse> | ErrorResponse, Error>(\n\t\t{\n\t\t\tqueryFn: ({ signal }) => getMetricDetails(metricName, signal, headers),\n\t\t\t...options,\n\t\t\tqueryKey,\n\t\t},\n\t);\n};\n","import {\n\tgetMetricsList,\n\tMetricsListPayload,\n\tMetricsListResponse,\n} from 'api/metricsExplorer/getMetricsList';\nimport { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport { useMemo } from 'react';\nimport { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\ntype UseGetMetricsList = (\n\trequestData: MetricsListPayload,\n\n\toptions?: UseQueryOptions<\n\t\tSuccessResponse<MetricsListResponse> | ErrorResponse,\n\t\tError\n\t>,\n\n\theaders?: Record<string, string>,\n) => UseQueryResult<\n\tSuccessResponse<MetricsListResponse> | ErrorResponse,\n\tError\n>;\n\nexport const useGetMetricsList: UseGetMetricsList = (\n\trequestData,\n\toptions,\n\theaders,\n) => {\n\tconst queryKey = useMemo(() => {\n\t\tif (options?.queryKey && Array.isArray(options.queryKey)) {\n\t\t\treturn [...options.queryKey];\n\t\t}\n\n\t\tif (options?.queryKey && typeof options.queryKey === 'string') {\n\t\t\treturn options.queryKey;\n\t\t}\n\n\t\treturn [REACT_QUERY_KEY.GET_METRICS_LIST, requestData];\n\t}, [options?.queryKey, requestData]);\n\n\treturn useQuery<SuccessResponse<MetricsListResponse> | ErrorResponse, Error>({\n\t\tqueryFn: ({ signal }) => getMetricsList(requestData, signal, headers),\n\t\t...options,\n\t\tqueryKey,\n\t});\n};\n","import {\n\tgetMetricsListFilterValues,\n\tMetricsListFilterValuesPayload,\n\tMetricsListFilterValuesResponse,\n} from 'api/metricsExplorer/getMetricsListFilterValues';\nimport { useMemo } from 'react';\nimport { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\ntype UseGetMetricsListFilterValues = (\n\tpayload: MetricsListFilterValuesPayload,\n\toptions?: UseQueryOptions<\n\t\tSuccessResponse<MetricsListFilterValuesResponse> | ErrorResponse,\n\t\tError\n\t>,\n\theaders?: Record<string, string>,\n) => UseQueryResult<\n\tSuccessResponse<MetricsListFilterValuesResponse> | ErrorResponse,\n\tError\n>;\n\nexport const useGetMetricsListFilterValues: UseGetMetricsListFilterValues = (\n\tprops,\n\toptions,\n\theaders,\n) => {\n\tconst queryKey = useMemo(() => {\n\t\tif (options?.queryKey && Array.isArray(options.queryKey)) {\n\t\t\treturn [...options.queryKey];\n\t\t}\n\t\treturn [props];\n\t}, [options?.queryKey, props]);\n\n\treturn useQuery<\n\t\tSuccessResponse<MetricsListFilterValuesResponse> | ErrorResponse,\n\t\tError\n\t>({\n\t\tqueryFn: ({ signal }) => getMetricsListFilterValues(props, signal, headers),\n\t\t...options,\n\t\tqueryKey,\n\t});\n};\n","import {\n\tgetMetricsTreeMap,\n\tMetricsTreeMapPayload,\n\tMetricsTreeMapResponse,\n} from 'api/metricsExplorer/getMetricsTreeMap';\nimport { REACT_QUERY_KEY } from 'constants/reactQueryKeys';\nimport { useMemo } from 'react';\nimport { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\ntype UseGetMetricsTreeMap = (\n\trequestData: MetricsTreeMapPayload,\n\n\toptions?: UseQueryOptions<\n\t\tSuccessResponse<MetricsTreeMapResponse> | ErrorResponse,\n\t\tError\n\t>,\n\n\theaders?: Record<string, string>,\n) => UseQueryResult<\n\tSuccessResponse<MetricsTreeMapResponse> | ErrorResponse,\n\tError\n>;\n\nexport const useGetMetricsTreeMap: UseGetMetricsTreeMap = (\n\trequestData,\n\toptions,\n\theaders,\n) => {\n\tconst queryKey = useMemo(() => {\n\t\tif (options?.queryKey && Array.isArray(options.queryKey)) {\n\t\t\treturn [...options.queryKey];\n\t\t}\n\n\t\tif (options?.queryKey && typeof options.queryKey === 'string') {\n\t\t\treturn options.queryKey;\n\t\t}\n\n\t\treturn [REACT_QUERY_KEY.GET_METRICS_TREE_MAP, requestData];\n\t}, [options?.queryKey, requestData]);\n\n\treturn useQuery<\n\t\tSuccessResponse<MetricsTreeMapResponse> | ErrorResponse,\n\t\tError\n\t>({\n\t\tqueryFn: ({ signal }) => getMetricsTreeMap(requestData, signal, headers),\n\t\t...options,\n\t\tqueryKey,\n\t});\n};\n","import updateMetricMetadata, {\n\tUpdateMetricMetadataProps,\n\tUpdateMetricMetadataResponse,\n} from 'api/metricsExplorer/updateMetricMetadata';\nimport { useMutation, UseMutationResult } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n\ninterface UseUpdateMetricMetadataProps {\n\tmetricName: string;\n\tpayload: UpdateMetricMetadataProps;\n}\n\nexport function useUpdateMetricMetadata(): UseMutationResult<\n\tSuccessResponse<UpdateMetricMetadataResponse> | ErrorResponse,\n\tError,\n\tUseUpdateMetricMetadataProps\n> {\n\treturn useMutation<\n\t\tSuccessResponse<UpdateMetricMetadataResponse> | ErrorResponse,\n\t\tError,\n\t\tUseUpdateMetricMetadataProps\n\t>({\n\t\tmutationFn: ({ metricName, payload }) =>\n\t\t\tupdateMetricMetadata(metricName, payload),\n\t});\n}\n","import './MetricsExplorerPage.styles.scss';\n\nimport RouteTab from 'components/RouteTab';\nimport { TabRoutes } from 'components/RouteTab/types';\nimport { initialQueriesMap, PANEL_TYPES } from 'constants/queryBuilder';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { useShareBuilderUrl } from 'hooks/queryBuilder/useShareBuilderUrl';\nimport history from 'lib/history';\nimport { useMemo } from 'react';\nimport { useLocation } from 'react-use';\nimport { DataSource } from 'types/common/queryBuilder';\n\nimport { Explorer, Summary, Views } from './constants';\n\nfunction MetricsExplorerPage(): JSX.Element {\n\tconst { pathname } = useLocation();\n\n\tconst routes: TabRoutes[] = [Summary, Explorer, Views];\n\n\tconst { updateAllQueriesOperators } = useQueryBuilder();\n\n\tconst defaultQuery = useMemo(\n\t\t() =>\n\t\t\tupdateAllQueriesOperators(\n\t\t\t\tinitialQueriesMap[DataSource.METRICS],\n\t\t\t\tPANEL_TYPES.LIST,\n\t\t\t\tDataSource.METRICS,\n\t\t\t),\n\t\t[updateAllQueriesOperators],\n\t);\n\n\tuseShareBuilderUrl(defaultQuery);\n\n\treturn (\n\t\t<div className=\"metrics-explorer-page\">\n\t\t\t<RouteTab routes={routes} activeKey={pathname} history={history} />\n\t\t</div>\n\t);\n}\n\nexport default MetricsExplorerPage;\n","import { TabRoutes } from 'components/RouteTab/types';\nimport ROUTES from 'constants/routes';\nimport ExplorerPage from 'container/MetricsExplorer/Explorer';\nimport SummaryPage from 'container/MetricsExplorer/Summary';\nimport { BarChart2, Compass, TowerControl } from 'lucide-react';\nimport SaveView from 'pages/SaveView';\n\nexport const Summary: TabRoutes = {\n\tComponent: SummaryPage,\n\tname: (\n\t\t<div className=\"tab-item\">\n\t\t\t<BarChart2 size={16} /> Summary\n\t\t</div>\n\t),\n\troute: ROUTES.METRICS_EXPLORER,\n\tkey: ROUTES.METRICS_EXPLORER,\n};\n\nexport const Explorer: TabRoutes = {\n\tComponent: ExplorerPage,\n\tname: (\n\t\t<div className=\"tab-item\">\n\t\t\t<Compass size={16} /> Explorer\n\t\t</div>\n\t),\n\troute: ROUTES.METRICS_EXPLORER_EXPLORER,\n\tkey: ROUTES.METRICS_EXPLORER_EXPLORER,\n};\n\nexport const Views: TabRoutes = {\n\tComponent: SaveView,\n\tname: (\n\t\t<div className=\"tab-item\">\n\t\t\t<TowerControl size={16} /> Views\n\t\t</div>\n\t),\n\troute: ROUTES.METRICS_EXPLORER_VIEWS,\n\tkey: ROUTES.METRICS_EXPLORER_VIEWS,\n};\n","import MetricsExplorer from './MetricsExplorerPage';\n\nexport default MetricsExplorer;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".metrics-explorer-explore-container{padding-bottom:16px}.metrics-explorer-explore-container .explore-header{display:flex;align-items:center;justify-content:space-between;margin:10px 0}.metrics-explorer-explore-container .explore-header .explore-header-left-actions{display:flex;align-items:center;gap:10px}.metrics-explorer-explore-container .explore-header .explore-header-right-actions{display:flex;align-items:center;gap:10px}.metrics-explorer-explore-container .query-section{max-height:450px;overflow-y:auto}.metrics-explorer-explore-container .query-section .rc-virtual-list-holder{height:150px}.metrics-explorer-explore-container .explore-tabs{margin:15px 0}.metrics-explorer-explore-container .explore-tabs .tab{background-color:var(--bg-slate-500);border-color:var(--bg-ink-200);width:180px;padding:16px 0;display:flex;justify-content:center;align-items:center}.metrics-explorer-explore-container .explore-tabs .tab:first-of-type{border-top-left-radius:2px}.metrics-explorer-explore-container .explore-tabs .tab:last-of-type{border-top-right-radius:2px}.metrics-explorer-explore-container .explore-tabs .selected-view{background:var(--bg-ink-500)}.metrics-explorer-explore-container .explore-content{margin-top:10px}.metrics-explorer-explore-container .explore-content .ant-space{margin-top:10px;margin-bottom:20px}.metrics-explorer-explore-container .explore-content .empty-metrics-search{display:flex;flex-direction:column;justify-content:center;align-items:center;width:100%;height:100%}.metrics-explorer-explore-container .explore-content .time-series-view{min-width:100%;width:100%}.metrics-explorer-explore-container .explore-content .time-series-container{display:grid;grid-template-columns:repeat(auto-fit, minmax(min(100%, 50% - 8px), 1fr));gap:16px;width:100%;height:fit-content}.metrics-explorer-explore-container .explore-content .related-metrics-container{width:100%;min-height:300px;display:flex;flex-direction:column;gap:10px}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-header{display:flex;align-items:center;justify-content:flex-start}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-header .metric-name-select{width:20%;margin-right:10px}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-header .related-metrics-input{width:40%}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-header .related-metrics-input .ant-input-wrapper .ant-input-group-addon .related-metrics-select{width:250px;border:1px solid var(--bg-slate-500) !important}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-header .related-metrics-input .ant-input-wrapper .ant-input-group-addon .related-metrics-select .ant-select-selector{text-align:left;color:var(--text-vanilla-500) !important}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-body{margin-top:20px;max-height:650px;overflow-y:scroll}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-body .related-metrics-card-container{margin-bottom:20px;min-height:640px}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-body .related-metrics-card-container .related-metrics-card{display:flex;flex-direction:column;gap:16px}.metrics-explorer-explore-container .explore-content .related-metrics-container .related-metrics-body .related-metrics-card-container .related-metrics-card .related-metrics-card-error{padding-top:10px;height:fit-content;width:fit-content}.lightMode .metrics-explorer-explore-container .explore-tabs .tab{background-color:var(--bg-vanilla-100);border-color:var(--bg-vanilla-400)}.lightMode .metrics-explorer-explore-container .explore-tabs .selected-view{background:var(--bg-vanilla-500)}.dashboards-and-alerts-popover-container{display:flex;gap:16px}.dashboards-and-alerts-popover-container .dashboards-and-alerts-popover{border-radius:20px;padding:4px 8px;cursor:pointer;display:flex;justify-content:center;align-items:center;gap:4px}.dashboards-and-alerts-popover-container .dashboards-and-alerts-popover:hover{opacity:.8}.dashboards-and-alerts-popover-container .dashboards-popover{border:1px solid var(--bg-sienna-500)}.dashboards-and-alerts-popover-container .dashboards-popover .ant-typography{color:var(--bg-sienna-500)}.dashboards-and-alerts-popover-container .alerts-popover{border:1px solid var(--bg-sakura-500)}.dashboards-and-alerts-popover-container .alerts-popover .ant-typography{color:var(--bg-sakura-500)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/MetricsExplorer/Explorer/Explorer.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,oCACC,mBAAA,CAEA,oDACC,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,aAAA,CAEA,iFACC,YAAA,CACA,kBAAA,CACA,QAAA,CAGD,kFACC,YAAA,CACA,kBAAA,CACA,QAAA,CAIF,mDACC,gBAAA,CACA,eAAA,CAEA,2EACC,YAAA,CAIF,kDACC,aAAA,CACA,uDACC,oCAAA,CACA,8BAAA,CACA,WAAA,CACA,cAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAGD,qEACC,0BAAA,CAGD,oEACC,2BAAA,CAGD,iEACC,4BAAA,CAIF,qDACC,eAAA,CAEA,gEACC,eAAA,CACA,kBAAA,CAGD,2EACC,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CAGD,uEACC,cAAA,CACA,UAAA,CAGD,4EACC,YAAA,CACA,yEAAA,CAIA,QAAA,CACA,UAAA,CACA,kBAAA,CAGD,gFACC,UAAA,CACA,gBAAA,CACA,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,wGACC,YAAA,CACA,kBAAA,CACA,0BAAA,CAEA,4HACC,SAAA,CACA,iBAAA,CAGD,+HACC,SAAA,CAIE,iMACC,WAAA,CACA,+CAAA,CAEA,sNACC,eAAA,CACA,wCAAA,CAQN,sGACC,eAAA,CACA,gBAAA,CACA,iBAAA,CAEA,sIACC,kBAAA,CACA,gBAAA,CAEA,4JACC,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,wLACC,gBAAA,CACA,kBAAA,CACA,iBAAA,CAYJ,kEACC,sCAAA,CACA,kCAAA,CAGD,4EACC,gCAAA,CAMJ,yCACC,YAAA,CACA,QAAA,CAEA,wEACC,kBAAA,CACA,eAAA,CACA,cAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,OAAA,CAEA,8EACC,UAAA,CAIF,6DACC,qCAAA,CACA,6EACC,0BAAA,CAIF,yDACC,qCAAA,CACA,yEACC,0BAAA\",\"sourcesContent\":[\".metrics-explorer-explore-container {\\n\\tpadding-bottom: 16px;\\n\\n\\t.explore-header {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: space-between;\\n\\t\\tmargin: 10px 0;\\n\\n\\t\\t.explore-header-left-actions {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 10px;\\n\\t\\t}\\n\\n\\t\\t.explore-header-right-actions {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 10px;\\n\\t\\t}\\n\\t}\\n\\n\\t.query-section {\\n\\t\\tmax-height: 450px;\\n\\t\\toverflow-y: auto;\\n\\n\\t\\t.rc-virtual-list-holder {\\n\\t\\t\\theight: 150px;\\n\\t\\t}\\n\\t}\\n\\n\\t.explore-tabs {\\n\\t\\tmargin: 15px 0;\\n\\t\\t.tab {\\n\\t\\t\\tbackground-color: var(--bg-slate-500);\\n\\t\\t\\tborder-color: var(--bg-ink-200);\\n\\t\\t\\twidth: 180px;\\n\\t\\t\\tpadding: 16px 0;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\talign-items: center;\\n\\t\\t}\\n\\n\\t\\t.tab:first-of-type {\\n\\t\\t\\tborder-top-left-radius: 2px;\\n\\t\\t}\\n\\n\\t\\t.tab:last-of-type {\\n\\t\\t\\tborder-top-right-radius: 2px;\\n\\t\\t}\\n\\n\\t\\t.selected-view {\\n\\t\\t\\tbackground: var(--bg-ink-500);\\n\\t\\t}\\n\\t}\\n\\n\\t.explore-content {\\n\\t\\tmargin-top: 10px;\\n\\n\\t\\t.ant-space {\\n\\t\\t\\tmargin-top: 10px;\\n\\t\\t\\tmargin-bottom: 20px;\\n\\t\\t}\\n\\n\\t\\t.empty-metrics-search {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: 100%;\\n\\t\\t}\\n\\n\\t\\t.time-series-view {\\n\\t\\t\\tmin-width: 100%;\\n\\t\\t\\twidth: 100%;\\n\\t\\t}\\n\\n\\t\\t.time-series-container {\\n\\t\\t\\tdisplay: grid;\\n\\t\\t\\tgrid-template-columns: repeat(\\n\\t\\t\\t\\tauto-fit,\\n\\t\\t\\t\\tminmax(min(100%, calc(50% - 8px)), 1fr)\\n\\t\\t\\t);\\n\\t\\t\\tgap: 16px;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\theight: fit-content;\\n\\t\\t}\\n\\n\\t\\t.related-metrics-container {\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tmin-height: 300px;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\tgap: 10px;\\n\\n\\t\\t\\t.related-metrics-header {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tjustify-content: flex-start;\\n\\n\\t\\t\\t\\t.metric-name-select {\\n\\t\\t\\t\\t\\twidth: 20%;\\n\\t\\t\\t\\t\\tmargin-right: 10px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.related-metrics-input {\\n\\t\\t\\t\\t\\twidth: 40%;\\n\\n\\t\\t\\t\\t\\t.ant-input-wrapper {\\n\\t\\t\\t\\t\\t\\t.ant-input-group-addon {\\n\\t\\t\\t\\t\\t\\t\\t.related-metrics-select {\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 250px;\\n\\t\\t\\t\\t\\t\\t\\t\\tborder: 1px solid var(--bg-slate-500) !important;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttext-align: left;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-vanilla-500) !important;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.related-metrics-body {\\n\\t\\t\\t\\tmargin-top: 20px;\\n\\t\\t\\t\\tmax-height: 650px;\\n\\t\\t\\t\\toverflow-y: scroll;\\n\\n\\t\\t\\t\\t.related-metrics-card-container {\\n\\t\\t\\t\\t\\tmargin-bottom: 20px;\\n\\t\\t\\t\\t\\tmin-height: 640px;\\n\\n\\t\\t\\t\\t\\t.related-metrics-card {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\t\\tgap: 16px;\\n\\n\\t\\t\\t\\t\\t\\t.related-metrics-card-error {\\n\\t\\t\\t\\t\\t\\t\\tpadding-top: 10px;\\n\\t\\t\\t\\t\\t\\t\\theight: fit-content;\\n\\t\\t\\t\\t\\t\\t\\twidth: fit-content;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.metrics-explorer-explore-container {\\n\\t\\t.explore-tabs {\\n\\t\\t\\t.tab {\\n\\t\\t\\t\\tbackground-color: var(--bg-vanilla-100);\\n\\t\\t\\t\\tborder-color: var(--bg-vanilla-400);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.selected-view {\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-500);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.dashboards-and-alerts-popover-container {\\n\\tdisplay: flex;\\n\\tgap: 16px;\\n\\n\\t.dashboards-and-alerts-popover {\\n\\t\\tborder-radius: 20px;\\n\\t\\tpadding: 4px 8px;\\n\\t\\tcursor: pointer;\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t\\tgap: 4px;\\n\\n\\t\\t&:hover {\\n\\t\\t\\topacity: 0.8;\\n\\t\\t}\\n\\t}\\n\\n\\t.dashboards-popover {\\n\\t\\tborder: 1px solid var(--bg-sienna-500);\\n\\t\\t.ant-typography {\\n\\t\\t\\tcolor: var(--bg-sienna-500);\\n\\t\\t}\\n\\t}\\n\\n\\t.alerts-popover {\\n\\t\\tborder: 1px solid var(--bg-sakura-500);\\n\\t\\t.ant-typography {\\n\\t\\t\\tcolor: var(--bg-sakura-500);\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inspect-metrics-modal{display:flex;gap:16px}.inspect-metrics-modal .inspect-metrics-fallback{display:flex;align-items:center;justify-content:center;height:100%}.inspect-metrics-modal .inspect-metrics-title{display:flex;align-items:center;justify-content:flex-start;gap:6px}.inspect-metrics-modal .inspect-metrics-title .inspect-metrics-button{display:flex;align-items:center;justify-content:center;cursor:default;color:var(--text-vanilla-500)}.inspect-metrics-modal .inspect-metrics-content{display:flex;flex-direction:row;justify-content:space-between}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col{display:flex;flex-direction:column;flex:2;gap:16px;padding-right:24px;border-right:1px solid var(--bg-slate-400);width:60%}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view{display:flex;flex-direction:column;gap:32px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header{display:flex;align-items:center;justify-content:space-between}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .ant-btn-group .time-series-button-label,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .ant-btn-group .metric-name-button-label{display:flex;align-items:center;justify-content:center;cursor:default}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .ant-btn-group .time-series-button-label span,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .ant-btn-group .metric-name-button-label span{color:var(--text-vanilla-100)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .view-toggle-button{display:flex;gap:8px;align-items:center}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container{min-height:520px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view{max-width:100%}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .ant-spin-nested-loading .ant-spin-container .ant-table{height:450px;overflow-y:scroll;-webkit-overflow-scrolling:touch;scrollbar-width:thin;scrollbar-color:#ccc rgba(0,0,0,0)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-title-header,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-values-header{overflow-x:auto;white-space:nowrap;-webkit-overflow-scrolling:touch;scrollbar-width:thin;scrollbar-color:#ccc rgba(0,0,0,0)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-title-header .ant-card,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-values-header .ant-card{cursor:pointer;width:100px;max-width:100px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-title-header .ant-card .ant-card-body,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-values-header .ant-card .ant-card-body{padding:6px 8px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-title-header .ant-card:hover,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .graph-view-container .inspect-metrics-table-view .table-view-values-header .ant-card:hover{opacity:.8}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder{display:flex;flex-direction:column;gap:4px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-header .query-builder-button-label{display:flex;align-items:center;justify-content:center;cursor:default}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-header .query-builder-button-label span{color:var(--text-vanilla-100)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body{display:flex;flex-direction:column;gap:16px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .selected-step{color:var(--bg-sakura-500)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .selected-step .ant-typography{color:var(--bg-sakura-500)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .inspect-metrics-input-group{display:flex;align-items:center;justify-content:space-between;gap:4px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .inspect-metrics-input-group .ant-typography{min-width:130px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .inspect-metrics-input-group .ant-select{flex-grow:1}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .inspect-metrics-input-group .no-arrows-input input[type=number]::-webkit-inner-spin-button,.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .inspect-metrics-input-group .no-arrows-input input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .inspect-metrics-input-group .no-arrows-input input[type=number]{appearance:none;-moz-appearance:textfield}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-time-aggregation{display:flex;flex-direction:column;gap:16px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-time-aggregation .metric-time-aggregation-header{display:flex;gap:8px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-time-aggregation .metric-time-aggregation-content{display:flex;gap:24px;width:100%}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-time-aggregation .metric-time-aggregation-content .inspect-metrics-input-group{width:50%}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-space-aggregation{display:flex;flex-direction:column;gap:16px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-space-aggregation .metric-space-aggregation-header{display:flex;gap:8px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-space-aggregation .metric-space-aggregation-content{display:flex;gap:8px;width:100%}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-content .ant-card-body .metric-space-aggregation .metric-space-aggregation-content .metric-space-aggregation-content-left{width:130px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .metric-filters .query-builder-search-container{width:100%}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .metric-filters .query-builder-search-container .ant-select .ant-select-selector{background-color:var(--bg-ink-400);color:var(--text-vanilla-100);border-color:var(--bg-slate-400)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col{display:flex;flex-direction:column;gap:16px;flex:1}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col .home-checklist-container{padding-left:40px;display:flex;flex-direction:column;gap:16px;padding-bottom:32px;border-bottom:1px solid var(--bg-slate-400)}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col .home-checklist-container .home-checklist-title{display:flex;flex-direction:column;gap:8px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col .home-checklist-container .completed-checklist-container{margin-left:20px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col .home-checklist-container .completed-message-container{display:flex;flex-direction:column;gap:16px;height:100px}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col .home-checklist-container .completed-message-container .ant-btn{width:fit-content}.inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-second-col .expanded-view{display:flex;flex-direction:column;gap:16px;padding-left:40px}.inspect-graph-popover{position:fixed;z-index:1000}.inspect-graph-popover .inspect-graph-popover-content{display:flex;flex-direction:column;gap:16px;min-width:350px}.inspect-graph-popover .inspect-graph-popover-content .inspect-graph-popover-row{display:flex;align-items:center;justify-content:space-between;gap:8px;width:100%}.inspect-graph-popover .inspect-graph-popover-content .inspect-graph-popover-button-row{display:flex;align-items:center;justify-content:flex-end}.inspect-graph-popover .inspect-graph-popover-content .inspect-graph-popover-button-row .ant-btn{display:flex;align-items:center;justify-content:space-between;gap:8px;margin-top:16px}.graph-popover{position:fixed;z-index:1000}.graph-popover .graph-popover-card{width:550px;display:flex;flex-direction:column;align-items:flex-start;gap:16px}.graph-popover .graph-popover-card .ant-card-body{width:fit-content}.graph-popover .graph-popover-card .graph-popover-row{margin-top:12px;display:flex;justify-content:space-between;align-items:center;gap:12px}.graph-popover .graph-popover-card .graph-popover-row .graph-popover-row-label{width:100px}.graph-popover .graph-popover-card .graph-popover-row .graph-popover-inner-row{display:flex;align-items:center;gap:8px}.graph-popover .graph-popover-card .graph-popover-row .graph-popover-inner-row .ant-typography{width:400px;margin-top:4px;align-items:center;display:flex;gap:8px;overflow-x:auto;white-space:nowrap;-webkit-overflow-scrolling:touch;scrollbar-width:thin;scrollbar-color:#ccc rgba(0,0,0,0);text-overflow:ellipsis}.graph-popover .graph-popover-card .graph-popover-header-text{color:var(--text-vanilla-400)}.graph-popover .graph-popover-card .graph-popover-row-label{color:var(--bg-slate-50);width:10%}.graph-popover .graph-popover-card .graph-popover-cell{padding:4px 8px;background-color:#1f1f1f;border-radius:4px;color:#fff;min-width:60px;max-width:60px;text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.graph-popover .graph-popover-card .footer-row{margin-top:12px;display:flex;gap:8px;align-items:center}.graph-popover .graph-popover-card .footer-row .footer-text{white-space:nowrap}.graph-popover .graph-popover-card .footer-row .footer-divider{flex:1;border-top:1px dashed #ccc;margin:0 8px}.expanded-view .expanded-view-header .ant-typography{display:flex;align-items:center;justify-content:flex-start;gap:8px}.expanded-view .graph-popover{z-index:2;position:initial}.expanded-view .graph-popover .graph-popover-card{width:100%}.expanded-view .graph-popover .graph-popover-card .timeseries-cell{cursor:pointer;display:flex;align-items:center;justify-content:space-between}.expanded-view .graph-popover .graph-popover-card .timeseries-cell:hover{opacity:60%}.expanded-view .graph-popover .graph-popover-card .selected{opacity:90%}.expanded-view .graph-popover .graph-popover-card .graph-popover-section{width:500px;overflow-x:scroll;white-space:nowrap;-webkit-overflow-scrolling:touch;scrollbar-width:thin;scrollbar-color:#ccc rgba(0,0,0,0);text-overflow:ellipsis}.expanded-view .graph-popover .graph-popover-card .graph-popover-section .graph-popover-row .graph-popover-row-label{min-width:100px}.expanded-view .graph-popover .graph-popover-card .graph-popover-section .graph-popover-row .graph-popover-inner-row{display:flex;align-items:center;gap:8px}.expanded-view .labels-table{border:1px solid var(--bg-slate-400)}.expanded-view .labels-table .labels-key{color:var(--bg-vanilla-400);background-color:var(--bg-slate-500);font-family:\\\"Geist Mono\\\"}.expanded-view .labels-table .labels-value{background-color:var(--bg-slate-500);opacity:80%;font-family:\\\"Geist Mono\\\"}.expanded-view .labels-table .labels-value .field-renderer-container .label{color:var(--bg-slate-400)}.hover-popover-card{position:fixed;z-index:500;max-width:700px;display:flex;flex-direction:column;gap:8px}.hover-popover-card .hover-popover-row{display:flex;align-items:center;justify-content:space-between;gap:8px}.lightMode .inspect-metrics-modal .inspect-metrics-title .inspect-metrics-button{color:var(--text-ink-400)}.lightMode .inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .ant-btn-group .time-series-button-label span,.lightMode .inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-graph-view .inspect-metrics-graph-view-header .ant-btn-group .metric-name-button-label span{color:var(--text-ink-100)}.lightMode .inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .inspect-metrics-query-builder-header .query-builder-button-label span{color:var(--text-ink-100)}.lightMode .inspect-metrics-modal .inspect-metrics-content .inspect-metrics-content-first-col .inspect-metrics-query-builder .metric-filters .query-builder-search-v2 .ant-select .ant-select-selector{background-color:var(--bg-vanilla-100);color:var(--text-ink-100);border:.5px solid var(--bg-slate-300) !important}.lightMode .graph-popover .graph-popover-card .graph-popover-header-text{color:var(--text-ink-400)}.lightMode .graph-popover .graph-popover-card .graph-popover-row-label{color:var(--bg-slate-50)}.lightMode .graph-popover .graph-popover-card .graph-popover-cell{background-color:var(--bg-vanilla-300);color:var(--text-ink-100)}.lightMode .graph-popover .graph-popover-card .footer-row .footer-divider{border-top:1px dashed var(--bg-slate-300)}.lightMode .expanded-view .labels-table{border:1px solid var(--bg-vanilla-400)}.lightMode .expanded-view .labels-table .labels-key{color:var(--bg-slate-400);background-color:var(--bg-vanilla-400)}.lightMode .expanded-view .labels-table .labels-value{background-color:var(--bg-vanilla-400)}.lightMode .expanded-view .labels-table .labels-value .field-renderer-container .label{color:var(--bg-vanilla-400)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/MetricsExplorer/Inspect/Inspect.styles.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\".inspect-metrics-modal {\\n\\tdisplay: flex;\\n\\tgap: 16px;\\n\\n\\t.inspect-metrics-fallback {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t\\theight: 100%;\\n\\t}\\n\\n\\t.inspect-metrics-title {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: flex-start;\\n\\t\\tgap: 6px;\\n\\n\\t\\t.inspect-metrics-button {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\tcursor: default;\\n\\t\\t\\tcolor: var(--text-vanilla-500);\\n\\t\\t}\\n\\t}\\n\\n\\t.inspect-metrics-content {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: row;\\n\\t\\tjustify-content: space-between;\\n\\n\\t\\t.inspect-metrics-content-first-col {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\tflex: 2;\\n\\t\\t\\tgap: 16px;\\n\\t\\t\\tpadding-right: 24px;\\n\\t\\t\\tborder-right: 1px solid var(--bg-slate-400);\\n\\t\\t\\twidth: 60%;\\n\\n\\t\\t\\t.inspect-metrics-graph-view {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\tgap: 32px;\\n\\n\\t\\t\\t\\t.inspect-metrics-graph-view-header {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\tjustify-content: space-between;\\n\\n\\t\\t\\t\\t\\t.ant-btn-group {\\n\\t\\t\\t\\t\\t\\t.time-series-button-label,\\n\\t\\t\\t\\t\\t\\t.metric-name-button-label {\\n\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\t\\t\\tcursor: default;\\n\\n\\t\\t\\t\\t\\t\\t\\tspan {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-vanilla-100);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.view-toggle-button {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.graph-view-container {\\n\\t\\t\\t\\t\\tmin-height: 520px;\\n\\n\\t\\t\\t\\t\\t.inspect-metrics-table-view {\\n\\t\\t\\t\\t\\t\\tmax-width: 100%;\\n\\n\\t\\t\\t\\t\\t\\t.ant-spin-nested-loading {\\n\\t\\t\\t\\t\\t\\t\\t.ant-spin-container {\\n\\t\\t\\t\\t\\t\\t\\t\\t.ant-table {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\theight: 450px;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\toverflow-y: scroll;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t-webkit-overflow-scrolling: touch;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tscrollbar-width: thin;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tscrollbar-color: #ccc transparent;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.table-view-title-header,\\n\\t\\t\\t\\t\\t\\t.table-view-values-header {\\n\\t\\t\\t\\t\\t\\t\\toverflow-x: auto;\\n\\t\\t\\t\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t\\t\\t\\t\\t-webkit-overflow-scrolling: touch;\\n\\t\\t\\t\\t\\t\\t\\tscrollbar-width: thin;\\n\\t\\t\\t\\t\\t\\t\\tscrollbar-color: #ccc transparent;\\n\\n\\t\\t\\t\\t\\t\\t\\t.ant-card {\\n\\t\\t\\t\\t\\t\\t\\t\\tcursor: pointer;\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 100px;\\n\\t\\t\\t\\t\\t\\t\\t\\tmax-width: 100px;\\n\\t\\t\\t\\t\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t\\t\\t\\t\\t\\ttext-overflow: ellipsis;\\n\\t\\t\\t\\t\\t\\t\\t\\toverflow: hidden;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t.ant-card-body {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tpadding: 6px 8px;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\topacity: 0.8;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.inspect-metrics-query-builder {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\tgap: 4px;\\n\\n\\t\\t\\t\\t.inspect-metrics-query-builder-header {\\n\\t\\t\\t\\t\\t.query-builder-button-label {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\t\\tcursor: default;\\n\\n\\t\\t\\t\\t\\t\\tspan {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-vanilla-100);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.inspect-metrics-query-builder-content {\\n\\t\\t\\t\\t\\t.ant-card-body {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\t\\tgap: 16px;\\n\\n\\t\\t\\t\\t\\t\\t.selected-step {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-sakura-500);\\n\\n\\t\\t\\t\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-sakura-500);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.inspect-metrics-input-group {\\n\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\t\\t\\t\\t\\tgap: 4px;\\n\\n\\t\\t\\t\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\t\\t\\t\\tmin-width: 130px;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t.ant-select {\\n\\t\\t\\t\\t\\t\\t\\t\\tflex-grow: 1;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t.no-arrows-input input[type='number']::-webkit-inner-spin-button,\\n\\t\\t\\t\\t\\t\\t\\t.no-arrows-input input[type='number']::-webkit-outer-spin-button {\\n\\t\\t\\t\\t\\t\\t\\t\\t-webkit-appearance: none;\\n\\t\\t\\t\\t\\t\\t\\t\\tmargin: 0;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t/* Hide number input arrows (Firefox) */\\n\\t\\t\\t\\t\\t\\t\\t.no-arrows-input input[type='number'] {\\n\\t\\t\\t\\t\\t\\t\\t\\tappearance: none;\\n\\t\\t\\t\\t\\t\\t\\t\\t-moz-appearance: textfield;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.metric-time-aggregation {\\n\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\t\\t\\tgap: 16px;\\n\\n\\t\\t\\t\\t\\t\\t\\t.metric-time-aggregation-header {\\n\\t\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t.metric-time-aggregation-content {\\n\\t\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\t\\tgap: 24px;\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 100%;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t.inspect-metrics-input-group {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twidth: 50%;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t.metric-space-aggregation {\\n\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\t\\t\\tgap: 16px;\\n\\n\\t\\t\\t\\t\\t\\t\\t.metric-space-aggregation-header {\\n\\t\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t.metric-space-aggregation-content {\\n\\t\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t\\t\\t\\twidth: 100%;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t.metric-space-aggregation-content-left {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\twidth: 130px;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.metric-filters {\\n\\t\\t\\t\\t\\t.query-builder-search-container {\\n\\t\\t\\t\\t\\t\\twidth: 100%;\\n\\n\\t\\t\\t\\t\\t\\t.ant-select {\\n\\t\\t\\t\\t\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-ink-400);\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-vanilla-100);\\n\\t\\t\\t\\t\\t\\t\\t\\tborder-color: var(--bg-slate-400);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.inspect-metrics-content-second-col {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\tgap: 16px;\\n\\t\\t\\tflex: 1;\\n\\n\\t\\t\\t.home-checklist-container {\\n\\t\\t\\t\\tpadding-left: 40px;\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\tgap: 16px;\\n\\t\\t\\t\\tpadding-bottom: 32px;\\n\\t\\t\\t\\tborder-bottom: 1px solid var(--bg-slate-400);\\n\\n\\t\\t\\t\\t.home-checklist-title {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.completed-checklist-container {\\n\\t\\t\\t\\t\\tmargin-left: 20px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.completed-message-container {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\tgap: 16px;\\n\\t\\t\\t\\t\\theight: 100px;\\n\\n\\t\\t\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\t\\t\\twidth: fit-content;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.expanded-view {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\tgap: 16px;\\n\\t\\t\\t\\tpadding-left: 40px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.inspect-graph-popover {\\n\\tposition: fixed;\\n\\tz-index: 1000;\\n\\n\\t.inspect-graph-popover-content {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 16px;\\n\\t\\tmin-width: 350px;\\n\\n\\t\\t.inspect-graph-popover-row {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\tgap: 8px;\\n\\t\\t\\twidth: 100%;\\n\\t\\t}\\n\\n\\t\\t.inspect-graph-popover-button-row {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: flex-end;\\n\\n\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\tmargin-top: 16px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.graph-popover {\\n\\tposition: fixed;\\n\\tz-index: 1000;\\n\\n\\t.graph-popover-card {\\n\\t\\twidth: 550px;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: flex-start;\\n\\t\\tgap: 16px;\\n\\n\\t\\t.ant-card-body {\\n\\t\\t\\twidth: fit-content;\\n\\t\\t}\\n\\n\\t\\t.graph-popover-row {\\n\\t\\t\\tmargin-top: 12px;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 12px;\\n\\n\\t\\t\\t.graph-popover-row-label {\\n\\t\\t\\t\\twidth: 100px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.graph-popover-inner-row {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tgap: 8px;\\n\\n\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\twidth: 400px;\\n\\t\\t\\t\\t\\tmargin-top: 4px;\\n\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\toverflow-x: auto;\\n\\t\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t\\t\\t-webkit-overflow-scrolling: touch;\\n\\t\\t\\t\\t\\tscrollbar-width: thin;\\n\\t\\t\\t\\t\\tscrollbar-color: #ccc transparent;\\n\\t\\t\\t\\t\\ttext-overflow: ellipsis;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.graph-popover-header-text {\\n\\t\\t\\tcolor: var(--text-vanilla-400);\\n\\t\\t}\\n\\n\\t\\t.graph-popover-row-label {\\n\\t\\t\\tcolor: var(--bg-slate-50);\\n\\t\\t\\twidth: 10%;\\n\\t\\t}\\n\\n\\t\\t.graph-popover-cell {\\n\\t\\t\\tpadding: 4px 8px;\\n\\t\\t\\tbackground-color: #1f1f1f;\\n\\t\\t\\tborder-radius: 4px;\\n\\t\\t\\tcolor: #fff;\\n\\t\\t\\tmin-width: 60px;\\n\\t\\t\\tmax-width: 60px;\\n\\t\\t\\ttext-overflow: ellipsis;\\n\\t\\t\\toverflow: hidden;\\n\\t\\t\\twhite-space: nowrap;\\n\\t\\t}\\n\\n\\t\\t.footer-row {\\n\\t\\t\\tmargin-top: 12px;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tgap: 8px;\\n\\t\\t\\talign-items: center;\\n\\n\\t\\t\\t.footer-text {\\n\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.footer-divider {\\n\\t\\t\\t\\tflex: 1;\\n\\t\\t\\t\\tborder-top: 1px dashed #ccc;\\n\\t\\t\\t\\tmargin: 0 8px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.expanded-view {\\n\\t.expanded-view-header {\\n\\t\\t.ant-typography {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: flex-start;\\n\\t\\t\\tgap: 8px;\\n\\t\\t}\\n\\t}\\n\\n\\t.graph-popover {\\n\\t\\tz-index: 2;\\n\\t\\tposition: initial;\\n\\n\\t\\t.graph-popover-card {\\n\\t\\t\\twidth: 100%;\\n\\n\\t\\t\\t.timeseries-cell {\\n\\t\\t\\t\\tcursor: pointer;\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\topacity: 60%;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.selected {\\n\\t\\t\\t\\topacity: 90%;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.graph-popover-section {\\n\\t\\t\\t\\twidth: 500px;\\n\\t\\t\\t\\toverflow-x: scroll;\\n\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t\\t-webkit-overflow-scrolling: touch;\\n\\t\\t\\t\\tscrollbar-width: thin;\\n\\t\\t\\t\\tscrollbar-color: #ccc transparent;\\n\\t\\t\\t\\ttext-overflow: ellipsis;\\n\\n\\t\\t\\t\\t.graph-popover-row {\\n\\t\\t\\t\\t\\t.graph-popover-row-label {\\n\\t\\t\\t\\t\\t\\tmin-width: 100px;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.graph-popover-inner-row {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\\tgap: 8px;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.labels-table {\\n\\t\\tborder: 1px solid var(--bg-slate-400);\\n\\n\\t\\t.labels-key {\\n\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\tbackground-color: var(--bg-slate-500);\\n\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t}\\n\\n\\t\\t.labels-value {\\n\\t\\t\\tbackground-color: var(--bg-slate-500);\\n\\t\\t\\topacity: 80%;\\n\\t\\t\\tfont-family: 'Geist Mono';\\n\\n\\t\\t\\t.field-renderer-container {\\n\\t\\t\\t\\t.label {\\n\\t\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.hover-popover-card {\\n\\tposition: fixed;\\n\\tz-index: 500;\\n\\tmax-width: 700px;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tgap: 8px;\\n\\n\\t.hover-popover-row {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: space-between;\\n\\t\\tgap: 8px;\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.inspect-metrics-modal {\\n\\t\\t.inspect-metrics-title {\\n\\t\\t\\t.inspect-metrics-button {\\n\\t\\t\\t\\tcolor: var(--text-ink-400);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.inspect-metrics-content {\\n\\t\\t\\t.inspect-metrics-content-first-col {\\n\\t\\t\\t\\t.inspect-metrics-graph-view {\\n\\t\\t\\t\\t\\t.inspect-metrics-graph-view-header {\\n\\t\\t\\t\\t\\t\\t.ant-btn-group {\\n\\t\\t\\t\\t\\t\\t\\t.time-series-button-label,\\n\\t\\t\\t\\t\\t\\t\\t.metric-name-button-label {\\n\\t\\t\\t\\t\\t\\t\\t\\tspan {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-ink-100);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.inspect-metrics-query-builder {\\n\\t\\t\\t\\t\\t.inspect-metrics-query-builder-header {\\n\\t\\t\\t\\t\\t\\t.query-builder-button-label {\\n\\t\\t\\t\\t\\t\\t\\tspan {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-ink-100);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.metric-filters {\\n\\t\\t\\t\\t\\t\\t.query-builder-search-v2 {\\n\\t\\t\\t\\t\\t\\t\\t.ant-select {\\n\\t\\t\\t\\t\\t\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-vanilla-100);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--text-ink-100);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tborder: 0.5px solid var(--bg-slate-300) !important;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.graph-popover {\\n\\t\\t.graph-popover-card {\\n\\t\\t\\t.graph-popover-header-text {\\n\\t\\t\\t\\tcolor: var(--text-ink-400);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.graph-popover-row-label {\\n\\t\\t\\t\\tcolor: var(--bg-slate-50);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.graph-popover-cell {\\n\\t\\t\\t\\tbackground-color: var(--bg-vanilla-300);\\n\\t\\t\\t\\tcolor: var(--text-ink-100);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.footer-row {\\n\\t\\t\\t\\t.footer-divider {\\n\\t\\t\\t\\t\\tborder-top: 1px dashed var(--bg-slate-300);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.expanded-view {\\n\\t\\t.labels-table {\\n\\t\\t\\tborder: 1px solid var(--bg-vanilla-400);\\n\\n\\t\\t\\t.labels-key {\\n\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t\\tbackground-color: var(--bg-vanilla-400);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.labels-value {\\n\\t\\t\\t\\tbackground-color: var(--bg-vanilla-400);\\n\\t\\t\\t\\t.field-renderer-container {\\n\\t\\t\\t\\t\\t.label {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".metric-details-drawer .metric-details-header{display:flex;justify-content:space-between;align-items:center}.metric-details-drawer .metric-details-header .metric-details-title{display:flex;align-items:center;gap:8px}.metric-details-drawer .metric-details-header .metric-details-title .ant-typography{font-family:\\\"Geist Mono\\\"}.metric-details-drawer .metric-details-header .metric-details-header-buttons{display:flex;gap:8px}.metric-details-drawer .metric-details-header .ant-btn{display:flex;align-items:center;gap:4px;background-color:var(--bg-slate-300)}.metric-details-drawer .metric-details-header .inspect-metrics-button{display:flex;align-items:center;justify-content:center}.metric-details-drawer .metric-details-content{display:flex;flex-direction:column;gap:12px}.metric-details-drawer .metric-details-content .metric-details-content-grid .labels-row,.metric-details-drawer .metric-details-content .metric-details-content-grid .values-row{display:grid;grid-template-columns:1fr 1fr 2fr;gap:30px;align-items:center}.metric-details-drawer .metric-details-content .metric-details-content-grid .labels-row{margin-bottom:8px}.metric-details-drawer .metric-details-content .metric-details-content-grid .labels-row .metric-details-grid-label{font-size:11px}.metric-details-drawer .metric-details-content .metric-details-content-grid .values-row{color:var(--bg-vanilla-100);font-family:\\\"Geist Mono\\\";font-style:normal;font-weight:600;line-height:20px;letter-spacing:-0.07px}.metric-details-drawer .metric-details-content .metric-details-content-grid .values-row .metric-details-grid-value{font-size:14px}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container{display:flex;gap:16px}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container .dashboards-and-alerts-popover{border-radius:20px;padding:4px 8px;cursor:pointer;display:flex;justify-content:center;align-items:center;gap:4px}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container .dashboards-and-alerts-popover:hover{opacity:.8}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container .dashboards-popover{border:1px solid var(--bg-sienna-500)}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container .dashboards-popover .ant-typography{color:var(--bg-sienna-500)}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container .alerts-popover{border:1px solid var(--bg-sakura-500)}.metric-details-drawer .metric-details-content .dashboards-and-alerts-popover-container .alerts-popover .ant-typography{color:var(--bg-sakura-500)}.metric-details-drawer .metric-details-content .metrics-accordion .ant-table-body::-webkit-scrollbar{width:2px}.metric-details-drawer .metric-details-content .metrics-accordion .ant-table-body::-webkit-scrollbar-track{background:rgba(0,0,0,0)}.metric-details-drawer .metric-details-content .metrics-accordion .ant-table-body::-webkit-scrollbar-thumb{background:var(--bg-slate-300);border-radius:1px}.metric-details-drawer .metric-details-content .metrics-accordion .metrics-accordion-header{display:flex;justify-content:space-between;align-items:center;height:36px}.metric-details-drawer .metric-details-content .metrics-accordion .metrics-accordion-header .ant-typography{font-family:\\\"Geist Mono\\\";color:var(--bg-robin-400)}.metric-details-drawer .metric-details-content .metrics-accordion .metrics-accordion-header .action-menu{display:flex;gap:4px;align-items:center;align-self:flex-start}.metric-details-drawer .metric-details-content .metrics-accordion .metrics-accordion-header .action-menu .action-button{display:flex;gap:4px;align-items:center;align-self:flex-start}.metric-details-drawer .metric-details-content .metrics-accordion .metrics-accordion-header .action-menu .action-button .ant-typography{font-family:\\\"Inter\\\";color:var(--bg-vanilla-400)}.metric-details-drawer .metric-details-content .metrics-accordion .metrics-accordion-header .all-attributes-search-input{width:300px;border:1px solid var(--bg-slate-300)}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-key .all-attributes-key{display:flex;justify-content:space-between}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-key .all-attributes-key .ant-btn .ant-typography:first-child{font-family:\\\"Geist Mono\\\";color:var(--bg-robin-400)}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-key .all-attributes-key .all-attributes-contribution{font-family:\\\"Geist Mono\\\";color:var(--bg-vanilla-400);background-color:rgba(171,189,255,.1);height:24px;min-width:24px;border-radius:50%;text-align:center;display:flex;align-items:center;justify-content:center}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value{display:flex;flex-direction:column;gap:4px;max-height:220px;overflow-y:scroll;overflow-x:hidden}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value::-webkit-scrollbar{width:2px}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value::-webkit-scrollbar-track{background:rgba(0,0,0,0)}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value::-webkit-scrollbar-thumb{background:var(--bg-slate-300);border-radius:1px}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value .ant-btn{text-align:left;width:fit-content;background-color:var(--bg-slate-300)}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value .ant-btn .ant-typography{color:var(--bg-vanilla-400);font-family:\\\"Geist Mono\\\";text-overflow:ellipsis}.metric-details-drawer .metric-details-content .metrics-accordion .all-attributes-content .metric-metadata-value .all-attributes-value .ant-btn:hover{background-color:var(--bg-slate-400)}.metric-details-drawer .metric-details-content .metrics-accordion .ant-collapse-content-box{padding:0}.metric-details-drawer .metric-details-content .metrics-accordion .ant-collapse-header{display:flex !important;align-items:center !important}.metric-details-drawer .metric-details-content .metrics-accordion .metric-type-renderer{max-height:12px}.metric-details-drawer .metric-details-content .metrics-accordion .metric-metadata-key{cursor:pointer;padding-left:10px;vertical-align:middle;text-align:center}.metric-details-drawer .metric-details-content .metrics-accordion .metric-metadata-key .field-renderer-container .label{color:var(--bg-vanilla-400)}.metric-details-drawer .metric-details-content .metrics-accordion .metric-metadata-value{background:rgba(22,25,34,.4);overflow-x:scroll}.metric-details-drawer .metric-details-content .metrics-accordion .metric-metadata-value .field-renderer-container .label{color:var(--bg-vanilla-100);padding-right:10px}.metric-details-drawer .metric-details-content .metrics-accordion .metric-metadata-value::-webkit-scrollbar{height:2px}.metric-details-drawer .metric-details-content .metrics-accordion .ant-table-content{margin-bottom:0 !important}.metric-details-drawer .metric-details-content .metrics-accordion .ant-collapse{border-width:.5px !important}.metric-details-drawer .metric-details-content .metrics-accordion .ant-collapse-item{border-width:.5px !important}.metric-details-drawer .metric-details-content .metrics-accordion .ant-collapse-content{border-top-width:.5px !important}.metric-details-drawer .ant-select .ant-select-selector{width:200px !important}.top-attributes-content{display:flex;flex-direction:column;gap:6px;padding:12px;font-family:\\\"Geist Mono\\\" !important;max-height:300px;overflow-y:scroll}.top-attributes-content .top-attributes-item{display:flex;justify-content:space-between}.top-attributes-content .top-attributes-item .top-attributes-item-progress{display:flex;gap:12px;height:34px;width:100%;color:var(--bg-vanilla-100);padding:0 12px;align-items:center;position:relative}.top-attributes-content .top-attributes-item .top-attributes-item-progress .top-attributes-item-key{z-index:2}.top-attributes-content .top-attributes-item .top-attributes-item-progress .top-attributes-item-count{background-color:var(--bg-slate-300);border-radius:50px;padding:2px 6px;color:var(--bg-vanilla-400);z-index:2}.top-attributes-content .top-attributes-item .top-attributes-item-progress .top-attributes-item-progress-bar{background-color:var(--bg-slate-400);height:100%;position:absolute;top:0;left:0}.lightMode .metric-details-header .ant-btn{background-color:var(--bg-white-400)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-header .action-button .ant-typography{color:var(--bg-slate-400)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-content .metric-metadata-key .all-attributes-key .ant-typography:last-child{color:var(--bg-slate-400);background-color:var(--bg-robin-300)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-content .metric-metadata-value{background-color:var(--bg-vanilla-300)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-content .metric-metadata-value .all-attributes-value .ant-btn{background-color:var(--bg-vanilla-400)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-content .metric-metadata-value .all-attributes-value .ant-btn .ant-typography{color:var(--bg-slate-400)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-content .metric-metadata-value .all-attributes-value .ant-btn:hover{background-color:var(--bg-vanilla-100)}.lightMode .metric-details-content .metrics-accordion .metrics-accordion-content .metric-metadata-value .field-renderer-container .label{color:var(--bg-slate-400)}.lightMode .top-attributes-content .top-attributes-item-progress .top-attributes-item-progress-bar{background-color:var(--bg-robin-400)}.lightMode .top-attributes-content .top-attributes-item-progress .top-attributes-item-count{background-color:var(--bg-robin-300)}.lightMode .top-attributes-content .top-attributes-item-progress .top-attributes-item-key,.lightMode .top-attributes-content .top-attributes-item-progress .top-attributes-item-count{color:var(--bg-slate-400)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/MetricsExplorer/MetricDetails/MetricDetails.styles.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\".metric-details-drawer {\\n\\t.metric-details-header {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\talign-items: center;\\n\\n\\t\\t.metric-details-title {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 8px;\\n\\n\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.metric-details-header-buttons {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tgap: 8px;\\n\\t\\t}\\n\\n\\t\\t.ant-btn {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 4px;\\n\\t\\t\\tbackground-color: var(--bg-slate-300);\\n\\t\\t}\\n\\n\\t\\t.inspect-metrics-button {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t}\\n\\t}\\n\\n\\t.metric-details-content {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 12px;\\n\\n\\t\\t.metric-details-content-grid {\\n\\t\\t\\t.labels-row,\\n\\t\\t\\t.values-row {\\n\\t\\t\\t\\tdisplay: grid;\\n\\t\\t\\t\\tgrid-template-columns: 1fr 1fr 2fr;\\n\\t\\t\\t\\tgap: 30px;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.labels-row {\\n\\t\\t\\t\\tmargin-bottom: 8px;\\n\\n\\t\\t\\t\\t.metric-details-grid-label {\\n\\t\\t\\t\\t\\tfont-size: 11px;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.values-row {\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\tfont-weight: 600;\\n\\t\\t\\t\\tline-height: 20px; /* 142.857% */\\n\\t\\t\\t\\tletter-spacing: -0.07px;\\n\\n\\t\\t\\t\\t.metric-details-grid-value {\\n\\t\\t\\t\\t\\tfont-size: 14px;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.dashboards-and-alerts-popover-container {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tgap: 16px;\\n\\n\\t\\t\\t.dashboards-and-alerts-popover {\\n\\t\\t\\t\\tborder-radius: 20px;\\n\\t\\t\\t\\tpadding: 4px 8px;\\n\\t\\t\\t\\tcursor: pointer;\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\tgap: 4px;\\n\\n\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\topacity: 0.8;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.dashboards-popover {\\n\\t\\t\\t\\tborder: 1px solid var(--bg-sienna-500);\\n\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\tcolor: var(--bg-sienna-500);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.alerts-popover {\\n\\t\\t\\t\\tborder: 1px solid var(--bg-sakura-500);\\n\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\tcolor: var(--bg-sakura-500);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.metrics-accordion {\\n\\t\\t\\t.ant-table-body {\\n\\t\\t\\t\\t&::-webkit-scrollbar {\\n\\t\\t\\t\\t\\twidth: 2px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t&::-webkit-scrollbar-track {\\n\\t\\t\\t\\t\\tbackground: transparent;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t&::-webkit-scrollbar-thumb {\\n\\t\\t\\t\\t\\tbackground: var(--bg-slate-300);\\n\\t\\t\\t\\t\\tborder-radius: 1px;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metrics-accordion-header {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\theight: 36px;\\n\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t\\t\\tcolor: var(--bg-robin-400);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.action-menu {\\n\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\tgap: 4px;\\n\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\talign-self: flex-start;\\n\\n\\t\\t\\t\\t\\t.action-button {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tgap: 4px;\\n\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\\talign-self: flex-start;\\n\\t\\t\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\t\\t\\tfont-family: 'Inter';\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.all-attributes-search-input {\\n\\t\\t\\t\\t\\twidth: 300px;\\n\\t\\t\\t\\t\\tborder: 1px solid var(--bg-slate-300);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.all-attributes-content {\\n\\t\\t\\t\\t.metric-metadata-key {\\n\\t\\t\\t\\t\\t.all-attributes-key {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tjustify-content: space-between;\\n\\t\\t\\t\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\t\\t\\t\\t.ant-typography:first-child {\\n\\t\\t\\t\\t\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-robin-400);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t.all-attributes-contribution {\\n\\t\\t\\t\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t\\t\\tbackground-color: rgba(171, 189, 255, 0.1);\\n\\t\\t\\t\\t\\t\\t\\theight: 24px;\\n\\t\\t\\t\\t\\t\\t\\tmin-width: 24px;\\n\\t\\t\\t\\t\\t\\t\\tborder-radius: 50%;\\n\\t\\t\\t\\t\\t\\t\\ttext-align: center;\\n\\t\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\t\\talign-items: center;\\n\\t\\t\\t\\t\\t\\t\\tjustify-content: center;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.metric-metadata-value {\\n\\t\\t\\t\\t\\t.all-attributes-value {\\n\\t\\t\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t\\t\\t\\tgap: 4px;\\n\\t\\t\\t\\t\\t\\tmax-height: 220px;\\n\\t\\t\\t\\t\\t\\toverflow-y: scroll;\\n\\t\\t\\t\\t\\t\\toverflow-x: hidden;\\n\\t\\t\\t\\t\\t\\t&::-webkit-scrollbar {\\n\\t\\t\\t\\t\\t\\t\\twidth: 2px;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t&::-webkit-scrollbar-track {\\n\\t\\t\\t\\t\\t\\t\\tbackground: transparent;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t&::-webkit-scrollbar-thumb {\\n\\t\\t\\t\\t\\t\\t\\tbackground: var(--bg-slate-300);\\n\\t\\t\\t\\t\\t\\t\\tborder-radius: 1px;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\t\\t\\t\\ttext-align: left;\\n\\t\\t\\t\\t\\t\\t\\twidth: fit-content;\\n\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-slate-300);\\n\\t\\t\\t\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t\\t\\t\\t\\t\\ttext-overflow: ellipsis;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-slate-400);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-collapse-content-box {\\n\\t\\t\\t\\tpadding: 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-collapse-header {\\n\\t\\t\\t\\tdisplay: flex !important;\\n\\t\\t\\t\\talign-items: center !important;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-type-renderer {\\n\\t\\t\\t\\tmax-height: 12px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-metadata-key {\\n\\t\\t\\t\\tcursor: pointer;\\n\\t\\t\\t\\tpadding-left: 10px;\\n\\t\\t\\t\\tvertical-align: middle;\\n\\t\\t\\t\\ttext-align: center;\\n\\t\\t\\t\\t.field-renderer-container {\\n\\t\\t\\t\\t\\t.label {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-metadata-value {\\n\\t\\t\\t\\tbackground: rgba(22, 25, 34, 0.4);\\n\\t\\t\\t\\toverflow-x: scroll;\\n\\t\\t\\t\\t.field-renderer-container {\\n\\t\\t\\t\\t\\t.label {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\t\\t\\tpadding-right: 10px;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t&::-webkit-scrollbar {\\n\\t\\t\\t\\t\\theight: 2px;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-content {\\n\\t\\t\\t\\tmargin-bottom: 0 !important;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-collapse {\\n\\t\\t\\t\\tborder-width: 0.5px !important;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-collapse-item {\\n\\t\\t\\t\\tborder-width: 0.5px !important;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-collapse-content {\\n\\t\\t\\t\\tborder-top-width: 0.5px !important;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.ant-select {\\n\\t\\t.ant-select-selector {\\n\\t\\t\\twidth: 200px !important;\\n\\t\\t}\\n\\t}\\n}\\n\\n.top-attributes-content {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tgap: 6px;\\n\\tpadding: 12px;\\n\\tfont-family: 'Geist Mono' !important;\\n\\tmax-height: 300px;\\n\\toverflow-y: scroll;\\n\\t.top-attributes-item {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\n\\t\\t.top-attributes-item-progress {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tgap: 12px;\\n\\t\\t\\theight: 34px;\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\tpadding: 0 12px;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tposition: relative;\\n\\n\\t\\t\\t.top-attributes-item-key {\\n\\t\\t\\t\\tz-index: 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.top-attributes-item-count {\\n\\t\\t\\t\\tbackground-color: var(--bg-slate-300);\\n\\t\\t\\t\\tborder-radius: 50px;\\n\\t\\t\\t\\tpadding: 2px 6px;\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t\\tz-index: 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.top-attributes-item-progress-bar {\\n\\t\\t\\t\\tbackground-color: var(--bg-slate-400);\\n\\t\\t\\t\\theight: 100%;\\n\\t\\t\\t\\tposition: absolute;\\n\\t\\t\\t\\ttop: 0;\\n\\t\\t\\t\\tleft: 0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.metric-details-header {\\n\\t\\t.ant-btn {\\n\\t\\t\\tbackground-color: var(--bg-white-400);\\n\\t\\t}\\n\\t}\\n\\n\\t.metric-details-content {\\n\\t\\t.metrics-accordion {\\n\\t\\t\\t.metrics-accordion-header {\\n\\t\\t\\t\\t.action-button {\\n\\t\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metrics-accordion-content {\\n\\t\\t\\t\\t.metric-metadata-key {\\n\\t\\t\\t\\t\\t.all-attributes-key {\\n\\t\\t\\t\\t\\t\\t.ant-typography:last-child {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-robin-300);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.metric-metadata-value {\\n\\t\\t\\t\\t\\tbackground-color: var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\t.all-attributes-value {\\n\\t\\t\\t\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-vanilla-400);\\n\\t\\t\\t\\t\\t\\t\\t.ant-typography {\\n\\t\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\t\\t\\t\\tbackground-color: var(--bg-vanilla-100);\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t.field-renderer-container {\\n\\t\\t\\t\\t\\t\\t.label {\\n\\t\\t\\t\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\t.top-attributes-content {\\n\\t\\t.top-attributes-item-progress {\\n\\t\\t\\t.top-attributes-item-progress-bar {\\n\\t\\t\\t\\tbackground-color: var(--bg-robin-400);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.top-attributes-item-count {\\n\\t\\t\\t\\tbackground-color: var(--bg-robin-300);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.top-attributes-item-key,\\n\\t\\t\\t.top-attributes-item-count {\\n\\t\\t\\t\\tcolor: var(--bg-slate-400);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".metrics-explorer-summary-tab{display:flex;flex-direction:column;gap:16px;padding:16px 0}.metrics-explorer-summary-tab .metrics-table-title,.metrics-explorer-summary-tab .metrics-treemap-title{display:flex;align-items:center;gap:8px;margin-bottom:16px}.metrics-explorer-summary-tab .metrics-table-title .ant-typography,.metrics-explorer-summary-tab .metrics-treemap-title .ant-typography{margin-top:0;margin-bottom:0}.metrics-explorer-summary-tab .metrics-table-title .lucide-info,.metrics-explorer-summary-tab .metrics-treemap-title .lucide-info{cursor:pointer}.metrics-explorer-summary-tab .metrics-treemap-title{justify-content:space-between}.metrics-explorer-summary-tab .metrics-treemap-title .metrics-treemap-title-left{display:flex;align-items:center;gap:8px}.metrics-explorer-summary-tab .metrics-treemap-title .ant-select{width:140px}.metrics-explorer-summary-tab .metrics-search-container{display:flex;gap:16px}.metrics-explorer-summary-tab .metrics-search-container .metrics-search-options{display:flex;justify-content:space-between}.metrics-explorer-summary-tab .metrics-search-container .qb-search-container{display:flex;align-items:center;gap:8px;flex:1}.metrics-explorer-summary-tab .metrics-search-container .qb-search-container .lucide-info{cursor:pointer}.metrics-explorer-summary-tab .metrics-search-container .qb-search-container .query-builder-search-container{width:100%}.metrics-explorer-summary-tab .metrics-table-container .ant-table{margin-left:-16px;margin-right:-16px;max-height:500px;overflow-y:auto}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-thead>tr>th{padding:12px;font-weight:500;font-size:12px;line-height:18px;background:var(--bg-ink-500);border-bottom:none;color:var(--Vanilla-400, #c0c1c3);font-family:Inter;font-size:11px;font-style:normal;font-weight:600;line-height:18px;letter-spacing:.44px;text-transform:uppercase}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-thead>tr>th::before{background-color:rgba(0,0,0,0)}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-thead>tr>th:has(.metric-name-column-header){background:var(--bg-ink-400)}.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-name-column-header,.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-type-column-header{display:flex;justify-content:space-between}.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-name-column-header .metric-name-column-header-text,.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-name-column-header .metric-type-column-header-text,.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-type-column-header .metric-name-column-header-text,.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-type-column-header .metric-type-column-header-text{line-height:32px}.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-name-column-header .ant-btn,.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-type-column-header .ant-btn{margin-left:4px;padding:0}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-cell{padding:12px;font-size:13px;line-height:20px;color:var(--bg-vanilla-100);background:var(--bg-ink-500)}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-cell:has(.metric-name-column-value){background:var(--bg-ink-400)}.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-description-column-value{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.metrics-explorer-summary-tab .metrics-table-container .ant-table .metric-name-column-value{color:var(--bg-vanilla-100);font-family:\\\"Geist Mono\\\";font-style:normal;font-weight:600;line-height:20px;letter-spacing:-0.07px}.metrics-explorer-summary-tab .metrics-table-container .ant-table .status-cell .active-tag{color:var(--bg-forest-500);padding:4px 8px;border-radius:4px;font-size:12px;font-weight:500}.metrics-explorer-summary-tab .metrics-table-container .ant-table .progress-container .ant-progress-bg{height:8px !important;border-radius:4px}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-tbody>tr:hover>td{background:rgba(255,255,255,.04)}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-cell:first-child{text-align:justify}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-cell:nth-child(2){padding-left:16px;padding-right:16px}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-cell:nth-child(n+3){padding-right:24px}.metrics-explorer-summary-tab .metrics-table-container .ant-table .column-header-right{text-align:right}.metrics-explorer-summary-tab .metrics-table-container .ant-table .column-header-left{text-align:left}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-tbody>tr>td{border-bottom:none}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-table-thead>tr>th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before{background-color:rgba(0,0,0,0)}.metrics-explorer-summary-tab .metrics-table-container .ant-table .ant-empty-normal{visibility:hidden}.metrics-explorer-summary-tab .metrics-table-container .ant-pagination{position:fixed;bottom:0;width:calc(100% - 64px);background:var(--bg-ink-500);padding:16px;margin:0;right:20px}.metrics-explorer-summary-tab .metrics-table-container .ant-pagination .ant-pagination-item{border-radius:4px}.metrics-explorer-summary-tab .metrics-table-container .ant-pagination .ant-pagination-item-active{background:var(--bg-robin-500);border-color:var(--bg-robin-500)}.metrics-explorer-summary-tab .metrics-table-container .ant-pagination .ant-pagination-item-active a{color:var(--bg-ink-500) !important}.metrics-explorer-summary-tab .metrics-treemap{margin-left:-12px;margin-right:-12px}.metrics-explorer-summary-tab .no-metrics-message-container{display:flex;flex-direction:column;justify-content:flex-start;align-items:center;min-height:400px;gap:16px;padding-top:32px}.lightMode .metrics-table-container .ant-table .ant-table-thead>tr>th{background:var(--bg-vanilla-100);color:var(--text-ink-300)}.lightMode .metrics-table-container .ant-table .ant-table-thead>tr>th:has(.metric-name-column-header){background:var(--bg-vanilla-100)}.lightMode .metrics-table-container .ant-table .ant-table-cell{background:var(--bg-vanilla-100);color:var(--bg-ink-500)}.lightMode .metrics-table-container .ant-table .ant-table-cell:has(.metric-name-column-value){background:var(--bg-vanilla-100)}.lightMode .metrics-table-container .ant-table .metric-name-column-value{color:var(--bg-ink-300)}.lightMode .metrics-table-container .ant-table .ant-table-tbody>tr:hover>td{background:rgba(0,0,0,.04)}.lightMode .metrics-table-container .ant-pagination{background:var(--bg-vanilla-100)}.lightMode .metrics-table-container .ant-pagination .ant-pagination-item-active{background:var(--bg-robin-500);border-color:var(--bg-robin-500)}.lightMode .metrics-table-container .ant-pagination .ant-pagination-item-active a{color:var(--bg-vanilla-100) !important}.metric-type-renderer{border-radius:50px;max-height:24px;width:fit-content;display:flex;align-items:center;justify-content:flex-start;gap:4px;text-transform:uppercase;font-size:12px;padding:5px 10px;align-self:flex-end}.ant-popover-inner{padding:0 !important}.metric-name-search-popover .metric-name-search-popover-menu{height:200px;width:300px;overflow-y:scroll}.metric-name-search-popover .ant-menu .ant-spin,.metric-name-search-popover .ant-menu .ant-empty{display:flex;flex-direction:column;align-items:center;justify-content:center;margin-top:16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/MetricsExplorer/Summary/Summary.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,8BACC,YAAA,CACA,qBAAA,CACA,QAAA,CACA,cAAA,CAEA,wGAEC,YAAA,CACA,kBAAA,CACA,OAAA,CACA,kBAAA,CAEA,wIACC,YAAA,CACA,eAAA,CAGD,kIACC,cAAA,CAIF,qDACC,6BAAA,CAEA,iFACC,YAAA,CACA,kBAAA,CACA,OAAA,CAGD,iEACC,WAAA,CAIF,wDACC,YAAA,CACA,QAAA,CAEA,gFACC,YAAA,CACA,6BAAA,CAGD,6EACC,YAAA,CACA,kBAAA,CACA,OAAA,CACA,MAAA,CAEA,0FACC,cAAA,CAGD,6GACC,UAAA,CAMF,kEACC,iBAAA,CACA,kBAAA,CAEA,gBAAA,CACA,eAAA,CACA,yFACC,YAAA,CACA,eAAA,CACA,cAAA,CACA,gBAAA,CAEA,4BAAA,CACA,kBAAA,CAEA,iCAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,oBAAA,CACA,wBAAA,CAEA,iGACC,8BAAA,CAIF,yHACC,4BAAA,CAGD,0LAEC,YAAA,CACA,6BAAA,CAEA,ofAEC,gBAAA,CAGD,4MACC,eAAA,CACA,SAAA,CAIF,kFACC,YAAA,CACA,cAAA,CACA,gBAAA,CACA,2BAAA,CACA,4BAAA,CAGD,iHACC,4BAAA,CAGD,mGACC,kBAAA,CACA,eAAA,CACA,sBAAA,CAGD,4FACC,2BAAA,CACA,wBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,sBAAA,CAIA,2FACC,0BAAA,CACA,eAAA,CACA,iBAAA,CACA,cAAA,CACA,eAAA,CAKD,uGACC,qBAAA,CACA,iBAAA,CAIF,+FACC,gCAAA,CAGD,8FACC,kBAAA,CAGD,+FACC,iBAAA,CACA,kBAAA,CAGD,iGACC,kBAAA,CAED,uFACC,gBAAA,CAED,sFACC,eAAA,CAED,yFACC,kBAAA,CAGD,uMAGC,8BAAA,CAGD,oFACC,iBAAA,CAIF,uEACC,cAAA,CACA,QAAA,CACA,uBAAA,CACA,4BAAA,CACA,YAAA,CACA,QAAA,CAGA,UAAA,CAEA,4FACC,iBAAA,CAEA,mGACC,8BAAA,CACA,gCAAA,CAEA,qGACC,kCAAA,CAOL,+CACC,iBAAA,CACA,kBAAA,CAGD,4DACC,YAAA,CACA,qBAAA,CACA,0BAAA,CACA,kBAAA,CACA,gBAAA,CACA,QAAA,CACA,gBAAA,CAOC,sEACC,gCAAA,CACA,yBAAA,CAGD,sGACC,gCAAA,CAGD,+DACC,gCAAA,CACA,uBAAA,CAGD,8FACC,gCAAA,CAGD,yEACC,uBAAA,CAGD,4EACC,0BAAA,CAIF,oDACC,gCAAA,CAGC,gFACC,8BAAA,CACA,gCAAA,CAEA,kFACC,sCAAA,CAQN,sBACC,kBAAA,CACA,eAAA,CACA,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,OAAA,CACA,wBAAA,CACA,cAAA,CACA,gBAAA,CACA,mBAAA,CAGD,mBACC,oBAAA,CAIA,6DACC,YAAA,CACA,WAAA,CACA,iBAAA,CAIA,iGAEC,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA\",\"sourcesContent\":[\".metrics-explorer-summary-tab {\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\tgap: 16px;\\n\\tpadding: 16px 0;\\n\\n\\t.metrics-table-title,\\n\\t.metrics-treemap-title {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 8px;\\n\\t\\tmargin-bottom: 16px;\\n\\n\\t\\t.ant-typography {\\n\\t\\t\\tmargin-top: 0;\\n\\t\\t\\tmargin-bottom: 0;\\n\\t\\t}\\n\\n\\t\\t.lucide-info {\\n\\t\\t\\tcursor: pointer;\\n\\t\\t}\\n\\t}\\n\\n\\t.metrics-treemap-title {\\n\\t\\tjustify-content: space-between;\\n\\n\\t\\t.metrics-treemap-title-left {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 8px;\\n\\t\\t}\\n\\n\\t\\t.ant-select {\\n\\t\\t\\twidth: 140px;\\n\\t\\t}\\n\\t}\\n\\n\\t.metrics-search-container {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 16px;\\n\\n\\t\\t.metrics-search-options {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: space-between;\\n\\t\\t}\\n\\n\\t\\t.qb-search-container {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tgap: 8px;\\n\\t\\t\\tflex: 1;\\n\\n\\t\\t\\t.lucide-info {\\n\\t\\t\\t\\tcursor: pointer;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.query-builder-search-container {\\n\\t\\t\\t\\twidth: 100%;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.metrics-table-container {\\n\\t\\t.ant-table {\\n\\t\\t\\tmargin-left: -16px;\\n\\t\\t\\tmargin-right: -16px;\\n\\n\\t\\t\\tmax-height: 500px;\\n\\t\\t\\toverflow-y: auto;\\n\\t\\t\\t.ant-table-thead > tr > th {\\n\\t\\t\\t\\tpadding: 12px;\\n\\t\\t\\t\\tfont-weight: 500;\\n\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\tline-height: 18px;\\n\\n\\t\\t\\t\\tbackground: var(--bg-ink-500);\\n\\t\\t\\t\\tborder-bottom: none;\\n\\n\\t\\t\\t\\tcolor: var(--Vanilla-400, #c0c1c3);\\n\\t\\t\\t\\tfont-family: Inter;\\n\\t\\t\\t\\tfont-size: 11px;\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\tfont-weight: 600;\\n\\t\\t\\t\\tline-height: 18px; /* 163.636% */\\n\\t\\t\\t\\tletter-spacing: 0.44px;\\n\\t\\t\\t\\ttext-transform: uppercase;\\n\\n\\t\\t\\t\\t&::before {\\n\\t\\t\\t\\t\\tbackground-color: transparent;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-thead > tr > th:has(.metric-name-column-header) {\\n\\t\\t\\t\\tbackground: var(--bg-ink-400);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-name-column-header,\\n\\t\\t\\t.metric-type-column-header {\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tjustify-content: space-between;\\n\\n\\t\\t\\t\\t.metric-name-column-header-text,\\n\\t\\t\\t\\t.metric-type-column-header-text {\\n\\t\\t\\t\\t\\tline-height: 32px;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\t\\tmargin-left: 4px;\\n\\t\\t\\t\\t\\tpadding: 0;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell {\\n\\t\\t\\t\\tpadding: 12px;\\n\\t\\t\\t\\tfont-size: 13px;\\n\\t\\t\\t\\tline-height: 20px;\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\tbackground: var(--bg-ink-500);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell:has(.metric-name-column-value) {\\n\\t\\t\\t\\tbackground: var(--bg-ink-400);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-description-column-value {\\n\\t\\t\\t\\twhite-space: nowrap;\\n\\t\\t\\t\\toverflow: hidden;\\n\\t\\t\\t\\ttext-overflow: ellipsis;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-name-column-value {\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\t\\t\\tfont-family: 'Geist Mono';\\n\\t\\t\\t\\tfont-style: normal;\\n\\t\\t\\t\\tfont-weight: 600;\\n\\t\\t\\t\\tline-height: 20px; /* 142.857% */\\n\\t\\t\\t\\tletter-spacing: -0.07px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.status-cell {\\n\\t\\t\\t\\t.active-tag {\\n\\t\\t\\t\\t\\tcolor: var(--bg-forest-500);\\n\\t\\t\\t\\t\\tpadding: 4px 8px;\\n\\t\\t\\t\\t\\tborder-radius: 4px;\\n\\t\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t\\t\\tfont-weight: 500;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.progress-container {\\n\\t\\t\\t\\t.ant-progress-bg {\\n\\t\\t\\t\\t\\theight: 8px !important;\\n\\t\\t\\t\\t\\tborder-radius: 4px;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-tbody > tr:hover > td {\\n\\t\\t\\t\\tbackground: rgba(255, 255, 255, 0.04);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell:first-child {\\n\\t\\t\\t\\ttext-align: justify;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell:nth-child(2) {\\n\\t\\t\\t\\tpadding-left: 16px;\\n\\t\\t\\t\\tpadding-right: 16px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell:nth-child(n + 3) {\\n\\t\\t\\t\\tpadding-right: 24px;\\n\\t\\t\\t}\\n\\t\\t\\t.column-header-right {\\n\\t\\t\\t\\ttext-align: right;\\n\\t\\t\\t}\\n\\t\\t\\t.column-header-left {\\n\\t\\t\\t\\ttext-align: left;\\n\\t\\t\\t}\\n\\t\\t\\t.ant-table-tbody > tr > td {\\n\\t\\t\\t\\tborder-bottom: none;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-thead\\n\\t\\t\\t\\t> tr\\n\\t\\t\\t\\t> th:not(:last-child):not(.ant-table-selection-column):not(.ant-table-row-expand-icon-cell):not([colspan])::before {\\n\\t\\t\\t\\tbackground-color: transparent;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-empty-normal {\\n\\t\\t\\t\\tvisibility: hidden;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.ant-pagination {\\n\\t\\t\\tposition: fixed;\\n\\t\\t\\tbottom: 0;\\n\\t\\t\\twidth: calc(100% - 64px);\\n\\t\\t\\tbackground: var(--bg-ink-500);\\n\\t\\t\\tpadding: 16px;\\n\\t\\t\\tmargin: 0;\\n\\n\\t\\t\\t// this is to offset chat support icon till we improve the design\\n\\t\\t\\tright: 20px;\\n\\n\\t\\t\\t.ant-pagination-item {\\n\\t\\t\\t\\tborder-radius: 4px;\\n\\n\\t\\t\\t\\t&-active {\\n\\t\\t\\t\\t\\tbackground: var(--bg-robin-500);\\n\\t\\t\\t\\t\\tborder-color: var(--bg-robin-500);\\n\\n\\t\\t\\t\\t\\ta {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-ink-500) !important;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.metrics-treemap {\\n\\t\\tmargin-left: -12px;\\n\\t\\tmargin-right: -12px;\\n\\t}\\n\\n\\t.no-metrics-message-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tjustify-content: flex-start;\\n\\t\\talign-items: center;\\n\\t\\tmin-height: 400px;\\n\\t\\tgap: 16px;\\n\\t\\tpadding-top: 32px;\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.metrics-table-container {\\n\\t\\t.ant-table {\\n\\t\\t\\t.ant-table-thead > tr > th {\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t\\tcolor: var(--text-ink-300);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-thead > tr > th:has(.metric-name-column-header) {\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell {\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t\\tcolor: var(--bg-ink-500);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-cell:has(.metric-name-column-value) {\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.metric-name-column-value {\\n\\t\\t\\t\\tcolor: var(--bg-ink-300);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-table-tbody > tr:hover > td {\\n\\t\\t\\t\\tbackground: rgba(0, 0, 0, 0.04);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.ant-pagination {\\n\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\n\\t\\t\\t.ant-pagination-item {\\n\\t\\t\\t\\t&-active {\\n\\t\\t\\t\\t\\tbackground: var(--bg-robin-500);\\n\\t\\t\\t\\t\\tborder-color: var(--bg-robin-500);\\n\\n\\t\\t\\t\\t\\ta {\\n\\t\\t\\t\\t\\t\\tcolor: var(--bg-vanilla-100) !important;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\\n.metric-type-renderer {\\n\\tborder-radius: 50px;\\n\\tmax-height: 24px;\\n\\twidth: fit-content;\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tjustify-content: flex-start;\\n\\tgap: 4px;\\n\\ttext-transform: uppercase;\\n\\tfont-size: 12px;\\n\\tpadding: 5px 10px;\\n\\talign-self: flex-end;\\n}\\n\\n.ant-popover-inner {\\n\\tpadding: 0 !important;\\n}\\n\\n.metric-name-search-popover {\\n\\t.metric-name-search-popover-menu {\\n\\t\\theight: 200px;\\n\\t\\twidth: 300px;\\n\\t\\toverflow-y: scroll;\\n\\t}\\n\\n\\t.ant-menu {\\n\\t\\t.ant-spin,\\n\\t\\t.ant-empty {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\t\\t\\talign-items: center;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\tmargin-top: 16px;\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".metrics-explorer-page{flex:1;display:flex;flex-direction:column;height:100%}.metrics-explorer-page .ant-tabs{height:100%}.metrics-explorer-page .ant-tabs-nav{padding:0 8px;margin-bottom:0px}.metrics-explorer-page .ant-tabs-nav::before{border-bottom:1px solid var(--bg-slate-400) !important}.metrics-explorer-page .ant-tabs-content-holder{display:flex}.metrics-explorer-page .ant-tabs-content-holder .ant-tabs-content{flex:1;display:flex;flex-direction:column}.metrics-explorer-page .ant-tabs-content-holder .ant-tabs-content .ant-tabs-tabpane{flex:1;display:flex;flex-direction:column}.metrics-explorer-page .tab-item{display:flex;justify-content:center;align-items:center;gap:8px}.lightMode .metrics-explorer-page .ant-tabs-nav::before{border-bottom:1px solid var(--bg-vanilla-300) !important}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/pages/MetricsExplorer/MetricsExplorerPage.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,uBACC,MAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CAEA,iCACC,WAAA,CAGD,qCACC,aAAA,CACA,iBAAA,CAEA,6CACC,sDAAA,CAIF,gDACC,YAAA,CAEA,kEACC,MAAA,CACA,YAAA,CACA,qBAAA,CAEA,oFACC,MAAA,CACA,YAAA,CACA,qBAAA,CAKH,iCACC,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,OAAA,CAOC,wDACC,wDAAA\",\"sourcesContent\":[\".metrics-explorer-page {\\n\\tflex: 1;\\n\\tdisplay: flex;\\n\\tflex-direction: column;\\n\\theight: 100%;\\n\\n\\t.ant-tabs {\\n\\t\\theight: 100%;\\n\\t}\\n\\n\\t.ant-tabs-nav {\\n\\t\\tpadding: 0 8px;\\n\\t\\tmargin-bottom: 0px;\\n\\n\\t\\t&::before {\\n\\t\\t\\tborder-bottom: 1px solid var(--bg-slate-400) !important;\\n\\t\\t}\\n\\t}\\n\\n\\t.ant-tabs-content-holder {\\n\\t\\tdisplay: flex;\\n\\n\\t\\t.ant-tabs-content {\\n\\t\\t\\tflex: 1;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tflex-direction: column;\\n\\n\\t\\t\\t.ant-tabs-tabpane {\\n\\t\\t\\t\\tflex: 1;\\n\\t\\t\\t\\tdisplay: flex;\\n\\t\\t\\t\\tflex-direction: column;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.tab-item {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t\\tgap: 8px;\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.metrics-explorer-page {\\n\\t\\t.ant-tabs-nav {\\n\\t\\t\\t&::before {\\n\\t\\t\\t\\tborder-bottom: 1px solid var(--bg-vanilla-300) !important;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Explorer.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Inspect.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./MetricDetails.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Summary.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./MetricsExplorerPage.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["getInspectMetricsDetails","async","request","signal","headers","statusCode","error","message","payload","axios","post","data","ErrorResponseHandler","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","Temporality","getMetricDetails","metricName","get","concat","MetricType","getMetricsList","props","response","status","params","getMetricsTreeMap","updateMetricMetadata","_default","ONE_CHART_PER_QUERY_ENABLED_KEY","Explorer","handleRunQuery","stagedQuery","updateAllQueriesOperators","currentQuery","useQueryBuilder","safeNavigate","useSafeNavigate","searchParams","setSearchParams","useSearchParams","isOneChartPerQueryEnabled","showOneChartPerQuery","toggleShowOneChartPerQuery","useState","selectedTab","ExplorerTabs","TIME_SERIES","exportDefaultQuery","useMemo","initialQueriesMap","DataSource","METRICS","PANEL_TYPES","useShareBuilderUrl","handleExport","useCallback","dashboard","_isNewDashboard","queryToExport","widgetId","uuid","dashboardEditView","generateExportToDashboardLink","query","panelType","dashboardId","id","splitedQueries","splitQueryIntoOneChartPerQuery","useEffect","logEvent","MetricsExplorerEvents","TabChanged","MetricsExplorerEventKeys","Tab","_jsxs","Sentry","fallback","_jsx","ErrorBoundaryFallback","children","className","Switch","checked","onChange","handleToggleShowOneChartPerQuery","Object","fromEntries","toString","size","DateTimeSelector","showAutoRefresh","RightToolbarActions","onStageRunQuery","QuerySection","TimeSeries","ExplorerOptionWrapper","disabled","sourcepage","onExport","isOneChartPerQuery","__signature__","panelTypes","useGetPanelTypesQueryParam","QueryBuilder","config","initialDataSource","queryVariant","version","actions","ButtonWrapper","Button","onClick","QueryBuilderQueryChanged","type","_ref","selectedTime","globalSelectedTime","maxTime","minTime","useSelector","state","globalTime","isValidToConvertToMs","isValid","builder","queryData","forEach","_ref2","aggregateAttribute","aggregateOperator","isExistDurationNanoAttribute","key","isCountOperator","push","every","Boolean","queryPayloads","yAxisUnit","setYAxisUnit","queries","useQueries","map","index","queryKey","REACT_QUERY_KEY","GET_QUERY_RANGE","ENTITY_VERSION_V4","queryFn","GetMetricQueryRange","graphType","globalSelectedInterval","dataSource","enabled","_queries$map","_ref3","responseData","datapoint","convertDataValueToMs","changeLayoutForOneChartPerQuery","length","_Fragment","BuilderUnitsFilter","value","classNames","TimeSeriesView","isFilterApplied","isError","isLoading","newQuery","queryFormulas","currentFormula","ExpandedView","_options$timeSeries4","_options$timestamp","_metricInspectionOpti","_options$timestamp2","_selectedTimeSeries$v","_selectedTimeSeries$v2","_metricInspectionOpti2","_selectedTimeSeries$v3","_selectedTimeSeries$v4","_options$timestamp3","_metricInspectionOpti3","options","spaceAggregationSeriesMap","step","metricInspectionOptions","timeAggregatedSeriesMap","selectedTimeSeries","setSelectedTimeSeries","InspectPointClicked","Modal","Filters","filters","TimeAggregationInterval","timeAggregationInterval","TimeAggregationOption","timeAggregationOption","SpaceAggregationOption","spaceAggregationOption","SpaceAggregationLabels","spaceAggregationLabels","_options$timeSeries","InspectionStep","COMPLETED","timeSeries","spaceAggregatedData","timestamp","getSpaceAggregatedDataFromTimeSeries","rawData","getRawDataFromTimeSeries","absoluteValue","_options$timeSeries$v","_options$timeSeries2","values","find","timeAggregatedData","_timeAggregatedSeries","_timeAggregatedSeries2","SPACE_AGGREGATION","filter","popoverData","_options$timeSeries3","title","tableData","entries","labels","label","columns","dataIndex","width","align","ellipsis","Typography","Title","level","Focus","color","Color","BG_VANILLA_100","Card","Text","formatTimestampToFullDateTime","strong","SPACE_AGGREGATION_OPTIONS_FOR_EXPANDED_VIEW","SpaceAggregationOptions","SUM_BY","Tooltip","_ref4","selected","ArrowDownCircle","BG_FOREST_300","ArrowRightCircle","TIME_AGGREGATION_OPTIONS","TimeAggregationOptions","SUM","_ref5","rawValue","_ref6","_ref7","_ref8","ResizeTable","tableLayout","pagination","showHeader","scroll","y","GraphPopover","popoverRef","openInExpandedView","x","closestTimestamp","reduce","prev","curr","Math","abs","closestValue","findIndex","style","top","left","ref","Number","toFixed","ArrowRight","GraphView","inspectMetricsTimeSeries","formattedInspectMetricsTimeSeries","metricUnit","metricType","inspectionStep","setPopoverOptions","popoverOptions","setShowExpandedView","setExpandedViewOptions","isInspectMetricsRefetching","isDarkMode","useIsDarkMode","graphRef","useRef","dimensions","useResizeObserver","start","floor","end","showGraphPopover","setShowGraphPopover","showHoverPopover","setShowHoverPopover","hoverPopoverOptions","setHoverPopoverOptions","viewType","setViewType","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","height","legend","show","axes","stroke","TEXT_VANILLA_400","BG_SLATE_400","grid","_","vals","v","d","Date","date","String","getDate","padStart","getMonth","time","getHours","getMinutes","getSeconds","BG_SLATE_500","BG_SLATE_200","formatNumberIntoHumanReadableFormat","series","slice","_inspectMetricsTimeSe","_inspectMetricsTimeSe2","drawStyle","lineInterpolation","fromCharCode","strokeColor","spanGaps","points","scales","min","max","hooks","ready","u","over","e","onGraphClick","onGraphHover","MetricTypeIcon","METRIC_TYPE_TO_ICON_MAP","Group","icon","METRIC_TYPE_TO_COLOR_MAP","newViewType","InspectViewChanged","InspectView","Skeleton","active","Uplot","TableView","HoverPopover","Inspect","_updatedCurrentQuery$","defaultMetricName","isOpen","onClose","setMetricName","expandedViewOptions","showExpandedView","metricDetailsData","useGetMetricDetails","handleChangeQueryData","useQueryOperations","entityVersion","updatedCurrentQuery","searchQuery","op","items","inspectMetricsStatusCode","isInspectMetricsLoading","isInspectMetricsError","dispatchMetricInspectionOptions","spaceAggregatedSeriesMap","aggregatedTimeSeries","reset","useInspectMetrics","handleDispatchMetricInspectionOptions","action","InspectQueryChanged","selectedMetricType","_metricDetailsData$pa","metadata","metric_type","selectedMetricUnit","_metricDetailsData$pa2","unit","resetInspection","content","errorMessage","Empty","description","Stepper","ModalOpened","Drawer","Compass","open","overscrollBehavior","background","BG_INK_400","destroyOnClose","Atom","MetricNameSearch","MetricFilters","MetricTimeAggregation","MetricSpaceAggregation","TIME_AGGREGATION","Link","href","TEMPORAL_AGGREGATION_LINK","ArrowUpRightFromSquare","BG_ROBIN_500","SPACE_AGGREGATION_LINK","RefreshCcw","isSpaceAggregatedWithoutLabel","labelKeys","keys","getDynamicColumnStyle","maxWidth","whiteSpace","overflow","textOverflow","render","text","sticky","openExpandedView","acc","Flex","gap","formattedValue","Table","loading","GAUGE","BG_SAKURA_500","HISTOGRAM","BG_SIENNA_500","SUMMARY","BG_FOREST_500","EXPONENTIAL_HISTOGRAM","BG_AQUA_500","Gauge","BarChart2","Diff","BarChartHorizontal","BarChart","LATEST","AVG","MIN","MAX","COUNT","SPACE_AGGREGATION_OPTIONS","MIN_BY","MAX_BY","AVG_BY","INITIAL_INSPECT_METRICS_OPTIONS","metricInspectionReducer","now","useReducer","inspectMetricsData","isRefetching","useGetInspectMetricsDetails","keepPreviousData","_inspectMetricsData$p","_inspectMetricsData$p2","generateColor","themeColors","chartcolors","lightModeColor","sort","a","b","setSpaceAggregatedSeriesMap","Map","setTimeAggregatedSeriesMap","setAggregatedTimeSeries","timeAggregatedSeries","applyTimeAggregation","aggregatedSeries","applySpaceAggregation","timestamps","getAllTimestampsOfMetrics","timeseriesArray","valuesMap","set","parseFloat","_valuesMap$get","NaN","Float64Array","_inspectMetricsData$p3","Set","add","Array","from","isInspectEnabled","flatMap","getDefaultTimeAggregationInterval","reportingInterval","searchText","setSearchText","AggregatorFilter","defaultValue","onSelect","dataType","DataTypes","isColumn","isJSON","QueryBuilderSearch","FilterApplied","suffixIcon","HardHat","disableNavigationShortcuts","Select","placeholder","Option","Input","suffix","parseInt","onWheel","blur","mode","applyFilters","_filter$key","_filter$key$key","_filter$key2","includes","groupedTimestamps","_groupedTimestamps$ge","intervalBucket","has","aggregatedValues","aggregatedValue","intervalStart","sum","val","groupedSeries","_groupedSeries$get","join","seriesGroup","templateSeries","timestampValuesMap","_ref9","_timestampValuesMap$g","_ref10","split","getSeriesIndexFromPixel","bbox","getBoundingClientRect","clientX","clientY","timestampIndex","posToIdx","seriesIndex","closestPixelDiff","Infinity","i","seriesValue","isNaN","seriesYPx","valToPos","pixelDiff","showPopover","setShowPopover","_closestPoint$value","xVal","posToVal","closestPoint","arguments","_timeSeries$values$le","_timeSeries$values","_timeSeries$values2","_Array$from$","showAll","appliedLabels","matchingSeries","isMatching","_series$values$timest","timeseries","_ref11","returnOnlyTime","datePart","toLocaleDateString","month","day","year","timePart","toLocaleTimeString","hour12","hour","minute","second","getTimeSeriesLabel","textColor","_timeSeries$labels","_ref12","fontWeight","_ref13","_options$timeSeries5","yVal","AllAttributesValue","filterKey","filterValue","goToMetricsExploreWithAppliedAttribute","visibleIndex","setVisibleIndex","attributePopoverKey","setAttributePopoverKey","copyToClipboard","useCopyToClipboard","notifications","useNotifications","handleMenuItemClick","attribute","success","attributePopoverContent","Menu","Copy","info","Popover","trigger","onOpenChange","handleShowMore","AllAttributes","attributes","searchString","setSearchString","activeKey","setActiveKey","handleExplorerTabChange","useHandleExplorerTabChange","goToMetricsExplorerwithAppliedSpaceAggregation","groupBy","compositeQuery","getMetricDetailsQuery","name","ROUTES","METRICS_EXPLORER_EXPLORER","OpenInExplorerClicked","MetricName","AttributeKey","AttributeValue","filteredAttributes","toLowerCase","some","contribution","valueCount","field","Search","stopPropagation","Collapse","bordered","DashboardsAndAlertsPopover","alerts","dashboards","useUrlQuery","alertsPopoverContent","alert","alert_id","QueryParams","ruleId","history","ALERT_OVERVIEW","alert_name","uniqueDashboards","item","self","t","dashboard_id","dashboardsPopoverContent","generatePath","DASHBOARD","dashboard_name","Dropdown","menu","placement","backgroundColor","Grid","Bell","Metadata","refetchMetricDetails","isEditing","setIsEditing","metricMetadata","setMetricMetadata","temporality","mutate","isUpdatingMetricsMetadata","useUpdateMetricMetadata","FieldRenderer","METRIC_METADATA_KEYS","METRIC_TYPE_VALUES_MAP","METRIC_TYPE_LABEL_MAP","MetricTypeRenderer","handleSave","isMonotonic","determineIsMonotonic","onSuccess","MetricMetadataUpdated","onError","actionButton","X","Save","Edit2","MetricDetails","_data$payload","_metric$metadata3","_metric$metadata4","openInspectModal","isFetching","metricDetailsError","refetch","metric","lastReceived","formatTimestampToReadableDate","showInspectFeature","_metric$metadata","isMetricDetailsLoading","timeSeriesActive","formatNumberToCompactFormat","timeSeriesTotal","goToMetricsExplorerwithSelectedMetric","_metric$metadata2","isMetricDetailsError","Divider","Crosshair","closeIcon","samples","toLocaleString","diffInSeconds","getTime","diffInMinutes","diffInHours","diffInDays","num","Intl","NumberFormat","notation","maximumFractionDigits","format","CUMULATIVE","timeAggregation","spaceAggregation","queryFilters","isPopoverOpen","setIsPopoverOpen","debouncedSearchString","setDebouncedSearchString","highlightedIndex","setHighlightedIndex","menuRef","inputRef","setTimeout","_inputRef$current","focus","metricNameFilterValuesData","isLoadingMetricNameFilterValues","isErrorMetricNameFilterValues","useGetMetricsListFilterValues","filterAttributeKeyDataType","limit","refetchOnWindowFocus","GET_METRICS_LIST_FILTER_VALUES","handleSelect","selectedMetricName","newFilters","SUMMARY_FILTERS_KEY","JSON","stringify","metricNameFilterValues","_metricNameFilterValu","filterValues","handleKeyDown","preventDefault","_menuRef$current","nextIndex","_menuRef$current2","prevIndex","popoverItems","Item","Spin","debouncedUpdate","useDebouncedFn","handleInputChange","trim","popoverContent","onKeyDown","shape","MetricTypeSearch","menuItems","menuItem","MetricsSearch","Info","isMetricsExplorer","DateTimeSelectionV2","showRefreshText","hideShareModal","MetricsTable","pageSize","currentPage","onPaginationChange","setOrderBy","totalCount","openMetricDetails","handleTableChange","_pagination","_filters","sorter","order","columnName","spinning","indicator","LoadingOutlined","spin","getMetricsTableColumns","locale","emptyText","src","alt","showSizeChanger","hideOnSinglePage","total","onRow","record","MetricsTreemap","_data$data3","setHeatmapView","windowWidth","useWindowSize","treemapWidth","TREEMAP_MARGINS","LEFT","RIGHT","treemapData","_data$data","_data$data2","extracedTreemapData","TreemapViewType","TIMESERIES","SAMPLES","transformTreemapData","transformedTreemapData","stratify","parentId","parent","_d$size","xMax","yMax","TREEMAP_HEIGHT","TOP","BOTTOM","paddingTop","TREEMAP_VIEW_OPTIONS","rx","fill","Treemap","root","tile","treemapBinary","round","treemap","descendants","reverse","node","nodeWidth","x1","x0","TREEMAP_SQUARE_PADDING","nodeHeight","y1","y0","depth","displayValue","getTreemapTileStyle","getTreemapTileTextStyle","DEFAULT_ORDER_BY","Summary","_metricsData$payload2","setPageSize","usePageSize","setCurrentPage","orderBy","heatmapView","isMetricDetailsOpen","setIsMetricDetailsOpen","IS_METRIC_DETAILS_OPEN_KEY","isInspectModalOpen","setIsInspectModalOpen","IS_INSPECT_MODAL_OPEN_KEY","setSelectedMetricName","SELECTED_METRIC_NAME_KEY","encodedFilters","parse","TimeUpdated","queryFiltersWithoutId","filtersWithoutId","rest","metricsListQuery","getMetricsListQuery","offset","convertNanoToMilliseconds","metricsTreemapQuery","metricsData","isMetricsLoading","isMetricsFetching","isMetricsError","useGetMetricsList","isListViewError","treeMapData","isTreeMapLoading","isTreeMapFetching","isTreeMapError","useGetMetricsTreeMap","isProportionViewError","handleFilterChange","metrics","formattedMetricsData","_metricsData$payload","formatDataForMetricsTable","view","MetricClicked","View","TreemapViewChanged","ViewType","page","PageNumberChanged","PageNumber","PageSizeChanged","PageSize","OrderByApplied","ColumnName","Order","closeMetricDetails","isModalTimeSelection","InspectModal","closeInspectModal","border","fontSize","ValidateRowValueWrapper","addPlusSign","divisor","replace","metric_name","totalSize","percentage","getTreemapTileBackgroundColor","BG_AMBER_600","BG_AMBER_500","BG_AMBER_400","BG_AMBER_300","BG_AMBER_200","BG_AMBER_100","cursor","borderRadius","display","alignItems","justifyContent","TEXT_SLATE_400","textAlign","padding","_convertedData$payloa","convertedData","convertedResult","result","first","Container","styled","_templateObject","_taggedTemplateLiteral","Col","_templateObject2","requestData","isArray","GET_INSPECT_METRICS_DETAILS","useQuery","GET_METRIC_DETAILS","GET_METRICS_LIST","getMetricsListFilterValues","GET_METRICS_TREE_MAP","useMutation","mutationFn","MetricsExplorerPage","pathname","useLocation","routes","Views","defaultQuery","LIST","RouteTab","Component","SummaryPage","route","METRICS_EXPLORER","ExplorerPage","SaveView","TowerControl","METRICS_EXPLORER_VIEWS","MetricsExplorer","___CSS_LOADER_EXPORT___","api","__esModule","exports","locals"],"sourceRoot":""}