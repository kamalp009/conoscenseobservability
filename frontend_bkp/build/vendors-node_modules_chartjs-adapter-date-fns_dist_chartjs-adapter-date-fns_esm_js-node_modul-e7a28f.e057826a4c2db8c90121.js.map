{"version":3,"file":"vendors-node_modules_chartjs-adapter-date-fns_dist_chartjs-adapter-date-fns_esm_js-node_modul-e7a28f.e057826a4c2db8c90121.js","mappings":";6qCASA,MAAMA,EAAU,CACdC,SAAU,4BACVC,YAAa,mBACbC,OAAQ,eACRC,OAAQ,YACRC,KAAM,KACNC,IAAK,QACLC,KAAM,KACNC,MAAO,WACPC,QAAS,aACTC,KAAM,QAGR,KAAUC,MAAMC,SAAS,CACvBC,IAAK,WAELC,QAAS,WACP,OAAOd,CACT,EAEAe,MAAO,SAASC,EAAOC,GACrB,GAAID,QACF,OAAO,KAET,MAAME,SAAcF,EAUpB,MATa,WAATE,GAAqBF,aAAiBG,KACxCH,GAAQ,OAAOA,GACG,WAATE,IAEPF,EADiB,iBAARC,GACD,QAAMD,EAAOC,EAAK,IAAIE,KAAQC,KAAKC,UAEnC,OAASL,EAAOI,KAAKC,WAG1B,OAAQL,GAASA,EAAMM,UAAY,IAC5C,EAEAC,OAAQ,SAASC,EAAMP,GACrB,OAAO,QAAOO,EAAMP,EAAKG,KAAKC,QAChC,EAEAI,IAAK,SAASD,EAAME,EAAQC,GAC1B,OAAQA,GACR,IAAK,cAAe,OAAO,OAAgBH,EAAME,GACjD,IAAK,SAAU,OAAO,OAAWF,EAAME,GACvC,IAAK,SAAU,OAAO,OAAWF,EAAME,GACvC,IAAK,OAAQ,OAAO,OAASF,EAAME,GACnC,IAAK,MAAO,OAAO,OAAQF,EAAME,GACjC,IAAK,OAAQ,OAAO,OAASF,EAAME,GACnC,IAAK,QAAS,OAAO,OAAUF,EAAME,GACrC,IAAK,UAAW,OAAO,OAAYF,EAAME,GACzC,IAAK,OAAQ,OAAO,OAASF,EAAME,GACnC,QAAS,OAAOF,EAElB,EAEAI,KAAM,SAASC,EAAKC,EAAKH,GACvB,OAAQA,GACR,IAAK,cAAe,OAAO,OAAyBE,EAAKC,GACzD,IAAK,SAAU,OAAO,OAAoBD,EAAKC,GAC/C,IAAK,SAAU,OAAO,OAAoBD,EAAKC,GAC/C,IAAK,OAAQ,OAAO,OAAkBD,EAAKC,GAC3C,IAAK,MAAO,OAAO,OAAiBD,EAAKC,GACzC,IAAK,OAAQ,OAAO,OAAkBD,EAAKC,GAC3C,IAAK,QAAS,OAAO,OAAmBD,EAAKC,GAC7C,IAAK,UAAW,OAAO,OAAqBD,EAAKC,GACjD,IAAK,OAAQ,OAAO,OAAkBD,EAAKC,GAC3C,QAAS,OAAO,EAElB,EAEAC,QAAS,SAASP,EAAMG,EAAMK,GAC5B,OAAQL,GACR,IAAK,SAAU,OAAO,OAAcH,GACpC,IAAK,SAAU,OAAO,OAAcA,GACpC,IAAK,OAAQ,OAAO,OAAYA,GAChC,IAAK,MAAO,OAAO,OAAWA,GAC9B,IAAK,OAAQ,OAAO,OAAYA,GAChC,IAAK,UAAW,OAAO,OAAYA,EAAM,CAACS,cAAeD,IACzD,IAAK,QAAS,OAAO,OAAaR,GAClC,IAAK,UAAW,OAAO,OAAeA,GACtC,IAAK,OAAQ,OAAO,OAAYA,GAChC,QAAS,OAAOA,EAElB,EAEAU,MAAO,SAASV,EAAMG,GACpB,OAAQA,GACR,IAAK,SAAU,OAAO,OAAYH,GAClC,IAAK,SAAU,OAAO,OAAYA,GAClC,IAAK,OAAQ,OAAO,OAAUA,GAC9B,IAAK,MAAO,OAAO,OAASA,GAC5B,IAAK,OAAQ,OAAO,OAAUA,GAC9B,IAAK,QAAS,OAAO,OAAWA,GAChC,IAAK,UAAW,OAAO,OAAaA,GACpC,IAAK,OAAQ,OAAO,OAAUA,GAC9B,QAAS,OAAOA,EAElB,kEClGF,MAAMW,EAAa,CAAC,QAAS,YACvBC,EAAY,CAAC,QAAS,SACtBC,EAAQF,EAAWG,OAAOF,GAyChC,SAASG,EAAYC,EAAOC,EAAOpB,GACjC,GAAImB,EAAME,SACR,OAAQD,EAAMvB,MACd,IAAK,YACL,IAAK,YAUT,SAA0BsB,EAAOC,GAC/B,IAAKD,EAAMG,aACT,OAGF,IAAIC,EAEe,cAAfH,EAAMvB,OACR0B,EAAUC,EAAeL,EAAMM,SAAUL,IAG3C,MAAMM,EAAWP,EAAMQ,QACvBR,EAAMQ,QAAUJ,EAKlB,SAA4BJ,EAAOM,EAAUL,GAC3C,MAAM,SAACM,EAAQ,QAAEH,GAAWE,EACxBC,GAAYA,IAAaH,GAC3BK,EAAcF,EAAS1B,QAAQ6B,OAASV,EAAMW,UAAUD,MAAOH,EAAUN,GAEvEG,GAAWA,IAAYG,GACzBE,EAAcL,EAAQvB,QAAQ+B,OAASZ,EAAMW,UAAUC,MAAOR,EAASH,EAE3E,CAXEY,CAAmBb,EAAO,CAACO,WAAUH,WAAUH,EACjD,CAxBMa,CAAiBd,EAAOC,GACxB,MACF,IAAK,SAkCT,SAA2BD,EAAOC,EAAOpB,GACvC,MAAM8B,EAAYX,EAAMW,UAClBP,EAAUC,EAAeL,EAAMM,SAAUL,GAC/C,GAAIG,EAAS,CACX,MAAMW,EAASX,EAAQvB,QACjBmC,EAAWD,EAAOC,UAAYL,EAAUK,SACxCC,EAAQF,EAAOE,OAASN,EAAUM,MACpCb,EAAQc,cAEVC,aAAaf,EAAQc,qBACdd,EAAQc,aACfT,EAAcO,EAAUZ,EAASH,IACxBe,EAETZ,EAAQc,aAAeE,YAAW,YACzBhB,EAAQc,aACfT,EAAcQ,EAAOb,EAASH,EAAM,GACnCpB,EAAQwC,eAGXZ,EAAcQ,EAAOb,EAASH,EAElC,CACF,CAxDMqB,CAAkBtB,EAAOC,EAAOpB,GAItC,CAsDA,SAAS4B,EAAcc,EAASnB,EAASH,IACvC,QAASsB,EAAS,CAACnB,EAAQoB,SAAUvB,GACvC,CAEA,SAASI,EAAeC,EAAUmB,GAChC,IAAIC,EAAcC,OAAOC,kBAEzB,OAAOtB,EACJuB,QAAQzB,GAAYA,EAAQvB,QAAQiD,SAAW1B,EAAQ2B,QAAQN,EAASO,EAAGP,EAASQ,KACpFC,QAAO,CAACC,EAAc/B,KACrB,MAAMgC,EAAShC,EAAQiC,iBACjBC,GAAW,QAAsBb,EAAUW,GAUjD,OARIE,EAAWZ,GACbS,EAAe,CAAC/B,GAChBsB,EAAcY,GACLA,IAAaZ,GAEtBS,EAAaI,KAAKnC,GAGb+B,CAAY,GAClB,IACFK,MAAK,CAACC,EAAGC,IAAMD,EAAEE,OAASD,EAAEC,SAC5BC,MAAM,EAAG,GAAG,EACjB,CAEA,SAASC,EAAiBC,EAAOC,EAAOC,GACtC,MAAMC,EA+CR,SAAwBF,EAAOC,GAC7B,MAAME,EAAOH,EAAMG,KACbC,EAAUJ,EAAMK,GAChBC,EAAgBH,EAAO,UACvBI,EAAS,CACbhE,KAAK,QAAeyD,EAAMzD,IAAKqC,OAAO4B,mBACtClE,KAAK,QAAe0D,EAAM1D,IAAKsC,OAAOC,oBAExC,IAAK,MAAM4B,KAAcR,EACnBQ,EAAWL,UAAYA,EACzBM,EAAaD,EAAYT,EAAO,CAAC,QAAS,YAAaO,GAC9CE,EAAWH,KAAmBF,GACvCM,EAAaD,EAAYT,EAAO,CAACG,EAAO,MAAOA,EAAO,MAAOA,EAAO,SAAUI,GAGlF,OAAOA,CACT,CA/DgBI,CAAeX,EAAOC,GACpC,IAAIW,EAAUC,EAAiBb,EAAOE,EAAO,MAAO,gBACpDU,EAAUC,EAAiBb,EAAOE,EAAO,MAAO,iBAAmBU,EAC/DA,GAAmD,mBAAjCZ,EAAMc,wBAC1Bd,EAAMc,wBAEV,CAQA,SAASD,EAAiBb,EAAOE,EAAOa,EAAOC,GAC7C,IAAI,QAASd,EAAMa,MAOrB,SAA2BE,EAAcF,EAAOC,GAC9C,OAAO,QAAQC,EAAaF,MAAW,QAAQE,EAAaD,GAC9D,CATiCE,CAAkBlB,EAAMlE,QAASiF,EAAOC,GAAiB,CACtF,MAAMJ,EAAUZ,EAAMe,KAAWb,EAAMa,GAEvC,OADAf,EAAMe,GAASb,EAAMa,GACdH,CACT,CACF,CAMA,SAASO,EAAeV,EAAYW,GAClC,IAAK,MAAMC,IAAO,CAAC,UAAW,WAAY,YACpCZ,EAAWY,KAASD,EAAOX,EAAWY,KAASC,EAAiBb,EAAYY,IAC9EE,QAAQC,KAAK,2BAA2Bf,EAAWY,uBAAyBZ,EAAWJ,MAG7F,CAEA,SAASiB,EAAiBb,EAAYY,GACpC,GAAY,YAARA,EACF,OAAO,EAET,MAAMlB,EAAOkB,EAAII,OAAO,GACxB,IAAK,MAAMC,IAAQ,CAAC,MAAO,MAAO,SAChC,IAAI,QAAQjB,EAAWN,EAAOuB,IAC5B,OAAO,EAGX,OAAO,CACT,CAoBA,SAAShB,EAAaD,EAAYT,EAAO2B,EAAOpB,GAC9C,IAAK,MAAMmB,KAAQC,EAAO,CACxB,MAAMC,EAAMnB,EAAWiB,GACvB,IAAI,QAAQE,GAAM,CAChB,MAAMnG,EAAQuE,EAAMxE,MAAMoG,GAC1BrB,EAAOhE,IAAMsF,KAAKtF,IAAIgE,EAAOhE,IAAKd,GAClC8E,EAAOjE,IAAMuF,KAAKvF,IAAIiE,EAAOjE,IAAKb,EACpC,CACF,CACF,CAEA,MAAMqG,EAAU,KAEVC,EAAQ,CAAC9C,EAAG+C,EAAMC,IAAOJ,KAAKtF,IAAI0F,EAAIJ,KAAKvF,IAAI0F,EAAM/C,IAE3D,SAASiD,EAASC,EAAKH,EAAMC,GAC3B,IAAK,MAAMZ,KAAOe,OAAOC,KAAKF,GAC5BA,EAAId,GAAOU,EAAMI,EAAId,GAAMW,EAAMC,GAEnC,OAAOE,CACT,CAUA,SAASG,EAAWC,EAAQC,GAAQ,EAACvD,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,GAASC,GACzD,MAAMC,EAAeD,EAAc,EACnC,OAAOJ,GAAUtD,EAAI2D,EAAed,GAC7BS,GAAUtD,EAAIwD,EAAQG,EAAed,GACrCU,GAAUtD,EAAI0D,EAAed,GAC7BU,GAAUtD,EAAIwD,EAASE,EAAed,CAC/C,CAEA,SAASe,EAAsBxF,EAASyF,GACtC,MAAM,EAAC7D,EAAC,EAAEC,GAAK7B,EAAQ0F,SAAS,CAAC,IAAK,KAAMD,GAC5C,MAAO,CAAC7D,IAAGC,IACb,CAEA,MAAM8D,EAAc,CAACC,EAAKC,IAAQA,EAAMD,GAAQA,EAAIE,OAASD,EAAIC,QAAUF,EAAIG,OAAO,EAAGF,EAAIC,UAAYD,EAqBzG,MAAMG,EAAmBC,GAAmB,iBAANA,GAAkBA,EAAEC,SAAS,KAC7DC,EAAaF,GAAMvB,EAAM0B,WAAWH,GAAK,IAAK,EAAG,GAEvD,SAASI,EAAoBC,EAAMC,GACjC,MAAuB,UAAnBA,EACK,EAEc,QAAnBA,EACKD,EAELN,EAAgBO,GACXJ,EAAUI,GAAkBD,EAE9BA,EAAO,CAChB,CAEA,SAASE,EAAQF,EAAMlI,GACrB,MAAqB,iBAAVA,EACFA,EACE4H,EAAgB5H,GAClB+H,EAAU/H,GAASkI,EAErBA,CACT,CAaA,SAASG,EAAWrI,GAClB,OAAI,QAASA,GACJ,CACLwD,GAAG,QAAexD,EAAMwD,EAAG,UAC3BC,GAAG,QAAezD,EAAMyD,EAAG,WAIxB,CACLD,EAFFxD,GAAQ,QAAeA,EAAO,UAG5ByD,EAAGzD,EAEP,CAEA,SAASsI,EAAejI,GACtB,OAAOA,KAAY,QAAQA,EAAQkI,UAAW,QAAQlI,EAAQmI,QAChE,CAEA,MAAMC,EAAa,IAAIC,IAQvB,SAASC,EAAgBC,GACvB,GAAIA,GAA8B,iBAAZA,EAAsB,CAC1C,MAAM1I,EAAO0I,EAAQC,WACrB,MAAiB,8BAAT3I,GAAiD,+BAATA,CAClD,CACF,CAQA,SAAS4I,EAAUC,EAAKnH,EAASoH,GAC/B,GAAIA,EAAU,CACZ,MAAMpF,EAAShC,EAAQiC,iBACvBkF,EAAID,UAAUlF,EAAOJ,EAAGI,EAAOH,GAC/BsF,EAAIE,QAAO,QAAUD,IACrBD,EAAID,WAAWlF,EAAOJ,GAAII,EAAOH,EACnC,CACF,CAQA,SAASyF,EAAeH,EAAK1I,GAC3B,GAAIA,GAAWA,EAAQ6G,YAOrB,OANA6B,EAAII,QAAU9I,EAAQ+I,eACtBL,EAAIM,YAAYhJ,EAAQiJ,YACxBP,EAAIQ,eAAiBlJ,EAAQmJ,iBAC7BT,EAAIU,SAAWpJ,EAAQqJ,gBACvBX,EAAIY,UAAYtJ,EAAQ6G,YACxB6B,EAAIa,YAAcvJ,EAAQwJ,aACnB,CAEX,CAOA,SAASC,EAAef,EAAK1I,GAC3B0I,EAAIgB,YAAc1J,EAAQ2J,sBAC1BjB,EAAIkB,WAAa5J,EAAQ4J,WACzBlB,EAAImB,cAAgB7J,EAAQ6J,cAC5BnB,EAAIoB,cAAgB9J,EAAQ8J,aAC9B,CAQA,SAASC,EAAiBrB,EAAK1I,GAC7B,MAAMuI,EAAUvI,EAAQuI,QACxB,GAAID,EAAgBC,GAClB,MAAO,CACL5B,MAAOoB,EAAQQ,EAAQ5B,MAAO3G,EAAQ2G,OACtCC,OAAQmB,EAAQQ,EAAQ3B,OAAQ5G,EAAQ4G,SAG5C,MAAMoD,GAAO,QAAOhK,EAAQgK,MACtBC,EAAcjK,EAAQkK,gBACtBC,GAAQ,QAAQ5B,GAAWA,EAAU,CAACA,GACtC6B,EAASD,EAAME,OAASL,EAAKM,OAASL,GAAevB,EAAI6B,aAAe,YAAc,IAC5F,IAAKnC,EAAWoC,IAAIJ,GAAS,CAC3B1B,EAAI+B,OACJ/B,EAAIsB,KAAOA,EAAKM,OAChB,MAAMI,EAAQP,EAAM9C,OACpB,IAAIV,EAAQ,EACZ,IAAK,IAAIgE,EAAI,EAAGA,EAAID,EAAOC,IAAK,CAC9B,MAAMC,EAAOT,EAAMQ,GACnBhE,EAAQZ,KAAKvF,IAAImG,EAAO+B,EAAImC,YAAYD,GAAMjE,MAAQsD,EACxD,CACAvB,EAAIoC,UACJ,MAAMlE,EAAS8D,EAAQV,EAAKe,WAAad,EACzC7B,EAAW4C,IAAIZ,EAAQ,CAACzD,QAAOC,UACjC,CACA,OAAOwB,EAAW6C,IAAIb,EACxB,CASA,SAASc,EAAQxC,EAAKyC,EAAMnL,GAC1B,MAAM,EAACmD,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,GAAUuE,EAC9BzC,EAAI+B,OACJhB,EAAef,EAAK1I,GACpB,MAAMoL,EAASvC,EAAeH,EAAK1I,GACnC0I,EAAI2C,UAAYrL,EAAQsL,gBACxB5C,EAAI6C,aACJ,QAAmB7C,EAAK,CACtBvF,IAAGC,IAAGoI,EAAG7E,EAAO8E,EAAG7E,EAEnB8E,OAAQtF,GAAS,SAAc,QAAepG,EAAQ2L,aAAc3L,EAAQ4L,eAAgB,EAAG7F,KAAKtF,IAAIkG,EAAOC,GAAU,KAE3H8B,EAAImD,YACJnD,EAAIoD,OACAV,IACF1C,EAAIgB,YAAc1J,EAAQ+L,kBAC1BrD,EAAI0C,UAEN1C,EAAIoC,SACN,CASA,SAASkB,EAAUtD,EAAKyC,EAAMnL,GAC5B,MAAMuI,EAAUvI,EAAQuI,QACxB,GAAID,EAAgBC,GAElB,YADAG,EAAIuD,UAAU1D,EAAS4C,EAAKhI,EAAGgI,EAAK/H,EAAG+H,EAAKxE,MAAOwE,EAAKvE,QAG1D,MAAMsF,GAAS,QAAQ3D,GAAWA,EAAU,CAACA,GACvCyB,GAAO,QAAOhK,EAAQgK,MACtBmC,EAAKnC,EAAKe,WACV5H,EAvKR,SAAgC0E,EAAM7H,GACpC,MAAM,EAACmD,EAAC,MAAEwD,GAASkB,EACbuE,EAAYpM,EAAQoM,UAC1B,MAAkB,WAAdA,EACKjJ,EAAIwD,EAAQ,EACI,QAAdyF,GAAqC,UAAdA,EACzBjJ,EAAIwD,EAENxD,CACT,CA8JYkJ,CAAuBlB,EAAMnL,GACjCoD,EAAI+H,EAAK/H,EAAK+I,EAAK,EAAKnM,EAAQkK,gBAAkB,EACxDxB,EAAI+B,OACJ/B,EAAIsB,KAAOA,EAAKM,OAChB5B,EAAI4D,aAAe,SACnB5D,EAAI0D,UAAYpM,EAAQoM,UAS1B,SAA4B1D,EAAK1I,GAC/B,GAAIA,EAAQkK,gBAAkB,EAM5B,OAJAxB,EAAIU,SAAW,QACfV,EAAI6D,WAAa,EACjB7D,EAAIY,UAAYtJ,EAAQkK,gBACxBxB,EAAIa,YAAcvJ,EAAQwM,iBACnB,CAEX,CAjBMC,CAAmB/D,EAAK1I,IAC1BkM,EAAOQ,SAAQ,CAACC,EAAGhC,IAAMjC,EAAIkE,WAAWD,EAAGxJ,EAAGC,EAAKuH,EAAIwB,KAEzDzD,EAAI2C,UAAYrL,EAAQ6M,MACxBX,EAAOQ,SAAQ,CAACC,EAAGhC,IAAMjC,EAAIoE,SAASH,EAAGxJ,EAAGC,EAAKuH,EAAIwB,KACrDzD,EAAIoC,SACN,CAqBA,SAASiC,EAAmB5B,GAC1B,MAAM,EAAChI,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,GAAUuE,EAC9B,MAAO,CACLhI,EAAGA,EAAIwD,EAAQ,EACfvD,EAAGA,EAAIwD,EAAS,EAEpB,CASA,SAASoG,EAAQC,EAAO1J,EAAQ2J,GAC9B,MAAMC,EAAMpH,KAAKoH,IAAID,GACfE,EAAMrH,KAAKqH,IAAIF,GACfG,EAAK9J,EAAOJ,EACZmK,EAAK/J,EAAOH,EAElB,MAAO,CACLD,EAAGkK,EAAKF,GAAOF,EAAM9J,EAAIkK,GAAMD,GAAOH,EAAM7J,EAAIkK,GAChDlK,EAAGkK,EAAKF,GAAOH,EAAM9J,EAAIkK,GAAMF,GAAOF,EAAM7J,EAAIkK,GAEpD,CAgBA,SAASC,EAAWrJ,EAAOvE,EAAO6N,GAEhC,OADA7N,EAAyB,iBAAVA,EAAqBA,EAAQuE,EAAMxE,MAAMC,IACjD,QAASA,GAASuE,EAAMuJ,iBAAiB9N,GAAS6N,CAC3D,CAOA,SAASE,EAAyBxJ,EAAOlE,GACvC,GAAIkE,EAAO,CACT,MAAMzD,EAAM8M,EAAWrJ,EAAOlE,EAAQS,IAAKT,EAAQ2N,OAC7CnN,EAAM+M,EAAWrJ,EAAOlE,EAAQQ,IAAKR,EAAQ4N,KACnD,MAAO,CACLD,MAAO5H,KAAKtF,IAAIA,EAAKD,GACrBoN,IAAK7H,KAAKvF,IAAIC,EAAKD,GAEvB,CACA,MAAO,CACLmN,MAAO3N,EAAQ2N,MACfC,IAAK5N,EAAQ4N,IAEjB,CAOA,SAASC,EAAc5J,EAAOjE,GAC5B,MAAM,UAAC8N,EAAS,OAAExI,GAAUrB,EACtB8J,EAASzI,EAAOtF,EAAQgO,UACxBC,EAAS3I,EAAOtF,EAAQkO,UAC9B,IAAI/K,EAAI2K,EAAUnH,MAAQ,EACtBvD,EAAI0K,EAAUlH,OAAS,EAS3B,OAPImH,IACF5K,EAAIoK,EAAWQ,EAAQ/N,EAAQkI,OAAQ/E,IAGrC8K,IACF7K,EAAImK,EAAWU,EAAQjO,EAAQmI,OAAQ/E,IAElC,CAACD,IAAGC,IACb,CAOA,SAAS+K,EAAalK,EAAOjE,GAC3B,MAAM+N,EAAS9J,EAAMqB,OAAOtF,EAAQgO,UAC9BC,EAAShK,EAAMqB,OAAOtF,EAAQkO,UACpC,IAAKE,IAAKhL,EAAGiL,KAAMlL,EAAGmL,OAAQC,EAAIC,MAAOC,GAAMxK,EAAM6J,UAErD,IAAKC,IAAWE,EACd,MAAO,CAAC,EAGV,MAAMS,EAAOhB,EAAyBK,EAAQ,CAACtN,IAAKT,EAAQ2O,KAAMnO,IAAKR,EAAQ4O,KAAMjB,MAAOxK,EAAGyK,IAAKa,IACpGtL,EAAIuL,EAAKf,MACTc,EAAKC,EAAKd,IACV,MAAMiB,EAAOnB,EAAyBO,EAAQ,CAACxN,IAAKT,EAAQ8O,KAAMtO,IAAKR,EAAQ+O,KAAMpB,MAAOvK,EAAGwK,IAAKW,IAIpG,OAHAnL,EAAIyL,EAAKlB,MACTY,EAAKM,EAAKjB,IAEH,CACLzK,IACAC,IACAqL,KACAF,KACA5H,MAAO8H,EAAKtL,EACZyD,OAAQ2H,EAAKnL,EAEjB,CAqBA,SAAS4L,EAAqB/K,EAAOjE,GACnC,IAAKiI,EAAejI,GAAU,CAC5B,MAAMiP,EAAMd,EAAalK,EAAOjE,GAC1BiN,EAAQF,EAAmBkC,GACjC,IAAIvD,EAAS1L,EAAQ0L,OAKrB,OAJKA,IAAUwD,MAAMxD,KACnBA,EAAS3F,KAAKtF,IAAIwO,EAAItI,MAAOsI,EAAIrI,QAAU,EAC3C5G,EAAQ0L,OAASA,GAEZ,CACLvI,EAAG8J,EAAM9J,EAAInD,EAAQmP,QACrB/L,EAAG6J,EAAM7J,EAAIpD,EAAQoP,QACrBzI,MAAgB,EAAT+E,EACP9E,OAAiB,EAAT8E,EAEZ,CACA,OA/BF,SAAwBzH,EAAOjE,GAC7B,MAAMiN,EAAQY,EAAc5J,EAAOjE,GACnC,MAAO,CACLmD,EAAG8J,EAAM9J,EAAInD,EAAQmP,QACrB/L,EAAG6J,EAAM7J,EAAIpD,EAAQoP,QACrBzI,MAAwB,EAAjB3G,EAAQ0L,OACf9E,OAAyB,EAAjB5G,EAAQ0L,OAEpB,CAuBS2D,CAAepL,EAAOjE,EAC/B,CAEA,MAAMsP,sBAAsB,KAC1B,OAAApM,CAAQuD,EAAQC,EAAQM,GACtB,MAAM,EAAC7D,EAAC,EAAEC,GAAK4J,EAAQ,CAAC7J,EAAGsD,EAAQrD,EAAGsD,GAAS3G,KAAKyD,eAAewD,IAAmB,SAAWjH,KAAKC,QAAQ2I,WAC9G,OAAOnC,EAAWrD,EAAGC,EAAGrD,KAAKkH,SAAS,CAAC,IAAK,IAAK,QAAS,UAAWD,GAAmBjH,KAAKC,QAAQ6G,YACvG,CAEA,cAAArD,CAAewD,GACb,OAAO+F,EAAmBhN,KAAKkH,SAAS,CAAC,IAAK,IAAK,QAAS,UAAWD,GACzE,CAEA,IAAAuI,CAAK7G,GACHA,EAAI+B,OACJhC,EAAUC,EAAK3I,KAAMA,KAAKC,QAAQ2I,UAClCuC,EAAQxC,EAAK3I,KAAMA,KAAKC,SACxB0I,EAAIoC,SACN,CAEA,SAAAkB,CAAUtD,GACR,MAAM,EAACvF,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,EAAM,QAAE5G,GAAWD,MACjC,MAACyP,EAAK,YAAE3I,GAAe7G,EACvByP,EAAa5I,EAAc,EAC3BjE,EAAWoF,EAAWwH,EAAM5M,UAC5B8M,GAAU,QAAUF,EAAME,SAC1BC,EAAY5F,EAAiBrB,EAAK8G,GAClCI,EAAY,CAChBzM,EAAG0M,EAAW9P,KAAM4P,EAAW/M,EAAU8M,GACzCtM,EAAG0M,EAAW/P,KAAM4P,EAAW/M,EAAU8M,GACzC/I,MAAOgJ,EAAUhJ,MACjBC,OAAQ+I,EAAU/I,QAGpB8B,EAAI+B,OACJhC,EAAUC,EAAK3I,KAAMyP,EAAM7G,UAC3BD,EAAI6C,YACJ7C,EAAIyC,KAAKhI,EAAIsM,EAAaC,EAAQrB,KAAMjL,EAAIqM,EAAaC,EAAQtB,IAC/DzH,EAAQE,EAAc6I,EAAQ/I,MAAOC,EAASC,EAAc6I,EAAQ9I,QACtE8B,EAAIqH,OACJ/D,EAAUtD,EAAKkH,EAAWJ,GAC1B9G,EAAIoC,SACN,CAEA,wBAAAkF,CAAyB/L,EAAOjE,GAC9B,OAAOmO,EAAalK,EAAOjE,EAC7B,EAgEF,SAAS6P,EAAWZ,EAAKU,EAAW/M,EAAU8M,GAC5C,MAAOvM,EAAGwK,EAAOc,GAAIb,EAAKjH,MAAOkB,EAAI,QAAE7H,GAAWiP,GAC3CE,QAASc,EAAM,YAAEpJ,GAAe7G,EAAQwP,MAC/C,OAAOU,EAAoB,CAACvC,QAAOC,MAAK/F,QAAO,CAC7CjF,SAAUA,EAASO,EACnBuM,QAAS,CAAC/B,MAAO+B,EAAQrB,KAAMT,IAAK8B,EAAQlB,OAC5CyB,SAAQpJ,cACRgB,KAAM8H,EAAUhJ,OAEpB,CAEA,SAASmJ,EAAWb,EAAKU,EAAW/M,EAAU8M,GAC5C,MAAOtM,EAAGuK,EAAOY,GAAIX,EAAKhH,OAAQiB,EAAI,QAAE7H,GAAWiP,GAC5CG,QAASa,EAAM,YAAEpJ,GAAe7G,EAAQwP,MAC/C,OAAOU,EAAoB,CAACvC,QAAOC,MAAK/F,QAAO,CAC7CjF,SAAUA,EAASQ,EACnBsM,QAAS,CAAC/B,MAAO+B,EAAQtB,IAAKR,IAAK8B,EAAQpB,QAC3C2B,SAAQpJ,cACRgB,KAAM8H,EAAU/I,QAEpB,CAEA,SAASsJ,EAAoBC,EAASC,GACpC,MAAM,MAACzC,EAAK,IAAEC,GAAOuC,GACf,SAACvN,EAAU8M,SAAU/B,MAAO0C,EAAUzC,IAAK0C,GAAO,OAAEL,EAAM,YAAEpJ,GAAeuJ,EAEjF,OAAOzC,EAAQ9G,EAAc,EAAIoJ,EAASI,EAAWzI,EAD/BgG,EAAM/G,EAAc8G,EAAQ0C,EAAWC,EAASF,EAAUvI,KACQjF,EAC1F,CAxFA0M,cAAc/K,GAAK,gBAEnB+K,cAAciB,SAAW,CACvBvM,kBAAkB,EAClB2F,sBAAuB,cACvBZ,eAAgB,OAChBE,WAAY,GACZE,iBAAkB,EAClBE,gBAAiB,QACjBuC,aAAc,EACdG,kBAAmB,cACnBlF,YAAa,EACb8E,kBAAc6E,EACdvN,SAAS,EACTuM,MAAO,CACL3I,iBAAa2J,EACb3D,MAAO,QACPtE,QAAS,KACTkI,cAAUD,EACVE,SAAS,EACT1G,KAAM,CACJ2G,YAAQH,EACRzF,gBAAYyF,EACZ3I,UAAM2I,EACNI,WAAOJ,EACPK,OAAQ,QAEVjK,YAAQ4J,EACRd,QAAS,EACT9M,SAAU,SACV+F,cAAU6H,EACVpE,UAAW,QACXI,qBAAiBgE,EACjBtG,gBAAiB,EACjBiF,QAAS,EACTC,QAAS,EACTzI,WAAO6J,GAET7H,SAAU,EACViB,WAAY,EACZC,cAAe,EACfC,cAAe,EACf8E,UAAM4B,EACN7B,UAAM6B,EACNxC,SAAU,IACVe,UAAMyB,EACN1B,UAAM0B,EACNtC,SAAU,KAGZoB,cAAcwB,cAAgB,CAC5BtH,YAAa,QACb8B,gBAAiB,SAGnBgE,cAAcyB,YAAc,CAC1BvB,MAAO,CACLwB,WAAW,IAiCf,MAAMC,EAAc,CAACC,EAAIC,EAAIC,KAAM,CAAEjO,EAAG+N,EAAG/N,EAAIiO,GAAKD,EAAGhO,EAAI+N,EAAG/N,GAAIC,EAAG8N,EAAG9N,EAAIgO,GAAKD,EAAG/N,EAAI8N,EAAG9N,KACrFiO,EAAe,CAACjO,EAAG8N,EAAIC,IAAOF,EAAYC,EAAIC,EAAIpL,KAAKuL,KAAKlO,EAAI8N,EAAG9N,IAAM+N,EAAG/N,EAAI8N,EAAG9N,KAAKD,EACxFoO,EAAe,CAACpO,EAAG+N,EAAIC,IAAOF,EAAYC,EAAIC,EAAIpL,KAAKuL,KAAKnO,EAAI+N,EAAG/N,IAAMgO,EAAGhO,EAAI+N,EAAG/N,KAAKC,EACxFoO,EAAMC,GAAKA,EAAIA,EACfC,EAAiB,KAEvB,SAASC,GAAa,EAACxO,EAAC,EAAEC,EAAC,GAAEqL,EAAE,GAAEF,IAAK,IAACH,EAAG,MAAEI,EAAK,OAAEF,EAAM,KAAED,IACzD,QACGlL,EAAIkL,GAAQI,EAAKJ,GACjBlL,EAAIqL,GAASC,EAAKD,GAClBpL,EAAIgL,GAAOG,EAAKH,GAChBhL,EAAIkL,GAAUC,EAAKD,EAExB,CAEA,SAASsD,GAAiB,EAACzO,EAAC,EAAEC,GAAI+N,GAAI,IAAC/C,EAAG,MAAEI,EAAK,OAAEF,EAAM,KAAED,IAiBzD,OAhBIlL,EAAIkL,IACNjL,EAAImO,EAAalD,EAAM,CAAClL,IAAGC,KAAI+N,GAC/BhO,EAAIkL,GAEFlL,EAAIqL,IACNpL,EAAImO,EAAa/C,EAAO,CAACrL,IAAGC,KAAI+N,GAChChO,EAAIqL,GAEFpL,EAAIgL,IACNjL,EAAIkO,EAAajD,EAAK,CAACjL,IAAGC,KAAI+N,GAC9B/N,EAAIgL,GAEFhL,EAAIkL,IACNnL,EAAIkO,EAAa/C,EAAQ,CAACnL,IAAGC,KAAI+N,GACjC/N,EAAIkL,GAEC,CAACnL,IAAGC,IACb,CAQA,MAAMyO,uBAAuB,KAG3B,UAAAC,CAAW3O,EAAGC,EAAG2O,EAAUL,KAAgB1K,GAEzC,MAAO7D,EAAG6O,EAAI5O,EAAG6O,EAAE,GAAExD,EAAE,GAAEF,GAAMxO,KAAKkH,SAAS,CAAC,IAAK,IAAK,KAAM,MAAOD,GAC/DkL,EAAKzD,EAAKuD,EACVG,EAAK5D,EAAK0D,EACVG,EAAQZ,EAAIU,GAAMV,EAAIW,GACtBf,EAAc,IAAVgB,GAAe,IAAMjP,EAAI6O,GAAME,GAAM9O,EAAI6O,GAAME,GAAMC,EAC/D,IAAIC,EAAIC,EAWR,OAVIlB,EAAI,GACNiB,EAAKL,EACLM,EAAKL,GACIb,EAAI,GACbiB,EAAK5D,EACL6D,EAAK/D,IAEL8D,EAAKL,EAAKZ,EAAIc,EACdI,EAAKL,EAAKb,EAAIe,GAERX,EAAIrO,EAAIkP,GAAMb,EAAIpO,EAAIkP,IAAQP,CACxC,CAQA,cAAAQ,CAAevL,EAAkB8G,GAC/B,MAAMsC,EAAYrQ,KAAKC,QAAQwP,MAC/B,SAAKY,IAAcA,EAAUM,YAGrB5C,GAAa6D,EAAa5R,KAAKkH,SAAS,CAAC,IAAK,IAAK,KAAM,MAAOD,GAAmB8G,GAC7F,CAGA,SAAA0E,CAAU/L,EAAQC,EAAQM,GACxB,IAAKjH,KAAKwS,eAAevL,GACvB,OAAO,EAET,MAAM,OAACyL,EAAM,OAAEC,EAAM,WAAEC,EAAU,YAAEC,EAAW,cAAEC,GAAiB9S,KAAKkH,SAAS,CAAC,SAAU,SAAU,aAAc,cAAe,iBAAkBD,IAC7I,EAAC7D,EAAC,EAAEC,GAAK4J,EAAQ,CAAC7J,EAAGsD,EAAQrD,EAAGsD,GAAS,CAACvD,EAAGsP,EAAQrP,EAAGsP,IAAUG,GAClE/L,EAAe/G,KAAKC,QAAQwP,MAAM3I,YAAc,GAAK,EACrDiM,EAAKH,EAAa,EAAI7L,EACtBiM,EAAKH,EAAc,EAAI9L,EAC7B,OAAO3D,GAAKsP,EAASK,EAAKpB,GAAkBvO,GAAKsP,EAASK,EAAKpB,GAC7DtO,GAAKsP,EAASK,EAAKrB,GAAkBtO,GAAKsP,EAASK,EAAKrB,CAC5D,CAEA,OAAAxO,CAAQuD,EAAQC,EAAQM,GACtB,MAAM+K,EAAUP,EAAIzR,KAAKC,QAAQ6G,YAAc,GAC/C,OAAO9G,KAAK+R,WAAWrL,EAAQC,EAAQqL,EAAS/K,IAAqBjH,KAAKyS,UAAU/L,EAAQC,EAAQM,EACtG,CAEA,cAAAxD,GACE,MAAO,CACLL,GAAIpD,KAAK0O,GAAK1O,KAAKoD,GAAK,EACxBC,GAAIrD,KAAKwO,GAAKxO,KAAKqD,GAAK,EAE5B,CAEA,IAAAmM,CAAK7G,GACH,MAAM,EAACvF,EAAC,EAAEC,EAAC,GAAEqL,EAAE,GAAEF,EAAE,QAAEvO,GAAWD,KAGhC,GADA2I,EAAI+B,QACC5B,EAAeH,EAAK1I,GAEvB,OAAO0I,EAAIoC,UAEbrB,EAAef,EAAK1I,GACpB,MAAMkN,EAAQnH,KAAKiN,MAAMzE,EAAKnL,EAAGqL,EAAKtL,GAChCkE,EAAStB,KAAKkN,KAAKlN,KAAKmN,IAAIzE,EAAKtL,EAAG,GAAK4C,KAAKmN,IAAI3E,EAAKnL,EAAG,KAC1D,UAAC+P,EAAS,QAAEC,EAAO,YAAEC,EAAW,UAAEC,GA+S5C,SAAuBC,GACrB,MAAMvT,EAAUuT,EAAKvT,QACfwT,EAAiBxT,EAAQyT,YAAczT,EAAQyT,WAAW9F,MAC1D+F,EAAe1T,EAAQyT,YAAczT,EAAQyT,WAAW7F,IAC9D,MAAO,CACLuF,UAAWK,EACXJ,QAASM,EACTL,YAAaM,GAAcJ,EAAMC,GACjCF,UAAWK,GAAcJ,EAAMG,GAEnC,CAzTyDE,CAAc7T,MAEnE2I,EAAID,UAAUtF,EAAGC,GACjBsF,EAAIE,OAAOsE,GACXxE,EAAI6C,YACJ7C,EAAImL,OAAO,EAAIR,EAAa,GAC5B3K,EAAIoL,OAAOzM,EAASiM,EAAW,GAC/B5K,EAAIgB,YAAc1J,EAAQ+L,kBAC1BrD,EAAI0C,SACJ2I,GAAcrL,EAAK,EAAG2K,EAAaF,GACnCY,GAAcrL,EAAKrB,GAASiM,EAAWF,GACvC1K,EAAIoC,SACN,CAEA,SAAAkB,CAAUtD,EAAKoF,GACb,IAAK/N,KAAKwS,gBAAe,EAAOzE,GAC9B,OAEF,MAAM,OAAC2E,EAAM,OAAEC,EAAM,WAAEC,EAAU,YAAEC,EAAW,cAAEC,EAAa,aAAEmB,EAAY,cAAEC,EAAejU,SAAS,MAACwP,IAAUzP,KAEhH2I,EAAI+B,OACJ/B,EAAID,UAAUgK,EAAQC,GACtBhK,EAAIE,OAAOiK,GAQX3H,EAAQxC,EANQ,CACdvF,GAAKwP,EAAa,EAClBvP,GAAKwP,EAAc,EACnBjM,MAAOgM,EACP/L,OAAQgM,GAEYpD,GAQtBxD,EAAUtD,EANY,CACpBvF,GAAKwP,EAAa,EAAKqB,EAAa3F,KAAOmB,EAAM3I,YAAc,EAC/DzD,GAAKwP,EAAc,EAAKoB,EAAa5F,IAAMoB,EAAM3I,YAAc,EAC/DF,MAAOsN,EAActN,MACrBC,OAAQqN,EAAcrN,QAEM4I,GAC9B9G,EAAIoC,SACN,CAEA,wBAAAkF,CAAyB/L,EAAOjE,GAC9B,MAAMkE,EAAQD,EAAMqB,OAAOtF,EAAQsE,SACnC,IACI7D,EAAKD,GADJ4N,IAAKhL,EAAGiL,KAAMlL,EAAGmL,OAAQC,EAAIC,MAAOC,GAAMxK,EAAM6J,UAGrD,GAAI5J,EACFzD,EAAM8M,EAAWrJ,EAAOlE,EAAQL,MAAOuU,KACvC1T,EAAM+M,EAAWrJ,EAAOlE,EAAQmU,SAAU1T,GACtCyD,EAAMkQ,gBACRjR,EAAI1C,EACJgO,EAAKjO,IAEL4C,EAAI3C,EACJ8N,EAAK/N,OAEF,CACL,MAAMuN,EAAS9J,EAAMqB,OAAOtF,EAAQgO,UAC9BC,EAAShK,EAAMqB,OAAOtF,EAAQkO,UAEhCH,IACF5K,EAAIoK,EAAWQ,EAAQ/N,EAAQ2O,KAAMxL,GACrCsL,EAAKlB,EAAWQ,EAAQ/N,EAAQ4O,KAAMH,IAGpCR,IACF7K,EAAImK,EAAWU,EAAQjO,EAAQ8O,KAAM1L,GACrCmL,EAAKhB,EAAWU,EAAQjO,EAAQ+O,KAAMR,GAE1C,CACA,MACM8F,EADS1C,EAAa,CAACxO,IAAGC,IAAGqL,KAAIF,MAAKtK,EAAM6J,WAxJtD,SAAyBoD,EAAIC,EAAImD,GAC/B,MAAM,EAACnR,EAAC,EAAEC,GAAKwO,EAAiBV,EAAIC,EAAImD,IACjCnR,EAAGsL,EAAIrL,EAAGmL,GAAMqD,EAAiBT,EAAID,EAAIoD,GAChD,MAAO,CAACnR,IAAGC,IAAGqL,KAAIF,KAAI5H,MAAOZ,KAAKuL,IAAI7C,EAAKtL,GAAIyD,OAAQb,KAAKuL,IAAI/C,EAAKnL,GACvE,CAsJQmR,CAAgB,CAACpR,IAAGC,KAAI,CAACD,EAAGsL,EAAIrL,EAAGmL,GAAKtK,EAAM6J,WAC9C,CAAC3K,IAAGC,IAAGqL,KAAIF,KAAI5H,MAAOZ,KAAKuL,IAAI7C,EAAKtL,GAAIyD,OAAQb,KAAKuL,IAAI/C,EAAKnL,IAE5DoM,EAAQxP,EAAQwP,MACtB,OAAIA,GAASA,EAAMjH,QA8GvB,SAAuBgL,EAAMtP,EAAOjE,GAElC,MAAO0P,QAAS8E,EAAU,SAAEC,EAAQ,SAAEC,EAAQ,YAAE7N,GAAe7G,EACzD0P,EAuBR,SAAoBA,EAAS+E,EAAUC,GACrC,IAAIC,EAAcjF,GACd+E,GAAYC,KACdC,EAAc,CAACxR,EAAGsR,GAAY,EAAGrR,EAAGsR,GAAY,IAElD,OAAO,QAAUC,EACnB,CA7BkBC,CAAWJ,EAAYC,EAAUC,GAC3CG,EAAW9K,EAAiB9F,EAAMyE,IAAK1I,GACvC2G,EAAQkO,EAASlO,MAAQ+I,EAAQ/I,MAAQE,EACzCD,EAASiO,EAASjO,OAAS8I,EAAQ9I,OAASC,EAC5C+I,EA2BR,SAAgC2D,EAAM/D,EAAOsF,EAAOhH,GAClD,MAAM,MAACnH,EAAK,OAAEC,EAAM,QAAE8I,GAAWoF,GAC3B,QAAC3F,EAAO,QAAEC,GAAWI,EACrB0B,EAAK,CAAC/N,EAAGoQ,EAAKpQ,EAAGC,EAAGmQ,EAAKnQ,GACzB+N,EAAK,CAAChO,EAAGoQ,EAAK9E,GAAIrL,EAAGmQ,EAAKhF,IAC1B5F,EAA8B,SAAnB6G,EAAM7G,SArBzB,SAA+B4K,GAC7B,MAAM,EAACpQ,EAAC,EAAEC,EAAC,GAAEqL,EAAE,GAAEF,GAAMgF,EACjB5K,EAAW5C,KAAKiN,MAAMzE,EAAKnL,EAAGqL,EAAKtL,GAEzC,OAAOwF,EAAW,EAAAoM,GAAK,EAAIpM,EAAW,EAAAoM,GAAKpM,EAAW,EAAAoM,IAAM,EAAIpM,EAAW,EAAAoM,GAAKpM,CAClF,CAgB+CqM,CAAsBzB,IAAQ,QAAU/D,EAAM7G,UACrFd,EAeR,SAAqBlB,EAAOC,EAAQ+B,GAClC,MAAMwE,EAAMpH,KAAKoH,IAAIxE,GACfyE,EAAMrH,KAAKqH,IAAIzE,GACrB,MAAO,CACL6C,EAAGzF,KAAKuL,IAAI3K,EAAQwG,GAAOpH,KAAKuL,IAAI1K,EAASwG,GAC7C3B,EAAG1F,KAAKuL,IAAI3K,EAAQyG,GAAOrH,KAAKuL,IAAI1K,EAASuG,GAEjD,CAtBe8H,CAAYtO,EAAOC,EAAQ+B,GAClCyI,EAuBR,SAAoBmC,EAAM/D,EAAOsF,EAAOhH,GACtC,IAAIsD,EACJ,MAAM8D,EAoBR,SAAqB3B,EAAMzF,GACzB,MAAM,EAAC3K,EAAC,GAAEsL,EAAE,EAAErL,EAAC,GAAEmL,GAAMgF,EACjBnC,EAAIrL,KAAKtF,IAAI2C,EAAGmL,GAAMT,EAAUM,IAChCzB,EAAI5G,KAAKtF,IAAI0C,EAAGsL,GAAMX,EAAUO,KAChCxK,EAAIiK,EAAUQ,OAASvI,KAAKvF,IAAI4C,EAAGmL,GACnC4G,EAAIrH,EAAUU,MAAQzI,KAAKvF,IAAI2C,EAAGsL,GACxC,MAAO,CACLtL,EAAG4C,KAAKtF,IAAIkM,EAAGwI,GACf/R,EAAG2C,KAAKtF,IAAI2Q,EAAGvN,GACfqO,GAAIvF,GAAKwI,EAAI,GAAK,EAClBhD,GAAIf,GAAKvN,EAAI,GAAK,EAEtB,CAhCgBuR,CAAY7B,EAAMzF,GAE9BsD,EADqB,UAAnB5B,EAAM5M,SACJyS,GAAiB,CAAC7J,EAAG+H,EAAK9E,GAAK8E,EAAKpQ,EAAGsI,EAAG8H,EAAKhF,GAAKgF,EAAKnQ,GAAI0R,EAAOtF,EAAO0F,GACnD,QAAnB1F,EAAM5M,SACX,EAAIyS,GAAiB,CAAC7J,EAAG+H,EAAKpQ,EAAIoQ,EAAK9E,GAAIhD,EAAG8H,EAAKnQ,EAAImQ,EAAKhF,IAAKuG,EAAOtF,EAAO0F,GAE/EtN,EAAoB,EAAG4H,EAAM5M,UAEnC,OAAOwO,CACT,CAlCYkE,CAAW/B,EAAM/D,EAAO,CAACG,UAAW9H,EAAM6H,WAAU5B,GACxDyH,EAAKtE,EAAYC,EAAIC,EAAIC,GACzBoE,EAAmB,CAAC3N,KAAMA,EAAK2D,EAAG/K,IAAKqN,EAAUO,KAAM7N,IAAKsN,EAAUU,MAAOkB,QAASA,EAAQrB,MAC9FoH,EAAmB,CAAC5N,KAAMA,EAAK4D,EAAGhL,IAAKqN,EAAUM,IAAK5N,IAAKsN,EAAUQ,OAAQoB,QAASA,EAAQtB,KAEpG,MAAO,CACLjL,EAAGuS,GAAsBH,EAAGpS,EAAGqS,GAAoBrG,EACnD/L,EAAGsS,GAAsBH,EAAGnS,EAAGqS,GAAoBrG,EACnDzI,QACAC,SACA+B,WAEJ,CA9CoBgN,CAAuBpC,EAAMvT,EAAS,CAAC2G,QAAOC,SAAQ8I,WAAUzL,EAAM6J,WAQxF,OAPAyF,EAAKd,OAAS7C,EAAUzM,EACxBoQ,EAAKb,OAAS9C,EAAUxM,EACxBmQ,EAAKZ,WAAa/C,EAAUjJ,MAC5B4M,EAAKX,YAAchD,EAAUhJ,OAC7B2M,EAAKV,cAAgBjD,EAAUjH,SAC/B4K,EAAKS,aAAetE,EACpB6D,EAAKU,cAAgBY,EACdtB,CACT,CA7HaqC,CAAcvB,EAAYpQ,EAAOuL,GAEnC6E,CACT,EAGFxC,eAAetN,GAAK,iBAEpB,MAAMsR,EAAqB,CACzBvK,qBAAiBkF,EACjB7G,2BAAuB6G,EACvBhH,iBAAagH,EACbvH,gBAAYuH,EACZrH,sBAAkBqH,EAClBzE,uBAAmByE,EACnB3J,iBAAa2J,EACbE,aAASF,EACT1E,UAAM0E,EACNnJ,YAAQmJ,EACR5G,gBAAY4G,EACZ3G,mBAAe2G,EACf1G,mBAAe0G,EACf7J,WAAO6J,GAoKT,SAAS6E,GAAiBS,EAAUhB,EAAOtF,EAAO0F,GAChD,MAAM,UAACvF,EAAS,QAAED,GAAWoF,EACvBiB,EAAQD,EAAStK,EAAI0J,EAAMhD,GAC3B8D,EAAQF,EAASrK,EAAIyJ,EAAM/C,GAC3BhP,EAAK4S,EAAQ,IAAQpG,EAAUnE,EAAI,EAAIkE,EAAQrB,KAAO6G,EAAM/R,GAAK4S,EACjE3S,EAAK4S,EAAQ,IAAQrG,EAAUlE,EAAI,EAAIiE,EAAQtB,IAAM8G,EAAM9R,GAAK4S,EACtE,OAAO/P,EAAMF,KAAKvF,IAAI2C,EAAGC,GAAI,EAAG,IAClC,CAgBA,SAASsS,GAAsBO,EAAYC,GACzC,MAAM,KAACrO,EAAI,IAAEpH,EAAG,IAAED,EAAG,QAAEkP,GAAWwG,EAC5BC,EAAWtO,EAAO,EACxB,OAAIA,EAAOrH,EAAMC,GAEPD,EAAMC,GAAO,GAEnBA,GAAQwV,EAAavG,EAAUyG,IACjCF,EAAaxV,EAAMiP,EAAUyG,GAE3B3V,GAAQyV,EAAavG,EAAUyG,IACjCF,EAAazV,EAAMkP,EAAUyG,GAExBF,EACT,CAcA,SAAStC,GAAcJ,EAAM6C,GAC3B,IAAKA,IAAcA,EAAU1F,QAC3B,OAAO,EAET,MAAM,OAACrJ,EAAM,MAAEV,GAASyP,EAClBnG,EAASsD,EAAKvT,QAAQ6G,YAAc,EACpCqK,EAAK,CAAC/N,EAAGkE,EAAQjE,EAAGuD,EAAQsJ,GAC5BkB,EAAK,CAAChO,EAAG,EAAGC,EAAG6M,GACrB,OAAOlK,KAAKuL,IAAID,EAAa,EAAGH,EAAIC,GACtC,CAEA,SAAS4C,GAAcrL,EAAK2N,EAAQpG,EAAQmG,GAC1C,IAAKA,IAAcA,EAAU1F,QAC3B,OAEF,MAAM,OAACrJ,EAAM,MAAEV,EAAK,KAAEmF,EAAI,gBAAER,EAAe,YAAE9B,GAAe4M,EACtDE,EAAevQ,KAAKuL,IAAI+E,EAAShP,GAAU4I,EACjDvH,EAAI6C,YACJ9B,EAAef,EAAK0N,GACpBvN,EAAeH,EAAK0N,GACpB1N,EAAImL,OAAOyC,GAAe3P,GAC1B+B,EAAIoL,OAAOuC,EAASpG,EAAQ,GAC5BvH,EAAIoL,OAAOwC,EAAc3P,IACZ,IAATmF,GACFpD,EAAI2C,UAAYC,GAAmB9B,EACnCd,EAAImD,YACJnD,EAAIoD,OACJpD,EAAIgB,YAAc,eAElBhB,EAAIgB,YAAc0M,EAAUrK,kBAE9BrD,EAAI0C,QACN,CApPAyG,eAAetB,SAAW,CACxBvM,kBAAkB,EAClByP,WAAY,CACV/C,SAAS,EACT9C,IAAKtH,OAAOiQ,OAAO,CAAC,EAAGV,GACvB/J,MAAM,EACNzE,OAAQ,GACRsG,MAAOrH,OAAOiQ,OAAO,CAAC,EAAGV,GACzBlP,MAAO,GAETsC,WAAY,GACZE,iBAAkB,EAClB4C,kBAAmB,cACnBlF,YAAa,EACb5D,SAAS,EACTkR,cAAU3D,EACVhB,MAAO,CACLlE,gBAAiB,kBACjB3B,sBAAuB,cACvBZ,eAAgB,OAChBS,YAAa,QACbP,WAAY,GACZE,iBAAkB,EAClBE,gBAAiB,QACjBuC,aAAc,EACdG,kBAAmB,cACnBlF,YAAa,EACbgG,MAAO,OACPtE,QAAS,KACToD,kBAAc6E,EACdC,cAAUD,EACVE,SAAS,EACT1G,KAAM,CACJ2G,YAAQH,EACRzF,gBAAYyF,EACZ3I,UAAM2I,EACNI,WAAOJ,EACPK,OAAQ,QAEVjK,YAAQ4J,EACRd,QAAS,EACT9M,SAAU,SACV+F,SAAU,EACViB,WAAY,EACZC,cAAe,EACfC,cAAe,EACfsC,UAAW,SACXI,qBAAiBgE,EACjBtG,gBAAiB,EACjBvD,WAAO6J,EACPrB,QAAS,EACTsF,cAAUjE,EACVpB,QAAS,EACTsF,cAAUlE,GAEZlM,aAASkM,EACT5G,WAAY,EACZC,cAAe,EACfC,cAAe,EACfnK,WAAO6Q,EACP5B,UAAM4B,EACN7B,UAAM6B,EACNxC,SAAU,IACVe,UAAMyB,EACN1B,UAAM0B,EACNtC,SAAU,KAGZ2D,eAAed,YAAc,CAC3B0C,WAAY,CACV9F,MAAO,CACLqD,WAAW,GAEbpD,IAAK,CACHoD,WAAW,GAEbA,WAAW,IAIfa,eAAef,cAAgB,CAC7BtH,YAAa,SAqKf,MAAMgN,0BAA0B,KAE9B,OAAAtT,CAAQuD,EAAQC,EAAQM,GACtB,OA2DJ,SAAwByP,EAAGC,EAAS/N,EAAU9B,GAC5C,MAAM,MAACF,EAAK,OAAEC,GAAU8P,EAClBnT,EAASmT,EAAQlT,gBAAe,GAChCmT,EAAUhQ,EAAQ,EAClBiQ,EAAUhQ,EAAS,EAEzB,GAAI+P,GAAW,GAAKC,GAAW,EAC7B,OAAO,EAGT,MAAM1J,GAAQ,QAAUvE,GAAY,GAC9B7B,EAAeD,EAAc,GAAK,EAClCgQ,EAAW9Q,KAAKoH,IAAID,GACpB4J,EAAW/Q,KAAKqH,IAAIF,GACpBtJ,EAAImC,KAAKmN,IAAI2D,GAAYJ,EAAEtT,EAAII,EAAOJ,GAAK2T,GAAYL,EAAErT,EAAIG,EAAOH,GAAI,GACxES,EAAIkC,KAAKmN,IAAI4D,GAAYL,EAAEtT,EAAII,EAAOJ,GAAK0T,GAAYJ,EAAErT,EAAIG,EAAOH,GAAI,GAC9E,OAAQQ,EAAImC,KAAKmN,IAAIyD,EAAU7P,EAAc,GAAOjD,EAAIkC,KAAKmN,IAAI0D,EAAU9P,EAAc,IAAO,MAClG,CA5EWiQ,CAAe,CAAC5T,EAAGsD,EAAQrD,EAAGsD,GAAS3G,KAAKkH,SAAS,CAAC,QAAS,UAAWD,GAAmBjH,KAAKC,QAAQ2I,SAAU5I,KAAKC,QAAQ6G,YAC1I,CAEA,cAAArD,CAAewD,GACb,OAAO+F,EAAmBhN,KAAKkH,SAAS,CAAC,IAAK,IAAK,QAAS,UAAWD,GACzE,CAEA,IAAAuI,CAAK7G,GACH,MAAM,MAAC/B,EAAK,OAAEC,EAAM,QAAE5G,GAAWD,KAC3BwD,EAASxD,KAAKyD,iBAEpBkF,EAAI+B,OACJhC,EAAUC,EAAK3I,KAAMC,EAAQ2I,UAC7Bc,EAAef,EAAK3I,KAAKC,SACzB0I,EAAI6C,YACJ7C,EAAI2C,UAAYrL,EAAQsL,gBACxB,MAAMF,EAASvC,EAAeH,EAAK1I,GACnC0I,EAAIgO,QAAQnT,EAAOJ,EAAGI,EAAOH,EAAGwD,EAAS,EAAGD,EAAQ,EAAG,EAAAoO,GAAK,EAAG,EAAG,EAAI,EAAAA,IACtErM,EAAIoD,OACAV,IACF1C,EAAIgB,YAAc1J,EAAQ+L,kBAC1BrD,EAAI0C,UAEN1C,EAAIoC,SACN,CAEA,wBAAAkF,CAAyB/L,EAAOjE,GAC9B,OAAOmO,EAAalK,EAAOjE,EAC7B,EAIFwW,kBAAkBjS,GAAK,oBAEvBiS,kBAAkBjG,SAAW,CAC3BvM,kBAAkB,EAClB2F,sBAAuB,cACvBV,WAAY,GACZE,iBAAkB,EAClB4C,kBAAmB,cACnBlF,YAAa,EACb5D,SAAS,EACT0F,SAAU,EACViB,WAAY,EACZC,cAAe,EACfC,cAAe,EACf8E,UAAM4B,EACN7B,UAAM6B,EACNxC,SAAU,IACVe,UAAMyB,EACN1B,UAAM0B,EACNtC,SAAU,KAGZsI,kBAAkB1F,cAAgB,CAChCtH,YAAa,QACb8B,gBAAiB,SAsBnB,MAAM0L,wBAAwB,KAE5B,OAAA9T,CAAQuD,EAAQC,EAAQM,GACtB,MAAM,EAAC7D,EAAC,EAAEC,GAAK4J,EAAQ,CAAC7J,EAAGsD,EAAQrD,EAAGsD,GAAS3G,KAAKyD,eAAewD,IAAmB,SAAWjH,KAAKC,QAAQ2I,WAC9G,OAAOnC,EAAWrD,EAAGC,EAAGrD,KAAKkH,SAAS,CAAC,IAAK,IAAK,QAAS,UAAWD,GAAmBjH,KAAKC,QAAQ6G,YACvG,CAEA,cAAArD,CAAewD,GACb,OAAO+F,EAAmBhN,KAAKkH,SAAS,CAAC,IAAK,IAAK,QAAS,UAAWD,GACzE,CAEA,IAAAuI,CAAK7G,GACH,IAAK3I,KAAKC,QAAQuI,QAChB,OAEF,MAAM,OAACkK,EAAM,OAAEC,EAAM,WAAEC,EAAU,YAAEC,EAAW,QAAE5S,GAAWD,KAC3D2I,EAAI+B,OACJhC,EAAUC,EAAK3I,KAAMC,EAAQ2I,UA4GjC,SAAqBD,EAAKnH,GACxB,MAAM,OAAC0V,EAAM,OAAEC,EAAM,gBAAEC,EAAe,QAAEnX,GAAWuB,EACnD,IAAK4V,GAAmB5V,EAAQ2B,QAAQ+T,EAAQC,GAC9C,OAEF,MAAME,EAAUpX,EAAQoX,QAExB1O,EAAI+B,OACJ/B,EAAI6C,YACJ,MAAMH,EAASvC,EAAeH,EAAK0O,GACnC,IAAKhM,EACH,OAAO1C,EAAIoC,UAEb,MAAM,eAACuM,EAAc,aAAEC,GAczB,SAAkC/V,EAASqB,GACzC,MAAM,EAACO,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,GAAUrF,EACxB0O,EAaR,SAAmC1O,EAASqB,GAC1C,MAAM,MAAC+D,EAAK,OAAEC,EAAM,QAAE5G,GAAWuB,EAC3B0O,EAASjQ,EAAQoX,QAAQG,OAASvX,EAAQ6G,YAAc,EAC9D,GAAiB,UAAbjE,EACF,OAAO+D,EAAQsJ,EACV,GAAiB,WAAbrN,EACT,OAAOgE,EAASqJ,EAElB,OAAQA,CACV,CAtBiBuH,CAA0BjW,EAASqB,GAClD,IAAIyU,EAAgBC,EACH,SAAb1U,GAAoC,UAAbA,GACzByU,EAAiB,CAAClU,EAAGA,EAAI8M,EAAQ7M,KACjCkU,EAAe,CAACnU,EAAGkU,EAAelU,EAAGC,EAAGiU,EAAejU,EAAIwD,KAG3DyQ,EAAiB,CAAClU,IAAGC,EAAGA,EAAI6M,GAC5BqH,EAAe,CAACnU,EAAGkU,EAAelU,EAAIwD,EAAOvD,EAAGiU,EAAejU,IAEjE,MAAO,CAACiU,iBAAgBC,eAC1B,CA3ByCG,CAAyBlW,EAAS4V,IACnE,UAACO,EAAS,QAAEC,GAuCpB,SAA6BpW,EAASqB,EAAUyU,GAC9C,MAAM,EAACjU,EAAC,MAAEuD,EAAK,OAAEC,EAAM,QAAE5G,GAAWuB,EAC9BoM,EAAQ3N,EAAQoX,QAAQzJ,MACxBiK,EAaR,SAA8BhV,EAAU5C,GACtC,MAAM4X,EAAO5X,EAAQ4X,KACrB,GAAiB,SAAbhV,GAAoC,QAAbA,EACzB,OAAQgV,EAEV,OAAOA,CACT,CAnBeC,CAAqBjV,EAAU5C,EAAQoX,SACpD,IAAIM,EAAWC,EACE,SAAb/U,GAAoC,UAAbA,GACzB8U,EAAY,CAACvU,EAAGkU,EAAelU,EAAGC,EAAGA,EAAI2E,EAAQnB,EAAQ+G,IACzDgK,EAAU,CAACxU,EAAGuU,EAAUvU,EAAIyU,EAAMxU,EAAGsU,EAAUtU,KAG/CsU,EAAY,CAACvU,EAAGkU,EAAelU,EAAI4E,EAAQpB,EAAOgH,GAAQvK,EAAGiU,EAAejU,GAC5EuU,EAAU,CAACxU,EAAGuU,EAAUvU,EAAGC,EAAGsU,EAAUtU,EAAIwU,IAE9C,MAAO,CAACF,YAAWC,UACrB,CArD+BG,CAAoBvW,EAAS4V,EAAiBE,IACvED,EAAQG,OAAS,GAA6B,IAAxBvX,EAAQ6G,eAChC6B,EAAImL,OAAOwD,EAAelU,EAAGkU,EAAejU,GAC5CsF,EAAIoL,OAAOwD,EAAanU,EAAGmU,EAAalU,IAE1CsF,EAAImL,OAAO6D,EAAUvU,EAAGuU,EAAUtU,GAClCsF,EAAIoL,OAAO6D,EAAQxU,EAAGwU,EAAQvU,GAC9B,MAAM2U,EAAe/K,EAAQ,CAAC7J,EAAG8T,EAAQ7T,EAAG8T,GAAS3V,EAAQiC,kBAAkB,SAAWxD,EAAQ2I,WAClGD,EAAIoL,OAAOiE,EAAa5U,EAAG4U,EAAa3U,GACxCsF,EAAI0C,SACJ1C,EAAIoC,SACN,CApIIkN,CAAYtP,EAAK3I,MACjBmL,EAAQxC,EAAK3I,KAAMC,GACnBgM,EAAUtD,EAAK,CAACvF,EAAGsP,EAAQrP,EAAGsP,EAAQ/L,MAAOgM,EAAY/L,OAAQgM,GAAc5S,GAC/E0I,EAAIoC,SACN,CAGA,wBAAAkF,CAAyB/L,EAAOjE,GAC9B,MAAMiN,EAAShF,EAAejI,GAA8D6N,EAAc5J,EAAOjE,GAAxE+M,EAAmBoB,EAAalK,EAAOjE,IAC1E0P,GAAU,QAAU1P,EAAQ0P,SAC5BC,EAAY5F,EAAiB9F,EAAMyE,IAAK1I,GACxCiY,EA+EV,SAAqBhL,EAAOpF,EAAM7H,EAAS0P,GACzC,MAAM/I,EAAQkB,EAAKlB,MAAQ+I,EAAQ/I,MAAQ3G,EAAQ6G,YAC7CD,EAASiB,EAAKjB,OAAS8I,EAAQ9I,OAAS5G,EAAQ6G,YAChDjE,EAAWoF,EAAWhI,EAAQ4C,UAEpC,MAAO,CACLO,EAAG+U,GAAkBjL,EAAM9J,EAAGwD,EAAO3G,EAAQmP,QAASvM,EAASO,GAC/DC,EAAG8U,GAAkBjL,EAAM7J,EAAGwD,EAAQ5G,EAAQoP,QAASxM,EAASQ,GAChEuD,QACAC,SAEJ,CA1FoBuR,CAAYlL,EAAO0C,EAAW3P,EAAS0P,GACjD5I,EAAe9G,EAAQ6G,YAAc,EACrCwN,EAAa,CACjB4C,OAAQhK,EAAM9J,EACd+T,OAAQjK,EAAM7J,KACX6U,EACHxF,OAAQwF,EAAQ9U,EAAIuM,EAAQrB,KAAOvH,EACnC4L,OAAQuF,EAAQ7U,EAAIsM,EAAQtB,IAAMtH,EAClC6L,WAAYhD,EAAUhJ,MACtBiM,YAAajD,EAAU/I,QAGzB,OADAyN,EAAW8C,gBAAkBnX,EAAQoX,QAAQ1G,SAkKjD,SAAgC2D,EAAYrU,EAAS2I,GACnD,MAAM/F,EAAW5C,EAAQ4C,SACzB,GAAiB,SAAbA,GAAoC,UAAbA,GAAqC,QAAbA,GAAmC,WAAbA,EACvE,OAAOA,EAET,OAKF,SAAoCyR,EAAYrU,EAAS2I,GACvD,MAAM,EAACxF,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,EAAM,OAAEqQ,EAAM,OAAEC,GAAU7C,EACxC9Q,EAAS,CAACJ,EAAGA,EAAIwD,EAAQ,EAAGvD,EAAGA,EAAIwD,EAAS,GAC5C+G,EAAQ3N,EAAQ2N,MAChBwB,EAAUpH,EAAQpB,EAAOgH,GACzByB,EAAUrH,EAAQnB,EAAQ+G,GAC1ByK,EAAU,CAACjV,EAAGA,EAAIgM,EAAShM,EAAIgM,EAAShM,EAAIwD,GAC5C0R,EAAU,CAACjV,EAAIgM,EAAShM,EAAIwD,EAAQxD,EAAGA,EAAIgM,GAC3CkJ,EAAS,GACf,IAAK,IAAIC,EAAQ,EAAGA,EAAQ,EAAGA,IAAS,CACtC,MAAMR,EAAe/K,EAAQ,CAAC7J,EAAGiV,EAAQG,GAAQnV,EAAGiV,EAAQE,IAAShV,GAAQ,QAAUoF,IACvF2P,EAAO5U,KAAK,CACVd,SAAU4V,GAAUD,GACpB9U,UAAU,QAAsBsU,EAAc,CAAC5U,EAAG8T,EAAQ7T,EAAG8T,KAEjE,CACA,OAAOoB,EAAO3U,MAAK,CAACC,EAAGC,IAAMD,EAAEH,SAAWI,EAAEJ,WAAU,GAAGb,QAC3D,CAtBS6V,CAA2BpE,EAAYrU,EAAS2I,EACzD,CAxK4D+P,CAAuBrE,EAAYrU,EAAQoX,QAASpX,EAAQ2I,UAC7G0L,CACT,EA+EF,SAAS6D,GAAkBvK,EAAO9F,EAAMoI,EAAS,EAAGrN,GAClD,OAAO+K,EAAQ/F,EAAoBC,EAAMjF,GAAYqN,CACvD,CA9EA+G,gBAAgBzS,GAAK,kBAErByS,gBAAgBzG,SAAW,CACzBvM,kBAAkB,EAClBsH,gBAAiB,cACjB3B,sBAAuB,cACvBZ,eAAgB,OAChBE,WAAY,GACZE,iBAAkB,EAClBE,gBAAiB,QACjBuC,aAAc,EACdG,kBAAmB,cACnBlF,YAAa,EACbuQ,QAAS,CACPrO,eAAgB,OAChBS,iBAAagH,EACbvH,WAAY,GACZE,iBAAkB,EAClBE,gBAAiB,QACjBxC,YAAa,EACb6J,SAAS,EACT6G,OAAQ,EACR3U,SAAU,OACVgV,KAAM,EACNjK,MAAO,OAETd,MAAO,QACPtE,QAAS,KACTtF,SAAS,EACT+G,KAAM,CACJ2G,YAAQH,EACRzF,gBAAYyF,EACZ3I,UAAM2I,EACNI,WAAOJ,EACPK,YAAQL,GAEV5J,YAAQ4J,EACRd,QAAS,EACT9M,SAAU,SACV+F,SAAU,EACViB,WAAY,EACZC,cAAe,EACfC,cAAe,EACfsC,UAAW,SACXI,qBAAiBgE,EACjBtG,gBAAiB,EACjBvD,WAAO6J,EACPrB,QAAS,EACTP,UAAM4B,EACN7B,UAAM6B,EACNxC,SAAU,IACV9F,YAAQsI,EACRpB,QAAS,EACTL,UAAMyB,EACN1B,UAAM0B,EACNtC,SAAU,IACV/F,YAAQqI,GAGVwG,gBAAgBlG,cAAgB,CAC9BtH,YAAa,SAyGf,MAAMgP,GAAY,CAAC,OAAQ,SAAU,MAAO,SAqB5C,MAAMG,wBAAwB,KAE5B,OAAAzV,CAAQuD,EAAQC,EAAQM,GACtB,MAAM,MAACL,GAAS5G,KAAKkH,SAAS,CAAC,SAAUD,GACzC,OA7zCJ,SAAsBiG,EAAO1J,EAAQmI,EAAQ7E,GAC3C,IAAKoG,IAAU1J,GAAUmI,GAAU,EACjC,OAAO,EAET,MAAM5E,EAAeD,EAAc,GAAK,EACxC,OAAQd,KAAKmN,IAAIjG,EAAM9J,EAAII,EAAOJ,EAAG,GAAK4C,KAAKmN,IAAIjG,EAAM7J,EAAIG,EAAOH,EAAG,IAAO2C,KAAKmN,IAAIxH,EAAS5E,EAAc,EAChH,CAuzCW8R,CAAa,CAACzV,EAAGsD,EAAQrD,EAAGsD,GAAS3G,KAAKyD,eAAewD,GAAmBL,EAAQ,EAAG5G,KAAKC,QAAQ6G,YAC7G,CAEA,cAAArD,CAAewD,GACb,OAAOD,EAAsBhH,KAAMiH,EACrC,CAEA,IAAAuI,CAAK7G,GACH,MAAM1I,EAAUD,KAAKC,QACf6G,EAAc7G,EAAQ6G,YAC5B,GAAI7G,EAAQ0L,OAAS,GACnB,OAEFhD,EAAI+B,OACJ/B,EAAI2C,UAAYrL,EAAQsL,gBACxB7B,EAAef,EAAK1I,GACpB,MAAMoL,EAASvC,EAAeH,EAAK1I,GACnCA,EAAQ6G,YAAc,GACtB,QAAU6B,EAAK1I,EAASD,KAAKoD,EAAGpD,KAAKqD,GACjCgI,IAAW9C,EAAgBtI,EAAQ6Y,cACrCnQ,EAAIgB,YAAc1J,EAAQ+L,kBAC1BrD,EAAI0C,UAEN1C,EAAIoC,UACJ9K,EAAQ6G,YAAcA,CACxB,CAEA,wBAAAmJ,CAAyB/L,EAAOjE,GAC9B,OAAOgP,EAAqB/K,EAAOjE,EACrC,EAGF2Y,gBAAgBpU,GAAK,kBAErBoU,gBAAgBpI,SAAW,CACzBvM,kBAAkB,EAClB2F,sBAAuB,cACvBV,WAAY,GACZE,iBAAkB,EAClB4C,kBAAmB,cACnBlF,YAAa,EACb5D,SAAS,EACT4V,WAAY,SACZnN,OAAQ,GACR/C,SAAU,EACViB,WAAY,EACZC,cAAe,EACfC,cAAe,EACfqF,QAAS,EACTP,UAAM4B,EACN7B,UAAM6B,EACNxC,SAAU,IACV9F,YAAQsI,EACRpB,QAAS,EACTL,UAAMyB,EACN1B,UAAM0B,EACNtC,SAAU,IACV/F,YAAQqI,GAGVmI,gBAAgB7H,cAAgB,CAC9BtH,YAAa,QACb8B,gBAAiB,SAGnB,MAAMwN,0BAA0B,KAC9B,OAAA5V,CAAQuD,EAAQC,EAAQM,GACtB,OAAOjH,KAAKC,QAAQ0L,QAAU,IAAO3L,KAAK0B,SAAS4F,OAAS,GAiGhE,SAA0B0R,EAAQ5V,EAAGC,EAAG4D,GACtC,IAAIgS,GAAW,EACXC,EAAIF,EAAOA,EAAO1R,OAAS,GAAGJ,SAAS,CAAC,KAAM,MAAOD,GACzD,IAAK,MAAMiG,KAAS8L,EAAQ,CAC1B,MAAMG,EAAIjM,EAAMhG,SAAS,CAAC,KAAM,MAAOD,GAClCkS,EAAEC,GAAK/V,GAAQ6V,EAAEE,GAAK/V,GAAMD,GAAK8V,EAAEG,GAAKF,EAAEE,KAAOhW,EAAI8V,EAAEC,KAAOF,EAAEE,GAAKD,EAAEC,IAAMD,EAAEE,KAClFJ,GAAYA,GAEdC,EAAIC,CACN,CACA,OAAOF,CACT,CA5GqEK,CAAiBtZ,KAAK0B,SAAUgF,EAAQC,EAAQM,EACnH,CAEA,cAAAxD,CAAewD,GACb,OAAOD,EAAsBhH,KAAMiH,EACrC,CAEA,IAAAuI,CAAK7G,GACH,MAAM,SAACjH,EAAQ,QAAEzB,GAAWD,KAC5B2I,EAAI+B,OACJ/B,EAAI6C,YACJ7C,EAAI2C,UAAYrL,EAAQsL,gBACxB7B,EAAef,EAAK1I,GACpB,MAAMoL,EAASvC,EAAeH,EAAK1I,GACnC,IAAIsZ,GAAQ,EACZ,IAAK,MAAMC,KAAM9X,EACX6X,GACF5Q,EAAImL,OAAO0F,EAAGpW,EAAGoW,EAAGnW,GACpBkW,GAAQ,GAER5Q,EAAIoL,OAAOyF,EAAGpW,EAAGoW,EAAGnW,GAGxBsF,EAAImD,YACJnD,EAAIoD,OAEAV,IACF1C,EAAIgB,YAAc1J,EAAQ+L,kBAC1BrD,EAAI0C,UAEN1C,EAAIoC,SACN,CAEA,wBAAAkF,CAAyB/L,EAAOjE,GAC9B,MAAM,EAACmD,EAAC,EAAEC,EAAC,MAAEuD,EAAK,OAAEC,GAAUoI,EAAqB/K,EAAOjE,IACpD,MAACwZ,EAAK,OAAE9N,EAAM,SAAE/C,EAAQ,YAAE9B,GAAe7G,EACzCyP,EAAa5I,EAAc,EAC3BpF,EAAW,GACXyL,EAAS,EAAI,EAAA6H,GAAMyE,EACzB,IAAIC,EAAM9Q,EAAW,KACrB,IAAK,IAAIgC,EAAI,EAAGA,EAAI6O,EAAO7O,IAAK8O,GAAOvM,EAAO,CAC5C,MAAME,EAAMrH,KAAKqH,IAAIqM,GACftM,EAAMpH,KAAKoH,IAAIsM,GACrBhY,EAASiC,KAAK,CACZ7D,KAAM,QACN6Z,YAAa,QACbrF,WAAY,CACVlR,EAAGA,EAAIiK,EAAM1B,EACbtI,EAAGA,EAAI+J,EAAMzB,EACb0N,GAAIjW,EAAIiK,GAAO1B,EAAS+D,GACxB0J,GAAI/V,EAAI+J,GAAOzB,EAAS+D,KAG9B,CACA,MAAO,CAACtM,IAAGC,IAAGuD,QAAOC,SAAQnF,WAAUkY,eAAgB,CAACxW,IAAGC,KAC7D,EAGF0V,kBAAkBvU,GAAK,oBAEvBuU,kBAAkBvI,SAAW,CAC3BvM,kBAAkB,EAClB2F,sBAAuB,cACvBZ,eAAgB,OAChBE,WAAY,GACZE,iBAAkB,EAClBE,gBAAiB,QACjB0C,kBAAmB,cACnBlF,YAAa,EACb5D,SAAS,EACTgK,MAAO,CACLvB,OAAQ,GAEVA,OAAQ,GACR/C,SAAU,EACViB,WAAY,EACZC,cAAe,EACfC,cAAe,EACf0P,MAAO,EACPrK,QAAS,EACTP,UAAM4B,EACN7B,UAAM6B,EACNxC,SAAU,IACV9F,YAAQsI,EACRpB,QAAS,EACTL,UAAMyB,EACN1B,UAAM0B,EACNtC,SAAU,IACV/F,YAAQqI,GAGVsI,kBAAkBhI,cAAgB,CAChCtH,YAAa,QACb8B,gBAAiB,SAiBnB,MAAMsO,GAAkB,CACtB3K,IAAKK,cACLoH,QAASF,kBACThH,MAAOwH,gBACPzD,KAAM1B,eACN5E,MAAO0L,gBACPkB,QAASf,mBAWXxS,OAAOC,KAAKqT,IAAiBlN,SAAQnH,IACnC,KAASuU,SAAS,YAAYF,GAAgBrU,GAAKhB,KAAM,CACvDyM,UAAW,sBACX,IAGJ,MAAM+I,GAAgB,CACpBC,OAAQ1T,OAAOiQ,QAQjB,SAAS0D,GAAYpa,EAAO,QAC1B,OAAI+Z,GAAgB/Z,GACXA,GAET4F,QAAQC,KAAK,6BAA6B7F,4BACnC,OACT,CASA,SAASqa,GAAejW,EAAO9C,EAAOnB,EAASma,GAC7C,MAAMC,EAsCR,SAA2BnW,EAAOoW,EAAUF,GAC1C,GAAa,UAATA,GAA6B,SAATA,GAA4B,WAATA,EACzC,OAAOJ,GAET,OAAO,IAAI,KAAW9V,EAAOoW,EAC/B,CA3CqBC,CAAkBrW,EAAOjE,EAAQoa,WAAYD,GAE1DhW,EAAchD,EAAMgD,YACpB1C,EAoGR,SAAwBA,EAAU0C,GAChC,MAAMuG,EAAQvG,EAAYkD,OACpBsG,EAAQlM,EAAS4F,OAEvB,GAAIsG,EAAQjD,EAAO,CACjB,MAAMtK,EAAMsK,EAAQiD,EACpBlM,EAAS8Y,OAAO5M,EAAO,KAAM,IAAI6M,MAAMpa,GACzC,MAAWuN,EAAQjD,GACjBjJ,EAAS8Y,OAAO7P,EAAOiD,EAAQjD,GAEjC,OAAOjJ,CACT,CA/GmBgZ,CAAetZ,EAAMM,SAAU0C,GAEhD,IAAK,IAAIwG,EAAI,EAAGA,EAAIxG,EAAYkD,OAAQsD,IAAK,CAC3C,MAAM+P,EAAoBvW,EAAYwG,GAChCpJ,EAAUoZ,GAAmBlZ,EAAUkJ,EAAG+P,EAAkB7a,MAC5D+a,EAAWF,EAAkBG,WAAWC,GAAW7W,EAAO1C,EAASmZ,IACnErG,EAAa9S,EAAQyO,yBAAyB/L,EAAO2W,GAE3DvG,EAAW0G,KAAOC,GAAO3G,GAErB,aAAcA,IAChB4G,GAAkB1Z,EAAS8S,EAAYuG,EAAUR,UAG1C/F,EAAW5S,WAGf,QAAQF,EAAQ4B,IAKnBmD,OAAOiQ,OAAOhV,EAAS8S,GAGzBA,EAAWrU,QAAUkb,GAAyBN,GAE9CR,EAAWJ,OAAOzY,EAAS8S,EAC7B,CACF,CAEA,SAAS2G,GAAO3G,GACd,OAAOnF,MAAMmF,EAAWlR,IAAM+L,MAAMmF,EAAWjR,EACjD,CASA,SAAS6X,GAAkBE,GAAa,SAAC1Z,EAAQ,eAAEkY,GAAiBiB,EAAUR,GAC5E,MAAMgB,EAAcD,EAAY1Z,WAAa0Z,EAAY1Z,SAAW,IACpE2Z,EAAY/T,OAAS5F,EAAS4F,OAC9B,IAAK,IAAIsD,EAAI,EAAGA,EAAIlJ,EAAS4F,OAAQsD,IAAK,CACxC,MAAM0Q,EAAa5Z,EAASkJ,GACtB0J,EAAagH,EAAWhH,WACxBiH,EAAaX,GAAmBS,EAAazQ,EAAG0Q,EAAWxb,KAAM8Z,GACjE4B,EAAcX,EAASS,EAAW3B,aAAana,SAAS8b,GAC9DhH,EAAWrU,QAAUkb,GAAyBK,GAC9CnB,EAAWJ,OAAOsB,EAAYjH,EAChC,CACF,CAEA,SAASsG,GAAmBlZ,EAAU8W,EAAO1Y,EAAM8Z,GACjD,MAAM6B,EAAe5B,GAAgBK,GAAYpa,IACjD,IAAI0B,EAAUE,EAAS8W,GAOvB,OANKhX,GAAaA,aAAmBia,IACnCja,EAAUE,EAAS8W,GAAS,IAAIiD,GAC5B,QAAS7B,IACXrT,OAAOiQ,OAAOhV,EAASoY,IAGpBpY,CACT,CAEA,SAAS2Z,GAAyBN,GAChC,MAAMY,EAAe5B,GAAgBK,GAAYW,EAAS/a,OACpDyY,EAAS,CAAC,EAChBA,EAAO/T,GAAKqW,EAASrW,GACrB+T,EAAOzY,KAAO+a,EAAS/a,KACvByY,EAAO7H,SAAWmK,EAASnK,SAC3BnK,OAAOiQ,OAAO+B,EACZmD,GAAWb,EAAUY,EAAajL,UAClCkL,GAAWb,EAAUY,EAAa1K,gBACpC,IAAK,MAAM4K,KAAQ1a,EACjBsX,EAAOoD,GAAQd,EAASc,GAE1B,OAAOpD,CACT,CAEA,SAASmD,GAAWb,EAAUe,GAC5B,MAAMrD,EAAS,CAAC,EAChB,IAAK,MAAM1S,KAAQU,OAAOC,KAAKoV,GAAO,CACpC,MAAMC,EAAUD,EAAK/V,GACfjG,EAAQib,EAAShV,GACvB0S,EAAO1S,IAAQ,QAASgW,GAAWH,GAAW9b,EAAOic,GAAWjc,CAClE,CACA,OAAO2Y,CACT,CAEA,SAASwC,GAAW7W,EAAO1C,EAASoD,GAClC,OAAOpD,EAAQoB,WAAapB,EAAQoB,SAAW2D,OAAOiQ,OAAOjQ,OAAOuV,OAAO5X,EAAM6W,cAAe,CAC9FvZ,UACAgD,GAAII,EAAWJ,GACf1E,KAAM,eAEV,CAkBA,MAAMic,GAAc,IAAIzT,IAExB,IAAI1D,GAAa,CACfJ,GAAI,aAEJwX,QAPY,QAeZ,aAAAC,GACE,KAAMC,SAASrC,IA5oDnB,SAAwBsC,EAAKzb,EAAK0b,EAAKC,GAAS,GAC9C,MAAMC,EAAQF,EAAIG,MAAM,KACxB,IAAI3R,EAAI,EACR,IAAK,MAAMvD,KAAO3G,EAAI6b,MAAM,KAAM,CAChC,MAAMnV,EAAMkV,EAAM1R,KAClB,GAAI4R,SAASnV,EAAK,IAAMmV,SAASpV,EAAK,IACpC,MAEF,GAAID,EAAYC,EAAKC,GAAM,CACzB,GAAIgV,EACF,MAAM,IAAII,MAAM,GAAGN,MAAQC,wBAA0B1b,2BAErD,OAAO,CAEX,CACF,CACA,OAAO,CACT,CA8nDSgc,CAAe,WAAY,MAAO,KAAMV,SAAS,KACpDtW,QAAQC,KAAK,8GAGb,KAAM6K,SAASvF,IAAI,0BAA2B,CAC5CoM,QAAS,CAAC,EACVpN,KAAM,CAAC,EACP0F,QAAS,IAGf,EAEA,eAAAgN,GACE,KAAMC,WAAW/C,GACnB,EAEA,UAAAgD,CAAW3Y,GACT6X,GAAY9Q,IAAI/G,EAAO,CACrBE,YAAa,GACb1C,SAAU,GACVob,gBAAiB,GACjB/a,UAAW,CAAC,EACZT,UAAU,EACVC,cAAc,GAElB,EAEA,YAAAwb,CAAa7Y,EAAO8Y,EAAM/c,GACxB,MACMmE,EADQ2X,GAAY7Q,IAAIhH,GACJE,YAAc,GAExC,IAAIuW,EAAoB1a,EAAQmE,aAC5B,QAASuW,GACXpU,OAAOC,KAAKmU,GAAmBhO,SAAQnH,IACrC,MAAM5F,EAAQ+a,EAAkBnV,IAC5B,QAAS5F,KACXA,EAAM4E,GAAKgB,EACXpB,EAAYT,KAAK/D,GACnB,KAEO,QAAQ+a,IACjBvW,EAAYT,QAAQgX,GA9xD1B,SAA4BvW,EAAamB,GACvC,IAAK,MAAMX,KAAcR,EACvBkB,EAAeV,EAAYW,EAE/B,CA4xDI0X,CAAmB7Y,EAAaF,EAAMqB,OACxC,EAEA,eAAA2X,CAAgBhZ,EAAO8Y,GACrB,MAAM5b,EAAQ2a,GAAY7Q,IAAIhH,GAC9BD,EAAiBC,EAAO8Y,EAAK7Y,MAAO/C,EAAMgD,YAAYnB,QAAOY,GAAKA,EAAEX,SAAWW,EAAEI,mBACnF,EAEA,WAAAkZ,CAAYjZ,EAAO8Y,EAAM/c,GACvB,MAAMmB,EAAQ2a,GAAY7Q,IAAIhH,IAt7DlC,SAAyBA,EAAO9C,EAAOnB,GACrCmB,EAAME,UAAW,EACjBF,EAAMG,cAAe,EAErBN,EAAM0L,SAAQgP,IACiB,mBAAlB1b,EAAQ0b,IACjBva,EAAME,UAAW,EACjBF,EAAMW,UAAU4Z,GAAQ1b,EAAQ0b,KACvB,QAAQva,EAAMW,UAAU4Z,YAC1Bva,EAAMW,UAAU4Z,EACzB,IAEF3a,EAAU2L,SAAQgP,IACa,mBAAlB1b,EAAQ0b,KACjBva,EAAMG,cAAe,EACvB,IAGGH,EAAME,UAAaF,EAAMG,cAC5BH,EAAMgD,YAAYuI,SAAQyQ,IACnBhc,EAAME,UACTP,EAAW4L,SAAQgP,IACU,mBAAhByB,EAAMzB,KACfva,EAAME,UAAW,EACnB,IAGCF,EAAMG,cACTP,EAAU2L,SAAQgP,IACW,mBAAhByB,EAAMzB,KACfva,EAAME,UAAW,EACjBF,EAAMG,cAAe,EACvB,GAEJ,GAGN,CAk5DI8b,CAAgBnZ,EAAO9C,EAAOnB,GAC9Bka,GAAejW,EAAO9C,EAAOnB,EAAS+c,EAAK5C,MAC3ChZ,EAAM0b,gBAAkB1b,EAAMM,SAASuB,QAAOuW,IAAOA,EAAGwB,MAAQxB,EAAGvZ,QAAQiD,SAC7E,EAEA,kBAAAoa,CAAmBpZ,EAAOqZ,EAAOtd,GAC/BuP,GAAKtL,EAAO,qBAAsBjE,EAAQ+P,KAC5C,EAEA,iBAAAwN,CAAkBtZ,EAAOqZ,EAAOtd,GAC9BuP,GAAKtL,EAAO,oBAAqBjE,EAAQ+P,KAC3C,EAEA,UAAAyN,CAAWvZ,EAAOqZ,EAAOtd,GACvBuP,GAAKtL,EAAO,aAAcjE,EAAQ+P,KACpC,EAEA,SAAA0N,CAAUxZ,EAAOqZ,EAAOtd,GACtBuP,GAAKtL,EAAO,YAAajE,EAAQ+P,KACnC,EAEA,WAAA2N,CAAYzZ,EAAO8Y,EAAM/c,GAEvBkB,EADc4a,GAAY7Q,IAAIhH,GACX8Y,EAAK3b,MAAOpB,EACjC,EAEA,OAAA2d,CAAQ1Z,GACN6X,GAAY8B,OAAO3Z,EACrB,EAEA4Z,UAAU5Z,GACD6X,GAAY7Q,IAAIhH,GAGzBsM,SAAU,CACR6J,WAAY,CACV0D,QAAS,CACPzJ,WAAY,CAAC,IAAK,IAAK,KAAM,KAAM,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,aAAc,cAAe,UAC3HxU,KAAM,WAGVkQ,MAAM,EACNvN,cAAe,IACfiO,SAAU,oBACVjB,MAAO,CACLiB,SAAU,OAIdM,YAAa,CACXgN,YAAY,EACZC,YAAcpY,IAAU5E,EAAMid,SAASrY,GACvCzB,YAAa,CACX+Z,UAAU,EACVlN,UAAW,CAACpL,EAAMuY,IAAS,YAAYvE,GAAgBK,GAAYkE,EAAKte,OAAO0E,OAInF6Z,uBAAwB,CAAC,KAG3B,SAAS7O,GAAKtL,EAAOoa,EAAQtO,GAC3B,MAAM,IAACrH,EAAG,UAAEoF,GAAa7J,GACnB,gBAAC4Y,GAAmBf,GAAY7Q,IAAIhH,GAEtC8L,IACF,QAASrH,EAAKoF,GAGhBwQ,GAAa5V,EAAKmU,EAAiBwB,GA0BrC,SAAyB3V,EAAKjH,EAAU4c,GACtC,IAAK,MAAM9E,KAAM9X,GACX,QAAQ8X,EAAG9X,WACb6c,GAAa5V,EAAK6Q,EAAG9X,SAAU4c,EAGrC,CA/BEE,CAAgB7V,EAAKmU,EAAiBwB,GAElCtO,IACF,QAAWrH,GAGbmU,EAAgBnQ,SAAQ6M,IACtB,KAAM,cAAeA,GACnB,OAEF,MAAM/J,EAAQ+J,EAAGvZ,QAAQwP,MACrBA,GAASA,EAAMkB,SAAWlB,EAAMjH,UAAYiH,EAAMiB,UAAY8I,EAAGvZ,QAAQyQ,YAAc4N,GACzF9E,EAAGvN,UAAUtD,EAAKoF,EACpB,GAEJ,CAEA,SAASwQ,GAAa5V,EAAKjH,EAAU4c,GACnC,IAAK,MAAM9E,KAAM9X,EACX8X,EAAGvZ,QAAQyQ,WAAa4N,GAC1B9E,EAAGhK,KAAK7G,EAGd,oBCjiEO,SAAS8V,EAAgBC,EAAQC,GAGtC,OAFaD,EAAS,EAAI,IAAM,IACjB1Y,KAAKuL,IAAImN,GAAQjW,WAAW6H,SAASqO,EAAc,IAEpE,qDCJA,IAAIC,EAAiB,CAAC,EAEf,SAASC,IACd,OAAOD,CACT,4HCIA,MAAME,EAGM,WAHNA,EAIE,OAJFA,EAKK,UALLA,EAMO,YANPA,EAOK,UAPLA,EAQG,QAiDIC,EAAa,CAExBC,EAAG,SAAUC,EAAMC,EAAOC,GACxB,MAAMC,EAAMH,EAAKI,cAAgB,EAAI,EAAI,EACzC,OAAQH,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOC,EAASC,IAAIA,EAAK,CAAExY,MAAO,gBAEpC,IAAK,QACH,OAAOuY,EAASC,IAAIA,EAAK,CAAExY,MAAO,WAGpC,QACE,OAAOuY,EAASC,IAAIA,EAAK,CAAExY,MAAO,SAExC,EAGAvD,EAAG,SAAU4b,EAAMC,EAAOC,GAExB,GAAc,OAAVD,EAAgB,CAClB,MAAMI,EAAaL,EAAKI,cAElB/f,EAAOggB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAOH,EAASI,cAAcjgB,EAAM,CAAEiB,KAAM,QAC9C,CAEA,OAAO,IAAgB8C,EAAE4b,EAAMC,EACjC,EAGAM,EAAG,SAAUP,EAAMC,EAAOC,EAAUlf,GAClC,MAAMwf,GAAiB,OAAYR,EAAMhf,GAEnCyf,EAAWD,EAAiB,EAAIA,EAAiB,EAAIA,EAG3D,GAAc,OAAVP,EAAgB,CAClB,MAAMS,EAAeD,EAAW,IAChC,OAAO,OAAgBC,EAAc,EACvC,CAGA,MAAc,OAAVT,EACKC,EAASI,cAAcG,EAAU,CAAEnf,KAAM,UAI3C,OAAgBmf,EAAUR,EAAM5X,OACzC,EAGAsY,EAAG,SAAUX,EAAMC,GACjB,MAAMW,GAAc,OAAeZ,GAGnC,OAAO,OAAgBY,EAAaX,EAAM5X,OAC5C,EAWAwY,EAAG,SAAUb,EAAMC,GACjB,MAAM5f,EAAO2f,EAAKI,cAClB,OAAO,OAAgB/f,EAAM4f,EAAM5X,OACrC,EAGAyY,EAAG,SAAUd,EAAMC,EAAOC,GACxB,MAAM9f,EAAU2G,KAAKga,MAAMf,EAAKgB,WAAa,GAAK,GAClD,OAAQf,GAEN,IAAK,IACH,OAAOgB,OAAO7gB,GAEhB,IAAK,KACH,OAAO,OAAgBA,EAAS,GAElC,IAAK,KACH,OAAO8f,EAASI,cAAclgB,EAAS,CAAEkB,KAAM,YAEjD,IAAK,MACH,OAAO4e,EAAS9f,QAAQA,EAAS,CAC/BuH,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAAS9f,QAAQA,EAAS,CAC/BuH,MAAO,SACPuZ,QAAS,eAIb,QACE,OAAOhB,EAAS9f,QAAQA,EAAS,CAC/BuH,MAAO,OACPuZ,QAAS,eAGjB,EAGAC,EAAG,SAAUnB,EAAMC,EAAOC,GACxB,MAAM9f,EAAU2G,KAAKga,MAAMf,EAAKgB,WAAa,GAAK,GAClD,OAAQf,GAEN,IAAK,IACH,OAAOgB,OAAO7gB,GAEhB,IAAK,KACH,OAAO,OAAgBA,EAAS,GAElC,IAAK,KACH,OAAO8f,EAASI,cAAclgB,EAAS,CAAEkB,KAAM,YAEjD,IAAK,MACH,OAAO4e,EAAS9f,QAAQA,EAAS,CAC/BuH,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAAS9f,QAAQA,EAAS,CAC/BuH,MAAO,SACPuZ,QAAS,eAIb,QACE,OAAOhB,EAAS9f,QAAQA,EAAS,CAC/BuH,MAAO,OACPuZ,QAAS,eAGjB,EAGAE,EAAG,SAAUpB,EAAMC,EAAOC,GACxB,MAAM/f,EAAQ6f,EAAKgB,WACnB,OAAQf,GACN,IAAK,IACL,IAAK,KACH,OAAO,IAAgBmB,EAAEpB,EAAMC,GAEjC,IAAK,KACH,OAAOC,EAASI,cAAcngB,EAAQ,EAAG,CAAEmB,KAAM,UAEnD,IAAK,MACH,OAAO4e,EAAS/f,MAAMA,EAAO,CAC3BwH,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAAS/f,MAAMA,EAAO,CAC3BwH,MAAO,SACPuZ,QAAS,eAIb,QACE,OAAOhB,EAAS/f,MAAMA,EAAO,CAAEwH,MAAO,OAAQuZ,QAAS,eAE7D,EAGAG,EAAG,SAAUrB,EAAMC,EAAOC,GACxB,MAAM/f,EAAQ6f,EAAKgB,WACnB,OAAQf,GAEN,IAAK,IACH,OAAOgB,OAAO9gB,EAAQ,GAExB,IAAK,KACH,OAAO,OAAgBA,EAAQ,EAAG,GAEpC,IAAK,KACH,OAAO+f,EAASI,cAAcngB,EAAQ,EAAG,CAAEmB,KAAM,UAEnD,IAAK,MACH,OAAO4e,EAAS/f,MAAMA,EAAO,CAC3BwH,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAAS/f,MAAMA,EAAO,CAC3BwH,MAAO,SACPuZ,QAAS,eAIb,QACE,OAAOhB,EAAS/f,MAAMA,EAAO,CAAEwH,MAAO,OAAQuZ,QAAS,eAE7D,EAGA1U,EAAG,SAAUwT,EAAMC,EAAOC,EAAUlf,GAClC,MAAMd,GAAO,OAAQ8f,EAAMhf,GAE3B,MAAc,OAAVif,EACKC,EAASI,cAAcpgB,EAAM,CAAEoB,KAAM,UAGvC,OAAgBpB,EAAM+f,EAAM5X,OACrC,EAGAiZ,EAAG,SAAUtB,EAAMC,EAAOC,GACxB,MAAMqB,GAAU,OAAWvB,GAE3B,MAAc,OAAVC,EACKC,EAASI,cAAciB,EAAS,CAAEjgB,KAAM,UAG1C,OAAgBigB,EAAStB,EAAM5X,OACxC,EAGAmZ,EAAG,SAAUxB,EAAMC,EAAOC,GACxB,MAAc,OAAVD,EACKC,EAASI,cAAcN,EAAKyB,UAAW,CAAEngB,KAAM,SAGjD,IAAgBkgB,EAAExB,EAAMC,EACjC,EAGAyB,EAAG,SAAU1B,EAAMC,EAAOC,GACxB,MAAMyB,GAAY,OAAa3B,GAE/B,MAAc,OAAVC,EACKC,EAASI,cAAcqB,EAAW,CAAErgB,KAAM,eAG5C,OAAgBqgB,EAAW1B,EAAM5X,OAC1C,EAGAuZ,EAAG,SAAU5B,EAAMC,EAAOC,GACxB,MAAM2B,EAAY7B,EAAK8B,SACvB,OAAQ7B,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOC,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,QACPuZ,QAAS,eAIb,QACE,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,OACPuZ,QAAS,eAGjB,EAGAa,EAAG,SAAU/B,EAAMC,EAAOC,EAAUlf,GAClC,MAAM6gB,EAAY7B,EAAK8B,SACjBE,GAAkBH,EAAY7gB,EAAQY,aAAe,GAAK,GAAK,EACrE,OAAQqe,GAEN,IAAK,IACH,OAAOgB,OAAOe,GAEhB,IAAK,KACH,OAAO,OAAgBA,EAAgB,GAEzC,IAAK,KACH,OAAO9B,EAASI,cAAc0B,EAAgB,CAAE1gB,KAAM,QACxD,IAAK,MACH,OAAO4e,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,QACPuZ,QAAS,eAIb,QACE,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,OACPuZ,QAAS,eAGjB,EAGAe,EAAG,SAAUjC,EAAMC,EAAOC,EAAUlf,GAClC,MAAM6gB,EAAY7B,EAAK8B,SACjBE,GAAkBH,EAAY7gB,EAAQY,aAAe,GAAK,GAAK,EACrE,OAAQqe,GAEN,IAAK,IACH,OAAOgB,OAAOe,GAEhB,IAAK,KACH,OAAO,OAAgBA,EAAgB/B,EAAM5X,QAE/C,IAAK,KACH,OAAO6X,EAASI,cAAc0B,EAAgB,CAAE1gB,KAAM,QACxD,IAAK,MACH,OAAO4e,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,QACPuZ,QAAS,eAIb,QACE,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,OACPuZ,QAAS,eAGjB,EAGAvV,EAAG,SAAUqU,EAAMC,EAAOC,GACxB,MAAM2B,EAAY7B,EAAK8B,SACjBI,EAA6B,IAAdL,EAAkB,EAAIA,EAC3C,OAAQ5B,GAEN,IAAK,IACH,OAAOgB,OAAOiB,GAEhB,IAAK,KACH,OAAO,OAAgBA,EAAcjC,EAAM5X,QAE7C,IAAK,KACH,OAAO6X,EAASI,cAAc4B,EAAc,CAAE5gB,KAAM,QAEtD,IAAK,MACH,OAAO4e,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,cACPuZ,QAAS,eAGb,IAAK,QACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,QACPuZ,QAAS,eAIb,QACE,OAAOhB,EAASjgB,IAAI4hB,EAAW,CAC7Bla,MAAO,OACPuZ,QAAS,eAGjB,EAGAtc,EAAG,SAAUob,EAAMC,EAAOC,GACxB,MACMiC,EADQnC,EAAKoC,WACgB,IAAM,EAAI,KAAO,KAEpD,OAAQnC,GACN,IAAK,IACL,IAAK,KACH,OAAOC,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,cACPuZ,QAAS,eAEb,IAAK,MACH,OAAOhB,EACJmC,UAAUF,EAAoB,CAC7Bxa,MAAO,cACPuZ,QAAS,eAEVoB,cACL,IAAK,QACH,OAAOpC,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,SACPuZ,QAAS,eAGb,QACE,OAAOhB,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,OACPuZ,QAAS,eAGjB,EAGArc,EAAG,SAAUmb,EAAMC,EAAOC,GACxB,MAAMqC,EAAQvC,EAAKoC,WACnB,IAAID,EASJ,OAPEA,EADY,KAAVI,EACmB1C,EACF,IAAV0C,EACY1C,EAEA0C,EAAQ,IAAM,EAAI,KAAO,KAGxCtC,GACN,IAAK,IACL,IAAK,KACH,OAAOC,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,cACPuZ,QAAS,eAEb,IAAK,MACH,OAAOhB,EACJmC,UAAUF,EAAoB,CAC7Bxa,MAAO,cACPuZ,QAAS,eAEVoB,cACL,IAAK,QACH,OAAOpC,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,SACPuZ,QAAS,eAGb,QACE,OAAOhB,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,OACPuZ,QAAS,eAGjB,EAGAhH,EAAG,SAAU8F,EAAMC,EAAOC,GACxB,MAAMqC,EAAQvC,EAAKoC,WACnB,IAAID,EAWJ,OATEA,EADEI,GAAS,GACU1C,EACZ0C,GAAS,GACG1C,EACZ0C,GAAS,EACG1C,EAEAA,EAGfI,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OAAOC,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,cACPuZ,QAAS,eAEb,IAAK,QACH,OAAOhB,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,SACPuZ,QAAS,eAGb,QACE,OAAOhB,EAASmC,UAAUF,EAAoB,CAC5Cxa,MAAO,OACPuZ,QAAS,eAGjB,EAGAzU,EAAG,SAAUuT,EAAMC,EAAOC,GACxB,GAAc,OAAVD,EAAgB,CAClB,IAAIsC,EAAQvC,EAAKoC,WAAa,GAE9B,OADc,IAAVG,IAAaA,EAAQ,IAClBrC,EAASI,cAAciC,EAAO,CAAEjhB,KAAM,QAC/C,CAEA,OAAO,IAAgBmL,EAAEuT,EAAMC,EACjC,EAGAuC,EAAG,SAAUxC,EAAMC,EAAOC,GACxB,MAAc,OAAVD,EACKC,EAASI,cAAcN,EAAKoC,WAAY,CAAE9gB,KAAM,SAGlD,IAAgBkhB,EAAExC,EAAMC,EACjC,EAGAwC,EAAG,SAAUzC,EAAMC,EAAOC,GACxB,MAAMqC,EAAQvC,EAAKoC,WAAa,GAEhC,MAAc,OAAVnC,EACKC,EAASI,cAAciC,EAAO,CAAEjhB,KAAM,UAGxC,OAAgBihB,EAAOtC,EAAM5X,OACtC,EAGAqa,EAAG,SAAU1C,EAAMC,EAAOC,GACxB,IAAIqC,EAAQvC,EAAKoC,WAGjB,OAFc,IAAVG,IAAaA,EAAQ,IAEX,OAAVtC,EACKC,EAASI,cAAciC,EAAO,CAAEjhB,KAAM,UAGxC,OAAgBihB,EAAOtC,EAAM5X,OACtC,EAGAsa,EAAG,SAAU3C,EAAMC,EAAOC,GACxB,MAAc,OAAVD,EACKC,EAASI,cAAcN,EAAK4C,aAAc,CAAEthB,KAAM,WAGpD,IAAgBqhB,EAAE3C,EAAMC,EACjC,EAGAzX,EAAG,SAAUwX,EAAMC,EAAOC,GACxB,MAAc,OAAVD,EACKC,EAASI,cAAcN,EAAK6C,aAAc,CAAEvhB,KAAM,WAGpD,IAAgBkH,EAAEwX,EAAMC,EACjC,EAGA6C,EAAG,SAAU9C,EAAMC,GACjB,OAAO,IAAgB6C,EAAE9C,EAAMC,EACjC,EAGA8C,EAAG,SAAU/C,EAAMC,EAAO+C,GACxB,MAAMC,EAAiBjD,EAAKkD,oBAE5B,GAAuB,IAAnBD,EACF,MAAO,IAGT,OAAQhD,GAEN,IAAK,IACH,OAAOkD,EAAkCF,GAK3C,IAAK,OACL,IAAK,KACH,OAAOG,EAAeH,GAOxB,QACE,OAAOG,EAAeH,EAAgB,KAE5C,EAGA9e,EAAG,SAAU6b,EAAMC,EAAO+C,GACxB,MAAMC,EAAiBjD,EAAKkD,oBAE5B,OAAQjD,GAEN,IAAK,IACH,OAAOkD,EAAkCF,GAK3C,IAAK,OACL,IAAK,KACH,OAAOG,EAAeH,GAOxB,QACE,OAAOG,EAAeH,EAAgB,KAE5C,EAGAI,EAAG,SAAUrD,EAAMC,EAAO+C,GACxB,MAAMC,EAAiBjD,EAAKkD,oBAE5B,OAAQjD,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQqD,EAAoBL,EAAgB,KAGrD,QACE,MAAO,MAAQG,EAAeH,EAAgB,KAEpD,EAGAM,EAAG,SAAUvD,EAAMC,EAAO+C,GACxB,MAAMC,EAAiBjD,EAAKkD,oBAE5B,OAAQjD,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,MAAO,MAAQqD,EAAoBL,EAAgB,KAGrD,QACE,MAAO,MAAQG,EAAeH,EAAgB,KAEpD,EAGA7Q,EAAG,SAAU4N,EAAMC,EAAO+C,GACxB,MAAMQ,EAAYzc,KAAK0c,MAAMzD,EAAK/e,UAAY,KAC9C,OAAO,OAAgBuiB,EAAWvD,EAAM5X,OAC1C,EAGAqb,EAAG,SAAU1D,EAAMC,EAAO+C,GACxB,MAAMQ,EAAYxD,EAAK/e,UACvB,OAAO,OAAgBuiB,EAAWvD,EAAM5X,OAC1C,GAGF,SAASib,EAAoBjM,EAAQsM,EAAY,IAC/C,MAAMC,EAAOvM,EAAS,EAAI,IAAM,IAC1BwM,EAAY9c,KAAKuL,IAAI+E,GACrBkL,EAAQxb,KAAK0c,MAAMI,EAAY,IAC/BC,EAAUD,EAAY,GAC5B,OAAgB,IAAZC,EACKF,EAAO3C,OAAOsB,GAEhBqB,EAAO3C,OAAOsB,GAASoB,GAAY,OAAgBG,EAAS,EACrE,CAEA,SAASX,EAAkC9L,EAAQsM,GACjD,GAAItM,EAAS,IAAO,EAAG,CAErB,OADaA,EAAS,EAAI,IAAM,MAClB,OAAgBtQ,KAAKuL,IAAI+E,GAAU,GAAI,EACvD,CACA,OAAO+L,EAAe/L,EAAQsM,EAChC,CAEA,SAASP,EAAe/L,EAAQsM,EAAY,IAC1C,MAAMC,EAAOvM,EAAS,EAAI,IAAM,IAC1BwM,EAAY9c,KAAKuL,IAAI+E,GAG3B,OAAOuM,GAFO,OAAgB7c,KAAK0c,MAAMI,EAAY,IAAK,GAEpCF,GADN,OAAgBE,EAAY,GAAI,EAElD,qDCxvBO,MAAME,EAAkB,CAE7B,CAAA3f,CAAE4b,EAAMC,GAUN,MAAMI,EAAaL,EAAKI,cAElB/f,EAAOggB,EAAa,EAAIA,EAAa,EAAIA,EAC/C,OAAO,OAA0B,OAAVJ,EAAiB5f,EAAO,IAAMA,EAAM4f,EAAM5X,OACnE,EAGA,CAAA+Y,CAAEpB,EAAMC,GACN,MAAM9f,EAAQ6f,EAAKgB,WACnB,MAAiB,MAAVf,EAAgBgB,OAAO9gB,EAAQ,IAAK,OAAgBA,EAAQ,EAAG,EACxE,EAGAqhB,EAAC,CAACxB,EAAMC,KACC,OAAgBD,EAAKyB,UAAWxB,EAAM5X,QAI/C,CAAAzD,CAAEob,EAAMC,GACN,MAAMkC,EAAqBnC,EAAKoC,WAAa,IAAM,EAAI,KAAO,KAE9D,OAAQnC,GACN,IAAK,IACL,IAAK,KACH,OAAOkC,EAAmB6B,cAC5B,IAAK,MACH,OAAO7B,EACT,IAAK,QACH,OAAOA,EAAmB,GAE5B,QACE,MAA8B,OAAvBA,EAA8B,OAAS,OAEpD,EAGA1V,EAAC,CAACuT,EAAMC,KACC,OAAgBD,EAAKoC,WAAa,IAAM,GAAInC,EAAM5X,QAI3Dma,EAAC,CAACxC,EAAMC,KACC,OAAgBD,EAAKoC,WAAYnC,EAAM5X,QAIhDsa,EAAC,CAAC3C,EAAMC,KACC,OAAgBD,EAAK4C,aAAc3C,EAAM5X,QAIlDG,EAAC,CAACwX,EAAMC,KACC,OAAgBD,EAAK6C,aAAc5C,EAAM5X,QAIlD,CAAAya,CAAE9C,EAAMC,GACN,MAAMgE,EAAiBhE,EAAM5X,OACvB6b,EAAelE,EAAKmE,kBACpBC,EAAoBrd,KAAK0c,MAC7BS,EAAend,KAAKmN,IAAI,GAAI+P,EAAiB,IAE/C,OAAO,OAAgBG,EAAmBnE,EAAM5X,OAClD,qCC1FF,MAAMgc,EAAoB,CAACC,EAASC,KAClC,OAAQD,GACN,IAAK,IACH,OAAOC,EAAWvE,KAAK,CAAErY,MAAO,UAClC,IAAK,KACH,OAAO4c,EAAWvE,KAAK,CAAErY,MAAO,WAClC,IAAK,MACH,OAAO4c,EAAWvE,KAAK,CAAErY,MAAO,SAElC,QACE,OAAO4c,EAAWvE,KAAK,CAAErY,MAAO,SACpC,EAGI6c,EAAoB,CAACF,EAASC,KAClC,OAAQD,GACN,IAAK,IACH,OAAOC,EAAWpjB,KAAK,CAAEwG,MAAO,UAClC,IAAK,KACH,OAAO4c,EAAWpjB,KAAK,CAAEwG,MAAO,WAClC,IAAK,MACH,OAAO4c,EAAWpjB,KAAK,CAAEwG,MAAO,SAElC,QACE,OAAO4c,EAAWpjB,KAAK,CAAEwG,MAAO,SACpC,EAmCW8c,EAAiB,CAC5BhN,EAAG+M,EACHE,EAlC4B,CAACJ,EAASC,KACtC,MAAMI,EAAcL,EAAQM,MAAM,cAAgB,GAC5CC,EAAcF,EAAY,GAC1BG,EAAcH,EAAY,GAEhC,IAAKG,EACH,OAAOT,EAAkBC,EAASC,GAGpC,IAAIQ,EAEJ,OAAQF,GACN,IAAK,IACHE,EAAiBR,EAAWS,SAAS,CAAErd,MAAO,UAC9C,MACF,IAAK,KACHod,EAAiBR,EAAWS,SAAS,CAAErd,MAAO,WAC9C,MACF,IAAK,MACHod,EAAiBR,EAAWS,SAAS,CAAErd,MAAO,SAC9C,MAEF,QACEod,EAAiBR,EAAWS,SAAS,CAAErd,MAAO,SAIlD,OAAOod,EACJE,QAAQ,WAAYZ,EAAkBQ,EAAaN,IACnDU,QAAQ,WAAYT,EAAkBM,EAAaP,GAAY,qBCzD7D,SAASW,EAAkBC,GAChC,OAAQ1F,IACN,MACMnG,GADQ6L,EAASpe,KAAKoe,GAAUpe,KAAK0c,OACtBhE,GAErB,OAAkB,IAAXnG,EAAe,EAAIA,CAAM,CAEpC,qECMO,SAAS8L,EAAgCpF,GAC9C,MAAM1f,GAAQ,OAAO0f,GACfqF,EAAU,IAAIvkB,KAClBA,KAAKwkB,IACHhlB,EAAM8f,cACN9f,EAAM0gB,WACN1gB,EAAMmhB,UACNnhB,EAAM8hB,WACN9hB,EAAMsiB,aACNtiB,EAAMuiB,aACNviB,EAAM6jB,oBAIV,OADAkB,EAAQE,eAAejlB,EAAM8f,gBACrBJ,GAAQqF,CAClB,wDC5BA,MAAMG,EAAmB,OACnBC,EAAkB,OAElBC,EAAc,CAAC,IAAK,KAAM,KAAM,QAE/B,SAASC,EAA0B1F,GACxC,OAAOuF,EAAiBI,KAAK3F,EAC/B,CAEO,SAAS4F,EAAyB5F,GACvC,OAAOwF,EAAgBG,KAAK3F,EAC9B,CAEO,SAAS6F,EAA0B7F,EAAO/e,EAAQ6kB,GACvD,MAAMC,EAKR,SAAiB/F,EAAO/e,EAAQ6kB,GAC9B,MAAME,EAAuB,MAAbhG,EAAM,GAAa,QAAU,oBAC7C,MAAO,SAASA,EAAMqC,gCAAgCrC,aAAiB/e,uBAA4B+kB,oBAA0BF,kFAC/H,CARmBG,CAAQjG,EAAO/e,EAAQ6kB,GAExC,GADAtf,QAAQC,KAAKsf,GACTN,EAAYzG,SAASgB,GAAQ,MAAM,IAAIkG,WAAWH,EACxD,gECMO,SAASI,EAAQpG,EAAM3e,GAC5B,MAAMf,GAAQ,OAAO0f,GACrB,OAAI9P,MAAM7O,IAAgB,OAAc2e,EAAM9K,KACzC7T,GAILf,EAAM+lB,QAAQ/lB,EAAMmhB,UAAYpgB,GACzBf,GAHEA,CAIX,iECTO,SAASgmB,EAAStG,EAAM3e,GAC7B,OAAO,OAAgB2e,EAAM3e,EAAS,KACxC,gECFO,SAASklB,EAAgBvG,EAAM3e,GACpC,MAAMmiB,IAAa,OAAOxD,GAC1B,OAAO,OAAcA,EAAMwD,EAAYniB,EACzC,iECHO,SAASmlB,EAAWxG,EAAM3e,GAC/B,OAAO,OAAgB2e,EAAM3e,EAAS,KACxC,gECEO,SAASolB,EAAUzG,EAAM3e,GAC9B,MAAMf,GAAQ,OAAO0f,GACrB,GAAI9P,MAAM7O,GAAS,OAAO,OAAc2e,EAAM9K,KAC9C,IAAK7T,EAEH,OAAOf,EAET,MAAMomB,EAAapmB,EAAMmhB,UAUnBkF,GAAoB,OAAc3G,EAAM1f,EAAMW,WACpD0lB,EAAkBC,SAAStmB,EAAM0gB,WAAa3f,EAAS,EAAG,GAE1D,OAAIqlB,GADgBC,EAAkBlF,UAI7BkF,GASPrmB,EAAMumB,YACJF,EAAkBvG,cAClBuG,EAAkB3F,WAClB0F,GAEKpmB,EAEX,oDC5CO,SAASwmB,EAAY9G,EAAM3e,GAChC,MAAM0lB,EAAkB,EAAT1lB,EACf,OAAO,OAAU2e,EAAM+G,EACzB,qDCHO,SAASC,EAAWhH,EAAM3e,GAC/B,OAAO,OAAgB2e,EAAe,IAAT3e,EAC/B,qDCFO,SAAS4lB,EAASjH,EAAM3e,GAC7B,MAAM6lB,EAAgB,EAAT7lB,EACb,OAAO,OAAQ2e,EAAMkH,EACvB,qDCHO,SAASC,EAASnH,EAAM3e,GAC7B,OAAO,OAAU2e,EAAe,GAAT3e,EACzB,qDCYO,SAAS+lB,EAAWC,EAAUC,GACnC,MAAMC,GAAY,OAAOF,GACnBG,GAAa,OAAOF,GAEpB/lB,EAAOgmB,EAAUtmB,UAAYumB,EAAWvmB,UAE9C,OAAIM,EAAO,GACD,EACCA,EAAO,EACT,EAGAA,CAEX,0ECGuBwF,KAAKmN,IAAI,GAAI,GA/B7B,MAsDMuT,EAAqB,OAOrBC,EAAoB,MAOpBC,EAAuB,IAOvBC,EAAqB,KAOrBC,EAAuB,qBC1E7B,SAASC,EAAc9H,EAAMrf,GAClC,OAAIqf,aAAgBlf,KACX,IAAIkf,EAAK+H,YAAYpnB,GAErB,IAAIG,KAAKH,EAEpB,4FCAO,SAASqnB,EAAyBX,EAAUC,GACjD,MAAMW,GAAiB,OAAWZ,GAC5Ba,GAAkB,OAAWZ,GAE7Ba,GACHF,GAAiB,OAAgCA,GAC9CG,GACHF,GAAkB,OAAgCA,GAKrD,OAAOnhB,KAAKshB,OAAOF,EAAgBC,GAAkB,KACvD,qDCxBO,SAASE,EAA2BjB,EAAUC,GACnD,MAAMC,GAAY,OAAOF,GACnBG,GAAa,OAAOF,GAK1B,OAAkB,IAHDC,EAAUnH,cAAgBoH,EAAWpH,gBACpCmH,EAAUvG,WAAawG,EAAWxG,WAGtD,qDCRO,SAASuH,EAA0BlB,EAAUC,GAClD,MAAMC,GAAY,OAAOF,GACnBG,GAAa,OAAOF,GAE1B,OAAOC,EAAUnH,cAAgBoH,EAAWpH,aAC9C,iEC2BO,SAASoI,EAAiBnB,EAAUC,GACzC,MAAMC,GAAY,OAAOF,GACnBG,GAAa,OAAOF,GAEpB1D,EAAO6E,EAAgBlB,EAAWC,GAClCkB,EAAa3hB,KAAKuL,KAAI,OAAyBiV,EAAWC,IAEhED,EAAUlB,QAAQkB,EAAU9F,UAAYmC,EAAO8E,GAI/C,MAGMpP,EAASsK,GAAQ8E,EAHE5kB,OACvB2kB,EAAgBlB,EAAWC,MAAiB5D,IAI9C,OAAkB,IAAXtK,EAAe,EAAIA,CAC5B,CAMA,SAASmP,EAAgBpB,EAAUC,GACjC,MAAM/lB,EACJ8lB,EAASjH,cAAgBkH,EAAUlH,eACnCiH,EAASrG,WAAasG,EAAUtG,YAChCqG,EAAS5F,UAAY6F,EAAU7F,WAC/B4F,EAASjF,WAAakF,EAAUlF,YAChCiF,EAASzE,aAAe0E,EAAU1E,cAClCyE,EAASxE,aAAeyE,EAAUzE,cAClCwE,EAASlD,kBAAoBmD,EAAUnD,kBAEzC,OAAI5iB,EAAO,GACD,EACCA,EAAO,EACT,EAGAA,CAEX,6EClEO,SAASonB,EAAkBtB,EAAUC,EAAWtmB,GACrD,MAAMO,GACJ,OAAyB8lB,EAAUC,GAAa,KAClD,OAAO,OAAkBtmB,GAAS4nB,eAA3B,CAA2CrnB,EACpD,qDCVO,SAASsnB,EAAyBxB,EAAUC,GACjD,QAAQ,OAAOD,KAAa,OAAOC,EACrC,6ECYO,SAASwB,EAAoBzB,EAAUC,EAAWtmB,GACvD,MAAMO,GACJ,OAAyB8lB,EAAUC,GAAa,KAClD,OAAO,OAAkBtmB,GAAS4nB,eAA3B,CAA2CrnB,EACpD,yFCnBO,SAASwnB,EAAmB1B,EAAUC,GAC3C,MAAMC,GAAY,OAAOF,GACnBG,GAAa,OAAOF,GAEpB1D,GAAO,OAAW2D,EAAWC,GAC7BkB,EAAa3hB,KAAKuL,KACtB,OAA2BiV,EAAWC,IAExC,IAAIlO,EAGJ,GAAIoP,EAAa,EACfpP,EAAS,MACJ,CACwB,IAAzBiO,EAAUvG,YAAoBuG,EAAU9F,UAAY,IAGtD8F,EAAUlB,QAAQ,IAGpBkB,EAAUX,SAASW,EAAUvG,WAAa4C,EAAO8E,GAIjD,IAAIM,GAAqB,OAAWzB,EAAWC,MAAiB5D,GAI9D,QAAiB,OAAOyD,KACT,IAAfqB,GACqC,KAArC,OAAWrB,EAAUG,KAErBwB,GAAqB,GAGvB1P,EAASsK,GAAQ8E,EAAa5kB,OAAOklB,GACvC,CAGA,OAAkB,IAAX1P,EAAe,EAAIA,CAC5B,iECrCO,SAAS2P,EAAqB5B,EAAUC,EAAWtmB,GACxD,MAAMO,GAAO,OAAmB8lB,EAAUC,GAAa,EACvD,OAAO,OAAkBtmB,GAAS4nB,eAA3B,CAA2CrnB,EACpD,gECCO,SAAS2nB,EAAoB7B,EAAUC,EAAWtmB,GACvD,MAAMO,GAAO,OAAyB8lB,EAAUC,GAAa,IAC7D,OAAO,OAAkBtmB,GAAS4nB,eAA3B,CAA2CrnB,EACpD,iECcO,SAAS4nB,EAAkB9B,EAAUC,EAAWtmB,GACrD,MAAMO,GAAO,OAAiB8lB,EAAUC,GAAa,EACrD,OAAO,OAAkBtmB,GAAS4nB,eAA3B,CAA2CrnB,EACpD,6EC5BO,SAAS6nB,EAAkB/B,EAAUC,GAC1C,MAAMC,GAAY,OAAOF,GACnBG,GAAa,OAAOF,GAEpB1D,GAAO,OAAW2D,EAAWC,GAC7BkB,EAAa3hB,KAAKuL,KAAI,OAA0BiV,EAAWC,IAIjED,EAAUV,YAAY,MACtBW,EAAWX,YAAY,MAIvB,MACMvN,EAASsK,GAAQ8E,KADG,OAAWnB,EAAWC,MAAiB5D,IAIjE,OAAkB,IAAXtK,EAAe,EAAIA,CAC5B,qDCrBO,SAAS+P,EAASrJ,GACvB,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMgpB,SAAS,GAAI,GAAI,GAAI,KACpBhpB,CACT,qDCJO,SAASipB,EAAUvJ,GACxB,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMkpB,WAAW,GAAI,GAAI,KAClBlpB,CACT,qDCJO,SAASmpB,EAAYzJ,GAC1B,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMopB,WAAW,GAAI,KACdppB,CACT,qDCJO,SAASqpB,EAAW3J,GACzB,MAAM1f,GAAQ,OAAO0f,GACf7f,EAAQG,EAAM0gB,WAGpB,OAFA1gB,EAAMumB,YAAYvmB,EAAM8f,cAAejgB,EAAQ,EAAG,GAClDG,EAAMgpB,SAAS,GAAI,GAAI,GAAI,KACpBhpB,CACT,qDCNO,SAASspB,EAAa5J,GAC3B,MAAM1f,GAAQ,OAAO0f,GACf6J,EAAevpB,EAAM0gB,WACrB7gB,EAAQ0pB,EAAgBA,EAAe,EAAK,EAGlD,OAFAvpB,EAAMsmB,SAASzmB,EAAO,GACtBG,EAAMgpB,SAAS,GAAI,GAAI,GAAI,KACpBhpB,CACT,qDCPO,SAASwpB,EAAY9J,GAC1B,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMypB,gBAAgB,KACfzpB,CACT,iECOO,SAAS0pB,EAAUhK,EAAMhf,GAC9B,MAAM2e,GAAiB,SACjB/d,EACJZ,GAASY,cACTZ,GAASipB,QAAQjpB,SAASY,cAC1B+d,EAAe/d,cACf+d,EAAesK,QAAQjpB,SAASY,cAChC,EAEItB,GAAQ,OAAO0f,GACf/f,EAAMK,EAAMwhB,SACZvgB,EAAuC,GAA/BtB,EAAM2B,GAAgB,EAAI,IAAU3B,EAAM2B,GAIxD,OAFAtB,EAAM+lB,QAAQ/lB,EAAMmhB,UAAYlgB,GAChCjB,EAAMgpB,SAAS,GAAI,GAAI,GAAI,KACpBhpB,CACT,qDC3BO,SAAS4pB,EAAUlK,GACxB,MAAM1f,GAAQ,OAAO0f,GACf3f,EAAOC,EAAM8f,cAGnB,OAFA9f,EAAMumB,YAAYxmB,EAAO,EAAG,EAAG,GAC/BC,EAAMgpB,SAAS,GAAI,GAAI,GAAI,KACpBhpB,CACT,4HCDA,MAAM6pB,EACJ,wDAIIC,EAA6B,oCAE7BC,EAAsB,eACtBC,EAAoB,MACpBC,EAAgC,WAsS/B,SAASrpB,EAAO8e,EAAMwK,EAAWxpB,GACtC,MAAM2e,GAAiB,SACjBsK,EAASjpB,GAASipB,QAAUtK,EAAesK,QAAU,IAErDQ,EACJzpB,GAASypB,uBACTzpB,GAASipB,QAAQjpB,SAASypB,uBAC1B9K,EAAe8K,uBACf9K,EAAesK,QAAQjpB,SAASypB,uBAChC,EAEI7oB,EACJZ,GAASY,cACTZ,GAASipB,QAAQjpB,SAASY,cAC1B+d,EAAe/d,cACf+d,EAAesK,QAAQjpB,SAASY,cAChC,EAEI8oB,GAAe,OAAO1K,GAE5B,KAAK,OAAQ0K,GACX,MAAM,IAAIvE,WAAW,sBAGvB,IAAI9I,EAAQmN,EACT5F,MAAMwF,GACNO,KAAKC,IACJ,MAAMC,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,GAA6C,MAAnBA,EAAwB,CAEpD,OAAOC,EADe,IAAeD,IAChBD,EAAWX,EAAO1F,WACzC,CACA,OAAOqG,CAAS,IAEjBvf,KAAK,IACLuZ,MAAMuF,GACNQ,KAAKC,IAEJ,GAAkB,OAAdA,EACF,MAAO,CAAEG,SAAS,EAAOpqB,MAAO,KAGlC,MAAMkqB,EAAiBD,EAAU,GACjC,GAAuB,MAAnBC,EACF,MAAO,CAAEE,SAAS,EAAOpqB,MAAOqqB,EAAmBJ,IAGrD,GAAI,IAAWC,GACb,MAAO,CAAEE,SAAS,EAAMpqB,MAAOiqB,GAGjC,GAAIC,EAAejG,MAAM2F,GACvB,MAAM,IAAIpE,WACR,iEACE0E,EACA,KAIN,MAAO,CAAEE,SAAS,EAAOpqB,MAAOiqB,EAAW,IAI3CX,EAAO/J,SAAS+K,eAClB5N,EAAQ4M,EAAO/J,SAAS+K,aAAaP,EAAcrN,IAGrD,MAAM6N,EAAmB,CACvBT,wBACA7oB,eACAqoB,UAGF,OAAO5M,EACJsN,KAAKQ,IACJ,IAAKA,EAAKJ,QAAS,OAAOI,EAAKxqB,MAE/B,MAAMsf,EAAQkL,EAAKxqB,QAGfK,GAASoqB,8BACT,QAAyBnL,KACzBjf,GAASqqB,+BACT,QAA0BpL,MAE5B,QAA0BA,EAAOuK,EAAWvJ,OAAOjB,IAIrD,OAAOsL,EADW,IAAWrL,EAAM,KAClByK,EAAczK,EAAOgK,EAAO/J,SAAUgL,EAAiB,IAEzE7f,KAAK,GACV,CAEA,SAAS2f,EAAmBjF,GAC1B,MAAMwF,EAAUxF,EAAMnB,MAAMyF,GAE5B,OAAKkB,EAIEA,EAAQ,GAAGtG,QAAQqF,EAAmB,KAHpCvE,CAIX,6ECzZO,SAASyF,EAAaxL,GAC3B,MAAM1f,GAAQ,OAAO0f,GAGrB,OAFa,OAAyB1f,GAAO,OAAYA,IAChC,CAE3B,oDCFO,SAASsf,IACd,OAAOtY,OAAOiQ,OAAO,CAAC,GAAG,SAC3B,qDCJO,SAASkU,EAAUzL,GAExB,IAAI/f,GADU,OAAO+f,GACL8B,SAMhB,OAJY,IAAR7hB,IACFA,EAAM,GAGDA,CACT,yFCPO,SAASyrB,EAAW1L,GACzB,MAAM1f,GAAQ,OAAO0f,GACfze,IAAQ,OAAejB,KAAU,OAAmBA,GAK1D,OAAOyG,KAAKshB,MAAM9mB,EAAO,MAAsB,CACjD,4ECRO,SAASoqB,EAAe3L,GAC7B,MAAM1f,GAAQ,OAAO0f,GACf3f,EAAOC,EAAM8f,cAEbwL,GAA4B,OAAc5L,EAAM,GACtD4L,EAA0B/E,YAAYxmB,EAAO,EAAG,EAAG,GACnDurB,EAA0BtC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMuC,GAAkB,OAAeD,GAEjCE,GAA4B,OAAc9L,EAAM,GACtD8L,EAA0BjF,YAAYxmB,EAAM,EAAG,GAC/CyrB,EAA0BxC,SAAS,EAAG,EAAG,EAAG,GAC5C,MAAMyC,GAAkB,OAAeD,GAEvC,OAAIxrB,EAAMW,WAAa4qB,EAAgB5qB,UAC9BZ,EAAO,EACLC,EAAMW,WAAa8qB,EAAgB9qB,UACrCZ,EAEAA,EAAO,CAElB,yFCDO,SAAS2rB,EAAQhM,EAAMhf,GAC5B,MAAMV,GAAQ,OAAO0f,GACfze,IAAQ,OAAYjB,EAAOU,KAAY,OAAgBV,EAAOU,GAKpE,OAAO+F,KAAKshB,MAAM9mB,EAAO,MAAsB,CACjD,uFCTO,SAAS0qB,EAAYjM,EAAMhf,GAChC,MAAMV,GAAQ,OAAO0f,GACf3f,EAAOC,EAAM8f,cAEbT,GAAiB,SACjB8K,EACJzpB,GAASypB,uBACTzpB,GAASipB,QAAQjpB,SAASypB,uBAC1B9K,EAAe8K,uBACf9K,EAAesK,QAAQjpB,SAASypB,uBAChC,EAEIyB,GAAsB,OAAclM,EAAM,GAChDkM,EAAoBrF,YAAYxmB,EAAO,EAAG,EAAGoqB,GAC7CyB,EAAoB5C,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMuC,GAAkB,OAAYK,EAAqBlrB,GAEnDmrB,GAAsB,OAAcnM,EAAM,GAChDmM,EAAoBtF,YAAYxmB,EAAM,EAAGoqB,GACzC0B,EAAoB7C,SAAS,EAAG,EAAG,EAAG,GACtC,MAAMyC,GAAkB,OAAYI,EAAqBnrB,GAEzD,OAAIV,EAAMW,WAAa4qB,EAAgB5qB,UAC9BZ,EAAO,EACLC,EAAMW,WAAa8qB,EAAgB9qB,UACrCZ,EAEAA,EAAO,CAElB,mBC1CO,SAAS+rB,EAAOzrB,GACrB,OACEA,aAAiBG,MACC,iBAAVH,GACoC,kBAA1C2G,OAAO+kB,UAAU7iB,SAAS8iB,KAAK3rB,EAErC,6FCfO,SAAS4rB,EAAiBvM,GAC/B,MAAM1f,GAAQ,OAAO0f,GACrB,QAAQ,OAAS1f,MAAY,OAAWA,EAC1C,+DCUO,SAASksB,EAAQxM,GACtB,KAAK,OAAOA,IAAyB,iBAATA,EAC1B,OAAO,EAET,MAAM1f,GAAQ,OAAO0f,GACrB,OAAQ9P,MAAMpM,OAAOxD,GACvB,oBC1CO,SAASmsB,EAAkB1O,GAChC,MAAO,CAAC/c,EAAU,CAAC,KAEjB,MAAM2G,EAAQ3G,EAAQ2G,MAAQsZ,OAAOjgB,EAAQ2G,OAASoW,EAAK2O,aAE3D,OADe3O,EAAKtd,QAAQkH,IAAUoW,EAAKtd,QAAQsd,EAAK2O,aAC3C,CAEjB,oCCkCO,SAASC,EAAgB5O,GAC9B,MAAO,CAACpd,EAAOK,KAGb,IAAI4rB,EACJ,GAAgB,gBAHA5rB,GAASkgB,QAAUD,OAAOjgB,EAAQkgB,SAAW,eAG7BnD,EAAK8O,iBAAkB,CACrD,MAAMH,EAAe3O,EAAK+O,wBAA0B/O,EAAK2O,aACnD/kB,EAAQ3G,GAAS2G,MAAQsZ,OAAOjgB,EAAQ2G,OAAS+kB,EAEvDE,EACE7O,EAAK8O,iBAAiBllB,IAAUoW,EAAK8O,iBAAiBH,EAC1D,KAAO,CACL,MAAMA,EAAe3O,EAAK2O,aACpB/kB,EAAQ3G,GAAS2G,MAAQsZ,OAAOjgB,EAAQ2G,OAASoW,EAAK2O,aAE5DE,EAAc7O,EAAKgP,OAAOplB,IAAUoW,EAAKgP,OAAOL,EAClD,CAIA,OAAOE,EAHO7O,EAAKiP,iBAAmBjP,EAAKiP,iBAAiBrsB,GAASA,EAG5C,CAE7B,oCC/DO,SAASssB,EAAalP,GAC3B,MAAO,CAACzS,EAAQtK,EAAU,CAAC,KACzB,MAAM2G,EAAQ3G,EAAQ2G,MAEhBulB,EACHvlB,GAASoW,EAAKoP,cAAcxlB,IAC7BoW,EAAKoP,cAAcpP,EAAKqP,mBACpBzI,EAAcrZ,EAAOsZ,MAAMsI,GAEjC,IAAKvI,EACH,OAAO,KAET,MAAM0I,EAAgB1I,EAAY,GAE5B2I,EACH3lB,GAASoW,EAAKuP,cAAc3lB,IAC7BoW,EAAKuP,cAAcvP,EAAKwP,mBAEpBhnB,EAAMiV,MAAMgS,QAAQF,GA+B9B,SAAmBG,EAAOC,GACxB,IAAK,IAAInnB,EAAM,EAAGA,EAAMknB,EAAMplB,OAAQ9B,IACpC,GAAImnB,EAAUD,EAAMlnB,IAClB,OAAOA,EAGX,MACF,CArCQonB,CAAUL,GAAgBhJ,GAAYA,EAAQsB,KAAKyH,KAkB3D,SAAiBO,EAAQF,GACvB,IAAK,MAAMnnB,KAAOqnB,EAChB,GACEtmB,OAAO+kB,UAAUwB,eAAevB,KAAKsB,EAAQrnB,IAC7CmnB,EAAUE,EAAOrnB,IAEjB,OAAOA,EAGX,MACF,CA1BQunB,CAAQR,GAAgBhJ,GAAYA,EAAQsB,KAAKyH,KAErD,IAAI1sB,EAEJA,EAAQod,EAAKgQ,cAAgBhQ,EAAKgQ,cAAcxnB,GAAOA,EACvD5F,EAAQK,EAAQ+sB,cAEZ/sB,EAAQ+sB,cAAcptB,GACtBA,EAIJ,MAAO,CAAEA,QAAOqtB,KAFH1iB,EAAOvG,MAAMsoB,EAAchlB,QAElB,CAE1B,oCCnCO,SAAS4lB,EAAoBlQ,GAClC,MAAO,CAACzS,EAAQtK,EAAU,CAAC,KACzB,MAAM2jB,EAAcrZ,EAAOsZ,MAAM7G,EAAKmP,cACtC,IAAKvI,EAAa,OAAO,KACzB,MAAM0I,EAAgB1I,EAAY,GAE5BuJ,EAAc5iB,EAAOsZ,MAAM7G,EAAKoQ,cACtC,IAAKD,EAAa,OAAO,KACzB,IAAIvtB,EAAQod,EAAKgQ,cACbhQ,EAAKgQ,cAAcG,EAAY,IAC/BA,EAAY,GAGhBvtB,EAAQK,EAAQ+sB,cAAgB/sB,EAAQ+sB,cAAcptB,GAASA,EAI/D,MAAO,CAAEA,QAAOqtB,KAFH1iB,EAAOvG,MAAMsoB,EAAchlB,QAElB,CAE1B,qHCLO,MAAM+lB,EAAO,CAClBC,KAAM,QACNC,eAAgB,IAChB/J,WAAY,IACZgK,eAAgB,IAChBrO,SAAU,IACV0E,MAAO,IACP5jB,QAAS,CACPY,aAAc,EACd6oB,sBAAuB,uCCvB3B,MAAM+D,EAAuB,CAC3BC,iBAAkB,CAChBC,IAAK,qBACLC,MAAO,+BAGTC,SAAU,CACRF,IAAK,WACLC,MAAO,qBAGTE,YAAa,gBAEbC,iBAAkB,CAChBJ,IAAK,qBACLC,MAAO,+BAGTI,SAAU,CACRL,IAAK,WACLC,MAAO,qBAGTK,YAAa,CACXN,IAAK,eACLC,MAAO,yBAGTM,OAAQ,CACNP,IAAK,SACLC,MAAO,mBAGTO,MAAO,CACLR,IAAK,QACLC,MAAO,kBAGTQ,YAAa,CACXT,IAAK,eACLC,MAAO,yBAGTS,OAAQ,CACNV,IAAK,SACLC,MAAO,mBAGTU,aAAc,CACZX,IAAK,gBACLC,MAAO,0BAGTW,QAAS,CACPZ,IAAK,UACLC,MAAO,oBAGTY,YAAa,CACXb,IAAK,eACLC,MAAO,yBAGTa,OAAQ,CACNd,IAAK,SACLC,MAAO,mBAGTc,WAAY,CACVf,IAAK,cACLC,MAAO,wBAGTe,aAAc,CACZhB,IAAK,gBACLC,MAAO,2BAIEL,EAAiB,CAACrO,EAAOvU,EAAO1K,KAC3C,IAAIsY,EAEJ,MAAMqW,EAAanB,EAAqBvO,GASxC,OAPE3G,EADwB,iBAAfqW,EACAA,EACU,IAAVjkB,EACAikB,EAAWjB,IAEXiB,EAAWhB,MAAM1J,QAAQ,YAAavZ,EAAMlC,YAGnDxI,GAAS4uB,UACP5uB,EAAQ6uB,YAAc7uB,EAAQ6uB,WAAa,EACtC,MAAQvW,EAERA,EAAS,OAIbA,CAAM,qDCjGf,MAqBaiL,EAAa,CACxBvE,MAAM,OAAkB,CACtBvf,QAvBgB,CAClBqvB,KAAM,mBACNC,KAAM,aACNC,OAAQ,WACRC,MAAO,cAoBLvD,aAAc,SAGhBvrB,MAAM,OAAkB,CACtBV,QArBgB,CAClBqvB,KAAM,iBACNC,KAAM,cACNC,OAAQ,YACRC,MAAO,UAkBLvD,aAAc,SAGhB1H,UAAU,OAAkB,CAC1BvkB,QAnBoB,CACtBqvB,KAAM,yBACNC,KAAM,yBACNC,OAAQ,qBACRC,MAAO,sBAgBLvD,aAAc,6CCpClB,MAAMwD,EAAuB,CAC3BC,SAAU,qBACVC,UAAW,mBACXC,MAAO,eACPC,SAAU,kBACVC,SAAU,cACV5B,MAAO,KAGIJ,EAAiB,CAACtO,EAAO3f,EAAOkwB,EAAWC,IACtDP,EAAqBjQ,sDCRvB,MA0JaC,EAAW,CACtBI,cAzBoB,CAACoQ,EAAaD,KAClC,MAAMhR,EAAS3b,OAAO4sB,GAShBC,EAASlR,EAAS,IACxB,GAAIkR,EAAS,IAAMA,EAAS,GAC1B,OAAQA,EAAS,IACf,KAAK,EACH,OAAOlR,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAClB,KAAK,EACH,OAAOA,EAAS,KAGtB,OAAOA,EAAS,IAAI,EAMpBU,KAAK,OAAgB,CACnB4M,OA9Jc,CAChB6D,OAAQ,CAAC,IAAK,KACdC,YAAa,CAAC,KAAM,MACpBC,KAAM,CAAC,gBAAiB,gBA4JtBpE,aAAc,SAGhBtsB,SAAS,OAAgB,CACvB2sB,OA7JkB,CACpB6D,OAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,YAAa,CAAC,KAAM,KAAM,KAAM,MAChCC,KAAM,CAAC,cAAe,cAAe,cAAe,gBA2JlDpE,aAAc,OACdM,iBAAmB5sB,GAAYA,EAAU,IAG3CD,OAAO,OAAgB,CACrB4sB,OAzJgB,CAClB6D,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAChEC,YAAa,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFC,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aA6HApE,aAAc,SAGhBzsB,KAAK,OAAgB,CACnB8sB,OA7Hc,CAChB6D,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACvCX,MAAO,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5CY,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACxDC,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,aAmHApE,aAAc,SAGhBrK,WAAW,OAAgB,CACzB0K,OAnHoB,CACtB6D,OAAQ,CACNG,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETT,YAAa,CACXE,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,SAETR,KAAM,CACJC,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,UACTC,UAAW,YACXC,QAAS,UACTC,MAAO,UAuFP5E,aAAc,OACdG,iBApF8B,CAChC+D,OAAQ,CACNG,GAAI,IACJC,GAAI,IACJC,SAAU,KACVC,KAAM,IACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETT,YAAa,CACXE,GAAI,KACJC,GAAI,KACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,YAETR,KAAM,CACJC,GAAI,OACJC,GAAI,OACJC,SAAU,WACVC,KAAM,OACNC,QAAS,iBACTC,UAAW,mBACXC,QAAS,iBACTC,MAAO,aAwDPxE,uBAAwB,6DCrL5B,MAsFalI,EAAQ,CACnBtE,eAAe,eAAoB,CACjC4M,aAxF8B,wBAyF9BiB,aAxF8B,OAyF9BJ,cAAgBptB,GAAU4c,SAAS5c,EAAO,MAG5Cwf,KAAK,OAAa,CAChBgN,cA3FqB,CACvByD,OAAQ,UACRC,YAAa,6DACbC,KAAM,8DAyFJ1D,kBAAmB,OACnBE,cAxFqB,CACvBiE,IAAK,CAAC,MAAO,YAwFXhE,kBAAmB,QAGrBntB,SAAS,OAAa,CACpB+sB,cAzFyB,CAC3ByD,OAAQ,WACRC,YAAa,YACbC,KAAM,kCAuFJ1D,kBAAmB,OACnBE,cAtFyB,CAC3BiE,IAAK,CAAC,KAAM,KAAM,KAAM,OAsFtBhE,kBAAmB,MACnBQ,cAAgBxU,GAAUA,EAAQ,IAGpCpZ,OAAO,OAAa,CAClBgtB,cAxFuB,CACzByD,OAAQ,eACRC,YAAa,sDACbC,KAAM,6FAsFJ1D,kBAAmB,OACnBE,cArFuB,CACzBsD,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGFW,IAAK,CACH,OACA,MACA,QACA,OACA,QACA,QACA,QACA,OACA,MACA,MACA,MACA,QA0DAhE,kBAAmB,QAGrBttB,KAAK,OAAa,CAChBktB,cA1DqB,CACvByD,OAAQ,YACRX,MAAO,2BACPY,YAAa,kCACbC,KAAM,gEAuDJ1D,kBAAmB,OACnBE,cAtDqB,CACvBsD,OAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACnDW,IAAK,CAAC,OAAQ,MAAO,OAAQ,MAAO,OAAQ,MAAO,SAqDjDhE,kBAAmB,QAGrBlL,WAAW,OAAa,CACtB8K,cAtD2B,CAC7ByD,OAAQ,6DACRW,IAAK,kFAqDHnE,kBAAmB,MACnBE,cApD2B,CAC7BiE,IAAK,CACHR,GAAI,MACJC,GAAI,MACJC,SAAU,OACVC,KAAM,OACNC,QAAS,WACTC,UAAW,aACXC,QAAS,WACTC,MAAO,WA4CP/D,kBAAmB,6ICjGvB,MAAMpD,EACJ,wDAIIC,EAA6B,oCAE7BC,EAAsB,eACtBC,EAAoB,MAEpBkH,EAAsB,KACtBjH,EAAgC,WA2S/B,SAAS7pB,EAAM+wB,EAASjH,EAAWkH,EAAe1wB,GACvD,MAAM2e,GAAiB,SACjBsK,EAASjpB,GAASipB,QAAUtK,EAAesK,QAAU,IAErDQ,EACJzpB,GAASypB,uBACTzpB,GAASipB,QAAQjpB,SAASypB,uBAC1B9K,EAAe8K,uBACf9K,EAAesK,QAAQjpB,SAASypB,uBAChC,EAEI7oB,EACJZ,GAASY,cACTZ,GAASipB,QAAQjpB,SAASY,cAC1B+d,EAAe/d,cACf+d,EAAesK,QAAQjpB,SAASY,cAChC,EAEF,GAAkB,KAAd4oB,EACF,MAAgB,KAAZiH,GACK,OAAOC,IAEP,OAAcA,EAAexc,KAIxC,MAAMyc,EAAe,CACnBlH,wBACA7oB,eACAqoB,UAII2H,EAAU,CAAC,IAAI,MAEfC,EAASrH,EACZ5F,MAAMwF,GACNO,KAAKC,IACJ,MAAMC,EAAiBD,EAAU,GACjC,GAAIC,KAAkB,IAAgB,CAEpC,OAAOC,EADe,IAAeD,IAChBD,EAAWX,EAAO1F,WACzC,CACA,OAAOqG,CAAS,IAEjBvf,KAAK,IACLuZ,MAAMuF,GAEH2H,EAAa,GAEnB,IAAK,IAAI7R,KAAS4R,EAAQ,EAErB7wB,GAASoqB,8BACV,QAAyBnL,KAEzB,QAA0BA,EAAOuK,EAAWiH,IAG3CzwB,GAASqqB,+BACV,QAA0BpL,KAE1B,QAA0BA,EAAOuK,EAAWiH,GAG9C,MAAM5G,EAAiB5K,EAAM,GACvB8R,EAAS,IAAQlH,GACvB,GAAIkH,EAAQ,CACV,MAAM,mBAAEC,GAAuBD,EAC/B,GAAIvW,MAAMgS,QAAQwE,GAAqB,CACrC,MAAMC,EAAoBH,EAAWI,MAClCC,GACCH,EAAmB/S,SAASkT,EAAUlS,QACtCkS,EAAUlS,QAAU4K,IAExB,GAAIoH,EACF,MAAM,IAAI9L,WACR,uCAAuC8L,EAAkBG,qBAAqBnS,uBAGpF,MAAO,GAAkC,MAA9B8R,EAAOC,oBAA8BF,EAAWzpB,OAAS,EAClE,MAAM,IAAI8d,WACR,uCAAuClG,4CAI3C6R,EAAWptB,KAAK,CAAEub,MAAO4K,EAAgBuH,UAAWnS,IAEpD,MAAMiO,EAAc6D,EAAOM,IACzBZ,EACAxR,EACAgK,EAAOrF,MACP+M,GAGF,IAAKzD,EACH,OAAO,OAAcwD,EAAexc,KAGtC0c,EAAQltB,KAAKwpB,EAAYoE,QAEzBb,EAAUvD,EAAYF,IACxB,KAAO,CACL,GAAInD,EAAejG,MAAM2F,GACvB,MAAM,IAAIpE,WACR,iEACE0E,EACA,KAYN,GAPc,OAAV5K,EACFA,EAAQ,IACoB,MAAnB4K,IACT5K,EAA2BA,EAuDpB2E,MAAMyF,GAAqB,GAAGpF,QAAQqF,EAAmB,MAnDnC,IAA3BmH,EAAQc,QAAQtS,GAGlB,OAAO,OAAcyR,EAAexc,KAFpCuc,EAAUA,EAAQ1sB,MAAMkb,EAAM5X,OAIlC,CACF,CAGA,GAAIopB,EAAQppB,OAAS,GAAKmpB,EAAoB5L,KAAK6L,GACjD,OAAO,OAAcC,EAAexc,KAGtC,MAAMsd,EAAwBZ,EAC3BjH,KAAK2H,GAAWA,EAAOG,WACvB9tB,MAAK,CAACC,EAAGC,IAAMA,EAAID,IACnBZ,QAAO,CAACyuB,EAAUlZ,EAAOkU,IAAUA,EAAM8E,QAAQE,KAAclZ,IAC/DoR,KAAK8H,GACJb,EACG5tB,QAAQsuB,GAAWA,EAAOG,WAAaA,IACvC9tB,MAAK,CAACC,EAAGC,IAAMA,EAAE6tB,YAAc9tB,EAAE8tB,gBAErC/H,KAAKgI,GAAgBA,EAAY,KAEpC,IAAI3S,GAAO,OAAO0R,GAElB,GAAIxhB,MAAM8P,EAAK/e,WACb,OAAO,OAAcywB,EAAexc,KAGtC,MAAM0d,EAAQ,CAAC,EACf,IAAK,MAAMN,KAAUE,EAAuB,CAC1C,IAAKF,EAAOO,SAAS7S,EAAM2R,GACzB,OAAO,OAAcD,EAAexc,KAGtC,MAAMoE,EAASgZ,EAAOtmB,IAAIgU,EAAM4S,EAAOjB,GAEnCnW,MAAMgS,QAAQlU,IAChB0G,EAAO1G,EAAO,GACdhS,OAAOiQ,OAAOqb,EAAOtZ,EAAO,KAG5B0G,EAAO1G,CAEX,CAEA,OAAO,OAAcoY,EAAe1R,EACtC,0DC1fO,MAAM8S,OACX,GAAAT,CAAIU,EAAY9S,EAAO2E,EAAO5jB,GAC5B,MAAMsY,EAASvY,KAAKL,MAAMqyB,EAAY9S,EAAO2E,EAAO5jB,GACpD,OAAKsY,EAIE,CACLgZ,OAAQ,IAAI,KACVhZ,EAAO3Y,MACPI,KAAK8xB,SACL9xB,KAAKiL,IACLjL,KAAK0xB,SACL1xB,KAAK2xB,aAEP1E,KAAM1U,EAAO0U,MAXN,IAaX,CAEA,QAAA6E,CAASG,EAAUC,EAAQxC,GACzB,OAAO,CACT,8GClBK,MAAMyC,OACXR,YAAc,EAEd,QAAAG,CAASG,EAAUvC,GACjB,OAAO,CACT,EAGK,MAAM0C,oBAAoBD,OAC/B,WAAAnL,CACEpnB,EAEAyyB,EAEAC,EAEAZ,EACAC,GAEAY,QACAvyB,KAAKJ,MAAQA,EACbI,KAAKqyB,cAAgBA,EACrBryB,KAAKsyB,SAAWA,EAChBtyB,KAAK0xB,SAAWA,EACZC,IACF3xB,KAAK2xB,YAAcA,EAEvB,CAEA,QAAAG,CAAS7S,EAAMhf,GACb,OAAOD,KAAKqyB,cAAcpT,EAAMjf,KAAKJ,MAAOK,EAC9C,CAEA,GAAAgL,CAAIgU,EAAM4S,EAAO5xB,GACf,OAAOD,KAAKsyB,SAASrT,EAAM4S,EAAO7xB,KAAKJ,MAAOK,EAChD,EAGK,MAAMuyB,mCAAmCL,OAC9CT,SAzC6B,GA0C7BC,aAAe,EACf,GAAA1mB,CAAIgU,EAAM4S,GACR,OAAIA,EAAMY,eAAuBxT,GAC1B,OAAcA,GAAM,OAAUA,EAAMlf,MAC7C,8CCjDK,MAAM2yB,EAAkB,CAC7BtzB,MAAO,iBACP6f,KAAM,qBACN2B,UAAW,kCACXzhB,KAAM,qBACNwzB,QAAS,qBACTC,QAAS,qBACTC,QAAS,iBACTC,QAAS,iBACT9zB,OAAQ,YACRD,OAAQ,YAERg0B,YAAa,MACbC,UAAW,WACXC,YAAa,WACbC,WAAY,WAEZC,gBAAiB,SACjBC,kBAAmB,QACnBC,gBAAiB,aACjBC,kBAAmB,aACnBC,iBAAkB,cAGPC,EAAmB,CAC9BC,qBAAsB,2BACtBC,MAAO,0BACPC,qBAAsB,oCACtBC,SAAU,2BACVC,wBAAyB,+bC+CpB,MAAMC,EAAU,CACrB9U,EAAG,IAAI,IACP3b,EAAG,IAAI,IACPmc,EAAG,IAAI,IACPI,EAAG,IAAI,IACPE,EAAG,IAAI,IACPC,EAAG,IAAI,IACPK,EAAG,IAAI,IACPC,EAAG,IAAI,IACPC,EAAG,IAAI,IACP7U,EAAG,IAAI,IACP8U,EAAG,IAAI,IACPE,EAAG,IAAI,IACPE,EAAG,IAAI,IACPE,EAAG,IAAI,IACPG,EAAG,IAAI,EAAAV,EACPY,EAAG,IAAI,IACPtW,EAAG,IAAI,IACP/G,EAAG,IAAI,IACPC,EAAG,IAAI,IACPqV,EAAG,IAAI,IACPzN,EAAG,IAAI,IACP+V,EAAG,IAAI,IACPC,EAAG,IAAI,IACPC,EAAG,IAAI,IACPC,EAAG,IAAI,IACPna,EAAG,IAAI,IACPsa,EAAG,IAAI,IACPC,EAAG,IAAI,IACP5e,EAAG,IAAI,IACPiO,EAAG,IAAI,IACPsR,EAAG,IAAI,oFCxGF,MAAMoR,2BAA2B,IACtCrC,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACE2E,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,SACPuZ,QAAS,eAIf,IAAK,QACH,OAAO0D,EAAMvC,UAAU0Q,EAAY,CACjCprB,MAAO,SACPuZ,QAAS,eAGb,QACE,OACE0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,OACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,SACPuZ,QAAS,eAInB,CAEA,GAAAlV,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAKsJ,UAAS,QAAqB3oB,GAAQ,EAAG,EAAG,GAC1Cqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,6EChD1C,MAAMgD,mBAAmB,IAC9BvC,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACE2E,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,SACPuZ,QAAS,eAIf,IAAK,QACH,OAAO0D,EAAMvC,UAAU0Q,EAAY,CACjCprB,MAAO,SACPuZ,QAAS,eAGb,QACE,OACE0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,OACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,SACPuZ,QAAS,eAInB,CAEA,GAAAlV,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAKsJ,UAAS,QAAqB3oB,GAAQ,EAAG,EAAG,GAC1Cqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,yFC3CjD,MAAMiD,EAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7DC,EAA0B,CAC9B,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAIvC,MAAMC,mBAAmB,IAC9B1C,SAAW,GACXC,YAAc,EAEd,KAAAhyB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgBD,KAAM+S,GACnD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAAS7S,EAAMrf,GACb,MAAMN,EAAO2f,EAAKI,cACZgV,GAAa,QAAgB/0B,GAC7BF,EAAQ6f,EAAKgB,WACnB,OAAIoU,EACKz0B,GAAS,GAAKA,GAASu0B,EAAwB/0B,GAE/CQ,GAAS,GAAKA,GAASs0B,EAAc90B,EAEhD,CAEA,GAAA6L,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAKqG,QAAQ1lB,GACbqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,8FClDG,MAAMqD,wBAAwB,IACnC5C,SAAW,GAEX6C,YAAc,EAEd,KAAA50B,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACL,IAAK,KACH,OAAO,QAAoB,IAAgB0B,UAAWoR,GACxD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAAS7S,EAAMrf,GACb,MAAMN,EAAO2f,EAAKI,cAElB,OADmB,QAAgB/f,GAE1BM,GAAS,GAAKA,GAAS,IAEvBA,GAAS,GAAKA,GAAS,GAElC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAK4G,SAAS,EAAGjmB,GACjBqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,6ECpDG,MAAMuD,kBAAkB,IAC7B9C,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACE2E,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAItD,IAAK,QACH,OAAO0D,EAAM3kB,IAAI8yB,EAAY,CAC3BprB,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OACE0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAKtD,QACE,OACE0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,OAAQuZ,QAAS,gBAChD0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAG1D,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,EAAOK,GAGvB,OAFAgf,GAAO,OAAOA,EAAMrf,EAAOK,IACtBsoB,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,kFCxD1C,MAAMwD,wBAAwB,IACnC/C,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACE2E,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,SACPuZ,QAAS,eAIf,IAAK,QACH,OAAO0D,EAAMvC,UAAU0Q,EAAY,CACjCprB,MAAO,SACPuZ,QAAS,eAGb,QACE,OACE0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,OACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMvC,UAAU0Q,EAAY,CAC1BprB,MAAO,SACPuZ,QAAS,eAInB,CAEA,GAAAlV,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAKsJ,UAAS,QAAqB3oB,GAAQ,EAAG,EAAG,GAC1Cqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,iEClDhC,MAAMyD,kBAAkB,IAC7BhD,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GAEN,IAAK,IACL,IAAK,KACL,IAAK,MACH,OACE2E,EAAMzE,IAAI4S,EAAY,CAAEprB,MAAO,iBAC/Bid,EAAMzE,IAAI4S,EAAY,CAAEprB,MAAO,WAInC,IAAK,QACH,OAAOid,EAAMzE,IAAI4S,EAAY,CAAEprB,MAAO,WAGxC,QACE,OACEid,EAAMzE,IAAI4S,EAAY,CAAEprB,MAAO,UAC/Bid,EAAMzE,IAAI4S,EAAY,CAAEprB,MAAO,iBAC/Bid,EAAMzE,IAAI4S,EAAY,CAAEprB,MAAO,WAGvC,CAEA,GAAAqE,CAAIgU,EAAM4S,EAAOjyB,GAIf,OAHAiyB,EAAMzS,IAAMxf,EACZqf,EAAK6G,YAAYlmB,EAAO,EAAG,GAC3Bqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,oFClChC,MAAM0D,2BAA2B,IACtCjD,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,GAChB,MAAc,MAAVA,GACK,QAAmB,EAAG8S,IAGxB,QAAmB9S,EAAM5X,OAAQ0qB,EAC1C,CAEA,GAAA/mB,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAK6G,YAAYlmB,EAAO,EAAG,GAC3Bqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,yFCjBnE,MAAM2D,+BAA+B,IAC1ClD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,GAGhB,OAAO,SAAS,QAAaA,EAAM5X,OAAQ0qB,IAFpBpyB,GACrBoG,KAAK0c,MAAM9iB,EAAQoG,KAAKmN,IAAI,GAAoB,EAAf+L,EAAM5X,UAE3C,CAEA,GAAA2D,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAK+J,gBAAgBppB,GACdqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,8FCbtB,MAAM4D,wBAAwB,IACnCnD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgB2T,QAASb,GACtD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAOhB,OANaqf,EAAKoC,YAAc,IACpBzhB,EAAQ,GAClBqf,EAAKsJ,SAAS3oB,EAAQ,GAAI,EAAG,EAAG,GAEhCqf,EAAKsJ,SAAS3oB,EAAO,EAAG,EAAG,GAEtBqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,8FC5BrC,MAAM6D,wBAAwB,IACnCpD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgByT,QAASX,GACtD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAKsJ,SAAS3oB,EAAO,EAAG,EAAG,GACpBqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,8FCvB/C,MAAM8D,wBAAwB,IACnCrD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgB0T,QAASZ,GACtD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAChB,MAAM4hB,EAAQ5hB,GAAS,GAAKA,EAAQ,GAAKA,EAEzC,OADAqf,EAAKsJ,SAAS/G,EAAO,EAAG,EAAG,GACpBvC,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,8FCxB/C,MAAM+D,wBAAwB,IACnCtD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgB4T,QAASd,GACtD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAChB,MAAMq1B,EAAOhW,EAAKoC,YAAc,GAQhC,OAPI4T,GAAQr1B,EAAQ,GAClBqf,EAAKsJ,SAAS3oB,EAAQ,GAAI,EAAG,EAAG,GACtBq1B,GAAkB,KAAVr1B,EAGlBqf,EAAKsJ,SAAS3oB,EAAO,EAAG,EAAG,GAF3Bqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAIlBtJ,CACT,CAEAgS,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,2FC7BrC,MAAMiE,qBAAqB,IAChCxD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,MAAMmJ,EAAiBptB,GACP,IAAVA,EACK,EAEFA,EAGT,OAAQsf,GAEN,IAAK,IACL,IAAK,KACH,OAAO,QAAaA,EAAM5X,OAAQ0qB,GAEpC,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,QAEjD,IAAK,MACH,OAAO,QACLsjB,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAET0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,QACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,SACPuZ,QAAS,eAEb6M,GAGJ,IAAK,QACH,OAAO,QACLnJ,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,SACPuZ,QAAS,eAEX6M,GAGJ,IAAK,SACH,OAAO,QACLnJ,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,QACPuZ,QAAS,gBAET0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,SACPuZ,QAAS,eAEb6M,GAIJ,QACE,OAAO,QACLnJ,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,OACPuZ,QAAS,gBAET0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,QACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,SACPuZ,QAAS,eAEb6M,GAGR,CAEA,QAAA8E,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,GAAO,OAAUA,EAAMrf,IAClB2oB,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,sHC1GG,MAAMkE,0BAA0B,IACrCzD,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,GAChB,OAAQA,GACN,IAAK,IACH,OAAO,QACL,IAAiBuU,qBACjBzB,GAEJ,IAAK,KACH,OAAO,QAAqB,IAAiB0B,MAAO1B,GACtD,IAAK,OACH,OAAO,QACL,IAAiB2B,qBACjB3B,GAEJ,IAAK,QACH,OAAO,QACL,IAAiB6B,wBACjB7B,GAGJ,QACE,OAAO,QAAqB,IAAiB4B,SAAU5B,GAE7D,CAEA,GAAA/mB,CAAIgU,EAAM4S,EAAOjyB,GACf,OAAIiyB,EAAMY,eAAuBxT,GAC1B,OACLA,EACAA,EAAK/e,WAAY,OAAgC+e,GAAQrf,EAE7D,CAEAqxB,mBAAqB,CAAC,IAAK,IAAK,4HCpC3B,MAAMmE,+BAA+B,IAC1C1D,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,GAChB,OAAQA,GACN,IAAK,IACH,OAAO,QACL,IAAiBuU,qBACjBzB,GAEJ,IAAK,KACH,OAAO,QAAqB,IAAiB0B,MAAO1B,GACtD,IAAK,OACH,OAAO,QACL,IAAiB2B,qBACjB3B,GAEJ,IAAK,QACH,OAAO,QACL,IAAiB6B,wBACjB7B,GAGJ,QACE,OAAO,QAAqB,IAAiB4B,SAAU5B,GAE7D,CAEA,GAAA/mB,CAAIgU,EAAM4S,EAAOjyB,GACf,OAAIiyB,EAAMY,eAAuBxT,GAC1B,OACLA,EACAA,EAAK/e,WAAY,OAAgC+e,GAAQrf,EAE7D,CAEAqxB,mBAAqB,CAAC,IAAK,IAAK,mHCpC3B,MAAMoE,sBAAsB,IACjC3D,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgB/f,KAAM6yB,GACnD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAChB,OAAO,QAAe,OAAWqf,EAAMrf,GACzC,CAEAqxB,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,2GCrCG,MAAMqE,0BAA0B,IACrC5D,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,GAChB,MAAc,MAAVA,GACK,QAAmB,EAAG8S,IAGxB,QAAmB9S,EAAM5X,OAAQ0qB,EAC1C,CAEA,GAAA/mB,CAAIgU,EAAM+U,EAAQp0B,GAChB,MAAM21B,GAAkB,OAActW,EAAM,GAG5C,OAFAsW,EAAgBzP,YAAYlmB,EAAO,EAAG,GACtC21B,EAAgBhN,SAAS,EAAG,EAAG,EAAG,IAC3B,OAAegN,EACxB,CAEAtE,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,6FClCG,MAAMuE,uBAAuB,IAClC9D,SAAW,GACX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,EAAO5jB,GAC9B,MAAM+sB,EAAiBptB,IAErB,MAAM61B,EAA8C,EAA9BzvB,KAAK0vB,OAAO91B,EAAQ,GAAK,GAC/C,OAASA,EAAQK,EAAQY,aAAe,GAAK,EAAK40B,CAAa,EAGjE,OAAQvW,GAEN,IAAK,IACL,IAAK,KACH,OAAO,SAAS,QAAaA,EAAM5X,OAAQ0qB,GAAahF,GAE1D,IAAK,KACH,OAAO,QACLnJ,EAAMtE,cAAcyS,EAAY,CAC9BzxB,KAAM,QAERysB,GAGJ,IAAK,MACH,OACEnJ,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAItD,IAAK,QACH,OAAO0D,EAAM3kB,IAAI8yB,EAAY,CAC3BprB,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OACE0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAKtD,QACE,OACE0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,OAAQuZ,QAAS,gBAChD0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAG1D,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,EAAOK,GAGvB,OAFAgf,GAAO,OAAOA,EAAMrf,EAAOK,IACtBsoB,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,sHCpFG,MAAM0E,wBAAwB,IACnCjE,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgB/f,KAAM6yB,GACnD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,SACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,EAAOK,GACvB,OAAO,QAAY,OAAQgf,EAAMrf,EAAOK,GAAUA,EACpD,CAEAgxB,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,6GCpCG,MAAM2E,4BAA4B,IACvClE,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,MAAMmJ,EAAiB1tB,IAAS,CAC9BA,OACAu2B,eAA0B,OAAV3W,IAGlB,OAAQA,GACN,IAAK,IACH,OAAO,SAAS,QAAa,EAAG8S,GAAahF,GAC/C,IAAK,KACH,OAAO,QACLnJ,EAAMtE,cAAcyS,EAAY,CAC9BzxB,KAAM,SAERysB,GAEJ,QACE,OAAO,SAAS,QAAa9N,EAAM5X,OAAQ0qB,GAAahF,GAE9D,CAEA,QAAA8E,CAASvyB,EAAOK,GACd,OAAOA,EAAMi2B,gBAAkBj2B,EAAMN,KAAO,CAC9C,CAEA,GAAA2L,CAAIgU,EAAM4S,EAAOjyB,EAAOK,GACtB,MAAM61B,GAAc,OAAY7W,EAAMhf,GAEtC,GAAIL,EAAMi2B,eAAgB,CACxB,MAAME,GAAyB,QAC7Bn2B,EAAMN,KACNw2B,GAQF,OANA7W,EAAK6G,YACHiQ,EACA,EACA91B,EAAQypB,uBAEVzK,EAAKsJ,SAAS,EAAG,EAAG,EAAG,IAChB,OAAYtJ,EAAMhf,EAC3B,CAEA,MAAMX,EACF,QAASuyB,GAAwB,IAAdA,EAAMzS,IAAyB,EAAIxf,EAAMN,KAAvBM,EAAMN,KAG/C,OAFA2f,EAAK6G,YAAYxmB,EAAM,EAAGW,EAAQypB,uBAClCzK,EAAKsJ,SAAS,EAAG,EAAG,EAAG,IAChB,OAAYtJ,EAAMhf,EAC3B,CAEAgxB,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,2FCnEG,MAAM+E,qBAAqB,IAChCtE,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgBlgB,OAAQgzB,GACrD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,WACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAKwJ,WAAW7oB,EAAO,EAAG,GACnBqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,0FCvBtB,MAAMgF,oBAAoB,IAC/BhF,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGFS,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,MAAMmJ,EAAiBptB,GAAUA,EAAQ,EAEzC,OAAQsf,GAEN,IAAK,IACH,OAAO,SACL,QAAoB,IAAgB9f,MAAO4yB,GAC3ChF,GAGJ,IAAK,KACH,OAAO,SAAS,QAAa,EAAGgF,GAAahF,GAE/C,IAAK,KACH,OAAO,QACLnJ,EAAMtE,cAAcyS,EAAY,CAC9BzxB,KAAM,UAERysB,GAGJ,IAAK,MACH,OACEnJ,EAAMzkB,MAAM4yB,EAAY,CACtBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMzkB,MAAM4yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAIxD,IAAK,QACH,OAAO0D,EAAMzkB,MAAM4yB,EAAY,CAC7BprB,MAAO,SACPuZ,QAAS,eAIb,QACE,OACE0D,EAAMzkB,MAAM4yB,EAAY,CAAEprB,MAAO,OAAQuZ,QAAS,gBAClD0D,EAAMzkB,MAAM4yB,EAAY,CACtBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMzkB,MAAM4yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAG5D,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAK4G,SAASjmB,EAAO,GACrBqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,6EC/EK,MAAMiX,sBAAsB,IACjCxE,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GAEN,IAAK,IACL,IAAK,KACH,OAAO,QAAaA,EAAM5X,OAAQ0qB,GAEpC,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,YAEjD,IAAK,MACH,OACEsjB,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,SACPuZ,QAAS,eAKf,IAAK,QACH,OAAO0D,EAAMxkB,QAAQ2yB,EAAY,CAC/BprB,MAAO,SACPuZ,QAAS,eAIb,QACE,OACE0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,OACPuZ,QAAS,gBAEX0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,SACPuZ,QAAS,eAInB,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAK4G,SAAuB,GAAbjmB,EAAQ,GAAQ,GAC/Bqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,2FC1EG,MAAMkF,qBAAqB,IAChCzE,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GACN,IAAK,IACH,OAAO,QAAoB,IAAgBngB,OAAQizB,GACrD,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,WACjD,QACE,OAAO,QAAa2e,EAAM5X,OAAQ0qB,GAExC,CAEA,QAAAF,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAEhB,OADAqf,EAAK0J,WAAW/oB,EAAO,GAChBqf,CACT,CAEAgS,mBAAqB,CAAC,IAAK,uGCtBtB,MAAMmF,iCAAiC,IAC5C1E,SAAW,GAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,EAAO5jB,GAC9B,MAAM+sB,EAAiBptB,IAErB,MAAM61B,EAA8C,EAA9BzvB,KAAK0vB,OAAO91B,EAAQ,GAAK,GAC/C,OAASA,EAAQK,EAAQY,aAAe,GAAK,EAAK40B,CAAa,EAGjE,OAAQvW,GAEN,IAAK,IACL,IAAK,KACH,OAAO,SAAS,QAAaA,EAAM5X,OAAQ0qB,GAAahF,GAE1D,IAAK,KACH,OAAO,QACLnJ,EAAMtE,cAAcyS,EAAY,CAC9BzxB,KAAM,QAERysB,GAGJ,IAAK,MACH,OACEnJ,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAItD,IAAK,QACH,OAAO0D,EAAM3kB,IAAI8yB,EAAY,CAC3BprB,MAAO,SACPuZ,QAAS,eAGb,IAAK,SACH,OACE0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAKtD,QACE,OACE0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,OAAQuZ,QAAS,gBAChD0D,EAAM3kB,IAAI8yB,EAAY,CACpBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,QAASuZ,QAAS,gBACjD0D,EAAM3kB,IAAI8yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAG1D,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,EAAOK,GAGvB,OAFAgf,GAAO,OAAOA,EAAMrf,EAAOK,IACtBsoB,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,oGCxFG,MAAMoF,8BAA8B,IACzC3E,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,MAAMmJ,EAAiBptB,GAAUA,EAAQ,EAEzC,OAAQsf,GAEN,IAAK,IACH,OAAO,SACL,QAAoB,IAAgB9f,MAAO4yB,GAC3ChF,GAGJ,IAAK,KACH,OAAO,SAAS,QAAa,EAAGgF,GAAahF,GAE/C,IAAK,KACH,OAAO,QACLnJ,EAAMtE,cAAcyS,EAAY,CAC9BzxB,KAAM,UAERysB,GAGJ,IAAK,MACH,OACEnJ,EAAMzkB,MAAM4yB,EAAY,CACtBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMzkB,MAAM4yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAIxD,IAAK,QACH,OAAO0D,EAAMzkB,MAAM4yB,EAAY,CAC7BprB,MAAO,SACPuZ,QAAS,eAIb,QACE,OACE0D,EAAMzkB,MAAM4yB,EAAY,CAAEprB,MAAO,OAAQuZ,QAAS,gBAClD0D,EAAMzkB,MAAM4yB,EAAY,CACtBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMzkB,MAAM4yB,EAAY,CAAEprB,MAAO,SAAUuZ,QAAS,eAG5D,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,EAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAK4G,SAASjmB,EAAO,GACrBqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,0FC9EG,MAAMqF,gCAAgC,IAC3C5E,SAAW,IAEX,KAAA/xB,CAAMqyB,EAAY9S,EAAO2E,GACvB,OAAQ3E,GAEN,IAAK,IACL,IAAK,KACH,OAAO,QAAaA,EAAM5X,OAAQ0qB,GAEpC,IAAK,KACH,OAAOnO,EAAMtE,cAAcyS,EAAY,CAAEzxB,KAAM,YAEjD,IAAK,MACH,OACEsjB,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,SACPuZ,QAAS,eAKf,IAAK,QACH,OAAO0D,EAAMxkB,QAAQ2yB,EAAY,CAC/BprB,MAAO,SACPuZ,QAAS,eAIb,QACE,OACE0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,OACPuZ,QAAS,gBAEX0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,cACPuZ,QAAS,gBAEX0D,EAAMxkB,QAAQ2yB,EAAY,CACxBprB,MAAO,SACPuZ,QAAS,eAInB,CAEA,QAAA2R,CAASvyB,EAAOK,GACd,OAAOA,GAAS,GAAKA,GAAS,CAChC,CAEA,GAAAqL,CAAIgU,EAAM+U,EAAQp0B,GAGhB,OAFAqf,EAAK4G,SAAuB,GAAbjmB,EAAQ,GAAQ,GAC/Bqf,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEAgS,mBAAqB,CACnB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,yGC1EG,MAAMsF,oCAAoC,IAC/C7E,SAAW,GAEX,KAAA/xB,CAAMqyB,GACJ,OAAO,QAAqBA,EAC9B,CAEA,GAAA/mB,CAAIgU,EAAM+U,EAAQp0B,GAChB,MAAO,EAAC,OAAcqf,EAAMrf,GAAQ,CAAE6yB,gBAAgB,GACxD,CAEAxB,mBAAqB,mGCXhB,MAAMuF,+BAA+B,IAC1C9E,SAAW,GAEX,KAAA/xB,CAAMqyB,GACJ,OAAO,QAAqBA,EAC9B,CAEA,GAAA/mB,CAAIgU,EAAM+U,EAAQp0B,GAChB,MAAO,EAAC,OAAcqf,EAAc,IAARrf,GAAe,CAAE6yB,gBAAgB,GAC/D,CAEAxB,mBAAqB,2ECJhB,MAAMwF,mBAAmB,IAC9B/E,SAAW,IACXT,mBAAqB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEnE,KAAAtxB,CAAMqyB,EAAY9S,EAAO2E,GACvB,MAAMmJ,EAAiB1tB,IAAS,CAC9BA,OACAu2B,eAA0B,OAAV3W,IAGlB,OAAQA,GACN,IAAK,IACH,OAAO,SAAS,QAAa,EAAG8S,GAAahF,GAC/C,IAAK,KACH,OAAO,QACLnJ,EAAMtE,cAAcyS,EAAY,CAC9BzxB,KAAM,SAERysB,GAEJ,QACE,OAAO,SAAS,QAAa9N,EAAM5X,OAAQ0qB,GAAahF,GAE9D,CAEA,QAAA8E,CAASvyB,EAAOK,GACd,OAAOA,EAAMi2B,gBAAkBj2B,EAAMN,KAAO,CAC9C,CAEA,GAAA2L,CAAIgU,EAAM4S,EAAOjyB,GACf,MAAMk2B,EAAc7W,EAAKI,cAEzB,GAAIzf,EAAMi2B,eAAgB,CACxB,MAAME,GAAyB,QAC7Bn2B,EAAMN,KACNw2B,GAIF,OAFA7W,EAAK6G,YAAYiQ,EAAwB,EAAG,GAC5C9W,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,CAEA,MAAM3f,EACF,QAASuyB,GAAwB,IAAdA,EAAMzS,IAAyB,EAAIxf,EAAMN,KAAvBM,EAAMN,KAG/C,OAFA2f,EAAK6G,YAAYxmB,EAAM,EAAG,GAC1B2f,EAAKsJ,SAAS,EAAG,EAAG,EAAG,GAChBtJ,CACT,0ICnDK,SAASyX,EAASC,EAAeC,GACtC,OAAKD,EAIE,CACL/2B,MAAOg3B,EAAMD,EAAc/2B,OAC3BqtB,KAAM0J,EAAc1J,MALb0J,CAOX,CAEO,SAASE,EAAoBtT,EAASyO,GAC3C,MAAMpO,EAAcoO,EAAWnO,MAAMN,GAErC,OAAKK,EAIE,CACLhkB,MAAO4c,SAASoH,EAAY,GAAI,IAChCqJ,KAAM+E,EAAWhuB,MAAM4f,EAAY,GAAGtc,SAL/B,IAOX,CAEO,SAASwvB,EAAqBvT,EAASyO,GAC5C,MAAMpO,EAAcoO,EAAWnO,MAAMN,GAErC,IAAKK,EACH,OAAO,KAIT,GAAuB,MAAnBA,EAAY,GACd,MAAO,CACLhkB,MAAO,EACPqtB,KAAM+E,EAAWhuB,MAAM,IAI3B,MAAM6e,EAA0B,MAAnBe,EAAY,GAAa,GAAK,EACrCpC,EAAQoC,EAAY,GAAKpH,SAASoH,EAAY,GAAI,IAAM,EACxDb,EAAUa,EAAY,GAAKpH,SAASoH,EAAY,GAAI,IAAM,EAC1DmT,EAAUnT,EAAY,GAAKpH,SAASoH,EAAY,GAAI,IAAM,EAEhE,MAAO,CACLhkB,MACEijB,GACCrB,EAAQ,KACPuB,EAAU,KACVgU,EAAU,MACd9J,KAAM+E,EAAWhuB,MAAM4f,EAAY,GAAGtc,QAE1C,CAEO,SAAS0vB,EAAqBhF,GACnC,OAAO6E,EAAoB,IAAgB1D,gBAAiBnB,EAC9D,CAEO,SAASiF,EAAaC,EAAGlF,GAC9B,OAAQkF,GACN,KAAK,EACH,OAAOL,EAAoB,IAAgB9D,YAAaf,GAC1D,KAAK,EACH,OAAO6E,EAAoB,IAAgB7D,UAAWhB,GACxD,KAAK,EACH,OAAO6E,EAAoB,IAAgB5D,YAAajB,GAC1D,KAAK,EACH,OAAO6E,EAAoB,IAAgB3D,WAAYlB,GACzD,QACE,OAAO6E,EAAoB,IAAIM,OAAO,UAAYD,EAAI,KAAMlF,GAElE,CAEO,SAASoF,EAAmBF,EAAGlF,GACpC,OAAQkF,GACN,KAAK,EACH,OAAOL,EAAoB,IAAgBzD,kBAAmBpB,GAChE,KAAK,EACH,OAAO6E,EAAoB,IAAgBxD,gBAAiBrB,GAC9D,KAAK,EACH,OAAO6E,EAAoB,IAAgBvD,kBAAmBtB,GAChE,KAAK,EACH,OAAO6E,EAAoB,IAAgBtD,iBAAkBvB,GAC/D,QACE,OAAO6E,EAAoB,IAAIM,OAAO,YAAcD,EAAI,KAAMlF,GAEpE,CAEO,SAASqF,EAAqB/V,GACnC,OAAQA,GACN,IAAK,UACH,OAAO,EACT,IAAK,UACH,OAAO,GACT,IAAK,KACL,IAAK,OACL,IAAK,YACH,OAAO,GAIT,QACE,OAAO,EAEb,CAEO,SAASgW,EAAsB3X,EAAcmW,GAClD,MAAMyB,EAAczB,EAAc,EAK5B0B,EAAiBD,EAAczB,EAAc,EAAIA,EAEvD,IAAIvd,EACJ,GAAIif,GAAkB,GACpBjf,EAASoH,GAAgB,QACpB,CACL,MAAM8X,EAAWD,EAAiB,GAGlCjf,EAASoH,EAF4C,IAA7B3Z,KAAK0c,MAAM+U,EAAW,MACpB9X,GAAgB8X,EAAW,IACU,IAAM,EACvE,CAEA,OAAOF,EAAchf,EAAS,EAAIA,CACpC,CAEO,SAASmf,EAAgBp4B,GAC9B,OAAOA,EAAO,KAAQ,GAAMA,EAAO,GAAM,GAAKA,EAAO,KAAQ,CAC/D,qDClGO,SAASq4B,EAASC,EAAU33B,GACjC,MAAM43B,EAAmB53B,GAAS43B,kBAAoB,EAChDC,EAiER,SAAyB9F,GACvB,MAAM8F,EAAc,CAAC,EACfpL,EAAQsF,EAAWzV,MAAMwb,EAASC,mBACxC,IAAIC,EAIJ,GAAIvL,EAAMplB,OAAS,EACjB,OAAOwwB,EAGL,IAAIjT,KAAK6H,EAAM,IACjBuL,EAAavL,EAAM,IAEnBoL,EAAY7Y,KAAOyN,EAAM,GACzBuL,EAAavL,EAAM,GACfqL,EAASG,kBAAkBrT,KAAKiT,EAAY7Y,QAC9C6Y,EAAY7Y,KAAO+S,EAAWzV,MAAMwb,EAASG,mBAAmB,GAChED,EAAajG,EAAWzqB,OACtBuwB,EAAY7Y,KAAK3X,OACjB0qB,EAAW1qB,UAKjB,GAAI2wB,EAAY,CACd,MAAM/Y,EAAQ6Y,EAASI,SAASC,KAAKH,GACjC/Y,GACF4Y,EAAY13B,KAAO63B,EAAW/T,QAAQhF,EAAM,GAAI,IAChD4Y,EAAYK,SAAWjZ,EAAM,IAE7B4Y,EAAY13B,KAAO63B,CAEvB,CAEA,OAAOH,CACT,CArGsBO,CAAgBT,GAEpC,IAAI3Y,EACJ,GAAI6Y,EAAY7Y,KAAM,CACpB,MAAMqZ,EAmGV,SAAmBtG,EAAY6F,GAC7B,MAAMU,EAAQ,IAAIpB,OAChB,wBACG,EAAIU,GACL,uBACC,EAAIA,GACL,QAGEW,EAAWxG,EAAWnO,MAAM0U,GAElC,IAAKC,EAAU,MAAO,CAAEl5B,KAAM6U,IAAKskB,eAAgB,IAEnD,MAAMn5B,EAAOk5B,EAAS,GAAKhc,SAASgc,EAAS,IAAM,KAC7CE,EAAUF,EAAS,GAAKhc,SAASgc,EAAS,IAAM,KAGtD,MAAO,CACLl5B,KAAkB,OAAZo5B,EAAmBp5B,EAAiB,IAAVo5B,EAChCD,eAAgBzG,EAAWhuB,OAAOw0B,EAAS,IAAMA,EAAS,IAAIlxB,QAElE,CAxH4BqxB,CAAUb,EAAY7Y,KAAM4Y,GACpD5Y,EAyHJ,SAAmB+S,EAAY1yB,GAE7B,GAAa,OAATA,EAAe,OAAO,IAAIS,KAAKoU,KAEnC,MAAMqkB,EAAWxG,EAAWnO,MAAM+U,GAElC,IAAKJ,EAAU,OAAO,IAAIz4B,KAAKoU,KAE/B,MAAM0kB,IAAeL,EAAS,GACxB5X,EAAYkY,EAAcN,EAAS,IACnCp5B,EAAQ05B,EAAcN,EAAS,IAAM,EACrCt5B,EAAM45B,EAAcN,EAAS,IAC7Br5B,EAAO25B,EAAcN,EAAS,IAC9B1X,EAAYgY,EAAcN,EAAS,IAAM,EAE/C,GAAIK,EACF,OA0FJ,SAA0BE,EAAO55B,EAAMD,GACrC,OAAOC,GAAQ,GAAKA,GAAQ,IAAMD,GAAO,GAAKA,GAAO,CACvD,CA5FS85B,CAAiB15B,EAAMH,EAAM2hB,GA2DtC,SAA0BjB,EAAa1gB,EAAMD,GAC3C,MAAM+f,EAAO,IAAIlf,KAAK,GACtBkf,EAAKuF,eAAe3E,EAAa,EAAG,GACpC,MAAMoZ,EAAqBha,EAAKia,aAAe,EACzC14B,EAAoB,GAAZrB,EAAO,GAASD,EAAM,EAAI+5B,EAExC,OADAha,EAAKka,WAAWla,EAAKma,aAAe54B,GAC7Bye,CACT,CA/DWoa,CAAiB/5B,EAAMH,EAAM2hB,GAF3B,IAAI/gB,KAAKoU,KAGb,CACL,MAAM8K,EAAO,IAAIlf,KAAK,GACtB,OAuEJ,SAAsBT,EAAMF,EAAO6f,GACjC,OACE7f,GAAS,GACTA,GAAS,IACT6f,GAAQ,GACRA,IAASqa,EAAal6B,KAAWs4B,EAAgBp4B,GAAQ,GAAK,IAElE,CA7EOi6B,CAAaj6B,EAAMF,EAAOF,IA+EjC,SAA+BI,EAAMshB,GACnC,OAAOA,GAAa,GAAKA,IAAc8W,EAAgBp4B,GAAQ,IAAM,IACvE,CAhFOk6B,CAAsBl6B,EAAMshB,IAI/B3B,EAAKuF,eAAellB,EAAMF,EAAO4G,KAAKvF,IAAImgB,EAAW1hB,IAC9C+f,GAHE,IAAIlf,KAAKoU,IAIpB,CACF,CAxJWslB,CAAUnB,EAAgBG,eAAgBH,EAAgBh5B,KACnE,CAEA,IAAK2f,GAAQ9P,MAAM8P,EAAK/e,WACtB,OAAO,IAAIH,KAAKoU,KAGlB,MAAMsO,EAAYxD,EAAK/e,UACvB,IACIoW,EADAlW,EAAO,EAGX,GAAI03B,EAAY13B,OACdA,EAkJJ,SAAmB63B,GACjB,MAAMO,EAAWP,EAAWpU,MAAM6V,GAClC,IAAKlB,EAAU,OAAOrkB,IAEtB,MAAMqN,EAAQmY,EAAcnB,EAAS,IAC/BzV,EAAU4W,EAAcnB,EAAS,IACjCzB,EAAU4C,EAAcnB,EAAS,IAEvC,IAiEF,SAAsBhX,EAAOuB,EAASgU,GACpC,GAAc,KAAVvV,EACF,OAAmB,IAAZuB,GAA6B,IAAZgU,EAG1B,OACEA,GAAW,GACXA,EAAU,IACVhU,GAAW,GACXA,EAAU,IACVvB,GAAS,GACTA,EAAQ,EAEZ,CA9EOoY,CAAapY,EAAOuB,EAASgU,GAChC,OAAO5iB,IAGT,OACEqN,EAAQ,KAAqBuB,EAAU,KAAiC,IAAVgU,CAElE,CAjKW8C,CAAU/B,EAAY13B,MACzB+O,MAAM/O,IACR,OAAO,IAAIL,KAAKoU,KAIpB,IAAI2jB,EAAYK,SAKT,CACL,MAAM2B,EAAY,IAAI/5B,KAAK0iB,EAAYriB,GAMjCmY,EAAS,IAAIxY,KAAK,GAYxB,OAXAwY,EAAOuN,YACLgU,EAAUC,iBACVD,EAAUE,cACVF,EAAUV,cAEZ7gB,EAAOgQ,SACLuR,EAAUG,cACVH,EAAUI,gBACVJ,EAAUK,gBACVL,EAAUM,sBAEL7hB,CACT,CAvBE,OADAjC,EAgKJ,SAAuB+jB,GACrB,GAAuB,MAAnBA,EAAwB,OAAO,EAEnC,MAAM7B,EAAW6B,EAAexW,MAAMyW,GACtC,IAAK9B,EAAU,OAAO,EAEtB,MAAM3V,EAAuB,MAAhB2V,EAAS,IAAc,EAAI,EAClChX,EAAQhF,SAASgc,EAAS,IAC1BzV,EAAWyV,EAAS,IAAMhc,SAASgc,EAAS,KAAQ,EAE1D,IAyDF,SAA0B+B,EAAQxX,GAChC,OAAOA,GAAW,GAAKA,GAAW,EACpC,CA3DOyX,CAAiBhZ,EAAOuB,GAC3B,OAAO5O,IAGT,OAAO0O,GAAQrB,EAAQ,KAAqBuB,EAAU,KACxD,CA/Ka0X,CAAc3C,EAAYK,UAC/BhpB,MAAMmH,GACD,IAAIvW,KAAKoU,KAwBb,IAAIpU,KAAK0iB,EAAYriB,EAAOkW,EACrC,CAEA,MAAMyhB,EAAW,CACfC,kBAAmB,OACnBE,kBAAmB,QACnBC,SAAU,cAGNS,EACJ,gEACIc,EACJ,4EACIY,EAAgB,gCAgGtB,SAASxB,EAAcl5B,GACrB,OAAOA,EAAQ4c,SAAS5c,GAAS,CACnC,CAmBA,SAAS+5B,EAAc/5B,GACrB,OAAQA,GAASgI,WAAWhI,EAAMskB,QAAQ,IAAK,OAAU,CAC3D,CA+BA,MAAMoV,EAAe,CAAC,GAAI,KAAM,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEpE,SAAS5B,EAAgBp4B,GACvB,OAAOA,EAAO,KAAQ,GAAMA,EAAO,GAAM,GAAKA,EAAO,KAAQ,CAC/D,6EC/NO,SAASo7B,EAAOzb,EAAM/f,EAAKe,GAChC,MAAM2e,GAAiB,SACjB/d,EACJZ,GAASY,cACTZ,GAASipB,QAAQjpB,SAASY,cAC1B+d,EAAe/d,cACf+d,EAAesK,QAAQjpB,SAASY,cAChC,EAEItB,GAAQ,OAAO0f,GACf0b,EAAap7B,EAAMwhB,SAKnB6Z,EAAQ,EAAI/5B,EACZL,EACJtB,EAAM,GAAKA,EAAM,EACbA,GAAQy7B,EAAaC,GAAS,IANlB17B,EAAM,EACM,GAAK,EAMhB07B,GAAS,GAAOD,EAAaC,GAAS,EACzD,OAAO,OAAQr7B,EAAOiB,EACxB,6EC7BO,SAASq6B,EAAU5b,EAAM/f,GAC9B,MAAMK,GAAQ,OAAO0f,GAEfze,EAAOtB,GADM,IAAA47B,GAAUv7B,GAE7B,OAAO,OAAQA,EAAOiB,EACxB,gECNO,SAASu6B,EAAW9b,EAAM9f,GAC/B,MAAMI,GAAQ,OAAO0f,GACfze,GAAO,OAAWjB,GAASJ,EAEjC,OADAI,EAAM+lB,QAAQ/lB,EAAMmhB,UAAmB,EAAPlgB,GACzBjB,CACT,iECcO,SAASy7B,EAAQ/b,EAAM9f,EAAMc,GAClC,MAAMV,GAAQ,OAAO0f,GACfze,GAAO,OAAQjB,EAAOU,GAAWd,EAEvC,OADAI,EAAM+lB,QAAQ/lB,EAAMmhB,UAAmB,EAAPlgB,GACzBjB,CACT,oDC3BO,SAAS07B,EAAWhc,GACzB,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMgpB,SAAS,EAAG,EAAG,EAAG,GACjBhpB,CACT,qDCJO,SAAS27B,EAAYjc,GAC1B,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMkpB,WAAW,EAAG,EAAG,GAChBlpB,CACT,qDCFO,SAAS47B,EAAelc,GAC7B,OAAO,OAAYA,EAAM,CAAEpe,aAAc,GAC3C,4ECCO,SAASu6B,EAAmBnc,GACjC,MAAM3f,GAAO,OAAe2f,GACtBoc,GAAkB,OAAcpc,EAAM,GAG5C,OAFAoc,EAAgBvV,YAAYxmB,EAAM,EAAG,GACrC+7B,EAAgB9S,SAAS,EAAG,EAAG,EAAG,IAC3B,OAAe8S,EACxB,qDCXO,SAASC,EAAcrc,GAC5B,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMopB,WAAW,EAAG,GACbppB,CACT,oDCJO,SAASg8B,EAAatc,GAC3B,MAAM1f,GAAQ,OAAO0f,GAGrB,OAFA1f,EAAM+lB,QAAQ,GACd/lB,EAAMgpB,SAAS,EAAG,EAAG,EAAG,GACjBhpB,CACT,qDCLO,SAASi8B,EAAevc,GAC7B,MAAM1f,GAAQ,OAAO0f,GACf6J,EAAevpB,EAAM0gB,WACrB7gB,EAAQ0pB,EAAgBA,EAAe,EAG7C,OAFAvpB,EAAMsmB,SAASzmB,EAAO,GACtBG,EAAMgpB,SAAS,EAAG,EAAG,EAAG,GACjBhpB,CACT,qDCPO,SAASk8B,EAAcxc,GAC5B,MAAM1f,GAAQ,OAAO0f,GAErB,OADA1f,EAAMypB,gBAAgB,GACfzpB,CACT,iECOO,SAASm8B,EAAYzc,EAAMhf,GAChC,MAAM2e,GAAiB,SACjB/d,EACJZ,GAASY,cACTZ,GAASipB,QAAQjpB,SAASY,cAC1B+d,EAAe/d,cACf+d,EAAesK,QAAQjpB,SAASY,cAChC,EAEItB,GAAQ,OAAO0f,GACf/f,EAAMK,EAAMwhB,SACZvgB,GAAQtB,EAAM2B,EAAe,EAAI,GAAK3B,EAAM2B,EAIlD,OAFAtB,EAAM+lB,QAAQ/lB,EAAMmhB,UAAYlgB,GAChCjB,EAAMgpB,SAAS,EAAG,EAAG,EAAG,GACjBhpB,CACT,uFCJO,SAASo8B,EAAgB1c,EAAMhf,GACpC,MAAM2e,GAAiB,SACjB8K,EACJzpB,GAASypB,uBACTzpB,GAASipB,QAAQjpB,SAASypB,uBAC1B9K,EAAe8K,uBACf9K,EAAesK,QAAQjpB,SAASypB,uBAChC,EAEIpqB,GAAO,OAAY2f,EAAMhf,GACzB27B,GAAY,OAAc3c,EAAM,GACtC2c,EAAU9V,YAAYxmB,EAAM,EAAGoqB,GAC/BkS,EAAUrT,SAAS,EAAG,EAAG,EAAG,GAE5B,OADc,OAAYqT,EAAW37B,EAEvC,gECrCO,SAAS47B,EAAY5c,GAC1B,MAAM6c,GAAY,OAAO7c,GACnB1f,GAAQ,OAAc0f,EAAM,GAGlC,OAFA1f,EAAMumB,YAAYgW,EAAUzc,cAAe,EAAG,GAC9C9f,EAAMgpB,SAAS,EAAG,EAAG,EAAG,GACjBhpB,CACT,oBCGO,SAASw8B,EAAOnE,GACrB,MAAMoE,EAASz1B,OAAO+kB,UAAU7iB,SAAS8iB,KAAKqM,GAG9C,OACEA,aAAoB73B,MACC,iBAAb63B,GAAoC,kBAAXoE,EAG1B,IAAIpE,EAAS5Q,aAAa4Q,GAEb,iBAAbA,GACI,oBAAXoE,GACoB,iBAAbpE,GACI,oBAAXoE,EAGO,IAAIj8B,KAAK63B,GAGT,IAAI73B,KAAKoU,IAEpB,oECxBO,SAAS8nB,EAAUC,EAAUlV,GAClC,MAAM/H,EACJ+H,aAAuBjnB,MACnB,OAAcinB,EAAa,GAC3B,IAAIA,EAAY,GAYtB,OAXA/H,EAAK6G,YACHoW,EAAS7c,cACT6c,EAASjc,WACTic,EAASxb,WAEXzB,EAAKsJ,SACH2T,EAAS7a,WACT6a,EAASra,aACTqa,EAASpa,aACToa,EAAS9Y,mBAEJnE,CACT","sources":["webpack://frontend/./node_modules/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.esm.js","webpack://frontend/./node_modules/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.esm.js","webpack://frontend/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://frontend/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://frontend/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://frontend/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://frontend/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://frontend/./node_modules/date-fns/_lib/getRoundingMethod.mjs","webpack://frontend/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://frontend/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://frontend/./node_modules/date-fns/addDays.mjs","webpack://frontend/./node_modules/date-fns/addHours.mjs","webpack://frontend/./node_modules/date-fns/addMilliseconds.mjs","webpack://frontend/./node_modules/date-fns/addMinutes.mjs","webpack://frontend/./node_modules/date-fns/addMonths.mjs","webpack://frontend/./node_modules/date-fns/addQuarters.mjs","webpack://frontend/./node_modules/date-fns/addSeconds.mjs","webpack://frontend/./node_modules/date-fns/addWeeks.mjs","webpack://frontend/./node_modules/date-fns/addYears.mjs","webpack://frontend/./node_modules/date-fns/compareAsc.mjs","webpack://frontend/./node_modules/date-fns/constants.mjs","webpack://frontend/./node_modules/date-fns/constructFrom.mjs","webpack://frontend/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://frontend/./node_modules/date-fns/differenceInCalendarMonths.mjs","webpack://frontend/./node_modules/date-fns/differenceInCalendarYears.mjs","webpack://frontend/./node_modules/date-fns/differenceInDays.mjs","webpack://frontend/./node_modules/date-fns/differenceInHours.mjs","webpack://frontend/./node_modules/date-fns/differenceInMilliseconds.mjs","webpack://frontend/./node_modules/date-fns/differenceInMinutes.mjs","webpack://frontend/./node_modules/date-fns/differenceInMonths.mjs","webpack://frontend/./node_modules/date-fns/differenceInQuarters.mjs","webpack://frontend/./node_modules/date-fns/differenceInSeconds.mjs","webpack://frontend/./node_modules/date-fns/differenceInWeeks.mjs","webpack://frontend/./node_modules/date-fns/differenceInYears.mjs","webpack://frontend/./node_modules/date-fns/endOfDay.mjs","webpack://frontend/./node_modules/date-fns/endOfHour.mjs","webpack://frontend/./node_modules/date-fns/endOfMinute.mjs","webpack://frontend/./node_modules/date-fns/endOfMonth.mjs","webpack://frontend/./node_modules/date-fns/endOfQuarter.mjs","webpack://frontend/./node_modules/date-fns/endOfSecond.mjs","webpack://frontend/./node_modules/date-fns/endOfWeek.mjs","webpack://frontend/./node_modules/date-fns/endOfYear.mjs","webpack://frontend/./node_modules/date-fns/format.mjs","webpack://frontend/./node_modules/date-fns/getDayOfYear.mjs","webpack://frontend/./node_modules/date-fns/getDefaultOptions.mjs","webpack://frontend/./node_modules/date-fns/getISODay.mjs","webpack://frontend/./node_modules/date-fns/getISOWeek.mjs","webpack://frontend/./node_modules/date-fns/getISOWeekYear.mjs","webpack://frontend/./node_modules/date-fns/getWeek.mjs","webpack://frontend/./node_modules/date-fns/getWeekYear.mjs","webpack://frontend/./node_modules/date-fns/isDate.mjs","webpack://frontend/./node_modules/date-fns/isLastDayOfMonth.mjs","webpack://frontend/./node_modules/date-fns/isValid.mjs","webpack://frontend/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://frontend/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://frontend/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://frontend/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://frontend/./node_modules/date-fns/locale/en-US.mjs","webpack://frontend/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://frontend/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://frontend/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://frontend/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://frontend/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://frontend/./node_modules/date-fns/parse.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/Parser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/Setter.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/constants.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","webpack://frontend/./node_modules/date-fns/parse/_lib/utils.mjs","webpack://frontend/./node_modules/date-fns/parseISO.mjs","webpack://frontend/./node_modules/date-fns/setDay.mjs","webpack://frontend/./node_modules/date-fns/setISODay.mjs","webpack://frontend/./node_modules/date-fns/setISOWeek.mjs","webpack://frontend/./node_modules/date-fns/setWeek.mjs","webpack://frontend/./node_modules/date-fns/startOfDay.mjs","webpack://frontend/./node_modules/date-fns/startOfHour.mjs","webpack://frontend/./node_modules/date-fns/startOfISOWeek.mjs","webpack://frontend/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://frontend/./node_modules/date-fns/startOfMinute.mjs","webpack://frontend/./node_modules/date-fns/startOfMonth.mjs","webpack://frontend/./node_modules/date-fns/startOfQuarter.mjs","webpack://frontend/./node_modules/date-fns/startOfSecond.mjs","webpack://frontend/./node_modules/date-fns/startOfWeek.mjs","webpack://frontend/./node_modules/date-fns/startOfWeekYear.mjs","webpack://frontend/./node_modules/date-fns/startOfYear.mjs","webpack://frontend/./node_modules/date-fns/toDate.mjs","webpack://frontend/./node_modules/date-fns/transpose.mjs"],"sourcesContent":["/*!\n * chartjs-adapter-date-fns v2.0.1\n * https://www.chartjs.org\n * (c) 2022 chartjs-adapter-date-fns Contributors\n * Released under the MIT license\n */\nimport { _adapters } from 'chart.js';\nimport { toDate, parse, parseISO, isValid, format, addYears, addQuarters, addMonths, addWeeks, addDays, addHours, addMinutes, addSeconds, addMilliseconds, differenceInYears, differenceInQuarters, differenceInMonths, differenceInWeeks, differenceInDays, differenceInHours, differenceInMinutes, differenceInSeconds, differenceInMilliseconds, startOfYear, startOfQuarter, startOfMonth, startOfWeek, startOfDay, startOfHour, startOfMinute, startOfSecond, endOfYear, endOfQuarter, endOfMonth, endOfWeek, endOfDay, endOfHour, endOfMinute, endOfSecond } from 'date-fns';\n\nconst FORMATS = {\n  datetime: 'MMM d, yyyy, h:mm:ss aaaa',\n  millisecond: 'h:mm:ss.SSS aaaa',\n  second: 'h:mm:ss aaaa',\n  minute: 'h:mm aaaa',\n  hour: 'ha',\n  day: 'MMM d',\n  week: 'PP',\n  month: 'MMM yyyy',\n  quarter: 'qqq - yyyy',\n  year: 'yyyy'\n};\n\n_adapters._date.override({\n  _id: 'date-fns', // DEBUG\n\n  formats: function() {\n    return FORMATS;\n  },\n\n  parse: function(value, fmt) {\n    if (value === null || typeof value === 'undefined') {\n      return null;\n    }\n    const type = typeof value;\n    if (type === 'number' || value instanceof Date) {\n      value = toDate(value);\n    } else if (type === 'string') {\n      if (typeof fmt === 'string') {\n        value = parse(value, fmt, new Date(), this.options);\n      } else {\n        value = parseISO(value, this.options);\n      }\n    }\n    return isValid(value) ? value.getTime() : null;\n  },\n\n  format: function(time, fmt) {\n    return format(time, fmt, this.options);\n  },\n\n  add: function(time, amount, unit) {\n    switch (unit) {\n    case 'millisecond': return addMilliseconds(time, amount);\n    case 'second': return addSeconds(time, amount);\n    case 'minute': return addMinutes(time, amount);\n    case 'hour': return addHours(time, amount);\n    case 'day': return addDays(time, amount);\n    case 'week': return addWeeks(time, amount);\n    case 'month': return addMonths(time, amount);\n    case 'quarter': return addQuarters(time, amount);\n    case 'year': return addYears(time, amount);\n    default: return time;\n    }\n  },\n\n  diff: function(max, min, unit) {\n    switch (unit) {\n    case 'millisecond': return differenceInMilliseconds(max, min);\n    case 'second': return differenceInSeconds(max, min);\n    case 'minute': return differenceInMinutes(max, min);\n    case 'hour': return differenceInHours(max, min);\n    case 'day': return differenceInDays(max, min);\n    case 'week': return differenceInWeeks(max, min);\n    case 'month': return differenceInMonths(max, min);\n    case 'quarter': return differenceInQuarters(max, min);\n    case 'year': return differenceInYears(max, min);\n    default: return 0;\n    }\n  },\n\n  startOf: function(time, unit, weekday) {\n    switch (unit) {\n    case 'second': return startOfSecond(time);\n    case 'minute': return startOfMinute(time);\n    case 'hour': return startOfHour(time);\n    case 'day': return startOfDay(time);\n    case 'week': return startOfWeek(time);\n    case 'isoWeek': return startOfWeek(time, {weekStartsOn: +weekday});\n    case 'month': return startOfMonth(time);\n    case 'quarter': return startOfQuarter(time);\n    case 'year': return startOfYear(time);\n    default: return time;\n    }\n  },\n\n  endOf: function(time, unit) {\n    switch (unit) {\n    case 'second': return endOfSecond(time);\n    case 'minute': return endOfMinute(time);\n    case 'hour': return endOfHour(time);\n    case 'day': return endOfDay(time);\n    case 'week': return endOfWeek(time);\n    case 'month': return endOfMonth(time);\n    case 'quarter': return endOfQuarter(time);\n    case 'year': return endOfYear(time);\n    default: return time;\n    }\n  }\n});\n","/*!\n* chartjs-plugin-annotation v1.4.0\n* https://www.chartjs.org/chartjs-plugin-annotation/index\n * (c) 2022 chartjs-plugin-annotation Contributors\n * Released under the MIT License\n */\nimport { Element, defaults, Animations, Chart } from 'chart.js';\nimport { defined, distanceBetweenPoints, callback, isFinite, valueOrDefault, isObject, toRadians, toFont, isArray, addRoundedRectPath, toTRBLCorners, toPadding, PI, drawPoint, RAD_PER_DEG, clipArea, unclipArea } from 'chart.js/helpers';\n\nconst clickHooks = ['click', 'dblclick'];\nconst moveHooks = ['enter', 'leave'];\nconst hooks = clickHooks.concat(moveHooks);\n\nfunction updateListeners(chart, state, options) {\n  state.listened = false;\n  state.moveListened = false;\n\n  hooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.listened = true;\n      state.listeners[hook] = options[hook];\n    } else if (defined(state.listeners[hook])) {\n      delete state.listeners[hook];\n    }\n  });\n  moveHooks.forEach(hook => {\n    if (typeof options[hook] === 'function') {\n      state.moveListened = true;\n    }\n  });\n\n  if (!state.listened || !state.moveListened) {\n    state.annotations.forEach(scope => {\n      if (!state.listened) {\n        clickHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n          }\n        });\n      }\n      if (!state.moveListened) {\n        moveHooks.forEach(hook => {\n          if (typeof scope[hook] === 'function') {\n            state.listened = true;\n            state.moveListened = true;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction handleEvent(state, event, options) {\n  if (state.listened) {\n    switch (event.type) {\n    case 'mousemove':\n    case 'mouseout':\n      handleMoveEvents(state, event);\n      break;\n    case 'click':\n      handleClickEvents(state, event, options);\n      break;\n    }\n  }\n}\n\nfunction handleMoveEvents(state, event) {\n  if (!state.moveListened) {\n    return;\n  }\n\n  let element;\n\n  if (event.type === 'mousemove') {\n    element = getNearestItem(state.elements, event);\n  }\n\n  const previous = state.hovered;\n  state.hovered = element;\n\n  dispatchMoveEvents(state, {previous, element}, event);\n}\n\nfunction dispatchMoveEvents(state, elements, event) {\n  const {previous, element} = elements;\n  if (previous && previous !== element) {\n    dispatchEvent(previous.options.leave || state.listeners.leave, previous, event);\n  }\n  if (element && element !== previous) {\n    dispatchEvent(element.options.enter || state.listeners.enter, element, event);\n  }\n}\n\nfunction handleClickEvents(state, event, options) {\n  const listeners = state.listeners;\n  const element = getNearestItem(state.elements, event);\n  if (element) {\n    const elOpts = element.options;\n    const dblclick = elOpts.dblclick || listeners.dblclick;\n    const click = elOpts.click || listeners.click;\n    if (element.clickTimeout) {\n      // 2nd click before timeout, so its a double click\n      clearTimeout(element.clickTimeout);\n      delete element.clickTimeout;\n      dispatchEvent(dblclick, element, event);\n    } else if (dblclick) {\n      // if there is a dblclick handler, wait for dblClickSpeed ms before deciding its a click\n      element.clickTimeout = setTimeout(() => {\n        delete element.clickTimeout;\n        dispatchEvent(click, element, event);\n      }, options.dblClickSpeed);\n    } else {\n      // no double click handler, just call the click handler directly\n      dispatchEvent(click, element, event);\n    }\n  }\n}\n\nfunction dispatchEvent(handler, element, event) {\n  callback(handler, [element.$context, event]);\n}\n\nfunction getNearestItem(elements, position) {\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  return elements\n    .filter((element) => element.options.display && element.inRange(position.x, position.y))\n    .reduce((nearestItems, element) => {\n      const center = element.getCenterPoint();\n      const distance = distanceBetweenPoints(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n\n      return nearestItems;\n    }, [])\n    .sort((a, b) => a._index - b._index)\n    .slice(0, 1)[0]; // return only the top item\n}\n\nfunction adjustScaleRange(chart, scale, annotations) {\n  const range = getScaleLimits(scale, annotations);\n  let changed = changeScaleLimit(scale, range, 'min', 'suggestedMin');\n  changed = changeScaleLimit(scale, range, 'max', 'suggestedMax') || changed;\n  if (changed && typeof scale.handleTickRangeOptions === 'function') {\n    scale.handleTickRangeOptions();\n  }\n}\n\nfunction verifyScaleOptions(annotations, scales) {\n  for (const annotation of annotations) {\n    verifyScaleIDs(annotation, scales);\n  }\n}\n\nfunction changeScaleLimit(scale, range, limit, suggestedLimit) {\n  if (isFinite(range[limit]) && !scaleLimitDefined(scale.options, limit, suggestedLimit)) {\n    const changed = scale[limit] !== range[limit];\n    scale[limit] = range[limit];\n    return changed;\n  }\n}\n\nfunction scaleLimitDefined(scaleOptions, limit, suggestedLimit) {\n  return defined(scaleOptions[limit]) || defined(scaleOptions[suggestedLimit]);\n}\n\nfunction verifyScaleIDs(annotation, scales) {\n  for (const key of ['scaleID', 'xScaleID', 'yScaleID']) {\n    if (annotation[key] && !scales[annotation[key]] && verifyProperties(annotation, key)) {\n      console.warn(`No scale found with id '${annotation[key]}' for annotation '${annotation.id}'`);\n    }\n  }\n}\n\nfunction verifyProperties(annotation, key) {\n  if (key === 'scaleID') {\n    return true;\n  }\n  const axis = key.charAt(0);\n  for (const prop of ['Min', 'Max', 'Value']) {\n    if (defined(annotation[axis + prop])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getScaleLimits(scale, annotations) {\n  const axis = scale.axis;\n  const scaleID = scale.id;\n  const scaleIDOption = axis + 'ScaleID';\n  const limits = {\n    min: valueOrDefault(scale.min, Number.NEGATIVE_INFINITY),\n    max: valueOrDefault(scale.max, Number.POSITIVE_INFINITY)\n  };\n  for (const annotation of annotations) {\n    if (annotation.scaleID === scaleID) {\n      updateLimits(annotation, scale, ['value', 'endValue'], limits);\n    } else if (annotation[scaleIDOption] === scaleID) {\n      updateLimits(annotation, scale, [axis + 'Min', axis + 'Max', axis + 'Value'], limits);\n    }\n  }\n  return limits;\n}\n\nfunction updateLimits(annotation, scale, props, limits) {\n  for (const prop of props) {\n    const raw = annotation[prop];\n    if (defined(raw)) {\n      const value = scale.parse(raw);\n      limits.min = Math.min(limits.min, value);\n      limits.max = Math.max(limits.max, value);\n    }\n  }\n}\n\nconst EPSILON = 0.001;\n\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\n\nfunction clampAll(obj, from, to) {\n  for (const key of Object.keys(obj)) {\n    obj[key] = clamp(obj[key], from, to);\n  }\n  return obj;\n}\n\nfunction inPointRange(point, center, radius, borderWidth) {\n  if (!point || !center || radius <= 0) {\n    return false;\n  }\n  const hBorderWidth = borderWidth / 2 || 0;\n  return (Math.pow(point.x - center.x, 2) + Math.pow(point.y - center.y, 2)) <= Math.pow(radius + hBorderWidth, 2);\n}\n\nfunction inBoxRange(mouseX, mouseY, {x, y, width, height}, borderWidth) {\n  const hBorderWidth = borderWidth / 2;\n  return mouseX >= x - hBorderWidth - EPSILON &&\n         mouseX <= x + width + hBorderWidth + EPSILON &&\n         mouseY >= y - hBorderWidth - EPSILON &&\n         mouseY <= y + height + hBorderWidth + EPSILON;\n}\n\nfunction getElementCenterPoint(element, useFinalPosition) {\n  const {x, y} = element.getProps(['x', 'y'], useFinalPosition);\n  return {x, y};\n}\n\nconst isOlderPart = (act, req) => req > act || (act.length > req.length && act.substr(0, req.length) === req);\n\nfunction requireVersion(pkg, min, ver, strict = true) {\n  const parts = ver.split('.');\n  let i = 0;\n  for (const req of min.split('.')) {\n    const act = parts[i++];\n    if (parseInt(req, 10) < parseInt(act, 10)) {\n      break;\n    }\n    if (isOlderPart(act, req)) {\n      if (strict) {\n        throw new Error(`${pkg} v${ver} is not supported. v${min} or newer is required.`);\n      } else {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst isPercentString = (s) => typeof s === 'string' && s.endsWith('%');\nconst toPercent = (s) => clamp(parseFloat(s) / 100, 0, 1);\n\nfunction getRelativePosition(size, positionOption) {\n  if (positionOption === 'start') {\n    return 0;\n  }\n  if (positionOption === 'end') {\n    return size;\n  }\n  if (isPercentString(positionOption)) {\n    return toPercent(positionOption) * size;\n  }\n  return size / 2;\n}\n\nfunction getSize(size, value) {\n  if (typeof value === 'number') {\n    return value;\n  } else if (isPercentString(value)) {\n    return toPercent(value) * size;\n  }\n  return size;\n}\n\nfunction calculateTextAlignment(size, options) {\n  const {x, width} = size;\n  const textAlign = options.textAlign;\n  if (textAlign === 'center') {\n    return x + width / 2;\n  } else if (textAlign === 'end' || textAlign === 'right') {\n    return x + width;\n  }\n  return x;\n}\n\nfunction toPosition(value) {\n  if (isObject(value)) {\n    return {\n      x: valueOrDefault(value.x, 'center'),\n      y: valueOrDefault(value.y, 'center'),\n    };\n  }\n  value = valueOrDefault(value, 'center');\n  return {\n    x: value,\n    y: value\n  };\n}\n\nfunction isBoundToPoint(options) {\n  return options && (defined(options.xValue) || defined(options.yValue));\n}\n\nconst widthCache = new Map();\n\n/**\n * Determine if content is an image or a canvas.\n * @param {*} content\n * @returns boolean|undefined\n * @todo move this function to chart.js helpers\n */\nfunction isImageOrCanvas(content) {\n  if (content && typeof content === 'object') {\n    const type = content.toString();\n    return (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]');\n  }\n}\n\n/**\n * Set the translation on the canvas if the rotation must be applied.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Element} element - annotation element to use for applying the translation\n * @param {number} rotation - rotation (in degrees) to apply\n */\nfunction translate(ctx, element, rotation) {\n  if (rotation) {\n    const center = element.getCenterPoint();\n    ctx.translate(center.x, center.y);\n    ctx.rotate(toRadians(rotation));\n    ctx.translate(-center.x, -center.y);\n  }\n}\n\n/**\n * Apply border options to the canvas context before drawing a shape\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Object} options - options with border configuration\n * @returns {boolean} true is the border options have been applied\n */\nfunction setBorderStyle(ctx, options) {\n  if (options && options.borderWidth) {\n    ctx.lineCap = options.borderCapStyle;\n    ctx.setLineDash(options.borderDash);\n    ctx.lineDashOffset = options.borderDashOffset;\n    ctx.lineJoin = options.borderJoinStyle;\n    ctx.lineWidth = options.borderWidth;\n    ctx.strokeStyle = options.borderColor;\n    return true;\n  }\n}\n\n/**\n * Apply shadow options to the canvas context before drawing a shape\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Object} options - options with shadow configuration\n */\nfunction setShadowStyle(ctx, options) {\n  ctx.shadowColor = options.backgroundShadowColor;\n  ctx.shadowBlur = options.shadowBlur;\n  ctx.shadowOffsetX = options.shadowOffsetX;\n  ctx.shadowOffsetY = options.shadowOffsetY;\n}\n\n/**\n * Measure the label size using the label options.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {Object} options - options to configure the label\n * @returns {{width: number, height: number}} the measured size of the label\n */\nfunction measureLabelSize(ctx, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    return {\n      width: getSize(content.width, options.width),\n      height: getSize(content.height, options.height)\n    };\n  }\n  const font = toFont(options.font);\n  const strokeWidth = options.textStrokeWidth;\n  const lines = isArray(content) ? content : [content];\n  const mapKey = lines.join() + font.string + strokeWidth + (ctx._measureText ? '-spriting' : '');\n  if (!widthCache.has(mapKey)) {\n    ctx.save();\n    ctx.font = font.string;\n    const count = lines.length;\n    let width = 0;\n    for (let i = 0; i < count; i++) {\n      const text = lines[i];\n      width = Math.max(width, ctx.measureText(text).width + strokeWidth);\n    }\n    ctx.restore();\n    const height = count * font.lineHeight + strokeWidth;\n    widthCache.set(mapKey, {width, height});\n  }\n  return widthCache.get(mapKey);\n}\n\n/**\n * Draw a box with the size and the styling options.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {{x: number, y: number, width: number, height: number}} rect - rect to draw\n * @param {Object} options - options to style the box\n * @returns {undefined}\n */\nfunction drawBox(ctx, rect, options) {\n  const {x, y, width, height} = rect;\n  ctx.save();\n  setShadowStyle(ctx, options);\n  const stroke = setBorderStyle(ctx, options);\n  ctx.fillStyle = options.backgroundColor;\n  ctx.beginPath();\n  addRoundedRectPath(ctx, {\n    x, y, w: width, h: height,\n    // TODO: v2 remove support for cornerRadius\n    radius: clampAll(toTRBLCorners(valueOrDefault(options.cornerRadius, options.borderRadius)), 0, Math.min(width, height) / 2)\n  });\n  ctx.closePath();\n  ctx.fill();\n  if (stroke) {\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Draw a label with the size and the styling options.\n * @param {CanvasRenderingContext2D} ctx - chart canvas context\n * @param {{x: number, y: number, width: number, height: number}} rect - rect to map teh label\n * @param {Object} options - options to style the label\n * @returns {undefined}\n */\nfunction drawLabel(ctx, rect, options) {\n  const content = options.content;\n  if (isImageOrCanvas(content)) {\n    ctx.drawImage(content, rect.x, rect.y, rect.width, rect.height);\n    return;\n  }\n  const labels = isArray(content) ? content : [content];\n  const font = toFont(options.font);\n  const lh = font.lineHeight;\n  const x = calculateTextAlignment(rect, options);\n  const y = rect.y + (lh / 2) + options.textStrokeWidth / 2;\n  ctx.save();\n  ctx.font = font.string;\n  ctx.textBaseline = 'middle';\n  ctx.textAlign = options.textAlign;\n  if (setTextStrokeStyle(ctx, options)) {\n    labels.forEach((l, i) => ctx.strokeText(l, x, y + (i * lh)));\n  }\n  ctx.fillStyle = options.color;\n  labels.forEach((l, i) => ctx.fillText(l, x, y + (i * lh)));\n  ctx.restore();\n}\n\nfunction setTextStrokeStyle(ctx, options) {\n  if (options.textStrokeWidth > 0) {\n    // https://stackoverflow.com/questions/13627111/drawing-text-with-an-outer-stroke-with-html5s-canvas\n    ctx.lineJoin = 'round';\n    ctx.miterLimit = 2;\n    ctx.lineWidth = options.textStrokeWidth;\n    ctx.strokeStyle = options.textStrokeColor;\n    return true;\n  }\n}\n\n/**\n * @typedef {import('chart.js').Point} Point\n */\n\n/**\n * @param {{x: number, y: number, width: number, height: number}} rect\n * @returns {Point}\n */\nfunction getRectCenterPoint(rect) {\n  const {x, y, width, height} = rect;\n  return {\n    x: x + width / 2,\n    y: y + height / 2\n  };\n}\n\n/**\n * Rotate a `point` relative to `center` point by `angle`\n * @param {Point} point - the point to rotate\n * @param {Point} center - center point for rotation\n * @param {number} angle - angle for rotation, in radians\n * @returns {Point} rotated point\n */\nfunction rotated(point, center, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const cx = center.x;\n  const cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\n/**\n * @typedef { import(\"chart.js\").Chart } Chart\n * @typedef { import(\"chart.js\").Scale } Scale\n * @typedef { import(\"chart.js\").Point } Point\n * @typedef { import('../../types/options').CoreAnnotationOptions } CoreAnnotationOptions\n * @typedef { import('../../types/options').PointAnnotationOptions } PointAnnotationOptions\n */\n\n/**\n * @param {Scale} scale\n * @param {number|string} value\n * @param {number} fallback\n * @returns {number}\n */\nfunction scaleValue(scale, value, fallback) {\n  value = typeof value === 'number' ? value : scale.parse(value);\n  return isFinite(value) ? scale.getPixelForValue(value) : fallback;\n}\n\n/**\n * @param {Scale} scale\n * @param {{start: number, end: number}} options\n * @returns {{start: number, end: number}}\n */\nfunction getChartDimensionByScale(scale, options) {\n  if (scale) {\n    const min = scaleValue(scale, options.min, options.start);\n    const max = scaleValue(scale, options.max, options.end);\n    return {\n      start: Math.min(min, max),\n      end: Math.max(min, max)\n    };\n  }\n  return {\n    start: options.start,\n    end: options.end\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {Point}\n */\nfunction getChartPoint(chart, options) {\n  const {chartArea, scales} = chart;\n  const xScale = scales[options.xScaleID];\n  const yScale = scales[options.yScaleID];\n  let x = chartArea.width / 2;\n  let y = chartArea.height / 2;\n\n  if (xScale) {\n    x = scaleValue(xScale, options.xValue, x);\n  }\n\n  if (yScale) {\n    y = scaleValue(yScale, options.yValue, y);\n  }\n  return {x, y};\n}\n\n/**\n * @param {Chart} chart\n * @param {CoreAnnotationOptions} options\n * @returns {{x?:number, y?: number, x2?: number, y2?: number, width?: number, height?: number}}\n */\nfunction getChartRect(chart, options) {\n  const xScale = chart.scales[options.xScaleID];\n  const yScale = chart.scales[options.yScaleID];\n  let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n\n  if (!xScale && !yScale) {\n    return {};\n  }\n\n  const xDim = getChartDimensionByScale(xScale, {min: options.xMin, max: options.xMax, start: x, end: x2});\n  x = xDim.start;\n  x2 = xDim.end;\n  const yDim = getChartDimensionByScale(yScale, {min: options.yMin, max: options.yMax, start: y, end: y2});\n  y = yDim.start;\n  y2 = yDim.end;\n\n  return {\n    x,\n    y,\n    x2,\n    y2,\n    width: x2 - x,\n    height: y2 - y\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions} options\n */\nfunction getChartCircle(chart, options) {\n  const point = getChartPoint(chart, options);\n  return {\n    x: point.x + options.xAdjust,\n    y: point.y + options.yAdjust,\n    width: options.radius * 2,\n    height: options.radius * 2\n  };\n}\n\n/**\n * @param {Chart} chart\n * @param {PointAnnotationOptions} options\n * @returns\n */\nfunction resolvePointPosition(chart, options) {\n  if (!isBoundToPoint(options)) {\n    const box = getChartRect(chart, options);\n    const point = getRectCenterPoint(box);\n    let radius = options.radius;\n    if (!radius || isNaN(radius)) {\n      radius = Math.min(box.width, box.height) / 2;\n      options.radius = radius;\n    }\n    return {\n      x: point.x + options.xAdjust,\n      y: point.y + options.yAdjust,\n      width: radius * 2,\n      height: radius * 2\n    };\n  }\n  return getChartCircle(chart, options);\n}\n\nclass BoxAnnotation extends Element {\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange(x, y, this.getProps(['x', 'y', 'width', 'height'], useFinalPosition), this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getRectCenterPoint(this.getProps(['x', 'y', 'width', 'height'], useFinalPosition));\n  }\n\n  draw(ctx) {\n    ctx.save();\n    translate(ctx, this, this.options.rotation);\n    drawBox(ctx, this, this.options);\n    ctx.restore();\n  }\n\n  drawLabel(ctx) {\n    const {x, y, width, height, options} = this;\n    const {label, borderWidth} = options;\n    const halfBorder = borderWidth / 2;\n    const position = toPosition(label.position);\n    const padding = toPadding(label.padding);\n    const labelSize = measureLabelSize(ctx, label);\n    const labelRect = {\n      x: calculateX(this, labelSize, position, padding),\n      y: calculateY(this, labelSize, position, padding),\n      width: labelSize.width,\n      height: labelSize.height\n    };\n\n    ctx.save();\n    translate(ctx, this, label.rotation);\n    ctx.beginPath();\n    ctx.rect(x + halfBorder + padding.left, y + halfBorder + padding.top,\n      width - borderWidth - padding.width, height - borderWidth - padding.height);\n    ctx.clip();\n    drawLabel(ctx, labelRect, label);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    return getChartRect(chart, options);\n  }\n}\n\nBoxAnnotation.id = 'boxAnnotation';\n\nBoxAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  cornerRadius: undefined, // TODO: v2 remove support for cornerRadius\n  display: true,\n  label: {\n    borderWidth: undefined,\n    color: 'black',\n    content: null,\n    drawTime: undefined,\n    enabled: false,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: undefined,\n    textAlign: 'start',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    xAdjust: 0,\n    yAdjust: 0,\n    width: undefined\n  },\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: 'x',\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: 'y'\n};\n\nBoxAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nBoxAnnotation.descriptors = {\n  label: {\n    _fallback: true\n  }\n};\n\nfunction calculateX(box, labelSize, position, padding) {\n  const {x: start, x2: end, width: size, options} = box;\n  const {xAdjust: adjust, borderWidth} = options.label;\n  return calculatePosition$1({start, end, size}, {\n    position: position.x,\n    padding: {start: padding.left, end: padding.right},\n    adjust, borderWidth,\n    size: labelSize.width\n  });\n}\n\nfunction calculateY(box, labelSize, position, padding) {\n  const {y: start, y2: end, height: size, options} = box;\n  const {yAdjust: adjust, borderWidth} = options.label;\n  return calculatePosition$1({start, end, size}, {\n    position: position.y,\n    padding: {start: padding.top, end: padding.bottom},\n    adjust, borderWidth,\n    size: labelSize.height\n  });\n}\n\nfunction calculatePosition$1(boxOpts, labelOpts) {\n  const {start, end} = boxOpts;\n  const {position, padding: {start: padStart, end: padEnd}, adjust, borderWidth} = labelOpts;\n  const availableSize = end - borderWidth - start - padStart - padEnd - labelOpts.size;\n  return start + borderWidth / 2 + adjust + padStart + getRelativePosition(availableSize, position);\n}\n\nconst pointInLine = (p1, p2, t) => ({x: p1.x + t * (p2.x - p1.x), y: p1.y + t * (p2.y - p1.y)});\nconst interpolateX = (y, p1, p2) => pointInLine(p1, p2, Math.abs((y - p1.y) / (p2.y - p1.y))).x;\nconst interpolateY = (x, p1, p2) => pointInLine(p1, p2, Math.abs((x - p1.x) / (p2.x - p1.x))).y;\nconst sqr = v => v * v;\nconst defaultEpsilon = 0.001;\n\nfunction isLineInArea({x, y, x2, y2}, {top, right, bottom, left}) {\n  return !(\n    (x < left && x2 < left) ||\n    (x > right && x2 > right) ||\n    (y < top && y2 < top) ||\n    (y > bottom && y2 > bottom)\n  );\n}\n\nfunction limitPointToArea({x, y}, p2, {top, right, bottom, left}) {\n  if (x < left) {\n    y = interpolateY(left, {x, y}, p2);\n    x = left;\n  }\n  if (x > right) {\n    y = interpolateY(right, {x, y}, p2);\n    x = right;\n  }\n  if (y < top) {\n    x = interpolateX(top, {x, y}, p2);\n    y = top;\n  }\n  if (y > bottom) {\n    x = interpolateX(bottom, {x, y}, p2);\n    y = bottom;\n  }\n  return {x, y};\n}\n\nfunction limitLineToArea(p1, p2, area) {\n  const {x, y} = limitPointToArea(p1, p2, area);\n  const {x: x2, y: y2} = limitPointToArea(p2, p1, area);\n  return {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n}\n\nclass LineAnnotation extends Element {\n\n  // TODO: make private in v2\n  intersects(x, y, epsilon = defaultEpsilon, useFinalPosition) {\n    // Adapted from https://stackoverflow.com/a/6853926/25507\n    const {x: x1, y: y1, x2, y2} = this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition);\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    const lenSq = sqr(dx) + sqr(dy);\n    const t = lenSq === 0 ? -1 : ((x - x1) * dx + (y - y1) * dy) / lenSq;\n    let xx, yy;\n    if (t < 0) {\n      xx = x1;\n      yy = y1;\n    } else if (t > 1) {\n      xx = x2;\n      yy = y2;\n    } else {\n      xx = x1 + t * dx;\n      yy = y1 + t * dy;\n    }\n    return (sqr(x - xx) + sqr(y - yy)) <= epsilon;\n  }\n\n  /**\n   * @todo make private in v2\n   * @param {boolean} useFinalPosition - use the element's animation target instead of current position\n   * @param {top, right, bottom, left} [chartArea] - optional, area of the chart\n   * @returns {boolean} true if the label is visible\n   */\n  labelIsVisible(useFinalPosition, chartArea) {\n    const labelOpts = this.options.label;\n    if (!labelOpts || !labelOpts.enabled) {\n      return false;\n    }\n    return !chartArea || isLineInArea(this.getProps(['x', 'y', 'x2', 'y2'], useFinalPosition), chartArea);\n  }\n\n  // TODO: make private in v2\n  isOnLabel(mouseX, mouseY, useFinalPosition) {\n    if (!this.labelIsVisible(useFinalPosition)) {\n      return false;\n    }\n    const {labelX, labelY, labelWidth, labelHeight, labelRotation} = this.getProps(['labelX', 'labelY', 'labelWidth', 'labelHeight', 'labelRotation'], useFinalPosition);\n    const {x, y} = rotated({x: mouseX, y: mouseY}, {x: labelX, y: labelY}, -labelRotation);\n    const hBorderWidth = this.options.label.borderWidth / 2 || 0;\n    const w2 = labelWidth / 2 + hBorderWidth;\n    const h2 = labelHeight / 2 + hBorderWidth;\n    return x >= labelX - w2 - defaultEpsilon && x <= labelX + w2 + defaultEpsilon &&\n      y >= labelY - h2 - defaultEpsilon && y <= labelY + h2 + defaultEpsilon;\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const epsilon = sqr(this.options.borderWidth / 2);\n    return this.intersects(mouseX, mouseY, epsilon, useFinalPosition) || this.isOnLabel(mouseX, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint() {\n    return {\n      x: (this.x2 + this.x) / 2,\n      y: (this.y2 + this.y) / 2\n    };\n  }\n\n  draw(ctx) {\n    const {x, y, x2, y2, options} = this;\n\n    ctx.save();\n    if (!setBorderStyle(ctx, options)) {\n      // no border width, then line is not drawn\n      return ctx.restore();\n    }\n    setShadowStyle(ctx, options);\n    const angle = Math.atan2(y2 - y, x2 - x);\n    const length = Math.sqrt(Math.pow(x2 - x, 2) + Math.pow(y2 - y, 2));\n    const {startOpts, endOpts, startAdjust, endAdjust} = getArrowHeads(this);\n\n    ctx.translate(x, y);\n    ctx.rotate(angle);\n    ctx.beginPath();\n    ctx.moveTo(0 + startAdjust, 0);\n    ctx.lineTo(length - endAdjust, 0);\n    ctx.shadowColor = options.borderShadowColor;\n    ctx.stroke();\n    drawArrowHead(ctx, 0, startAdjust, startOpts);\n    drawArrowHead(ctx, length, -endAdjust, endOpts);\n    ctx.restore();\n  }\n\n  drawLabel(ctx, chartArea) {\n    if (!this.labelIsVisible(false, chartArea)) {\n      return;\n    }\n    const {labelX, labelY, labelWidth, labelHeight, labelRotation, labelPadding, labelTextSize, options: {label}} = this;\n\n    ctx.save();\n    ctx.translate(labelX, labelY);\n    ctx.rotate(labelRotation);\n\n    const boxRect = {\n      x: -(labelWidth / 2),\n      y: -(labelHeight / 2),\n      width: labelWidth,\n      height: labelHeight\n    };\n    drawBox(ctx, boxRect, label);\n\n    const labelTextRect = {\n      x: -(labelWidth / 2) + labelPadding.left + label.borderWidth / 2,\n      y: -(labelHeight / 2) + labelPadding.top + label.borderWidth / 2,\n      width: labelTextSize.width,\n      height: labelTextSize.height\n    };\n    drawLabel(ctx, labelTextRect, label);\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const scale = chart.scales[options.scaleID];\n    let {top: y, left: x, bottom: y2, right: x2} = chart.chartArea;\n    let min, max;\n\n    if (scale) {\n      min = scaleValue(scale, options.value, NaN);\n      max = scaleValue(scale, options.endValue, min);\n      if (scale.isHorizontal()) {\n        x = min;\n        x2 = max;\n      } else {\n        y = min;\n        y2 = max;\n      }\n    } else {\n      const xScale = chart.scales[options.xScaleID];\n      const yScale = chart.scales[options.yScaleID];\n\n      if (xScale) {\n        x = scaleValue(xScale, options.xMin, x);\n        x2 = scaleValue(xScale, options.xMax, x2);\n      }\n\n      if (yScale) {\n        y = scaleValue(yScale, options.yMin, y);\n        y2 = scaleValue(yScale, options.yMax, y2);\n      }\n    }\n    const inside = isLineInArea({x, y, x2, y2}, chart.chartArea);\n    const properties = inside\n      ? limitLineToArea({x, y}, {x: x2, y: y2}, chart.chartArea)\n      : {x, y, x2, y2, width: Math.abs(x2 - x), height: Math.abs(y2 - y)};\n\n    const label = options.label;\n    if (label && label.content) {\n      return loadLabelRect(properties, chart, label);\n    }\n    return properties;\n  }\n}\n\nLineAnnotation.id = 'lineAnnotation';\n\nconst arrowHeadsDefaults = {\n  backgroundColor: undefined,\n  backgroundShadowColor: undefined,\n  borderColor: undefined,\n  borderDash: undefined,\n  borderDashOffset: undefined,\n  borderShadowColor: undefined,\n  borderWidth: undefined,\n  enabled: undefined,\n  fill: undefined,\n  length: undefined,\n  shadowBlur: undefined,\n  shadowOffsetX: undefined,\n  shadowOffsetY: undefined,\n  width: undefined\n};\n\nLineAnnotation.defaults = {\n  adjustScaleRange: true,\n  arrowHeads: {\n    enabled: false,\n    end: Object.assign({}, arrowHeadsDefaults),\n    fill: false,\n    length: 12,\n    start: Object.assign({}, arrowHeadsDefaults),\n    width: 6\n  },\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 2,\n  display: true,\n  endValue: undefined,\n  label: {\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    backgroundShadowColor: 'transparent',\n    borderCapStyle: 'butt',\n    borderColor: 'black',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderRadius: 6,\n    borderShadowColor: 'transparent',\n    borderWidth: 0,\n    color: '#fff',\n    content: null,\n    cornerRadius: undefined, // TODO: v2 remove support for cornerRadius\n    drawTime: undefined,\n    enabled: false,\n    font: {\n      family: undefined,\n      lineHeight: undefined,\n      size: undefined,\n      style: undefined,\n      weight: 'bold'\n    },\n    height: undefined,\n    padding: 6,\n    position: 'center',\n    rotation: 0,\n    shadowBlur: 0,\n    shadowOffsetX: 0,\n    shadowOffsetY: 0,\n    textAlign: 'center',\n    textStrokeColor: undefined,\n    textStrokeWidth: 0,\n    width: undefined,\n    xAdjust: 0,\n    xPadding: undefined, // TODO: v2 remove support for xPadding\n    yAdjust: 0,\n    yPadding: undefined, // TODO: v2 remove support for yPadding\n  },\n  scaleID: undefined,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  value: undefined,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: 'x',\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: 'y'\n};\n\nLineAnnotation.descriptors = {\n  arrowHeads: {\n    start: {\n      _fallback: true\n    },\n    end: {\n      _fallback: true\n    },\n    _fallback: true\n  }\n};\n\nLineAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction loadLabelRect(line, chart, options) {\n  // TODO: v2 remove support for xPadding and yPadding\n  const {padding: lblPadding, xPadding, yPadding, borderWidth} = options;\n  const padding = getPadding(lblPadding, xPadding, yPadding);\n  const textSize = measureLabelSize(chart.ctx, options);\n  const width = textSize.width + padding.width + borderWidth;\n  const height = textSize.height + padding.height + borderWidth;\n  const labelRect = calculateLabelPosition(line, options, {width, height, padding}, chart.chartArea);\n  line.labelX = labelRect.x;\n  line.labelY = labelRect.y;\n  line.labelWidth = labelRect.width;\n  line.labelHeight = labelRect.height;\n  line.labelRotation = labelRect.rotation;\n  line.labelPadding = padding;\n  line.labelTextSize = textSize;\n  return line;\n}\n\nfunction calculateAutoRotation(line) {\n  const {x, y, x2, y2} = line;\n  const rotation = Math.atan2(y2 - y, x2 - x);\n  // Flip the rotation if it goes > PI/2 or < -PI/2, so label stays upright\n  return rotation > PI / 2 ? rotation - PI : rotation < PI / -2 ? rotation + PI : rotation;\n}\n\n// TODO: v2 remove support for xPadding and yPadding\nfunction getPadding(padding, xPadding, yPadding) {\n  let tempPadding = padding;\n  if (xPadding || yPadding) {\n    tempPadding = {x: xPadding || 6, y: yPadding || 6};\n  }\n  return toPadding(tempPadding);\n}\n\nfunction calculateLabelPosition(line, label, sizes, chartArea) {\n  const {width, height, padding} = sizes;\n  const {xAdjust, yAdjust} = label;\n  const p1 = {x: line.x, y: line.y};\n  const p2 = {x: line.x2, y: line.y2};\n  const rotation = label.rotation === 'auto' ? calculateAutoRotation(line) : toRadians(label.rotation);\n  const size = rotatedSize(width, height, rotation);\n  const t = calculateT(line, label, {labelSize: size, padding}, chartArea);\n  const pt = pointInLine(p1, p2, t);\n  const xCoordinateSizes = {size: size.w, min: chartArea.left, max: chartArea.right, padding: padding.left};\n  const yCoordinateSizes = {size: size.h, min: chartArea.top, max: chartArea.bottom, padding: padding.top};\n\n  return {\n    x: adjustLabelCoordinate(pt.x, xCoordinateSizes) + xAdjust,\n    y: adjustLabelCoordinate(pt.y, yCoordinateSizes) + yAdjust,\n    width,\n    height,\n    rotation\n  };\n}\n\nfunction rotatedSize(width, height, rotation) {\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  return {\n    w: Math.abs(width * cos) + Math.abs(height * sin),\n    h: Math.abs(width * sin) + Math.abs(height * cos)\n  };\n}\n\nfunction calculateT(line, label, sizes, chartArea) {\n  let t;\n  const space = spaceAround(line, chartArea);\n  if (label.position === 'start') {\n    t = calculateTAdjust({w: line.x2 - line.x, h: line.y2 - line.y}, sizes, label, space);\n  } else if (label.position === 'end') {\n    t = 1 - calculateTAdjust({w: line.x - line.x2, h: line.y - line.y2}, sizes, label, space);\n  } else {\n    t = getRelativePosition(1, label.position);\n  }\n  return t;\n}\n\nfunction calculateTAdjust(lineSize, sizes, label, space) {\n  const {labelSize, padding} = sizes;\n  const lineW = lineSize.w * space.dx;\n  const lineH = lineSize.h * space.dy;\n  const x = (lineW > 0) && ((labelSize.w / 2 + padding.left - space.x) / lineW);\n  const y = (lineH > 0) && ((labelSize.h / 2 + padding.top - space.y) / lineH);\n  return clamp(Math.max(x, y), 0, 0.25);\n}\n\nfunction spaceAround(line, chartArea) {\n  const {x, x2, y, y2} = line;\n  const t = Math.min(y, y2) - chartArea.top;\n  const l = Math.min(x, x2) - chartArea.left;\n  const b = chartArea.bottom - Math.max(y, y2);\n  const r = chartArea.right - Math.max(x, x2);\n  return {\n    x: Math.min(l, r),\n    y: Math.min(t, b),\n    dx: l <= r ? 1 : -1,\n    dy: t <= b ? 1 : -1\n  };\n}\n\nfunction adjustLabelCoordinate(coordinate, labelSizes) {\n  const {size, min, max, padding} = labelSizes;\n  const halfSize = size / 2;\n  if (size > max - min) {\n    // if it does not fit, display as much as possible\n    return (max + min) / 2;\n  }\n  if (min >= (coordinate - padding - halfSize)) {\n    coordinate = min + padding + halfSize;\n  }\n  if (max <= (coordinate + padding + halfSize)) {\n    coordinate = max - padding - halfSize;\n  }\n  return coordinate;\n}\n\nfunction getArrowHeads(line) {\n  const options = line.options;\n  const arrowStartOpts = options.arrowHeads && options.arrowHeads.start;\n  const arrowEndOpts = options.arrowHeads && options.arrowHeads.end;\n  return {\n    startOpts: arrowStartOpts,\n    endOpts: arrowEndOpts,\n    startAdjust: getLineAdjust(line, arrowStartOpts),\n    endAdjust: getLineAdjust(line, arrowEndOpts)\n  };\n}\n\nfunction getLineAdjust(line, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.enabled) {\n    return 0;\n  }\n  const {length, width} = arrowOpts;\n  const adjust = line.options.borderWidth / 2;\n  const p1 = {x: length, y: width + adjust};\n  const p2 = {x: 0, y: adjust};\n  return Math.abs(interpolateX(0, p1, p2));\n}\n\nfunction drawArrowHead(ctx, offset, adjust, arrowOpts) {\n  if (!arrowOpts || !arrowOpts.enabled) {\n    return;\n  }\n  const {length, width, fill, backgroundColor, borderColor} = arrowOpts;\n  const arrowOffsetX = Math.abs(offset - length) + adjust;\n  ctx.beginPath();\n  setShadowStyle(ctx, arrowOpts);\n  setBorderStyle(ctx, arrowOpts);\n  ctx.moveTo(arrowOffsetX, -width);\n  ctx.lineTo(offset + adjust, 0);\n  ctx.lineTo(arrowOffsetX, width);\n  if (fill === true) {\n    ctx.fillStyle = backgroundColor || borderColor;\n    ctx.closePath();\n    ctx.fill();\n    ctx.shadowColor = 'transparent';\n  } else {\n    ctx.shadowColor = arrowOpts.borderShadowColor;\n  }\n  ctx.stroke();\n}\n\nclass EllipseAnnotation extends Element {\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return pointInEllipse({x: mouseX, y: mouseY}, this.getProps(['width', 'height'], useFinalPosition), this.options.rotation, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getRectCenterPoint(this.getProps(['x', 'y', 'width', 'height'], useFinalPosition));\n  }\n\n  draw(ctx) {\n    const {width, height, options} = this;\n    const center = this.getCenterPoint();\n\n    ctx.save();\n    translate(ctx, this, options.rotation);\n    setShadowStyle(ctx, this.options);\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    const stroke = setBorderStyle(ctx, options);\n    ctx.ellipse(center.x, center.y, height / 2, width / 2, PI / 2, 0, 2 * PI);\n    ctx.fill();\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    return getChartRect(chart, options);\n  }\n\n}\n\nEllipseAnnotation.id = 'ellipseAnnotation';\n\nEllipseAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: 'x',\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: 'y'\n};\n\nEllipseAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nfunction pointInEllipse(p, ellipse, rotation, borderWidth) {\n  const {width, height} = ellipse;\n  const center = ellipse.getCenterPoint(true);\n  const xRadius = width / 2;\n  const yRadius = height / 2;\n\n  if (xRadius <= 0 || yRadius <= 0) {\n    return false;\n  }\n  // https://stackoverflow.com/questions/7946187/point-and-ellipse-rotated-position-test-algorithm\n  const angle = toRadians(rotation || 0);\n  const hBorderWidth = borderWidth / 2 || 0;\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const a = Math.pow(cosAngle * (p.x - center.x) + sinAngle * (p.y - center.y), 2);\n  const b = Math.pow(sinAngle * (p.x - center.x) - cosAngle * (p.y - center.y), 2);\n  return (a / Math.pow(xRadius + hBorderWidth, 2)) + (b / Math.pow(yRadius + hBorderWidth, 2)) <= 1.0001;\n}\n\nclass LabelAnnotation extends Element {\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {x, y} = rotated({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), toRadians(-this.options.rotation));\n    return inBoxRange(x, y, this.getProps(['x', 'y', 'width', 'height'], useFinalPosition), this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getRectCenterPoint(this.getProps(['x', 'y', 'width', 'height'], useFinalPosition));\n  }\n\n  draw(ctx) {\n    if (!this.options.content) {\n      return;\n    }\n    const {labelX, labelY, labelWidth, labelHeight, options} = this;\n    ctx.save();\n    translate(ctx, this, options.rotation);\n    drawCallout(ctx, this);\n    drawBox(ctx, this, options);\n    drawLabel(ctx, {x: labelX, y: labelY, width: labelWidth, height: labelHeight}, options);\n    ctx.restore();\n  }\n\n  // TODO: make private in v2\n  resolveElementProperties(chart, options) {\n    const point = !isBoundToPoint(options) ? getRectCenterPoint(getChartRect(chart, options)) : getChartPoint(chart, options);\n    const padding = toPadding(options.padding);\n    const labelSize = measureLabelSize(chart.ctx, options);\n    const boxSize = measureRect(point, labelSize, options, padding);\n    const hBorderWidth = options.borderWidth / 2;\n    const properties = {\n      pointX: point.x,\n      pointY: point.y,\n      ...boxSize,\n      labelX: boxSize.x + padding.left + hBorderWidth,\n      labelY: boxSize.y + padding.top + hBorderWidth,\n      labelWidth: labelSize.width,\n      labelHeight: labelSize.height\n    };\n    properties.calloutPosition = options.callout.enabled && resolveCalloutPosition(properties, options.callout, options.rotation);\n    return properties;\n  }\n}\n\nLabelAnnotation.id = 'labelAnnotation';\n\nLabelAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundColor: 'transparent',\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderRadius: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 0,\n  callout: {\n    borderCapStyle: 'butt',\n    borderColor: undefined,\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 1,\n    enabled: false,\n    margin: 5,\n    position: 'auto',\n    side: 5,\n    start: '50%',\n  },\n  color: 'black',\n  content: null,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: undefined,\n    size: undefined,\n    style: undefined,\n    weight: undefined\n  },\n  height: undefined,\n  padding: 6,\n  position: 'center',\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  textAlign: 'center',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  width: undefined,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: 'x',\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\n\nLabelAnnotation.defaultRoutes = {\n  borderColor: 'color'\n};\n\nfunction measureRect(point, size, options, padding) {\n  const width = size.width + padding.width + options.borderWidth;\n  const height = size.height + padding.height + options.borderWidth;\n  const position = toPosition(options.position);\n\n  return {\n    x: calculatePosition(point.x, width, options.xAdjust, position.x),\n    y: calculatePosition(point.y, height, options.yAdjust, position.y),\n    width,\n    height\n  };\n}\n\nfunction calculatePosition(start, size, adjust = 0, position) {\n  return start - getRelativePosition(size, position) + adjust;\n}\n\nfunction drawCallout(ctx, element) {\n  const {pointX, pointY, calloutPosition, options} = element;\n  if (!calloutPosition || element.inRange(pointX, pointY)) {\n    return;\n  }\n  const callout = options.callout;\n\n  ctx.save();\n  ctx.beginPath();\n  const stroke = setBorderStyle(ctx, callout);\n  if (!stroke) {\n    return ctx.restore();\n  }\n  const {separatorStart, separatorEnd} = getCalloutSeparatorCoord(element, calloutPosition);\n  const {sideStart, sideEnd} = getCalloutSideCoord(element, calloutPosition, separatorStart);\n  if (callout.margin > 0 || options.borderWidth === 0) {\n    ctx.moveTo(separatorStart.x, separatorStart.y);\n    ctx.lineTo(separatorEnd.x, separatorEnd.y);\n  }\n  ctx.moveTo(sideStart.x, sideStart.y);\n  ctx.lineTo(sideEnd.x, sideEnd.y);\n  const rotatedPoint = rotated({x: pointX, y: pointY}, element.getCenterPoint(), toRadians(-options.rotation));\n  ctx.lineTo(rotatedPoint.x, rotatedPoint.y);\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction getCalloutSeparatorCoord(element, position) {\n  const {x, y, width, height} = element;\n  const adjust = getCalloutSeparatorAdjust(element, position);\n  let separatorStart, separatorEnd;\n  if (position === 'left' || position === 'right') {\n    separatorStart = {x: x + adjust, y};\n    separatorEnd = {x: separatorStart.x, y: separatorStart.y + height};\n  } else {\n    //  position 'top' or 'bottom'\n    separatorStart = {x, y: y + adjust};\n    separatorEnd = {x: separatorStart.x + width, y: separatorStart.y};\n  }\n  return {separatorStart, separatorEnd};\n}\n\nfunction getCalloutSeparatorAdjust(element, position) {\n  const {width, height, options} = element;\n  const adjust = options.callout.margin + options.borderWidth / 2;\n  if (position === 'right') {\n    return width + adjust;\n  } else if (position === 'bottom') {\n    return height + adjust;\n  }\n  return -adjust;\n}\n\nfunction getCalloutSideCoord(element, position, separatorStart) {\n  const {y, width, height, options} = element;\n  const start = options.callout.start;\n  const side = getCalloutSideAdjust(position, options.callout);\n  let sideStart, sideEnd;\n  if (position === 'left' || position === 'right') {\n    sideStart = {x: separatorStart.x, y: y + getSize(height, start)};\n    sideEnd = {x: sideStart.x + side, y: sideStart.y};\n  } else {\n    //  position 'top' or 'bottom'\n    sideStart = {x: separatorStart.x + getSize(width, start), y: separatorStart.y};\n    sideEnd = {x: sideStart.x, y: sideStart.y + side};\n  }\n  return {sideStart, sideEnd};\n}\n\nfunction getCalloutSideAdjust(position, options) {\n  const side = options.side;\n  if (position === 'left' || position === 'top') {\n    return -side;\n  }\n  return side;\n}\n\nfunction resolveCalloutPosition(properties, options, rotation) {\n  const position = options.position;\n  if (position === 'left' || position === 'right' || position === 'top' || position === 'bottom') {\n    return position;\n  }\n  return resolveCalloutAutoPosition(properties, options, rotation);\n}\n\nconst positions = ['left', 'bottom', 'top', 'right'];\n\nfunction resolveCalloutAutoPosition(properties, options, rotation) {\n  const {x, y, width, height, pointX, pointY} = properties;\n  const center = {x: x + width / 2, y: y + height / 2};\n  const start = options.start;\n  const xAdjust = getSize(width, start);\n  const yAdjust = getSize(height, start);\n  const xPoints = [x, x + xAdjust, x + xAdjust, x + width];\n  const yPoints = [y + yAdjust, y + height, y, y + yAdjust];\n  const result = [];\n  for (let index = 0; index < 4; index++) {\n    const rotatedPoint = rotated({x: xPoints[index], y: yPoints[index]}, center, toRadians(rotation));\n    result.push({\n      position: positions[index],\n      distance: distanceBetweenPoints(rotatedPoint, {x: pointX, y: pointY})\n    });\n  }\n  return result.sort((a, b) => a.distance - b.distance)[0].position;\n}\n\nclass PointAnnotation extends Element {\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const {width} = this.getProps(['width'], useFinalPosition);\n    return inPointRange({x: mouseX, y: mouseY}, this.getCenterPoint(useFinalPosition), width / 2, this.options.borderWidth);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const options = this.options;\n    const borderWidth = options.borderWidth;\n    if (options.radius < 0.1) {\n      return;\n    }\n    ctx.save();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    options.borderWidth = 0;\n    drawPoint(ctx, options, this.x, this.y);\n    if (stroke && !isImageOrCanvas(options.pointStyle)) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n    options.borderWidth = borderWidth;\n  }\n\n  resolveElementProperties(chart, options) {\n    return resolvePointPosition(chart, options);\n  }\n}\n\nPointAnnotation.id = 'pointAnnotation';\n\nPointAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  pointStyle: 'circle',\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: 'x',\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\n\nPointAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\nclass PolygonAnnotation extends Element {\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return this.options.radius >= 0.1 && this.elements.length > 1 && pointIsInPolygon(this.elements, mouseX, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    return getElementCenterPoint(this, useFinalPosition);\n  }\n\n  draw(ctx) {\n    const {elements, options} = this;\n    ctx.save();\n    ctx.beginPath();\n    ctx.fillStyle = options.backgroundColor;\n    setShadowStyle(ctx, options);\n    const stroke = setBorderStyle(ctx, options);\n    let first = true;\n    for (const el of elements) {\n      if (first) {\n        ctx.moveTo(el.x, el.y);\n        first = false;\n      } else {\n        ctx.lineTo(el.x, el.y);\n      }\n    }\n    ctx.closePath();\n    ctx.fill();\n    // If no border, don't draw it\n    if (stroke) {\n      ctx.shadowColor = options.borderShadowColor;\n      ctx.stroke();\n    }\n    ctx.restore();\n  }\n\n  resolveElementProperties(chart, options) {\n    const {x, y, width, height} = resolvePointPosition(chart, options);\n    const {sides, radius, rotation, borderWidth} = options;\n    const halfBorder = borderWidth / 2;\n    const elements = [];\n    const angle = (2 * PI) / sides;\n    let rad = rotation * RAD_PER_DEG;\n    for (let i = 0; i < sides; i++, rad += angle) {\n      const sin = Math.sin(rad);\n      const cos = Math.cos(rad);\n      elements.push({\n        type: 'point',\n        optionScope: 'point',\n        properties: {\n          x: x + sin * radius,\n          y: y - cos * radius,\n          bX: x + sin * (radius + halfBorder),\n          bY: y - cos * (radius + halfBorder)\n        }\n      });\n    }\n    return {x, y, width, height, elements, initProperties: {x, y}};\n  }\n}\n\nPolygonAnnotation.id = 'polygonAnnotation';\n\nPolygonAnnotation.defaults = {\n  adjustScaleRange: true,\n  backgroundShadowColor: 'transparent',\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderShadowColor: 'transparent',\n  borderWidth: 1,\n  display: true,\n  point: {\n    radius: 0\n  },\n  radius: 10,\n  rotation: 0,\n  shadowBlur: 0,\n  shadowOffsetX: 0,\n  shadowOffsetY: 0,\n  sides: 3,\n  xAdjust: 0,\n  xMax: undefined,\n  xMin: undefined,\n  xScaleID: 'x',\n  xValue: undefined,\n  yAdjust: 0,\n  yMax: undefined,\n  yMin: undefined,\n  yScaleID: 'y',\n  yValue: undefined\n};\n\nPolygonAnnotation.defaultRoutes = {\n  borderColor: 'color',\n  backgroundColor: 'color'\n};\n\n\nfunction pointIsInPolygon(points, x, y, useFinalPosition) {\n  let isInside = false;\n  let A = points[points.length - 1].getProps(['bX', 'bY'], useFinalPosition);\n  for (const point of points) {\n    const B = point.getProps(['bX', 'bY'], useFinalPosition);\n    if ((B.bY > y) !== (A.bY > y) && x < (A.bX - B.bX) * (y - B.bY) / (A.bY - B.bY) + B.bX) {\n      isInside = !isInside;\n    }\n    A = B;\n  }\n  return isInside;\n}\n\nconst annotationTypes = {\n  box: BoxAnnotation,\n  ellipse: EllipseAnnotation,\n  label: LabelAnnotation,\n  line: LineAnnotation,\n  point: PointAnnotation,\n  polygon: PolygonAnnotation\n};\n\n/**\n * Register fallback for annotation elements\n * For example lineAnnotation options would be looked through:\n * - the annotation object (options.plugins.annotation.annotations[id])\n * - element options (options.elements.lineAnnotation)\n * - element defaults (defaults.elements.lineAnnotation)\n * - annotation plugin defaults (defaults.plugins.annotation, this is what we are registering here)\n */\nObject.keys(annotationTypes).forEach(key => {\n  defaults.describe(`elements.${annotationTypes[key].id}`, {\n    _fallback: 'plugins.annotation'\n  });\n});\n\nconst directUpdater = {\n  update: Object.assign\n};\n\n/**\n * Resolve the annotation type, checking if is supported.\n * @param {string} [type=line] - annotation type\n * @returns {string} resolved annotation type\n */\nfunction resolveType(type = 'line') {\n  if (annotationTypes[type]) {\n    return type;\n  }\n  console.warn(`Unknown annotation type: '${type}', defaulting to 'line'`);\n  return 'line';\n}\n\n/**\n * Create or update all annotation elements, configured to the plugin.\n * @param {Chart} chart - the chart where the plugin is enabled\n * @param {Object} state - the state of the plugin\n * @param {Object} options - annotation options to use\n * @param {UpdateMode} mode - The update mode\n */\nfunction updateElements(chart, state, options, mode) {\n  const animations = resolveAnimations(chart, options.animations, mode);\n\n  const annotations = state.annotations;\n  const elements = resyncElements(state.elements, annotations);\n\n  for (let i = 0; i < annotations.length; i++) {\n    const annotationOptions = annotations[i];\n    const element = getOrCreateElement(elements, i, annotationOptions.type);\n    const resolver = annotationOptions.setContext(getContext(chart, element, annotationOptions));\n    const properties = element.resolveElementProperties(chart, resolver);\n\n    properties.skip = toSkip(properties);\n\n    if ('elements' in properties) {\n      updateSubElements(element, properties, resolver, animations);\n      // Remove the sub-element definitions from properties, so the actual elements\n      // are not overwritten by their definitions\n      delete properties.elements;\n    }\n\n    if (!defined(element.x)) {\n      // If the element is newly created, assing the properties directly - to\n      // make them readily awailable to any scriptable options. If we do not do this,\n      // the properties retruned by `resolveElementProperties` are available only\n      // after options resolution.\n      Object.assign(element, properties);\n    }\n\n    properties.options = resolveAnnotationOptions(resolver);\n\n    animations.update(element, properties);\n  }\n}\n\nfunction toSkip(properties) {\n  return isNaN(properties.x) || isNaN(properties.y);\n}\n\nfunction resolveAnimations(chart, animOpts, mode) {\n  if (mode === 'reset' || mode === 'none' || mode === 'resize') {\n    return directUpdater;\n  }\n  return new Animations(chart, animOpts);\n}\n\nfunction updateSubElements(mainElement, {elements, initProperties}, resolver, animations) {\n  const subElements = mainElement.elements || (mainElement.elements = []);\n  subElements.length = elements.length;\n  for (let i = 0; i < elements.length; i++) {\n    const definition = elements[i];\n    const properties = definition.properties;\n    const subElement = getOrCreateElement(subElements, i, definition.type, initProperties);\n    const subResolver = resolver[definition.optionScope].override(definition);\n    properties.options = resolveAnnotationOptions(subResolver);\n    animations.update(subElement, properties);\n  }\n}\n\nfunction getOrCreateElement(elements, index, type, initProperties) {\n  const elementClass = annotationTypes[resolveType(type)];\n  let element = elements[index];\n  if (!element || !(element instanceof elementClass)) {\n    element = elements[index] = new elementClass();\n    if (isObject(initProperties)) {\n      Object.assign(element, initProperties);\n    }\n  }\n  return element;\n}\n\nfunction resolveAnnotationOptions(resolver) {\n  const elementClass = annotationTypes[resolveType(resolver.type)];\n  const result = {};\n  result.id = resolver.id;\n  result.type = resolver.type;\n  result.drawTime = resolver.drawTime;\n  Object.assign(result,\n    resolveObj(resolver, elementClass.defaults),\n    resolveObj(resolver, elementClass.defaultRoutes));\n  for (const hook of hooks) {\n    result[hook] = resolver[hook];\n  }\n  return result;\n}\n\nfunction resolveObj(resolver, defs) {\n  const result = {};\n  for (const prop of Object.keys(defs)) {\n    const optDefs = defs[prop];\n    const value = resolver[prop];\n    result[prop] = isObject(optDefs) ? resolveObj(value, optDefs) : value;\n  }\n  return result;\n}\n\nfunction getContext(chart, element, annotation) {\n  return element.$context || (element.$context = Object.assign(Object.create(chart.getContext()), {\n    element,\n    id: annotation.id,\n    type: 'annotation'\n  }));\n}\n\nfunction resyncElements(elements, annotations) {\n  const count = annotations.length;\n  const start = elements.length;\n\n  if (start < count) {\n    const add = count - start;\n    elements.splice(start, 0, ...new Array(add));\n  } else if (start > count) {\n    elements.splice(count, start - count);\n  }\n  return elements;\n}\n\nvar name = \"chartjs-plugin-annotation\";\nvar version = \"1.4.0\";\n\nconst chartStates = new Map();\n\nvar annotation = {\n  id: 'annotation',\n\n  version,\n\n  /* TODO: enable in v2\n  beforeRegister() {\n    requireVersion('chart.js', '3.7', Chart.version);\n  },\n  */\n\n  afterRegister() {\n    Chart.register(annotationTypes);\n\n    // TODO: Remove this check, warning and workaround in v2\n    if (!requireVersion('chart.js', '3.7', Chart.version, false)) {\n      console.warn(`${name} has known issues with chart.js versions prior to 3.7, please consider upgrading.`);\n\n      // Workaround for https://github.com/chartjs/chartjs-plugin-annotation/issues/572\n      Chart.defaults.set('elements.lineAnnotation', {\n        callout: {},\n        font: {},\n        padding: 6\n      });\n    }\n  },\n\n  afterUnregister() {\n    Chart.unregister(annotationTypes);\n  },\n\n  beforeInit(chart) {\n    chartStates.set(chart, {\n      annotations: [],\n      elements: [],\n      visibleElements: [],\n      listeners: {},\n      listened: false,\n      moveListened: false\n    });\n  },\n\n  beforeUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    const annotations = state.annotations = [];\n\n    let annotationOptions = options.annotations;\n    if (isObject(annotationOptions)) {\n      Object.keys(annotationOptions).forEach(key => {\n        const value = annotationOptions[key];\n        if (isObject(value)) {\n          value.id = key;\n          annotations.push(value);\n        }\n      });\n    } else if (isArray(annotationOptions)) {\n      annotations.push(...annotationOptions);\n    }\n    verifyScaleOptions(annotations, chart.scales);\n  },\n\n  afterDataLimits(chart, args) {\n    const state = chartStates.get(chart);\n    adjustScaleRange(chart, args.scale, state.annotations.filter(a => a.display && a.adjustScaleRange));\n  },\n\n  afterUpdate(chart, args, options) {\n    const state = chartStates.get(chart);\n    updateListeners(chart, state, options);\n    updateElements(chart, state, options, args.mode);\n    state.visibleElements = state.elements.filter(el => !el.skip && el.options.display);\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options.clip);\n  },\n\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options.clip);\n  },\n\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options.clip);\n  },\n\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options.clip);\n  },\n\n  beforeEvent(chart, args, options) {\n    const state = chartStates.get(chart);\n    handleEvent(state, args.event, options);\n  },\n\n  destroy(chart) {\n    chartStates.delete(chart);\n  },\n\n  _getState(chart) {\n    return chartStates.get(chart);\n  },\n\n  defaults: {\n    animations: {\n      numbers: {\n        properties: ['x', 'y', 'x2', 'y2', 'width', 'height', 'pointX', 'pointY', 'labelX', 'labelY', 'labelWidth', 'labelHeight', 'radius'],\n        type: 'number'\n      },\n    },\n    clip: true,\n    dblClickSpeed: 350, // ms\n    drawTime: 'afterDatasetsDraw',\n    label: {\n      drawTime: null\n    }\n  },\n\n  descriptors: {\n    _indexable: false,\n    _scriptable: (prop) => !hooks.includes(prop),\n    annotations: {\n      _allKeys: false,\n      _fallback: (prop, opts) => `elements.${annotationTypes[resolveType(opts.type)].id}`,\n    },\n  },\n\n  additionalOptionScopes: ['']\n};\n\nfunction draw(chart, caller, clip) {\n  const {ctx, chartArea} = chart;\n  const {visibleElements} = chartStates.get(chart);\n\n  if (clip) {\n    clipArea(ctx, chartArea);\n  }\n\n  drawElements(ctx, visibleElements, caller);\n  drawSubElements(ctx, visibleElements, caller);\n\n  if (clip) {\n    unclipArea(ctx);\n  }\n\n  visibleElements.forEach(el => {\n    if (!('drawLabel' in el)) {\n      return;\n    }\n    const label = el.options.label;\n    if (label && label.enabled && label.content && (label.drawTime || el.options.drawTime) === caller) {\n      el.drawLabel(ctx, chartArea);\n    }\n  });\n}\n\nfunction drawElements(ctx, elements, caller) {\n  for (const el of elements) {\n    if (el.options.drawTime === caller) {\n      el.draw(ctx);\n    }\n  }\n}\n\nfunction drawSubElements(ctx, elements, caller) {\n  for (const el of elements) {\n    if (isArray(el.elements)) {\n      drawElements(ctx, el.elements, caller);\n    }\n  }\n}\n\nexport { annotation as default };\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\nimport { millisecondsInHour } from \"./constants.mjs\";\n\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of hours to be added.\n *\n * @returns The new date with the hours added\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\nexport function addHours(date, amount) {\n  return addMilliseconds(date, amount * millisecondsInHour);\n}\n\n// Fallback for modularized imports:\nexport default addHours;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of milliseconds to be added.\n *\n * @returns The new date with the milliseconds added\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\nexport function addMilliseconds(date, amount) {\n  const timestamp = +toDate(date);\n  return constructFrom(date, timestamp + amount);\n}\n\n// Fallback for modularized imports:\nexport default addMilliseconds;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of minutes to be added.\n *\n * @returns The new date with the minutes added\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\nexport function addMinutes(date, amount) {\n  return addMilliseconds(date, amount * millisecondsInMinute);\n}\n\n// Fallback for modularized imports:\nexport default addMinutes;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name addQuarters\n * @category Quarter Helpers\n * @summary Add the specified number of year quarters to the given date.\n *\n * @description\n * Add the specified number of year quarters to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of quarters to be added.\n *\n * @returns The new date with the quarters added\n *\n * @example\n * // Add 1 quarter to 1 September 2014:\n * const result = addQuarters(new Date(2014, 8, 1), 1)\n * //=> Mon Dec 01 2014 00:00:00\n */\nexport function addQuarters(date, amount) {\n  const months = amount * 3;\n  return addMonths(date, months);\n}\n\n// Fallback for modularized imports:\nexport default addQuarters;\n","import { addMilliseconds } from \"./addMilliseconds.mjs\";\n\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of seconds to be added.\n *\n * @returns The new date with the seconds added\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\nexport function addSeconds(date, amount) {\n  return addMilliseconds(date, amount * 1000);\n}\n\n// Fallback for modularized imports:\nexport default addSeconds;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of weeks to be added.\n *\n * @returns The new date with the weeks added\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * const result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\nexport function addWeeks(date, amount) {\n  const days = amount * 7;\n  return addDays(date, days);\n}\n\n// Fallback for modularized imports:\nexport default addWeeks;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of years to be added.\n *\n * @returns The new date with the years added\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport function addYears(date, amount) {\n  return addMonths(date, amount * 12);\n}\n\n// Fallback for modularized imports:\nexport default addYears;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const diff = _dateLeft.getTime() - _dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const yearDiff = _dateLeft.getFullYear() - _dateRight.getFullYear();\n  const monthDiff = _dateLeft.getMonth() - _dateRight.getMonth();\n\n  return yearDiff * 12 + monthDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n\n * @returns The number of calendar years\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\nexport function differenceInCalendarYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  return _dateLeft.getFullYear() - _dateRight.getFullYear();\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarYears;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full days according to the local timezone\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n *\n * @example\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * const result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n * //=> 92\n */\nexport function differenceInDays(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareLocalAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarDays(_dateLeft, _dateRight));\n\n  _dateLeft.setDate(_dateLeft.getDate() - sign * difference);\n\n  // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastDayNotFull = Number(\n    compareLocalAsc(_dateLeft, _dateRight) === -sign,\n  );\n  const result = sign * (difference - isLastDayNotFull);\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\nfunction compareLocalAsc(dateLeft, dateRight) {\n  const diff =\n    dateLeft.getFullYear() - dateRight.getFullYear() ||\n    dateLeft.getMonth() - dateRight.getMonth() ||\n    dateLeft.getDate() - dateRight.getDate() ||\n    dateLeft.getHours() - dateRight.getHours() ||\n    dateLeft.getMinutes() - dateRight.getMinutes() ||\n    dateLeft.getSeconds() - dateRight.getSeconds() ||\n    dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n\n// Fallback for modularized imports:\nexport default differenceInDays;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInHour } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInHours} function options.\n */\n\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of hours\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * const result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\nexport function differenceInHours(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInHour;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInHours;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(dateLeft, dateRight) {\n  return +toDate(dateLeft) - +toDate(dateRight);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { millisecondsInMinute } from \"./constants.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.mjs\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(\n    differenceInCalendarMonths(_dateLeft, _dateRight),\n  );\n  let result;\n\n  // Check for the difference of less than month\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (_dateLeft.getMonth() === 1 && _dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      _dateLeft.setDate(30);\n    }\n\n    _dateLeft.setMonth(_dateLeft.getMonth() - sign * difference);\n\n    // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n    let isLastMonthNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n\n    // Check for cases of one full calendar month\n    if (\n      isLastDayOfMonth(toDate(dateLeft)) &&\n      difference === 1 &&\n      compareAsc(dateLeft, _dateRight) === 1\n    ) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  }\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMonths } from \"./differenceInMonths.mjs\";\n\n/**\n * The {@link differenceInQuarters} function options.\n */\n\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of quarters between the given dates.\n *\n * @description\n * Get the number of quarters between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of full quarters\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * const result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\nexport function differenceInQuarters(dateLeft, dateRight, options) {\n  const diff = differenceInMonths(dateLeft, dateRight) / 3;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInQuarters;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.mjs\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(dateLeft, dateRight, options) {\n  const diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.mjs\";\nimport { differenceInDays } from \"./differenceInDays.mjs\";\n\n/**\n * The {@link differenceInWeeks} function options.\n */\n\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero by default.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.trunc(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full weeks\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * @example\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * const result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\nexport function differenceInWeeks(dateLeft, dateRight, options) {\n  const diff = differenceInDays(dateLeft, dateRight) / 7;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInWeeks;\n","import { compareAsc } from \"./compareAsc.mjs\";\nimport { differenceInCalendarYears } from \"./differenceInCalendarYears.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of full years\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\nexport function differenceInYears(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n\n  const sign = compareAsc(_dateLeft, _dateRight);\n  const difference = Math.abs(differenceInCalendarYears(_dateLeft, _dateRight));\n\n  // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n  _dateLeft.setFullYear(1584);\n  _dateRight.setFullYear(1584);\n\n  // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n  const isLastYearNotFull = compareAsc(_dateLeft, _dateRight) === -sign;\n  const result = sign * (difference - +isLastYearNotFull);\n\n  // Prevent negative zero\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInYears;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfHour\n * @category Hour Helpers\n * @summary Return the end of an hour for the given date.\n *\n * @description\n * Return the end of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of an hour\n *\n * @example\n * // The end of an hour for 2 September 2014 11:55:00:\n * const result = endOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:59:59.999\n */\nexport function endOfHour(date) {\n  const _date = toDate(date);\n  _date.setMinutes(59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfHour;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMinute\n * @category Minute Helpers\n * @summary Return the end of a minute for the given date.\n *\n * @description\n * Return the end of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a minute\n *\n * @example\n * // The end of a minute for 1 December 2014 22:15:45.400:\n * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:59.999\n */\nexport function endOfMinute(date) {\n  const _date = toDate(date);\n  _date.setSeconds(59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMinute;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfQuarter\n * @category Quarter Helpers\n * @summary Return the end of a year quarter for the given date.\n *\n * @description\n * Return the end of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a quarter\n *\n * @example\n * // The end of a quarter for 2 September 2014 11:55:00:\n * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfQuarter(date) {\n  const _date = toDate(date);\n  const currentMonth = _date.getMonth();\n  const month = currentMonth - (currentMonth % 3) + 3;\n  _date.setMonth(month, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfQuarter;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfSecond\n * @category Second Helpers\n * @summary Return the end of a second for the given date.\n *\n * @description\n * Return the end of a second for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a second\n *\n * @example\n * // The end of a second for 1 December 2014 22:15:45.400:\n * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.999\n */\nexport function endOfSecond(date) {\n  const _date = toDate(date);\n  _date.setMilliseconds(999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfSecond;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a year\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * const result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\nexport function endOfYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n  _date.setFullYear(year + 1, 0, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfYear;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { endOfDay } from \"./endOfDay.mjs\";\nimport { endOfMonth } from \"./endOfMonth.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date) {\n  const _date = toDate(date);\n  return +endOfDay(_date) === +endOfMonth(_date);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { millisecondsInHour, millisecondsInMinute } from \"./constants.mjs\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  const timestamp = date.getTime();\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    const dirtyDate = new Date(timestamp + time);\n    // JS parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n    const result = new Date(0);\n    result.setFullYear(\n      dirtyDate.getUTCFullYear(),\n      dirtyDate.getUTCMonth(),\n      dirtyDate.getUTCDate(),\n    );\n    result.setHours(\n      dirtyDate.getUTCHours(),\n      dirtyDate.getUTCMinutes(),\n      dirtyDate.getUTCSeconds(),\n      dirtyDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an hour\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * const result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\nexport function startOfHour(date) {\n  const _date = toDate(date);\n  _date.setMinutes(0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfHour;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMinute\n * @category Minute Helpers\n * @summary Return the start of a minute for the given date.\n *\n * @description\n * Return the start of a minute for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a minute\n *\n * @example\n * // The start of a minute for 1 December 2014 22:15:45.400:\n * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:00\n */\nexport function startOfMinute(date) {\n  const _date = toDate(date);\n  _date.setSeconds(0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMinute;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfQuarter\n * @category Quarter Helpers\n * @summary Return the start of a year quarter for the given date.\n *\n * @description\n * Return the start of a year quarter for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a quarter\n *\n * @example\n * // The start of a quarter for 2 September 2014 11:55:00:\n * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Jul 01 2014 00:00:00\n */\nexport function startOfQuarter(date) {\n  const _date = toDate(date);\n  const currentMonth = _date.getMonth();\n  const month = currentMonth - (currentMonth % 3);\n  _date.setMonth(month, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfQuarter;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfSecond\n * @category Second Helpers\n * @summary Return the start of a second for the given date.\n *\n * @description\n * Return the start of a second for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a second\n *\n * @example\n * // The start of a second for 1 December 2014 22:15:45.400:\n * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))\n * //=> Mon Dec 01 2014 22:15:45.000\n */\nexport function startOfSecond(date) {\n  const _date = toDate(date);\n  _date.setMilliseconds(0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfSecond;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n"],"names":["FORMATS","datetime","millisecond","second","minute","hour","day","week","month","quarter","year","_date","override","_id","formats","parse","value","fmt","type","Date","this","options","getTime","format","time","add","amount","unit","diff","max","min","startOf","weekday","weekStartsOn","endOf","clickHooks","moveHooks","hooks","concat","handleEvent","state","event","listened","moveListened","element","getNearestItem","elements","previous","hovered","dispatchEvent","leave","listeners","enter","dispatchMoveEvents","handleMoveEvents","elOpts","dblclick","click","clickTimeout","clearTimeout","setTimeout","dblClickSpeed","handleClickEvents","handler","$context","position","minDistance","Number","POSITIVE_INFINITY","filter","display","inRange","x","y","reduce","nearestItems","center","getCenterPoint","distance","push","sort","a","b","_index","slice","adjustScaleRange","chart","scale","annotations","range","axis","scaleID","id","scaleIDOption","limits","NEGATIVE_INFINITY","annotation","updateLimits","getScaleLimits","changed","changeScaleLimit","handleTickRangeOptions","limit","suggestedLimit","scaleOptions","scaleLimitDefined","verifyScaleIDs","scales","key","verifyProperties","console","warn","charAt","prop","props","raw","Math","EPSILON","clamp","from","to","clampAll","obj","Object","keys","inBoxRange","mouseX","mouseY","width","height","borderWidth","hBorderWidth","getElementCenterPoint","useFinalPosition","getProps","isOlderPart","act","req","length","substr","isPercentString","s","endsWith","toPercent","parseFloat","getRelativePosition","size","positionOption","getSize","toPosition","isBoundToPoint","xValue","yValue","widthCache","Map","isImageOrCanvas","content","toString","translate","ctx","rotation","rotate","setBorderStyle","lineCap","borderCapStyle","setLineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","strokeStyle","borderColor","setShadowStyle","shadowColor","backgroundShadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","measureLabelSize","font","strokeWidth","textStrokeWidth","lines","mapKey","join","string","_measureText","has","save","count","i","text","measureText","restore","lineHeight","set","get","drawBox","rect","stroke","fillStyle","backgroundColor","beginPath","w","h","radius","cornerRadius","borderRadius","closePath","fill","borderShadowColor","drawLabel","drawImage","labels","lh","textAlign","calculateTextAlignment","textBaseline","miterLimit","textStrokeColor","setTextStrokeStyle","forEach","l","strokeText","color","fillText","getRectCenterPoint","rotated","point","angle","cos","sin","cx","cy","scaleValue","fallback","getPixelForValue","getChartDimensionByScale","start","end","getChartPoint","chartArea","xScale","xScaleID","yScale","yScaleID","getChartRect","top","left","bottom","y2","right","x2","xDim","xMin","xMax","yDim","yMin","yMax","resolvePointPosition","box","isNaN","xAdjust","yAdjust","getChartCircle","BoxAnnotation","draw","label","halfBorder","padding","labelSize","labelRect","calculateX","calculateY","clip","resolveElementProperties","adjust","calculatePosition$1","boxOpts","labelOpts","padStart","padEnd","defaults","undefined","drawTime","enabled","family","style","weight","defaultRoutes","descriptors","_fallback","pointInLine","p1","p2","t","interpolateX","abs","interpolateY","sqr","v","defaultEpsilon","isLineInArea","limitPointToArea","LineAnnotation","intersects","epsilon","x1","y1","dx","dy","lenSq","xx","yy","labelIsVisible","isOnLabel","labelX","labelY","labelWidth","labelHeight","labelRotation","w2","h2","atan2","sqrt","pow","startOpts","endOpts","startAdjust","endAdjust","line","arrowStartOpts","arrowHeads","arrowEndOpts","getLineAdjust","getArrowHeads","moveTo","lineTo","drawArrowHead","labelPadding","labelTextSize","NaN","endValue","isHorizontal","properties","area","limitLineToArea","lblPadding","xPadding","yPadding","tempPadding","getPadding","textSize","sizes","PI","calculateAutoRotation","rotatedSize","space","r","spaceAround","calculateTAdjust","calculateT","pt","xCoordinateSizes","yCoordinateSizes","adjustLabelCoordinate","calculateLabelPosition","loadLabelRect","arrowHeadsDefaults","lineSize","lineW","lineH","coordinate","labelSizes","halfSize","arrowOpts","offset","arrowOffsetX","assign","EllipseAnnotation","p","ellipse","xRadius","yRadius","cosAngle","sinAngle","pointInEllipse","LabelAnnotation","pointX","pointY","calloutPosition","callout","separatorStart","separatorEnd","margin","getCalloutSeparatorAdjust","getCalloutSeparatorCoord","sideStart","sideEnd","side","getCalloutSideAdjust","getCalloutSideCoord","rotatedPoint","drawCallout","boxSize","calculatePosition","measureRect","xPoints","yPoints","result","index","positions","resolveCalloutAutoPosition","resolveCalloutPosition","PointAnnotation","inPointRange","pointStyle","PolygonAnnotation","points","isInside","A","B","bY","bX","pointIsInPolygon","first","el","sides","rad","optionScope","initProperties","annotationTypes","polygon","describe","directUpdater","update","resolveType","updateElements","mode","animations","animOpts","resolveAnimations","splice","Array","resyncElements","annotationOptions","getOrCreateElement","resolver","setContext","getContext","skip","toSkip","updateSubElements","resolveAnnotationOptions","mainElement","subElements","definition","subElement","subResolver","elementClass","resolveObj","hook","defs","optDefs","create","chartStates","version","afterRegister","register","pkg","ver","strict","parts","split","parseInt","Error","requireVersion","afterUnregister","unregister","beforeInit","visibleElements","beforeUpdate","args","verifyScaleOptions","afterDataLimits","afterUpdate","scope","updateListeners","beforeDatasetsDraw","_args","afterDatasetsDraw","beforeDraw","afterDraw","beforeEvent","destroy","delete","_getState","numbers","_indexable","_scriptable","includes","_allKeys","opts","additionalOptionScopes","caller","drawElements","drawSubElements","addLeadingZeros","number","targetLength","defaultOptions","getDefaultOptions","dayPeriodEnum","formatters","G","date","token","localize","era","getFullYear","signedYear","ordinalNumber","Y","signedWeekYear","weekYear","twoDigitYear","R","isoWeekYear","u","Q","ceil","getMonth","String","context","q","M","L","I","isoWeek","d","getDate","D","dayOfYear","E","dayOfWeek","getDay","e","localDayOfWeek","c","isoDayOfWeek","dayPeriodEnumValue","getHours","dayPeriod","toLowerCase","hours","H","K","k","m","getMinutes","getSeconds","S","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","timestamp","trunc","T","delimiter","sign","absOffset","minutes","lightFormatters","toUpperCase","numberOfDigits","milliseconds","getMilliseconds","fractionalSeconds","dateLongFormatter","pattern","formatLong","timeLongFormatter","longFormatters","P","matchResult","match","datePattern","timePattern","dateTimeFormat","dateTime","replace","getRoundingMethod","method","getTimezoneOffsetInMilliseconds","utcDate","UTC","setUTCFullYear","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","test","isProtectedWeekYearToken","warnOrThrowProtectedError","input","_message","subject","message","RangeError","addDays","setDate","addHours","addMilliseconds","addMinutes","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","setFullYear","addQuarters","months","addSeconds","addWeeks","days","addYears","compareAsc","dateLeft","dateRight","_dateLeft","_dateRight","millisecondsInWeek","millisecondsInDay","millisecondsInMinute","millisecondsInHour","millisecondsInSecond","constructFrom","constructor","differenceInCalendarDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarMonths","differenceInCalendarYears","differenceInDays","compareLocalAsc","difference","differenceInHours","roundingMethod","differenceInMilliseconds","differenceInMinutes","differenceInMonths","isLastMonthNotFull","differenceInQuarters","differenceInSeconds","differenceInWeeks","differenceInYears","endOfDay","setHours","endOfHour","setMinutes","endOfMinute","setSeconds","endOfMonth","endOfQuarter","currentMonth","endOfSecond","setMilliseconds","endOfWeek","locale","endOfYear","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","firstWeekContainsDate","originalDate","map","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","part","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatter","matched","getDayOfYear","getISODay","getISOWeek","getISOWeekYear","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","isDate","prototype","call","isLastDayOfMonth","isValid","buildFormatLongFn","defaultWidth","buildLocalizeFn","valuesArray","formattingValues","defaultFormattingWidth","values","argumentCallback","buildMatchFn","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","isArray","array","predicate","findIndex","object","hasOwnProperty","findKey","valueCallback","rest","buildMatchPatternFn","parseResult","parsePattern","enUS","code","formatDistance","formatRelative","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","tokenValue","addSuffix","comparison","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","_baseDate","_options","dirtyNumber","rem100","narrow","abbreviated","wide","am","pm","midnight","noon","morning","afternoon","evening","night","any","notWhitespaceRegExp","dateStr","referenceDate","subFnOptions","setters","tokens","usedTokens","parser","incompatibleTokens","incompatibleToken","find","usedToken","fullToken","run","setter","indexOf","uniquePrioritySetters","priority","subPriority","setterArray","flags","validate","Parser","dateString","_utcDate","_value","Setter","ValueSetter","validateValue","setValue","super","DateToSystemTimezoneSetter","timestampIsSet","numericPatterns","hour23h","hour24h","hour11h","hour12h","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","basicOptionalMinutes","basic","basicOptionalSeconds","extended","extendedOptionalSeconds","parsers","AMPMMidnightParser","_flags","AMPMParser","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","DateParser","isLeapYear","DayOfYearParser","subpriority","DayParser","DayPeriodParser","EraParser","ExtendedYearParser","FractionOfSecondParser","Hour0To11Parser","Hour0to23Parser","Hour1To24Parser","Hour1to12Parser","isPM","ISODayParser","ISOTimezoneParser","ISOTimezoneWithZParser","ISOWeekParser","ISOWeekYearParser","firstWeekOfYear","LocalDayParser","wholeWeekDays","floor","LocalWeekParser","LocalWeekYearParser","isTwoDigitYear","currentYear","normalizedTwoDigitYear","MinuteParser","MonthParser","QuarterParser","SecondParser","StandAloneLocalDayParser","StandAloneMonthParser","StandAloneQuarterParser","TimestampMillisecondsParser","TimestampSecondsParser","YearParser","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","seconds","parseAnyDigitsSigned","parseNDigits","n","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","isCommonEra","absCurrentYear","rangeEnd","isLeapYearIndex","parseISO","argument","additionalDigits","dateStrings","patterns","dateTimeDelimiter","timeString","timeZoneDelimiter","timezone","exec","splitDateString","parseYearResult","regex","captures","restDateString","century","parseYear","dateRegex","isWeekDate","parseDateUnit","_year","validateWeekDate","fourthOfJanuaryDay","getUTCDay","setUTCDate","getUTCDate","dayOfISOWeekYear","daysInMonths","validateDate","validateDayOfYearDate","parseDate","timeRegex","parseTimeUnit","validateTime","parseTime","dirtyDate","getUTCFullYear","getUTCMonth","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","timezoneString","timezoneRegex","_hours","validateTimezone","parseTimezone","setDay","currentDay","delta","setISODay","g","setISOWeek","setWeek","startOfDay","startOfHour","startOfISOWeek","startOfISOWeekYear","fourthOfJanuary","startOfMinute","startOfMonth","startOfQuarter","startOfSecond","startOfWeek","startOfWeekYear","firstWeek","startOfYear","cleanDate","toDate","argStr","transpose","fromDate"],"sourceRoot":""}