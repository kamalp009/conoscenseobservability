{"version":3,"file":"Create Channels.06d804b0098649e01d0e.js","mappings":"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","sources":["webpack://frontend/./node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","webpack://frontend/./node_modules/@ant-design/icons-svg/es/asn/QuestionCircleOutlined.js","webpack://frontend/./node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js","webpack://frontend/./node_modules/@ant-design/icons/es/icons/QuestionCircleOutlined.js","webpack://frontend/./src/api/channels/createEmail.ts","webpack://frontend/./src/api/channels/createMsTeams.ts","webpack://frontend/./src/api/channels/createOpsgenie.ts","webpack://frontend/./src/api/channels/createPager.ts","webpack://frontend/./src/api/channels/createSlack.ts","webpack://frontend/./src/api/channels/createWebhook.ts","webpack://frontend/./src/container/CreateAlertChannels/defaults.ts","webpack://frontend/./src/container/CreateAlertChannels/index.tsx","webpack://frontend/./src/container/CreateAlertChannels/utils.ts","webpack://frontend/./src/pages/AlertChannelCreate/config.tsx","webpack://frontend/./src/pages/AlertChannelCreate/index.tsx","webpack://frontend/./node_modules/lodash-es/_createFind.js","webpack://frontend/./node_modules/lodash-es/find.js","webpack://frontend/./node_modules/lodash-es/findIndex.js","webpack://frontend/./node_modules/lodash-es/toFinite.js","webpack://frontend/./node_modules/lodash-es/toInteger.js"],"sourcesContent":["// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","// This icon file is generated automatically.\nvar QuestionCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0130.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-17.1-76-48.3-103.3zM472 732a40 40 0 1080 0 40 40 0 10-80 0z\" } }] }, \"name\": \"question-circle\", \"theme\": \"outlined\" };\nexport default QuestionCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar QuestionCircleOutlined = function QuestionCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleOutlinedSvg\n  }));\n};\nQuestionCircleOutlined.displayName = 'QuestionCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleOutlined);","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createEmail';\n\nconst create = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/channels', {\n\t\t\tname: props.name,\n\t\t\temail_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: props.send_resolved,\n\t\t\t\t\tto: props.to,\n\t\t\t\t\thtml: props.html,\n\t\t\t\t\theaders: props.headers,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default create;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createMsTeams';\n\nconst create = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/channels', {\n\t\t\tname: props.name,\n\t\t\tmsteamsv2_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: props.send_resolved,\n\t\t\t\t\twebhook_url: props.webhook_url,\n\t\t\t\t\ttitle: props.title,\n\t\t\t\t\ttext: props.text,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default create;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createOpsgenie';\n\nconst create = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/channels', {\n\t\t\tname: props.name,\n\t\t\topsgenie_configs: [\n\t\t\t\t{\n\t\t\t\t\tapi_key: props.api_key,\n\t\t\t\t\tdescription: props.description,\n\t\t\t\t\tpriority: props.priority,\n\t\t\t\t\tmessage: props.message,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\t...props.detailsArray,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default create;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createPager';\n\nconst create = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/channels', {\n\t\t\tname: props.name,\n\t\t\tpagerduty_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: props.send_resolved,\n\t\t\t\t\trouting_key: props.routing_key,\n\t\t\t\t\tclient: props.client,\n\t\t\t\t\tclient_url: props.client_url,\n\t\t\t\t\tdescription: props.description,\n\t\t\t\t\tseverity: props.severity,\n\t\t\t\t\tclass: props.class,\n\t\t\t\t\tcomponent: props.component,\n\t\t\t\t\tgroup: props.group,\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\t...props.detailsArray,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default create;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createSlack';\n\nconst create = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>('/channels', {\n\t\t\tname: props.name,\n\t\t\tslack_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: props.send_resolved,\n\t\t\t\t\tapi_url: props.api_url,\n\t\t\t\t\tchannel: props.channel,\n\t\t\t\t\ttitle: props.title,\n\t\t\t\t\ttext: props.text,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default create;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/channels/createWebhook';\n\nconst create = async (\n\tprops: Props,\n): Promise<SuccessResponseV2<PayloadProps>> => {\n\ttry {\n\t\tlet httpConfig = {};\n\t\tconst username = props.username ? props.username.trim() : '';\n\t\tconst password = props.password ? props.password.trim() : '';\n\n\t\tif (username !== '' && password !== '') {\n\t\t\thttpConfig = {\n\t\t\t\tbasic_auth: {\n\t\t\t\t\tusername,\n\t\t\t\t\tpassword,\n\t\t\t\t},\n\t\t\t};\n\t\t} else if (username === '' && password !== '') {\n\t\t\thttpConfig = {\n\t\t\t\tauthorization: {\n\t\t\t\t\ttype: 'Bearer',\n\t\t\t\t\tcredentials: password,\n\t\t\t\t},\n\t\t\t};\n\t\t}\n\n\t\tconst response = await axios.post<PayloadProps>('/channels', {\n\t\t\tname: props.name,\n\t\t\twebhook_configs: [\n\t\t\t\t{\n\t\t\t\t\tsend_resolved: props.send_resolved,\n\t\t\t\t\turl: props.api_url,\n\t\t\t\t\thttp_config: httpConfig,\n\t\t\t\t},\n\t\t\t],\n\t\t});\n\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t\tthrow error;\n\t}\n};\n\nexport default create;\n","import { EmailChannel, OpsgenieChannel, PagerChannel } from './config';\n\nexport const PagerInitialConfig: Partial<PagerChannel> = {\n\tdescription: `[{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}\n\t{{- if gt (len .CommonLabels) (len .GroupLabels) -}}\n\t  {{\" \"}}(\n\t  {{- with .CommonLabels.Remove .GroupLabels.Names }}\n\t\t{{- range $index, $label := .SortedPairs -}}\n\t\t  {{ if $index }}, {{ end }}\n\t\t  {{- $label.Name }}=\"{{ $label.Value -}}\"\n\t\t{{- end }}\n\t  {{- end -}}\n\t  )\n\t{{- end }}`,\n\tseverity: '{{ (index .Alerts 0).Labels.severity }}',\n\tclient: 'SigNoz Alert Manager',\n\tclient_url: 'https://enter-signoz-host-n-port-here/alerts',\n\tdetails: JSON.stringify({\n\t\tfiring: `{{ template \"pagerduty.default.instances\" .Alerts.Firing }}`,\n\t\tresolved: `{{ template \"pagerduty.default.instances\" .Alerts.Resolved }}`,\n\t\tnum_firing: '{{ .Alerts.Firing | len }}',\n\t\tnum_resolved: '{{ .Alerts.Resolved | len }}',\n\t}),\n};\n\nexport const OpsgenieInitialConfig: Partial<OpsgenieChannel> = {\n\tmessage: '{{ .CommonLabels.alertname }}',\n\tdescription: `{{ if gt (len .Alerts.Firing) 0 -}}\n\tAlerts Firing:\n\t{{ range .Alerts.Firing }}\n\t - Message: {{ .Annotations.description }}\n\tLabels:\n\t{{ range .Labels.SortedPairs }}   - {{ .Name }} = {{ .Value }}\n\t{{ end }}   Annotations:\n\t{{ range .Annotations.SortedPairs }}   - {{ .Name }} = {{ .Value }}\n\t{{ end }}   Source: {{ .GeneratorURL }}\n\t{{ end }}\n\t{{- end }}\n\t{{ if gt (len .Alerts.Resolved) 0 -}}\n\tAlerts Resolved:\n\t{{ range .Alerts.Resolved }}\n\t - Message: {{ .Annotations.description }}\n\tLabels:\n\t{{ range .Labels.SortedPairs }}   - {{ .Name }} = {{ .Value }}\n\t{{ end }}   Annotations:\n\t{{ range .Annotations.SortedPairs }}   - {{ .Name }} = {{ .Value }}\n\t{{ end }}   Source: {{ .GeneratorURL }}\n\t{{ end }}\n\t{{- end }}`,\n\tpriority:\n\t\t'{{ if eq (index .Alerts 0).Labels.severity \"critical\" }}P1{{ else if eq (index .Alerts 0).Labels.severity \"warning\" }}P2{{ else if eq (index .Alerts 0).Labels.severity \"info\" }}P3{{ else }}P4{{ end }}',\n};\n\nexport const EmailInitialConfig: Partial<EmailChannel> = {\n\tsend_resolved: true,\n\thtml: `<!--\n\tCredits: https://github.com/mailgun/transactional-email-templates\n\t-->\n  <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n  <html xmlns=\"http://www.w3.org/1999/xhtml\">\n\t<head>\n\t  <meta name=\"viewport\" content=\"width=device-width\" />\n\t  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n\t  <title>{{ template \"__subject\" . }}</title>\n\t  <style>\n  \n\t\t/* -------------------------------------\n\t\t\t  GLOBAL\n\t\t\t  A very basic CSS reset\n\t\t\t  ------------------------------------- */\n\t\t* {\n\t\t  margin: 0;\n\t\t  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n\t\t  box-sizing: border-box;\n\t\t  font-size: 14px;\n\t\t}\n\t\t\n\t\timg {\n\t\t  max-width: 100%;\n\t\t}\n\t\t\n\t\tbody {\n\t\t  -webkit-font-smoothing: antialiased;\n\t\t  -webkit-text-size-adjust: none;\n\t\t  width: 100% !important;\n\t\t  height: 100%;\n\t\t  line-height: 1.6em;\n\t\t  /* 1.6em * 14px = 22.4px, use px to get airier line-height also in Thunderbird, and Yahoo!, Outlook.com, AOL webmail clients */\n\t\t  /*line-height: 22px;*/\n\t\t}\n\t\t\n\t\t/* Let's make sure all tables have defaults */\n\t\ttable td {\n\t\t  vertical-align: top;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  BODY & CONTAINER\n\t\t\t  ------------------------------------- */\n\t\tbody {\n\t\t  background-color: #f6f6f6;\n\t\t}\n\t\t\n\t\t.body-wrap {\n\t\t  background-color: #f6f6f6;\n\t\t  width: 100%;\n\t\t}\n\t\t\n\t\t.container {\n\t\t  display: block !important;\n\t\t  max-width: 600px !important;\n\t\t  margin: 0 auto !important;\n\t\t  /* makes it centered */\n\t\t  clear: both !important;\n\t\t}\n\t\t\n\t\t.content {\n\t\t  max-width: 600px;\n\t\t  margin: 0 auto;\n\t\t  display: block;\n\t\t  padding: 20px;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  HEADER, FOOTER, MAIN\n\t\t\t  ------------------------------------- */\n\t\t.main {\n\t\t  background-color: #fff;\n\t\t  border: 1px solid #e9e9e9;\n\t\t  border-radius: 3px;\n\t\t}\n\t\t\n\t\t.content-wrap {\n\t\t  padding: 30px;\n\t\t}\n\t\t\n\t\t.content-block {\n\t\t  padding: 0 0 20px;\n\t\t}\n\t\t\n\t\t.header {\n\t\t  width: 100%;\n\t\t  margin-bottom: 20px;\n\t\t}\n\t\t\n\t\t.footer {\n\t\t  width: 100%;\n\t\t  clear: both;\n\t\t  color: #999;\n\t\t  padding: 20px;\n\t\t}\n\t\t\n\t\t.footer p,\n\t\t.footer a,\n\t\t.footer td {\n\t\t  color: #999;\n\t\t  font-size: 12px;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  TYPOGRAPHY\n\t\t\t  ------------------------------------- */\n\t\th1,\n\t\th2,\n\t\th3 {\n\t\t  font-family: \"Helvetica Neue\", Helvetica, Arial, \"Lucida Grande\", sans-serif;\n\t\t  color: #000;\n\t\t  margin: 40px 0 0;\n\t\t  line-height: 1.2em;\n\t\t  font-weight: 400;\n\t\t}\n\t\t\n\t\th1 {\n\t\t  font-size: 32px;\n\t\t  font-weight: 500;\n\t\t  /* 1.2em * 32px = 38.4px, use px to get airier line-height also in Thunderbird, and Yahoo!, Outlook.com, AOL webmail clients */\n\t\t  /*line-height: 38px;*/\n\t\t}\n\t\t\n\t\th2 {\n\t\t  font-size: 24px;\n\t\t  /* 1.2em * 24px = 28.8px, use px to get airier line-height also in Thunderbird, and Yahoo!, Outlook.com, AOL webmail clients */\n\t\t  /*line-height: 29px;*/\n\t\t}\n\t\t\n\t\th3 {\n\t\t  font-size: 18px;\n\t\t  /* 1.2em * 18px = 21.6px, use px to get airier line-height also in Thunderbird, and Yahoo!, Outlook.com, AOL webmail clients */\n\t\t  /*line-height: 22px;*/\n\t\t}\n\t\t\n\t\th4 {\n\t\t  font-size: 14px;\n\t\t  font-weight: 600;\n\t\t}\n\t\t\n\t\tp,\n\t\tul,\n\t\tol {\n\t\t  margin-bottom: 10px;\n\t\t  font-weight: normal;\n\t\t}\n\t\t\n\t\tp li,\n\t\tul li,\n\t\tol li {\n\t\t  margin-left: 5px;\n\t\t  list-style-position: inside;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  LINKS & BUTTONS\n\t\t\t  ------------------------------------- */\n\t\ta {\n\t\t  color: #348eda;\n\t\t  text-decoration: underline;\n\t\t}\n\t\t\n\t\t.btn-primary {\n\t\t  text-decoration: none;\n\t\t  color: #FFF;\n\t\t  background-color: #348eda;\n\t\t  border: solid #348eda;\n\t\t  border-width: 10px 20px;\n\t\t  line-height: 2em;\n\t\t  /* 2em * 14px = 28px, use px to get airier line-height also in Thunderbird, and Yahoo!, Outlook.com, AOL webmail clients */\n\t\t  /*line-height: 28px;*/\n\t\t  font-weight: bold;\n\t\t  text-align: center;\n\t\t  cursor: pointer;\n\t\t  display: inline-block;\n\t\t  border-radius: 5px;\n\t\t  text-transform: capitalize;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  OTHER STYLES THAT MIGHT BE USEFUL\n\t\t\t  ------------------------------------- */\n\t\t.last {\n\t\t  margin-bottom: 0;\n\t\t}\n\t\t\n\t\t.first {\n\t\t  margin-top: 0;\n\t\t}\n\t\t\n\t\t.aligncenter {\n\t\t  text-align: center;\n\t\t}\n\t\t\n\t\t.alignright {\n\t\t  text-align: right;\n\t\t}\n\t\t\n\t\t.alignleft {\n\t\t  text-align: left;\n\t\t}\n\t\t\n\t\t.clear {\n\t\t  clear: both;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  ALERTS\n\t\t\t  Change the class depending on warning email, good email or bad email\n\t\t\t  ------------------------------------- */\n\t\t.alert {\n\t\t  font-size: 16px;\n\t\t  color: #fff;\n\t\t  font-weight: 500;\n\t\t  padding: 20px;\n\t\t  text-align: center;\n\t\t  border-radius: 3px 3px 0 0;\n\t\t}\n\t\t\n\t\t.alert a {\n\t\t  color: #fff;\n\t\t  text-decoration: none;\n\t\t  font-weight: 500;\n\t\t  font-size: 16px;\n\t\t}\n\t\t\n\t\t.alert.alert-warning {\n\t\t  background-color: #E6522C;\n\t\t}\n\t\t\n\t\t.alert.alert-bad {\n\t\t  background-color: #D0021B;\n\t\t}\n\t\t\n\t\t.alert.alert-good {\n\t\t  background-color: #68B90F;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  INVOICE\n\t\t\t  Styles for the billing table\n\t\t\t  ------------------------------------- */\n\t\t.invoice {\n\t\t  margin: 40px auto;\n\t\t  text-align: left;\n\t\t  width: 80%;\n\t\t}\n\t\t\n\t\t.invoice td {\n\t\t  padding: 5px 0;\n\t\t}\n\t\t\n\t\t.invoice .invoice-items {\n\t\t  width: 100%;\n\t\t}\n\t\t\n\t\t.invoice .invoice-items td {\n\t\t  border-top: #eee 1px solid;\n\t\t}\n\t\t\n\t\t.invoice .invoice-items .total td {\n\t\t  border-top: 2px solid #333;\n\t\t  border-bottom: 2px solid #333;\n\t\t  font-weight: 700;\n\t\t}\n\t\t\n\t\t/* -------------------------------------\n\t\t\t  RESPONSIVE AND MOBILE FRIENDLY STYLES\n\t\t\t  ------------------------------------- */\n\t\t@media only screen and (max-width: 640px) {\n\t\t  body {\n\t\t\tpadding: 0 !important;\n\t\t  }\n\t\t\n\t\t  h1,\n\t\t  h2,\n\t\t  h3,\n\t\t  h4 {\n\t\t\tfont-weight: 800 !important;\n\t\t\tmargin: 20px 0 5px !important;\n\t\t  }\n\t\t\n\t\t  h1 {\n\t\t\tfont-size: 22px !important;\n\t\t  }\n\t\t\n\t\t  h2 {\n\t\t\tfont-size: 18px !important;\n\t\t  }\n\t\t\n\t\t  h3 {\n\t\t\tfont-size: 16px !important;\n\t\t  }\n\t\t\n\t\t  .container {\n\t\t\tpadding: 0 !important;\n\t\t\twidth: 100% !important;\n\t\t  }\n\t\t\n\t\t  .content {\n\t\t\tpadding: 0 !important;\n\t\t  }\n\t\t\n\t\t  .content-wrap {\n\t\t\tpadding: 10px !important;\n\t\t  }\n\t\t\n\t\t  .invoice {\n\t\t\twidth: 100% !important;\n\t\t  }\n\t\t}\n\t\t\n\t\t</style>\n\t</head>\n\t<body itemscope itemtype=\"http://schema.org/EmailMessage\">\n\t  <table class=\"body-wrap\">\n\t\t<tr>\n\t\t  <td></td>\n\t\t  <td class=\"container\" width=\"600\">\n\t\t\t<div class=\"content\">\n\t\t\t  <table class=\"main\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t<tr>\n\t\t\t\t  {{ if gt (len .Alerts.Firing) 0 }}\n\t\t\t\t  <td class=\"alert alert-warning\">\n\t\t\t\t\t{{ else }}\n\t\t\t\t  <td class=\"alert alert-good\">\n\t\t\t\t\t{{ end }}\n\t\t\t\t\t{{ .Alerts | len }} alert{{ if gt (len .Alerts) 1 }}s{{ end }} for {{ range .GroupLabels.SortedPairs }}\n\t\t\t\t\t{{ .Name }}={{ .Value }} \n\t\t\t\t\t{{ end }}\n\t\t\t\t  </td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t  <td class=\"content-wrap\">\n\t\t\t\t\t<table width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t  {{ if gt (len .Alerts.Firing) 0 }}\n\t\t\t\t\t  <tr>\n\t\t\t\t\t\t<td class=\"content-block\">\n\t\t\t\t\t\t  <strong>[{{ .Alerts.Firing | len }}] Firing</strong>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t\t  {{ end }}\n\t\t\t\t\t  {{ range .Alerts.Firing }}\n\t\t\t\t\t  <tr>\n\t\t\t\t\t\t<td class=\"content-block\">\n\t\t\t\t\t\t  <strong>Labels</strong><br />\n\t\t\t\t\t\t  {{ range .Labels.SortedPairs }}{{ .Name }} = {{ .Value }}<br />{{ end }}\n\t\t\t\t\t\t  {{ if gt (len .Annotations) 0 }}<strong>Annotations</strong><br />{{ end }}\n\t\t\t\t\t\t  {{ range .Annotations.SortedPairs }}{{ .Name }} = {{ .Value }}<br />{{ end }}\n\t\t\t\t\t\t  <a href=\"{{ .GeneratorURL }}\">Source</a><br />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t\t  {{ end }}\n\t\t\t\t\t  {{ if gt (len .Alerts.Resolved) 0 }}\n\t\t\t\t\t  {{ if gt (len .Alerts.Firing) 0 }}\n\t\t\t\t\t  <tr>\n\t\t\t\t\t\t<td class=\"content-block\">\n\t\t\t\t\t\t  <br />\n\t\t\t\t\t\t  <hr />\n\t\t\t\t\t\t  <br />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t\t  {{ end }}\n\t\t\t\t\t  <tr>\n\t\t\t\t\t\t<td class=\"content-block\">\n\t\t\t\t\t\t  <strong>[{{ .Alerts.Resolved | len }}] Resolved</strong>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t\t  {{ end }}\n\t\t\t\t\t  {{ range .Alerts.Resolved }}\n\t\t\t\t\t  <tr>\n\t\t\t\t\t\t<td class=\"content-block\">\n\t\t\t\t\t\t  <strong>Labels</strong><br />\n\t\t\t\t\t\t  {{ range .Labels.SortedPairs }}{{ .Name }} = {{ .Value }}<br />{{ end }}\n\t\t\t\t\t\t  {{ if gt (len .Annotations) 0 }}<strong>Annotations</strong><br />{{ end }}\n\t\t\t\t\t\t  {{ range .Annotations.SortedPairs }}{{ .Name }} = {{ .Value }}<br />{{ end }}\n\t\t\t\t\t\t  <a href=\"{{ .GeneratorURL }}\">Source</a><br />\n\t\t\t\t\t\t</td>\n\t\t\t\t\t  </tr>\n\t\t\t\t\t  {{ end }}\n\t\t\t\t\t</table>\n\t\t\t\t  </td>\n\t\t\t\t</tr>\n\t\t\t  </table>\n\t\t\t</div>\n\t\t  </td>\n\t\t  <td></td>\n\t\t</tr>\n\t  </table>\n\t</body>\n  </html>`,\n};\n","import { Form } from 'antd';\nimport createEmail from 'api/channels/createEmail';\nimport createMsTeamsApi from 'api/channels/createMsTeams';\nimport createOpsgenie from 'api/channels/createOpsgenie';\nimport createPagerApi from 'api/channels/createPager';\nimport createSlackApi from 'api/channels/createSlack';\nimport createWebhookApi from 'api/channels/createWebhook';\nimport testEmail from 'api/channels/testEmail';\nimport testMsTeamsApi from 'api/channels/testMsTeams';\nimport testOpsGenie from 'api/channels/testOpsgenie';\nimport testPagerApi from 'api/channels/testPager';\nimport testSlackApi from 'api/channels/testSlack';\nimport testWebhookApi from 'api/channels/testWebhook';\nimport logEvent from 'api/common/logEvent';\nimport ROUTES from 'constants/routes';\nimport FormAlertChannels from 'container/FormAlertChannels';\nimport { useNotifications } from 'hooks/useNotifications';\nimport history from 'lib/history';\nimport { useErrorModal } from 'providers/ErrorModalProvider';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport APIError from 'types/api/error';\n\nimport {\n\tChannelType,\n\tEmailChannel,\n\tMsTeamsChannel,\n\tOpsgenieChannel,\n\tPagerChannel,\n\tSlackChannel,\n\tValidatePagerChannel,\n\tWebhookChannel,\n} from './config';\nimport {\n\tEmailInitialConfig,\n\tOpsgenieInitialConfig,\n\tPagerInitialConfig,\n} from './defaults';\nimport { isChannelType } from './utils';\n\nfunction CreateAlertChannels({\n\tpreType = ChannelType.Slack,\n}: CreateAlertChannelsProps): JSX.Element {\n\t// init namespace for translations\n\tconst { t } = useTranslation('channels');\n\tconst { showErrorModal } = useErrorModal();\n\n\tconst [formInstance] = Form.useForm();\n\n\tuseEffect(() => {\n\t\tlogEvent('Alert Channel: Create channel page visited', {});\n\t}, []);\n\n\tconst [selectedConfig, setSelectedConfig] = useState<\n\t\tPartial<\n\t\t\tSlackChannel &\n\t\t\t\tWebhookChannel &\n\t\t\t\tPagerChannel &\n\t\t\t\tMsTeamsChannel &\n\t\t\t\tOpsgenieChannel &\n\t\t\t\tEmailChannel\n\t\t>\n\t>({\n\t\tsend_resolved: true,\n\t\ttext: `{{ range .Alerts -}}\n     *Alert:* {{ .Labels.alertname }}{{ if .Labels.severity }} - {{ .Labels.severity }}{{ end }}\n\n     *Summary:* {{ .Annotations.summary }}\n     *Description:* {{ .Annotations.description }}\n     *RelatedLogs:* {{ if gt (len .Annotations.related_logs) 0 -}} View in <{{ .Annotations.related_logs }}|logs explorer> {{- end}}\n     *RelatedTraces:* {{ if gt (len .Annotations.related_traces) 0 -}} View in <{{ .Annotations.related_traces }}|traces explorer> {{- end}}\n\n     *Details:*\n       {{ range .Labels.SortedPairs }} • *{{ .Name }}:* {{ .Value }}\n       {{ end }}\n     {{ end }}`,\n\t\ttitle: `[{{ .Status | toUpper }}{{ if eq .Status \"firing\" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}\n     {{- if gt (len .CommonLabels) (len .GroupLabels) -}}\n       {{\" \"}}(\n       {{- with .CommonLabels.Remove .GroupLabels.Names }}\n         {{- range $index, $label := .SortedPairs -}}\n           {{ if $index }}, {{ end }}\n           {{- $label.Name }}=\"{{ $label.Value -}}\"\n         {{- end }}\n       {{- end -}}\n       )\n     {{- end }}`,\n\t});\n\tconst [savingState, setSavingState] = useState<boolean>(false);\n\tconst [testingState, setTestingState] = useState<boolean>(false);\n\tconst { notifications } = useNotifications();\n\n\tconst [type, setType] = useState<ChannelType>(preType);\n\tconst onTypeChangeHandler = useCallback(\n\t\t(value: string) => {\n\t\t\tconst currentType = type;\n\t\t\tsetType(value as ChannelType);\n\n\t\t\tif (value === ChannelType.Pagerduty && currentType !== value) {\n\t\t\t\t// reset config to pager defaults\n\t\t\t\tsetSelectedConfig({\n\t\t\t\t\tname: selectedConfig?.name,\n\t\t\t\t\tsend_resolved: selectedConfig.send_resolved,\n\t\t\t\t\t...PagerInitialConfig,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (value === ChannelType.Opsgenie && currentType !== value) {\n\t\t\t\tsetSelectedConfig((selectedConfig) => ({\n\t\t\t\t\t...selectedConfig,\n\t\t\t\t\t...OpsgenieInitialConfig,\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\t// reset config to email defaults\n\t\t\tif (value === ChannelType.Email && currentType !== value) {\n\t\t\t\tsetSelectedConfig((selectedConfig) => ({\n\t\t\t\t\t...selectedConfig,\n\t\t\t\t\t...EmailInitialConfig,\n\t\t\t\t}));\n\t\t\t}\n\t\t},\n\t\t[type, selectedConfig],\n\t);\n\n\tconst prepareSlackRequest = useCallback(\n\t\t() => ({\n\t\t\tapi_url: selectedConfig?.api_url || '',\n\t\t\tchannel: selectedConfig?.channel || '',\n\t\t\tname: selectedConfig?.name || '',\n\t\t\tsend_resolved: selectedConfig?.send_resolved || false,\n\t\t\ttext: selectedConfig?.text || '',\n\t\t\ttitle: selectedConfig?.title || '',\n\t\t}),\n\t\t[selectedConfig],\n\t);\n\n\tconst onSlackHandler = useCallback(async () => {\n\t\tsetSavingState(true);\n\n\t\ttry {\n\t\t\tawait createSlackApi(prepareSlackRequest());\n\t\t\tnotifications.success({\n\t\t\t\tmessage: 'Success',\n\t\t\t\tdescription: t('channel_creation_done'),\n\t\t\t});\n\t\t\thistory.replace(ROUTES.ALL_CHANNELS);\n\t\t\treturn { status: 'success', statusMessage: t('channel_creation_done') };\n\t\t} catch (error) {\n\t\t\tshowErrorModal(error as APIError);\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} finally {\n\t\t\tsetSavingState(false);\n\t\t}\n\t}, [prepareSlackRequest, notifications, t, showErrorModal]);\n\n\tconst prepareWebhookRequest = useCallback(() => {\n\t\t// initial api request without auth params\n\t\tlet request: WebhookChannel = {\n\t\t\tapi_url: selectedConfig?.api_url || '',\n\t\t\tname: selectedConfig?.name || '',\n\t\t\tsend_resolved: selectedConfig?.send_resolved || false,\n\t\t};\n\n\t\tif (selectedConfig?.username !== '' || selectedConfig?.password !== '') {\n\t\t\tif (selectedConfig?.username !== '') {\n\t\t\t\t// if username is not null then password must be passed\n\t\t\t\tif (selectedConfig?.password !== '') {\n\t\t\t\t\trequest = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tusername: selectedConfig.username,\n\t\t\t\t\t\tpassword: selectedConfig.password,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tnotifications.error({\n\t\t\t\t\t\tmessage: 'Error',\n\t\t\t\t\t\tdescription: t('username_no_password'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (selectedConfig?.password !== '') {\n\t\t\t\t// only password entered, set bearer token\n\t\t\t\trequest = {\n\t\t\t\t\t...request,\n\t\t\t\t\tusername: '',\n\t\t\t\t\tpassword: selectedConfig.password,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn request;\n\t}, [notifications, t, selectedConfig]);\n\n\tconst onWebhookHandler = useCallback(async () => {\n\t\tsetSavingState(true);\n\t\ttry {\n\t\t\tconst request = prepareWebhookRequest();\n\t\t\tawait createWebhookApi(request);\n\t\t\tnotifications.success({\n\t\t\t\tmessage: 'Success',\n\t\t\t\tdescription: t('channel_creation_done'),\n\t\t\t});\n\t\t\thistory.replace(ROUTES.ALL_CHANNELS);\n\t\t\treturn { status: 'success', statusMessage: t('channel_creation_done') };\n\t\t} catch (error) {\n\t\t\tshowErrorModal(error as APIError);\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} finally {\n\t\t\tsetSavingState(false);\n\t\t}\n\t}, [prepareWebhookRequest, notifications, t, showErrorModal]);\n\n\tconst preparePagerRequest = useCallback(() => {\n\t\tconst validationError = ValidatePagerChannel(selectedConfig as PagerChannel);\n\t\tif (validationError !== '') {\n\t\t\tnotifications.error({\n\t\t\t\tmessage: 'Error',\n\t\t\t\tdescription: validationError,\n\t\t\t});\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tname: selectedConfig?.name || '',\n\t\t\tsend_resolved: selectedConfig?.send_resolved || false,\n\t\t\trouting_key: selectedConfig?.routing_key || '',\n\t\t\tclient: selectedConfig?.client || '',\n\t\t\tclient_url: selectedConfig?.client_url || '',\n\t\t\tdescription: selectedConfig?.description || '',\n\t\t\tseverity: selectedConfig?.severity || '',\n\t\t\tcomponent: selectedConfig?.component || '',\n\t\t\tgroup: selectedConfig?.group || '',\n\t\t\tclass: selectedConfig?.class || '',\n\t\t\tdetails: selectedConfig.details || '',\n\t\t\tdetailsArray: JSON.parse(selectedConfig.details || '{}'),\n\t\t};\n\t}, [selectedConfig, notifications]);\n\n\tconst onPagerHandler = useCallback(async () => {\n\t\tsetSavingState(true);\n\t\tconst request = preparePagerRequest();\n\n\t\ttry {\n\t\t\tif (request) {\n\t\t\t\tawait createPagerApi(request);\n\t\t\t\tnotifications.success({\n\t\t\t\t\tmessage: 'Success',\n\t\t\t\t\tdescription: t('channel_creation_done'),\n\t\t\t\t});\n\t\t\t\thistory.replace(ROUTES.ALL_CHANNELS);\n\t\t\t\treturn { status: 'success', statusMessage: t('channel_creation_done') };\n\t\t\t}\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} catch (error) {\n\t\t\tshowErrorModal(error as APIError);\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} finally {\n\t\t\tsetSavingState(false);\n\t\t}\n\t}, [preparePagerRequest, t, notifications, showErrorModal]);\n\n\tconst prepareOpsgenieRequest = useCallback(\n\t\t() => ({\n\t\t\tapi_key: selectedConfig?.api_key || '',\n\t\t\tname: selectedConfig?.name || '',\n\t\t\tsend_resolved: selectedConfig?.send_resolved || false,\n\t\t\tdescription: selectedConfig?.description || '',\n\t\t\tmessage: selectedConfig?.message || '',\n\t\t\tpriority: selectedConfig?.priority || '',\n\t\t}),\n\t\t[selectedConfig],\n\t);\n\n\tconst onOpsgenieHandler = useCallback(async () => {\n\t\tsetSavingState(true);\n\t\ttry {\n\t\t\tawait createOpsgenie(prepareOpsgenieRequest());\n\t\t\tnotifications.success({\n\t\t\t\tmessage: 'Success',\n\t\t\t\tdescription: t('channel_creation_done'),\n\t\t\t});\n\t\t\thistory.replace(ROUTES.ALL_CHANNELS);\n\t\t\treturn { status: 'success', statusMessage: t('channel_creation_done') };\n\t\t} catch (error) {\n\t\t\tshowErrorModal(error as APIError);\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} finally {\n\t\t\tsetSavingState(false);\n\t\t}\n\t}, [prepareOpsgenieRequest, notifications, t, showErrorModal]);\n\n\tconst prepareEmailRequest = useCallback(\n\t\t() => ({\n\t\t\tname: selectedConfig?.name || '',\n\t\t\tsend_resolved: selectedConfig?.send_resolved || false,\n\t\t\tto: selectedConfig?.to || '',\n\t\t\thtml: selectedConfig?.html || '',\n\t\t\theaders: selectedConfig?.headers || {},\n\t\t}),\n\t\t[selectedConfig],\n\t);\n\n\tconst onEmailHandler = useCallback(async () => {\n\t\tsetSavingState(true);\n\t\ttry {\n\t\t\tconst request = prepareEmailRequest();\n\t\t\tawait createEmail(request);\n\t\t\tnotifications.success({\n\t\t\t\tmessage: 'Success',\n\t\t\t\tdescription: t('channel_creation_done'),\n\t\t\t});\n\t\t\thistory.replace(ROUTES.ALL_CHANNELS);\n\t\t\treturn { status: 'success', statusMessage: t('channel_creation_done') };\n\t\t} catch (error) {\n\t\t\tshowErrorModal(error as APIError);\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} finally {\n\t\t\tsetSavingState(false);\n\t\t}\n\t}, [prepareEmailRequest, notifications, t, showErrorModal]);\n\n\tconst prepareMsTeamsRequest = useCallback(\n\t\t() => ({\n\t\t\twebhook_url: selectedConfig?.webhook_url || '',\n\t\t\tname: selectedConfig?.name || '',\n\t\t\tsend_resolved: selectedConfig?.send_resolved || false,\n\t\t\ttext: selectedConfig?.text || '',\n\t\t\ttitle: selectedConfig?.title || '',\n\t\t}),\n\t\t[selectedConfig],\n\t);\n\n\tconst onMsTeamsHandler = useCallback(async () => {\n\t\tsetSavingState(true);\n\n\t\ttry {\n\t\t\tawait createMsTeamsApi(prepareMsTeamsRequest());\n\t\t\tnotifications.success({\n\t\t\t\tmessage: 'Success',\n\t\t\t\tdescription: t('channel_creation_done'),\n\t\t\t});\n\t\t\thistory.replace(ROUTES.ALL_CHANNELS);\n\t\t\treturn { status: 'success', statusMessage: t('channel_creation_done') };\n\t\t} catch (error) {\n\t\t\tshowErrorModal(error as APIError);\n\t\t\treturn { status: 'failed', statusMessage: t('channel_creation_failed') };\n\t\t} finally {\n\t\t\tsetSavingState(false);\n\t\t}\n\t}, [prepareMsTeamsRequest, notifications, t, showErrorModal]);\n\n\tconst onSaveHandler = useCallback(\n\t\tasync (value: ChannelType) => {\n\t\t\tconst functionMapper = {\n\t\t\t\t[ChannelType.Slack]: onSlackHandler,\n\t\t\t\t[ChannelType.Webhook]: onWebhookHandler,\n\t\t\t\t[ChannelType.Pagerduty]: onPagerHandler,\n\t\t\t\t[ChannelType.Opsgenie]: onOpsgenieHandler,\n\t\t\t\t[ChannelType.MsTeams]: onMsTeamsHandler,\n\t\t\t\t[ChannelType.Email]: onEmailHandler,\n\t\t\t};\n\n\t\t\tif (isChannelType(value)) {\n\t\t\t\tconst functionToCall = functionMapper[value as keyof typeof functionMapper];\n\n\t\t\t\tif (functionToCall) {\n\t\t\t\t\tconst result = await functionToCall();\n\t\t\t\t\tlogEvent('Alert Channel: Save channel', {\n\t\t\t\t\t\ttype: value,\n\t\t\t\t\t\tsendResolvedAlert: selectedConfig?.send_resolved,\n\t\t\t\t\t\tname: selectedConfig?.name,\n\t\t\t\t\t\tnew: 'true',\n\t\t\t\t\t\tstatus: result?.status,\n\t\t\t\t\t\tstatusMessage: result?.statusMessage,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnotifications.error({\n\t\t\t\t\t\tmessage: 'Error',\n\t\t\t\t\t\tdescription: t('selected_channel_invalid'),\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[\n\t\t\tonSlackHandler,\n\t\t\tonWebhookHandler,\n\t\t\tonPagerHandler,\n\t\t\tonOpsgenieHandler,\n\t\t\tonMsTeamsHandler,\n\t\t\tonEmailHandler,\n\t\t\tnotifications,\n\t\t\tt,\n\t\t],\n\t);\n\n\tconst performChannelTest = useCallback(\n\t\tasync (channelType: ChannelType) => {\n\t\t\tsetTestingState(true);\n\t\t\ttry {\n\t\t\t\tlet request;\n\t\t\t\tswitch (channelType) {\n\t\t\t\t\tcase ChannelType.Webhook:\n\t\t\t\t\t\trequest = prepareWebhookRequest();\n\t\t\t\t\t\tawait testWebhookApi(request);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ChannelType.Slack:\n\t\t\t\t\t\trequest = prepareSlackRequest();\n\t\t\t\t\t\tawait testSlackApi(request);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ChannelType.Pagerduty:\n\t\t\t\t\t\trequest = preparePagerRequest();\n\t\t\t\t\t\tif (request) await testPagerApi(request);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ChannelType.MsTeams:\n\t\t\t\t\t\trequest = prepareMsTeamsRequest();\n\t\t\t\t\t\tawait testMsTeamsApi(request);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ChannelType.Opsgenie:\n\t\t\t\t\t\trequest = prepareOpsgenieRequest();\n\t\t\t\t\t\tawait testOpsGenie(request);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase ChannelType.Email:\n\t\t\t\t\t\trequest = prepareEmailRequest();\n\t\t\t\t\t\tawait testEmail(request);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tnotifications.error({\n\t\t\t\t\t\t\tmessage: 'Error',\n\t\t\t\t\t\t\tdescription: t('test_unsupported'),\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetTestingState(false);\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnotifications.success({\n\t\t\t\t\tmessage: 'Success',\n\t\t\t\t\tdescription: t('channel_test_done'),\n\t\t\t\t});\n\t\t\t\tlogEvent('Alert Channel: Test notification', {\n\t\t\t\t\ttype: channelType,\n\t\t\t\t\tsendResolvedAlert: selectedConfig?.send_resolved,\n\t\t\t\t\tname: selectedConfig?.name,\n\t\t\t\t\tnew: 'true',\n\t\t\t\t\tstatus: 'Test success',\n\t\t\t\t});\n\t\t\t} catch (error) {\n\t\t\t\tshowErrorModal(error as APIError);\n\n\t\t\t\tlogEvent('Alert Channel: Test notification', {\n\t\t\t\t\ttype: channelType,\n\t\t\t\t\tsendResolvedAlert: selectedConfig?.send_resolved,\n\t\t\t\t\tname: selectedConfig?.name,\n\t\t\t\t\tnew: 'true',\n\t\t\t\t\tstatus: 'Test failed',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetTestingState(false);\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[\n\t\t\tprepareWebhookRequest,\n\t\t\tt,\n\t\t\tpreparePagerRequest,\n\t\t\tprepareOpsgenieRequest,\n\t\t\tprepareSlackRequest,\n\t\t\tprepareMsTeamsRequest,\n\t\t\tprepareEmailRequest,\n\t\t\tnotifications,\n\t\t],\n\t);\n\n\tconst onTestHandler = useCallback(\n\t\tasync (value: ChannelType) => {\n\t\t\tperformChannelTest(value);\n\t\t},\n\t\t[performChannelTest],\n\t);\n\n\treturn (\n\t\t<FormAlertChannels\n\t\t\t{...{\n\t\t\t\tformInstance,\n\t\t\t\tonTypeChangeHandler,\n\t\t\t\tsetSelectedConfig,\n\t\t\t\ttype,\n\t\t\t\tonTestHandler,\n\t\t\t\tonSaveHandler,\n\t\t\t\tsavingState,\n\t\t\t\ttestingState,\n\t\t\t\ttitle: t('page_title_create'),\n\t\t\t\tinitialValue: {\n\t\t\t\t\ttype,\n\t\t\t\t\t...selectedConfig,\n\t\t\t\t\t...PagerInitialConfig,\n\t\t\t\t\t...OpsgenieInitialConfig,\n\t\t\t\t\t...EmailInitialConfig,\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t);\n}\n\ninterface CreateAlertChannelsProps {\n\tpreType: ChannelType;\n}\n\nexport default CreateAlertChannels;\n","import { ChannelType } from './config';\n\nexport const isChannelType = (type: string): type is ChannelType =>\n\tObject.values(ChannelType).includes(type as ChannelType);\n","import ROUTES from 'constants/routes';\nimport CreateAlertChannels from 'container/CreateAlertChannels';\nimport { ChannelType } from 'container/CreateAlertChannels/config';\nimport GeneralSettings from 'container/GeneralSettings';\nimport { t } from 'i18next';\n\nexport const alertsRoutesConfig = [\n\t{\n\t\tComponent: GeneralSettings,\n\t\tname: t('routes.general'),\n\t\troute: ROUTES.SETTINGS,\n\t\tkey: ROUTES.SETTINGS,\n\t},\n\t{\n\t\tComponent: (): JSX.Element => (\n\t\t\t<CreateAlertChannels preType={ChannelType.Slack} />\n\t\t),\n\t\tname: t('routes.alert_channels'),\n\t\troute: ROUTES.CHANNELS_NEW,\n\t\tkey: ROUTES.CHANNELS_NEW,\n\t},\n];\n","import RouteTab from 'components/RouteTab';\nimport history from 'lib/history';\nimport { useLocation } from 'react-router-dom';\n\nimport { alertsRoutesConfig } from './config';\n\nfunction SettingsPage(): JSX.Element {\n\tconst { pathname } = useLocation();\n\n\treturn (\n\t\t<RouteTab\n\t\t\thistory={history}\n\t\t\troutes={alertsRoutesConfig}\n\t\t\tactiveKey={pathname}\n\t\t/>\n\t);\n}\n\nexport default SettingsPage;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n"],"names":["QuestionCircleFilled","props","ref","A","icon","displayName","QuestionCircleOutlined","create","async","response","axios","post","name","email_configs","send_resolved","to","html","headers","httpStatusCode","status","data","error","ErrorResponseHandlerV2","_default","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","msteamsv2_configs","webhook_url","title","text","opsgenie_configs","api_key","description","priority","message","details","detailsArray","pagerduty_configs","routing_key","client","client_url","severity","class","component","group","slack_configs","api_url","channel","httpConfig","username","trim","password","basic_auth","authorization","type","credentials","webhook_configs","url","http_config","PagerInitialConfig","JSON","stringify","firing","resolved","num_firing","num_resolved","OpsgenieInitialConfig","EmailInitialConfig","CreateAlertChannels","_ref","preType","ChannelType","Slack","t","useTranslation","showErrorModal","useErrorModal","formInstance","Form","useForm","useEffect","logEvent","selectedConfig","setSelectedConfig","useState","savingState","setSavingState","testingState","setTestingState","notifications","useNotifications","setType","onTypeChangeHandler","useCallback","value","currentType","Pagerduty","Opsgenie","Email","prepareSlackRequest","onSlackHandler","createSlackApi","success","history","replace","ROUTES","ALL_CHANNELS","statusMessage","prepareWebhookRequest","request","onWebhookHandler","createWebhookApi","preparePagerRequest","validationError","ValidatePagerChannel","parse","onPagerHandler","createPagerApi","prepareOpsgenieRequest","onOpsgenieHandler","createOpsgenie","prepareEmailRequest","onEmailHandler","createEmail","prepareMsTeamsRequest","onMsTeamsHandler","createMsTeamsApi","onSaveHandler","functionMapper","Webhook","MsTeams","isChannelType","functionToCall","result","sendResolvedAlert","new","performChannelTest","channelType","testWebhookApi","testSlackApi","testPagerApi","testMsTeamsApi","testOpsGenie","testEmail","onTestHandler","_jsx","FormAlertChannels","initialValue","Object","values","includes","alertsRoutesConfig","Component","GeneralSettings","route","SETTINGS","key","CHANNELS_NEW","SettingsPage","pathname","useLocation","RouteTab","routes","activeKey","findIndexFunc","collection","predicate","fromIndex","iterable","iteratee","index","nativeMax","Math","max","array","length","INFINITY","remainder"],"sourceRoot":""}