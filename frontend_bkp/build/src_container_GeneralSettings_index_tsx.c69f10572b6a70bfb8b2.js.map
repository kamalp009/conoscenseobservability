{"version":3,"file":"src_container_GeneralSettings_index_tsx.c69f10572b6a70bfb8b2.js","mappings":"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","sources":["webpack://frontend/./src/api/disks/getDisks.ts","webpack://frontend/./src/api/settings/getRetention.ts","webpack://frontend/./src/api/settings/setRetention.ts","webpack://frontend/./src/components/TextToolTip/TextToolTip.tsx","webpack://frontend/./src/components/TextToolTip/constant.ts","webpack://frontend/./src/components/TextToolTip/index.tsx","webpack://frontend/./src/container/GeneralSettings/GeneralSettings.tsx","webpack://frontend/./src/container/GeneralSettings/Retention.tsx","webpack://frontend/./src/container/GeneralSettings/StatusMessage.tsx","webpack://frontend/./src/container/GeneralSettings/index.tsx","webpack://frontend/./src/container/GeneralSettings/styles.ts","webpack://frontend/./src/container/GeneralSettings/utils.ts","webpack://frontend/./src/container/GeneralSettingsCloud/GeneralSettingsCloud.tsx","webpack://frontend/./src/container/GeneralSettingsCloud/index.tsx","webpack://frontend/./src/components/TextToolTip/TextToolTip.style.scss","webpack://frontend/./src/container/GeneralSettingsCloud/GeneralSettingsCloud.styles.scss","webpack://frontend/./src/components/TextToolTip/TextToolTip.style.scss?1fd1","webpack://frontend/./src/container/GeneralSettingsCloud/GeneralSettingsCloud.styles.scss?6478"],"sourcesContent":["import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { PayloadProps } from 'types/api/disks/getDisks';\n\nconst getDisks = async (): Promise<\n\tSuccessResponse<PayloadProps> | ErrorResponse\n> => {\n\ttry {\n\t\tconst response = await axios.get(`/disks`);\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: 'Success',\n\t\t\tpayload: response.data,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n\nexport default getDisks;\n","import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/settings/getRetention';\n\nconst getRetention = async <T extends Props>(\n\tprops: T,\n): Promise<SuccessResponse<PayloadProps<T>> | ErrorResponse> => {\n\ttry {\n\t\tconst response = await axios.get<PayloadProps<T>>(\n\t\t\t`/settings/ttl?type=${props}`,\n\t\t);\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: 'Success',\n\t\t\tpayload: response.data,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n\nexport default getRetention;\n","import axios from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError } from 'axios';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { PayloadProps, Props } from 'types/api/settings/setRetention';\n\nconst setRetention = async (\n\tprops: Props,\n): Promise<SuccessResponse<PayloadProps> | ErrorResponse> => {\n\ttry {\n\t\tconst response = await axios.post<PayloadProps>(\n\t\t\t`/settings/ttl?duration=${props.totalDuration}&type=${props.type}${\n\t\t\t\tprops.coldStorage\n\t\t\t\t\t? `&coldStorage=${props.coldStorage}&toColdDuration=${props.toColdDuration}`\n\t\t\t\t\t: ''\n\t\t\t}`,\n\t\t);\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: 'Success',\n\t\t\tpayload: response.data,\n\t\t};\n\t} catch (error) {\n\t\treturn ErrorResponseHandler(error as AxiosError);\n\t}\n};\n\nexport default setRetention;\n","import './TextToolTip.style.scss';\n\nimport { blue, grey } from '@ant-design/colors';\nimport {\n\tQuestionCircleFilled,\n\tQuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport { themeColors } from 'constants/theme';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { useMemo } from 'react';\n\nimport { style } from './constant';\n\nfunction TextToolTip({\n\ttext,\n\turl,\n\tuseFilledIcon = true,\n\turlText,\n}: TextToolTipProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst onClickHandler = (\n\t\tevent: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n\t): void => {\n\t\tevent.stopPropagation();\n\t};\n\n\tconst overlay = useMemo(\n\t\t() => (\n\t\t\t<div className=\"overlay--text-wrap\">\n\t\t\t\t{`${text} `}\n\t\t\t\t{url && (\n\t\t\t\t\t<a\n\t\t\t\t\t\t// Stopping event propagation on click so that parent click listener are not triggered\n\t\t\t\t\t\tonClick={onClickHandler}\n\t\t\t\t\t\thref={url}\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{urlText || 'here'}\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t),\n\t\t[text, url, urlText],\n\t);\n\n\tconst iconStyle = useMemo(\n\t\t() => ({\n\t\t\t...style,\n\t\t\tcolor: isDarkMode ? themeColors.whiteCream : grey[0],\n\t\t}),\n\t\t[isDarkMode],\n\t);\n\n\tconst iconOutlinedStyle = useMemo(\n\t\t() => ({\n\t\t\t...style,\n\t\t\tcolor: isDarkMode ? themeColors.navyBlue : blue[6],\n\t\t}),\n\t\t[isDarkMode],\n\t);\n\n\treturn (\n\t\t<Tooltip overlay={overlay}>\n\t\t\t{useFilledIcon ? (\n\t\t\t\t<QuestionCircleFilled style={iconStyle} />\n\t\t\t) : (\n\t\t\t\t<QuestionCircleOutlined style={iconOutlinedStyle} />\n\t\t\t)}\n\t\t</Tooltip>\n\t);\n}\n\nTextToolTip.defaultProps = {\n\turl: '',\n\turlText: '',\n\tuseFilledIcon: true,\n};\ninterface TextToolTipProps {\n\turl?: string;\n\ttext: string;\n\tuseFilledIcon?: boolean;\n\turlText?: string;\n}\n\nexport default TextToolTip;\n","export const style = { fontSize: '1rem' };\n","import TextToolTip from './TextToolTip';\n\nexport default TextToolTip;\n","/* eslint-disable sonarjs/no-duplicate-string */\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Button, Card, Col, Divider, Modal, Row, Spin, Typography } from 'antd';\nimport setRetentionApi from 'api/settings/setRetention';\nimport TextToolTip from 'components/TextToolTip';\nimport GeneralSettingsCloud from 'container/GeneralSettingsCloud';\nimport useComponentPermission from 'hooks/useComponentPermission';\nimport { useGetTenantLicense } from 'hooks/useGetTenantLicense';\nimport { useNotifications } from 'hooks/useNotifications';\nimport find from 'lodash-es/find';\nimport { useAppContext } from 'providers/App/App';\nimport { Fragment, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { UseQueryResult } from 'react-query';\nimport { useInterval } from 'react-use';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport {\n\tIDiskType,\n\tPayloadProps as GetDisksPayload,\n} from 'types/api/disks/getDisks';\nimport { TTTLType } from 'types/api/settings/common';\nimport {\n\tPayloadPropsLogs as GetRetentionPeriodLogsPayload,\n\tPayloadPropsMetrics as GetRetentionPeriodMetricsPayload,\n\tPayloadPropsTraces as GetRetentionPeriodTracesPayload,\n} from 'types/api/settings/getRetention';\n\nimport Retention from './Retention';\nimport StatusMessage from './StatusMessage';\nimport { ActionItemsContainer, ErrorText, ErrorTextContainer } from './styles';\n\ntype NumberOrNull = number | null;\n\nfunction GeneralSettings({\n\tmetricsTtlValuesPayload,\n\ttracesTtlValuesPayload,\n\tlogsTtlValuesPayload,\n\tgetAvailableDiskPayload,\n\tmetricsTtlValuesRefetch,\n\ttracesTtlValuesRefetch,\n\tlogsTtlValuesRefetch,\n}: GeneralSettingsProps): JSX.Element {\n\tconst { t } = useTranslation(['generalSettings']);\n\tconst [modalMetrics, setModalMetrics] = useState<boolean>(false);\n\tconst [modalTraces, setModalTraces] = useState<boolean>(false);\n\tconst [modalLogs, setModalLogs] = useState<boolean>(false);\n\n\tconst [postApiLoadingMetrics, setPostApiLoadingMetrics] = useState<boolean>(\n\t\tfalse,\n\t);\n\tconst [postApiLoadingTraces, setPostApiLoadingTraces] = useState<boolean>(\n\t\tfalse,\n\t);\n\tconst [postApiLoadingLogs, setPostApiLoadingLogs] = useState<boolean>(false);\n\n\tconst [availableDisks] = useState<IDiskType[]>(getAvailableDiskPayload);\n\n\tconst [metricsCurrentTTLValues, setMetricsCurrentTTLValues] = useState(\n\t\tmetricsTtlValuesPayload,\n\t);\n\tconst [tracesCurrentTTLValues, setTracesCurrentTTLValues] = useState(\n\t\ttracesTtlValuesPayload,\n\t);\n\n\tconst [logsCurrentTTLValues, setLogsCurrentTTLValues] = useState(\n\t\tlogsTtlValuesPayload,\n\t);\n\n\tconst { user } = useAppContext();\n\n\tconst [setRetentionPermission] = useComponentPermission(\n\t\t['set_retention_period'],\n\t\tuser.role,\n\t);\n\n\tconst [\n\t\tmetricsTotalRetentionPeriod,\n\t\tsetMetricsTotalRetentionPeriod,\n\t] = useState<NumberOrNull>(null);\n\tconst [\n\t\tmetricsS3RetentionPeriod,\n\t\tsetMetricsS3RetentionPeriod,\n\t] = useState<NumberOrNull>(null);\n\tconst [\n\t\ttracesTotalRetentionPeriod,\n\t\tsetTracesTotalRetentionPeriod,\n\t] = useState<NumberOrNull>(null);\n\tconst [\n\t\ttracesS3RetentionPeriod,\n\t\tsetTracesS3RetentionPeriod,\n\t] = useState<NumberOrNull>(null);\n\n\tconst [\n\t\tlogsTotalRetentionPeriod,\n\t\tsetLogsTotalRetentionPeriod,\n\t] = useState<NumberOrNull>(null);\n\tconst [\n\t\tlogsS3RetentionPeriod,\n\t\tsetLogsS3RetentionPeriod,\n\t] = useState<NumberOrNull>(null);\n\n\tuseEffect(() => {\n\t\tif (metricsCurrentTTLValues) {\n\t\t\tsetMetricsTotalRetentionPeriod(\n\t\t\t\tmetricsCurrentTTLValues.metrics_ttl_duration_hrs,\n\t\t\t);\n\t\t\tsetMetricsS3RetentionPeriod(\n\t\t\t\tmetricsCurrentTTLValues.metrics_move_ttl_duration_hrs\n\t\t\t\t\t? metricsCurrentTTLValues.metrics_move_ttl_duration_hrs\n\t\t\t\t\t: null,\n\t\t\t);\n\t\t}\n\t}, [metricsCurrentTTLValues]);\n\n\tuseEffect(() => {\n\t\tif (tracesCurrentTTLValues) {\n\t\t\tsetTracesTotalRetentionPeriod(\n\t\t\t\ttracesCurrentTTLValues.traces_ttl_duration_hrs,\n\t\t\t);\n\t\t\tsetTracesS3RetentionPeriod(\n\t\t\t\ttracesCurrentTTLValues.traces_move_ttl_duration_hrs\n\t\t\t\t\t? tracesCurrentTTLValues.traces_move_ttl_duration_hrs\n\t\t\t\t\t: null,\n\t\t\t);\n\t\t}\n\t}, [tracesCurrentTTLValues]);\n\n\tuseEffect(() => {\n\t\tif (logsCurrentTTLValues) {\n\t\t\tsetLogsTotalRetentionPeriod(logsCurrentTTLValues.logs_ttl_duration_hrs);\n\t\t\tsetLogsS3RetentionPeriod(\n\t\t\t\tlogsCurrentTTLValues.logs_move_ttl_duration_hrs\n\t\t\t\t\t? logsCurrentTTLValues.logs_move_ttl_duration_hrs\n\t\t\t\t\t: null,\n\t\t\t);\n\t\t}\n\t}, [logsCurrentTTLValues]);\n\n\tuseInterval(\n\t\tasync (): Promise<void> => {\n\t\t\tif (metricsTtlValuesPayload.status === 'pending') {\n\t\t\t\tmetricsTtlValuesRefetch();\n\t\t\t}\n\t\t},\n\t\tmetricsTtlValuesPayload.status === 'pending' ? 1000 : null,\n\t);\n\n\tuseInterval(\n\t\tasync (): Promise<void> => {\n\t\t\tif (tracesTtlValuesPayload.status === 'pending') {\n\t\t\t\ttracesTtlValuesRefetch();\n\t\t\t}\n\t\t},\n\t\ttracesTtlValuesPayload.status === 'pending' ? 1000 : null,\n\t);\n\n\tuseInterval(\n\t\tasync (): Promise<void> => {\n\t\t\tif (logsTtlValuesPayload.status === 'pending') {\n\t\t\t\tlogsTtlValuesRefetch();\n\t\t\t}\n\t\t},\n\t\tlogsTtlValuesPayload.status === 'pending' ? 1000 : null,\n\t);\n\n\tconst { notifications } = useNotifications();\n\n\tconst onModalToggleHandler = (type: TTTLType): void => {\n\t\tif (type === 'metrics') setModalMetrics((modal) => !modal);\n\t\tif (type === 'traces') setModalTraces((modal) => !modal);\n\t\tif (type === 'logs') setModalLogs((modal) => !modal);\n\t};\n\tconst onPostApiLoadingHandler = (type: TTTLType): void => {\n\t\tif (type === 'metrics') setPostApiLoadingMetrics((modal) => !modal);\n\t\tif (type === 'traces') setPostApiLoadingTraces((modal) => !modal);\n\t\tif (type === 'logs') setPostApiLoadingLogs((modal) => !modal);\n\t};\n\n\tconst onClickSaveHandler = useCallback(\n\t\t(type: TTTLType) => {\n\t\t\tif (!setRetentionPermission) {\n\t\t\t\tnotifications.error({\n\t\t\t\t\tmessage: `Sorry you don't have permission to make these changes`,\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonModalToggleHandler(type);\n\t\t},\n\t\t[setRetentionPermission, notifications],\n\t);\n\n\tconst s3Enabled = useMemo(\n\t\t() => !!find(availableDisks, (disks: IDiskType) => disks?.type === 's3'),\n\t\t[availableDisks],\n\t);\n\n\tconst [\n\t\tisMetricsSaveDisabled,\n\t\tisTracesSaveDisabled,\n\t\tisLogsSaveDisabled,\n\t\terrorText,\n\t] = useMemo((): [\n\t\tboolean,\n\t\tboolean,\n\t\tboolean,\n\t\tstring,\n\t\t// eslint-disable-next-line sonarjs/cognitive-complexity\n\t] => {\n\t\t// Various methods to return dynamic error message text.\n\t\tconst messages = {\n\t\t\tcompareError: (name: string | number): string =>\n\t\t\t\tt('retention_comparison_error', { name }),\n\t\t\tnullValueError: (name: string | number): string =>\n\t\t\t\tt('retention_null_value_error', { name }),\n\t\t};\n\n\t\t// Defaults to button not disabled and empty error message text.\n\t\tlet isMetricsSaveDisabled = false;\n\t\tlet isTracesSaveDisabled = false;\n\t\tlet isLogsSaveDisabled = false;\n\t\tlet errorText = '';\n\n\t\tif (s3Enabled) {\n\t\t\tif (\n\t\t\t\t(metricsTotalRetentionPeriod || metricsS3RetentionPeriod) &&\n\t\t\t\tNumber(metricsTotalRetentionPeriod) <= Number(metricsS3RetentionPeriod)\n\t\t\t) {\n\t\t\t\tisMetricsSaveDisabled = true;\n\t\t\t\terrorText = messages.compareError('metrics');\n\t\t\t} else if (\n\t\t\t\t(tracesTotalRetentionPeriod || tracesS3RetentionPeriod) &&\n\t\t\t\tNumber(tracesTotalRetentionPeriod) <= Number(tracesS3RetentionPeriod)\n\t\t\t) {\n\t\t\t\tisTracesSaveDisabled = true;\n\t\t\t\terrorText = messages.compareError('traces');\n\t\t\t} else if (\n\t\t\t\t(logsTotalRetentionPeriod || logsS3RetentionPeriod) &&\n\t\t\t\tNumber(logsTotalRetentionPeriod) <= Number(logsS3RetentionPeriod)\n\t\t\t) {\n\t\t\t\tisLogsSaveDisabled = true;\n\t\t\t\terrorText = messages.compareError('logs');\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\t!metricsTotalRetentionPeriod ||\n\t\t\t!tracesTotalRetentionPeriod ||\n\t\t\t!logsTotalRetentionPeriod\n\t\t) {\n\t\t\tisMetricsSaveDisabled = true;\n\t\t\tisTracesSaveDisabled = true;\n\t\t\tisLogsSaveDisabled = true;\n\t\t\tif (\n\t\t\t\t!metricsTotalRetentionPeriod &&\n\t\t\t\t!tracesTotalRetentionPeriod &&\n\t\t\t\t!logsTotalRetentionPeriod\n\t\t\t) {\n\t\t\t\terrorText = messages.nullValueError('metrics, traces and logs');\n\t\t\t} else if (!metricsTotalRetentionPeriod) {\n\t\t\t\terrorText = messages.nullValueError('metrics');\n\t\t\t} else if (!tracesTotalRetentionPeriod) {\n\t\t\t\terrorText = messages.nullValueError('traces');\n\t\t\t} else if (!logsTotalRetentionPeriod) {\n\t\t\t\terrorText = messages.nullValueError('logs');\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\tmetricsCurrentTTLValues?.metrics_ttl_duration_hrs ===\n\t\t\t\tmetricsTotalRetentionPeriod &&\n\t\t\tmetricsCurrentTTLValues.metrics_move_ttl_duration_hrs ===\n\t\t\t\tmetricsS3RetentionPeriod\n\t\t)\n\t\t\tisMetricsSaveDisabled = true;\n\n\t\tif (\n\t\t\ttracesCurrentTTLValues.traces_ttl_duration_hrs ===\n\t\t\t\ttracesTotalRetentionPeriod &&\n\t\t\ttracesCurrentTTLValues.traces_move_ttl_duration_hrs ===\n\t\t\t\ttracesS3RetentionPeriod\n\t\t)\n\t\t\tisTracesSaveDisabled = true;\n\n\t\tif (\n\t\t\tlogsCurrentTTLValues.logs_ttl_duration_hrs === logsTotalRetentionPeriod &&\n\t\t\tlogsCurrentTTLValues.logs_move_ttl_duration_hrs === logsS3RetentionPeriod\n\t\t)\n\t\t\tisLogsSaveDisabled = true;\n\n\t\treturn [\n\t\t\tisMetricsSaveDisabled,\n\t\t\tisTracesSaveDisabled,\n\t\t\tisLogsSaveDisabled,\n\t\t\terrorText,\n\t\t];\n\t}, [\n\t\tlogsCurrentTTLValues.logs_move_ttl_duration_hrs,\n\t\tlogsCurrentTTLValues.logs_ttl_duration_hrs,\n\t\tlogsS3RetentionPeriod,\n\t\tlogsTotalRetentionPeriod,\n\t\tmetricsCurrentTTLValues.metrics_move_ttl_duration_hrs,\n\t\tmetricsCurrentTTLValues?.metrics_ttl_duration_hrs,\n\t\tmetricsS3RetentionPeriod,\n\t\tmetricsTotalRetentionPeriod,\n\t\ts3Enabled,\n\t\tt,\n\t\ttracesCurrentTTLValues.traces_move_ttl_duration_hrs,\n\t\ttracesCurrentTTLValues.traces_ttl_duration_hrs,\n\t\ttracesS3RetentionPeriod,\n\t\ttracesTotalRetentionPeriod,\n\t]);\n\n\t// eslint-disable-next-line sonarjs/cognitive-complexity\n\tconst onOkHandler = async (type: TTTLType): Promise<void> => {\n\t\tlet apiCallTotalRetention;\n\t\tlet apiCallS3Retention;\n\n\t\tswitch (type) {\n\t\t\tcase 'metrics': {\n\t\t\t\tapiCallTotalRetention = metricsTotalRetentionPeriod;\n\t\t\t\tapiCallS3Retention = metricsS3RetentionPeriod;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'traces': {\n\t\t\t\tapiCallTotalRetention = tracesTotalRetentionPeriod;\n\t\t\t\tapiCallS3Retention = tracesS3RetentionPeriod;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'logs': {\n\t\t\t\tapiCallTotalRetention = logsTotalRetentionPeriod;\n\t\t\t\tapiCallS3Retention = logsS3RetentionPeriod;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\tonPostApiLoadingHandler(type);\n\t\t\tconst setTTLResponse = await setRetentionApi({\n\t\t\t\ttype,\n\t\t\t\ttotalDuration: `${apiCallTotalRetention || -1}h`,\n\t\t\t\tcoldStorage: s3Enabled ? 's3' : null,\n\t\t\t\ttoColdDuration: `${apiCallS3Retention || -1}h`,\n\t\t\t});\n\t\t\tlet hasSetTTLFailed = false;\n\t\t\tif (setTTLResponse.statusCode === 409) {\n\t\t\t\thasSetTTLFailed = true;\n\t\t\t\tnotifications.error({\n\t\t\t\t\tmessage: 'Error',\n\t\t\t\t\tdescription: t('retention_request_race_condition'),\n\t\t\t\t\tplacement: 'topRight',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (type === 'metrics') {\n\t\t\t\tmetricsTtlValuesRefetch();\n\n\t\t\t\tif (!hasSetTTLFailed)\n\t\t\t\t\t// Updates the currentTTL Values in order to avoid pushing the same values.\n\t\t\t\t\tsetMetricsCurrentTTLValues({\n\t\t\t\t\t\tmetrics_ttl_duration_hrs: metricsTotalRetentionPeriod || -1,\n\t\t\t\t\t\tmetrics_move_ttl_duration_hrs: metricsS3RetentionPeriod || -1,\n\t\t\t\t\t\tstatus: '',\n\t\t\t\t\t});\n\t\t\t} else if (type === 'traces') {\n\t\t\t\ttracesTtlValuesRefetch();\n\n\t\t\t\tif (!hasSetTTLFailed)\n\t\t\t\t\t// Updates the currentTTL Values in order to avoid pushing the same values.\n\t\t\t\t\tsetTracesCurrentTTLValues({\n\t\t\t\t\t\ttraces_ttl_duration_hrs: tracesTotalRetentionPeriod || -1,\n\t\t\t\t\t\ttraces_move_ttl_duration_hrs: tracesS3RetentionPeriod || -1,\n\t\t\t\t\t\tstatus: '',\n\t\t\t\t\t});\n\t\t\t} else if (type === 'logs') {\n\t\t\t\tlogsTtlValuesRefetch();\n\t\t\t\tif (!hasSetTTLFailed)\n\t\t\t\t\t// Updates the currentTTL Values in order to avoid pushing the same values.\n\t\t\t\t\tsetLogsCurrentTTLValues({\n\t\t\t\t\t\tlogs_ttl_duration_hrs: logsTotalRetentionPeriod || -1,\n\t\t\t\t\t\tlogs_move_ttl_duration_hrs: logsS3RetentionPeriod || -1,\n\t\t\t\t\t\tstatus: '',\n\t\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tnotifications.error({\n\t\t\t\tmessage: 'Error',\n\t\t\t\tdescription: t('retention_failed_message'),\n\t\t\t\tplacement: 'topRight',\n\t\t\t});\n\t\t}\n\n\t\tonPostApiLoadingHandler(type);\n\t\tonModalToggleHandler(type);\n\t};\n\n\tconst { isCloudUser: isCloudUserVal } = useGetTenantLicense();\n\n\tconst renderConfig = [\n\t\t{\n\t\t\tname: 'Metrics',\n\t\t\tretentionFields: [\n\t\t\t\t{\n\t\t\t\t\tname: t('total_retention_period'),\n\t\t\t\t\tvalue: metricsTotalRetentionPeriod,\n\t\t\t\t\tsetValue: setMetricsTotalRetentionPeriod,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: t('move_to_s3'),\n\t\t\t\t\tvalue: metricsS3RetentionPeriod,\n\t\t\t\t\tsetValue: setMetricsS3RetentionPeriod,\n\t\t\t\t\thide: !s3Enabled,\n\t\t\t\t},\n\t\t\t],\n\t\t\tsave: {\n\t\t\t\tmodal: modalMetrics,\n\t\t\t\tmodalOpen: (): void => onClickSaveHandler('metrics'),\n\t\t\t\tapiLoading: postApiLoadingMetrics,\n\t\t\t\tsaveButtonText:\n\t\t\t\t\tmetricsTtlValuesPayload.status === 'pending' ? (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Spin spinning size=\"small\" indicator={<LoadingOutlined spin />} />{' '}\n\t\t\t\t\t\t\t{t('retention_save_button.pending', { name: 'metrics' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>{t('retention_save_button.success')}</span>\n\t\t\t\t\t),\n\t\t\t\tisDisabled:\n\t\t\t\t\tmetricsTtlValuesPayload.status === 'pending' || isMetricsSaveDisabled,\n\t\t\t},\n\t\t\tstatusComponent: (\n\t\t\t\t<StatusMessage\n\t\t\t\t\ttotal_retention={metricsTtlValuesPayload.expected_metrics_ttl_duration_hrs}\n\t\t\t\t\tstatus={metricsTtlValuesPayload.status}\n\t\t\t\t\ts3_retention={\n\t\t\t\t\t\tmetricsTtlValuesPayload.expected_metrics_move_ttl_duration_hrs\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tname: 'Traces',\n\t\t\tretentionFields: [\n\t\t\t\t{\n\t\t\t\t\tname: t('total_retention_period'),\n\t\t\t\t\tvalue: tracesTotalRetentionPeriod,\n\t\t\t\t\tsetValue: setTracesTotalRetentionPeriod,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: t('move_to_s3'),\n\t\t\t\t\tvalue: tracesS3RetentionPeriod,\n\t\t\t\t\tsetValue: setTracesS3RetentionPeriod,\n\t\t\t\t\thide: !s3Enabled,\n\t\t\t\t},\n\t\t\t],\n\t\t\tsave: {\n\t\t\t\tmodal: modalTraces,\n\t\t\t\tmodalOpen: (): void => onClickSaveHandler('traces'),\n\t\t\t\tapiLoading: postApiLoadingTraces,\n\t\t\t\tsaveButtonText:\n\t\t\t\t\ttracesTtlValuesPayload.status === 'pending' ? (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Spin spinning size=\"small\" indicator={<LoadingOutlined spin />} />{' '}\n\t\t\t\t\t\t\t{t('retention_save_button.pending', { name: 'traces' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>{t('retention_save_button.success')}</span>\n\t\t\t\t\t),\n\t\t\t\tisDisabled:\n\t\t\t\t\ttracesTtlValuesPayload.status === 'pending' || isTracesSaveDisabled,\n\t\t\t},\n\t\t\tstatusComponent: (\n\t\t\t\t<StatusMessage\n\t\t\t\t\ttotal_retention={tracesTtlValuesPayload.expected_traces_ttl_duration_hrs}\n\t\t\t\t\tstatus={tracesTtlValuesPayload.status}\n\t\t\t\t\ts3_retention={tracesTtlValuesPayload.expected_traces_move_ttl_duration_hrs}\n\t\t\t\t/>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tname: 'Logs',\n\t\t\tretentionFields: [\n\t\t\t\t{\n\t\t\t\t\tname: t('total_retention_period'),\n\t\t\t\t\tvalue: logsTotalRetentionPeriod,\n\t\t\t\t\tsetValue: setLogsTotalRetentionPeriod,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: t('move_to_s3'),\n\t\t\t\t\tvalue: logsS3RetentionPeriod,\n\t\t\t\t\tsetValue: setLogsS3RetentionPeriod,\n\t\t\t\t\thide: !s3Enabled,\n\t\t\t\t},\n\t\t\t],\n\t\t\tsave: {\n\t\t\t\tmodal: modalLogs,\n\t\t\t\tmodalOpen: (): void => onClickSaveHandler('logs'),\n\t\t\t\tapiLoading: postApiLoadingLogs,\n\t\t\t\tsaveButtonText:\n\t\t\t\t\tlogsTtlValuesPayload.status === 'pending' ? (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t<Spin spinning size=\"small\" indicator={<LoadingOutlined spin />} />{' '}\n\t\t\t\t\t\t\t{t('retention_save_button.pending', { name: 'logs' })}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>{t('retention_save_button.success')}</span>\n\t\t\t\t\t),\n\t\t\t\tisDisabled: logsTtlValuesPayload.status === 'pending' || isLogsSaveDisabled,\n\t\t\t},\n\t\t\tstatusComponent: (\n\t\t\t\t<StatusMessage\n\t\t\t\t\ttotal_retention={logsTtlValuesPayload.expected_logs_ttl_duration_hrs}\n\t\t\t\t\tstatus={logsTtlValuesPayload.status}\n\t\t\t\t\ts3_retention={logsTtlValuesPayload.expected_logs_move_ttl_duration_hrs}\n\t\t\t\t/>\n\t\t\t),\n\t\t},\n\t].map((category): JSX.Element | null => {\n\t\tif (\n\t\t\tArray.isArray(category.retentionFields) &&\n\t\t\tcategory.retentionFields.length > 0\n\t\t) {\n\t\t\treturn (\n\t\t\t\t<Fragment key={category.name}>\n\t\t\t\t\t<Col xs={22} xl={11} key={category.name} style={{ margin: '0.5rem' }}>\n\t\t\t\t\t\t<Card style={{ height: '100%' }}>\n\t\t\t\t\t\t\t<Typography.Title style={{ margin: 0 }} level={3}>\n\t\t\t\t\t\t\t\t{category.name}\n\t\t\t\t\t\t\t</Typography.Title>\n\t\t\t\t\t\t\t<Divider\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tmargin: '0.5rem 0',\n\t\t\t\t\t\t\t\t\tpadding: 0,\n\t\t\t\t\t\t\t\t\topacity: 0.5,\n\t\t\t\t\t\t\t\t\tmarginBottom: '1rem',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{category.retentionFields.map((retentionField) => (\n\t\t\t\t\t\t\t\t<Retention\n\t\t\t\t\t\t\t\t\tkey={retentionField.name}\n\t\t\t\t\t\t\t\t\ttext={retentionField.name}\n\t\t\t\t\t\t\t\t\tretentionValue={retentionField.value}\n\t\t\t\t\t\t\t\t\tsetRetentionValue={retentionField.setValue}\n\t\t\t\t\t\t\t\t\thide={!!retentionField.hide}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t{!isCloudUserVal && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<ActionItemsContainer>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\t\tonClick={category.save.modalOpen}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={category.save.isDisabled}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{category.save.saveButtonText}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t{category.statusComponent}\n\t\t\t\t\t\t\t\t\t</ActionItemsContainer>\n\t\t\t\t\t\t\t\t\t<Modal\n\t\t\t\t\t\t\t\t\t\ttitle={t('retention_confirmation')}\n\t\t\t\t\t\t\t\t\t\tfocusTriggerAfterClose\n\t\t\t\t\t\t\t\t\t\tforceRender\n\t\t\t\t\t\t\t\t\t\tdestroyOnClose\n\t\t\t\t\t\t\t\t\t\tclosable\n\t\t\t\t\t\t\t\t\t\tonCancel={(): void =>\n\t\t\t\t\t\t\t\t\t\t\tonModalToggleHandler(category.name.toLowerCase() as TTTLType)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tonOk={(): Promise<void> =>\n\t\t\t\t\t\t\t\t\t\t\tonOkHandler(category.name.toLowerCase() as TTTLType)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tcentered\n\t\t\t\t\t\t\t\t\t\topen={category.save.modal}\n\t\t\t\t\t\t\t\t\t\tconfirmLoading={category.save.apiLoading}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\t\t\t\t\t{t('retention_confirmation_description', {\n\t\t\t\t\t\t\t\t\t\t\t\tname: category.name.toLowerCase(),\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t\t</Modal>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t{Element}\n\t\t\t<Col xs={24} md={22} xl={20} xxl={18} style={{ margin: 'auto' }}>\n\t\t\t\t<ErrorTextContainer>\n\t\t\t\t\t{!isCloudUserVal && (\n\t\t\t\t\t\t<TextToolTip\n\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\ttext: `More details on how to set retention period`,\n\t\t\t\t\t\t\t\turl: 'https://signoz.io/docs/userguide/retention-period/',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{errorText && <ErrorText>{errorText}</ErrorText>}\n\t\t\t\t</ErrorTextContainer>\n\n\t\t\t\t<Row justify=\"start\">{renderConfig}</Row>\n\n\t\t\t\t{isCloudUserVal && <GeneralSettingsCloud />}\n\t\t\t</Col>\n\t\t</>\n\t);\n}\n\ninterface GeneralSettingsProps {\n\tgetAvailableDiskPayload: GetDisksPayload;\n\tmetricsTtlValuesPayload: GetRetentionPeriodMetricsPayload;\n\ttracesTtlValuesPayload: GetRetentionPeriodTracesPayload;\n\tlogsTtlValuesPayload: GetRetentionPeriodLogsPayload;\n\tmetricsTtlValuesRefetch: UseQueryResult<\n\t\tErrorResponse | SuccessResponse<GetRetentionPeriodMetricsPayload>\n\t>['refetch'];\n\ttracesTtlValuesRefetch: UseQueryResult<\n\t\tErrorResponse | SuccessResponse<GetRetentionPeriodTracesPayload>\n\t>['refetch'];\n\tlogsTtlValuesRefetch: UseQueryResult<\n\t\tErrorResponse | SuccessResponse<GetRetentionPeriodLogsPayload>\n\t>['refetch'];\n}\n\nexport default GeneralSettings;\n","import { Col, Row, Select } from 'antd';\nimport { useGetTenantLicense } from 'hooks/useGetTenantLicense';\nimport { find } from 'lodash-es';\nimport {\n\tChangeEvent,\n\tDispatch,\n\tSetStateAction,\n\tuseEffect,\n\tuseRef,\n\tuseState,\n} from 'react';\n\nimport {\n\tInput,\n\tRetentionContainer,\n\tRetentionFieldInputContainer,\n\tRetentionFieldLabel,\n} from './styles';\nimport {\n\tconvertHoursValueToRelevantUnit,\n\tSettingPeriod,\n\tTimeUnits,\n} from './utils';\n\nconst { Option } = Select;\n\nfunction Retention({\n\tretentionValue,\n\tsetRetentionValue,\n\ttext,\n\thide,\n}: RetentionProps): JSX.Element | null {\n\tconst {\n\t\tvalue: initialValue,\n\t\ttimeUnitValue: initialTimeUnitValue,\n\t} = convertHoursValueToRelevantUnit(Number(retentionValue));\n\tconst [selectedTimeUnit, setSelectTimeUnit] = useState(initialTimeUnitValue);\n\tconst [selectedValue, setSelectedValue] = useState<number | null>(\n\t\tinitialValue,\n\t);\n\tconst interacted = useRef(false);\n\n\tconst { isCloudUser: isCloudUserVal } = useGetTenantLicense();\n\n\tuseEffect(() => {\n\t\tif (!interacted.current) setSelectedValue(initialValue);\n\t}, [initialValue]);\n\n\tuseEffect(() => {\n\t\tif (!interacted.current) setSelectTimeUnit(initialTimeUnitValue);\n\t}, [initialTimeUnitValue]);\n\n\tconst menuItems = TimeUnits.map((option) => (\n\t\t<Option key={option.value} value={option.value}>\n\t\t\t{option.key}\n\t\t</Option>\n\t));\n\n\tconst currentSelectedOption = (option: SettingPeriod): void => {\n\t\tconst selectedValue = find(TimeUnits, (e) => e.value === option)?.value;\n\t\tif (selectedValue) setSelectTimeUnit(selectedValue);\n\t};\n\n\tuseEffect(() => {\n\t\tconst inverseMultiplier = find(\n\t\t\tTimeUnits,\n\t\t\t(timeUnit) => timeUnit.value === selectedTimeUnit,\n\t\t)?.multiplier;\n\t\tif (!selectedValue) setRetentionValue(null);\n\t\tif (selectedValue && inverseMultiplier) {\n\t\t\tsetRetentionValue(selectedValue * (1 / inverseMultiplier));\n\t\t}\n\t}, [selectedTimeUnit, selectedValue, setRetentionValue]);\n\n\tconst onChangeHandler = (\n\t\te: ChangeEvent<HTMLInputElement>,\n\t\tfunc: Dispatch<SetStateAction<number | null>>,\n\t): void => {\n\t\tinteracted.current = true;\n\t\tconst { value } = e.target;\n\t\tconst integerValue = parseInt(value, 10);\n\n\t\tif (value.length > 0 && integerValue.toString() === value) {\n\t\t\tconst parsedValue = Math.abs(integerValue);\n\t\t\tfunc(parsedValue);\n\t\t}\n\n\t\tif (value.length === 0) {\n\t\t\tfunc(null);\n\t\t}\n\t};\n\n\tif (hide) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<RetentionContainer>\n\t\t\t<Row justify=\"space-between\">\n\t\t\t\t<Col span={12} style={{ display: 'flex' }}>\n\t\t\t\t\t<RetentionFieldLabel>{text}</RetentionFieldLabel>\n\t\t\t\t</Col>\n\t\t\t\t<Row justify=\"end\">\n\t\t\t\t\t<RetentionFieldInputContainer>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tvalue={selectedValue && selectedValue >= 0 ? selectedValue : ''}\n\t\t\t\t\t\t\tdisabled={isCloudUserVal}\n\t\t\t\t\t\t\tonChange={(e): void => onChangeHandler(e, setSelectedValue)}\n\t\t\t\t\t\t\tstyle={{ width: 75 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={selectedTimeUnit}\n\t\t\t\t\t\t\tonChange={currentSelectedOption}\n\t\t\t\t\t\t\tdisabled={isCloudUserVal}\n\t\t\t\t\t\t\tstyle={{ width: 100 }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{menuItems}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t</RetentionFieldInputContainer>\n\t\t\t\t</Row>\n\t\t\t</Row>\n\t\t</RetentionContainer>\n\t);\n}\n\ninterface RetentionProps {\n\tretentionValue: number | null;\n\ttext: string;\n\tsetRetentionValue: Dispatch<SetStateAction<number | null>>;\n\thide: boolean;\n}\n\nexport default Retention;\n","import { green, orange, volcano } from '@ant-design/colors';\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Card, Col } from 'antd';\nimport { useMemo } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TStatus } from 'types/api/settings/getRetention';\n\nimport { convertHoursValueToRelevantUnitString } from './utils';\n\nfunction StatusMessage({\n\ttotal_retention,\n\ts3_retention,\n\tstatus,\n}: StatusMessageProps): JSX.Element | null {\n\tconst { t } = useTranslation(['generalSettings']);\n\n\tconst messageColor = useMemo((): string => {\n\t\tif (status === 'success') return green[6];\n\t\tif (status === 'pending') return orange[6];\n\t\tif (status === 'failed') return volcano[6];\n\t\treturn 'inherit';\n\t}, [status]);\n\tif (!status) {\n\t\treturn null;\n\t}\n\tconst s3Part =\n\t\ts3_retention && s3_retention !== -1\n\t\t\t? t('status_message.s3_part', {\n\t\t\t\t\ts3_retention: convertHoursValueToRelevantUnitString(s3_retention),\n\t\t\t  })\n\t\t\t: '';\n\tconst statusMessage =\n\t\ttotal_retention && total_retention !== -1\n\t\t\t? t(`status_message.${status}`, {\n\t\t\t\t\ttotal_retention: convertHoursValueToRelevantUnitString(total_retention),\n\t\t\t\t\ts3_part: s3Part,\n\t\t\t  })\n\t\t\t: null;\n\n\treturn statusMessage ? (\n\t\t<Card\n\t\t\tstyle={{\n\t\t\t\twidth: '100%',\n\t\t\t}}\n\t\t>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tgap: '1rem',\n\t\t\t\t\talignItems: 'center',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Col xs={1}>\n\t\t\t\t\t<InfoCircleOutlined style={{ fontSize: '1rem' }} />\n\t\t\t\t</Col>\n\n\t\t\t\t<Col\n\t\t\t\t\txs={22}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tcolor: messageColor,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{statusMessage}\n\t\t\t\t</Col>\n\t\t\t</div>\n\t\t</Card>\n\t) : null;\n}\n\ninterface StatusMessageProps {\n\tstatus: TStatus;\n\ttotal_retention: number | undefined;\n\ts3_retention: number | undefined;\n}\nexport default StatusMessage;\n","import { Typography } from 'antd';\nimport getDisks from 'api/disks/getDisks';\nimport getRetentionPeriodApi from 'api/settings/getRetention';\nimport Spinner from 'components/Spinner';\nimport { useAppContext } from 'providers/App/App';\nimport { useTranslation } from 'react-i18next';\nimport { useQueries } from 'react-query';\nimport { ErrorResponse, SuccessResponse } from 'types/api';\nimport { TTTLType } from 'types/api/settings/common';\nimport { PayloadProps as GetRetentionPeriodAPIPayloadProps } from 'types/api/settings/getRetention';\n\nimport GeneralSettingsContainer from './GeneralSettings';\n\ntype TRetentionAPIReturn<T extends TTTLType> = Promise<\n\tSuccessResponse<GetRetentionPeriodAPIPayloadProps<T>> | ErrorResponse\n>;\n\nfunction GeneralSettings(): JSX.Element {\n\tconst { t } = useTranslation('common');\n\tconst { user } = useAppContext();\n\n\tconst [\n\t\tgetRetentionPeriodMetricsApiResponse,\n\t\tgetRetentionPeriodTracesApiResponse,\n\t\tgetRetentionPeriodLogsApiResponse,\n\t\tgetDisksResponse,\n\t] = useQueries([\n\t\t{\n\t\t\tqueryFn: (): TRetentionAPIReturn<'metrics'> =>\n\t\t\t\tgetRetentionPeriodApi('metrics'),\n\t\t\tqueryKey: ['getRetentionPeriodApiMetrics', user?.accessJwt],\n\t\t},\n\t\t{\n\t\t\tqueryFn: (): TRetentionAPIReturn<'traces'> =>\n\t\t\t\tgetRetentionPeriodApi('traces'),\n\t\t\tqueryKey: ['getRetentionPeriodApiTraces', user?.accessJwt],\n\t\t},\n\t\t{\n\t\t\tqueryFn: (): TRetentionAPIReturn<'logs'> => getRetentionPeriodApi('logs'),\n\t\t\tqueryKey: ['getRetentionPeriodApiLogs', user?.accessJwt],\n\t\t},\n\t\t{\n\t\t\tqueryFn: getDisks,\n\t\t\tqueryKey: ['getDisks', user?.accessJwt],\n\t\t},\n\t]);\n\n\t// Error State - When RetentionPeriodMetricsApi or getDiskApi gets errored out.\n\tif (getRetentionPeriodMetricsApiResponse.isError || getDisksResponse.isError) {\n\t\treturn (\n\t\t\t<Typography>\n\t\t\t\t{getRetentionPeriodMetricsApiResponse.data?.error ||\n\t\t\t\t\tgetDisksResponse.data?.error ||\n\t\t\t\t\tt('something_went_wrong')}\n\t\t\t</Typography>\n\t\t);\n\t}\n\n\t// Error State - When RetentionPeriodTracesApi or getDiskApi gets errored out.\n\tif (getRetentionPeriodTracesApiResponse.isError || getDisksResponse.isError) {\n\t\treturn (\n\t\t\t<Typography>\n\t\t\t\t{getRetentionPeriodTracesApiResponse.data?.error ||\n\t\t\t\t\tgetDisksResponse.data?.error ||\n\t\t\t\t\tt('something_went_wrong')}\n\t\t\t</Typography>\n\t\t);\n\t}\n\t// Error State - When RetentionPeriodLogsApi or getDiskApi gets errored out.\n\tif (getRetentionPeriodLogsApiResponse.isError || getDisksResponse.isError) {\n\t\treturn (\n\t\t\t<Typography>\n\t\t\t\t{getRetentionPeriodLogsApiResponse.data?.error ||\n\t\t\t\t\tgetDisksResponse.data?.error ||\n\t\t\t\t\tt('something_went_wrong')}\n\t\t\t</Typography>\n\t\t);\n\t}\n\n\t// Loading State - When Metrics, Traces and Disk API are in progress and the promise has not been resolved/reject.\n\tif (\n\t\tgetDisksResponse.isLoading ||\n\t\t!getDisksResponse.data?.payload ||\n\t\tgetRetentionPeriodMetricsApiResponse.isLoading ||\n\t\t!getRetentionPeriodMetricsApiResponse.data?.payload ||\n\t\tgetRetentionPeriodTracesApiResponse.isLoading ||\n\t\t!getRetentionPeriodTracesApiResponse.data?.payload ||\n\t\tgetRetentionPeriodLogsApiResponse.isLoading ||\n\t\t!getRetentionPeriodLogsApiResponse.data?.payload\n\t) {\n\t\treturn <Spinner tip=\"Loading..\" height=\"70vh\" />;\n\t}\n\n\treturn (\n\t\t<GeneralSettingsContainer\n\t\t\t{...{\n\t\t\t\tgetAvailableDiskPayload: getDisksResponse.data?.payload,\n\t\t\t\tmetricsTtlValuesPayload: getRetentionPeriodMetricsApiResponse.data?.payload,\n\t\t\t\tmetricsTtlValuesRefetch: getRetentionPeriodMetricsApiResponse.refetch,\n\t\t\t\ttracesTtlValuesPayload: getRetentionPeriodTracesApiResponse.data?.payload,\n\t\t\t\ttracesTtlValuesRefetch: getRetentionPeriodTracesApiResponse.refetch,\n\t\t\t\tlogsTtlValuesPayload: getRetentionPeriodLogsApiResponse.data?.payload,\n\t\t\t\tlogsTtlValuesRefetch: getRetentionPeriodLogsApiResponse.refetch,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport type SettingPeriod = 'hr' | 'day' | 'month';\n\nexport default GeneralSettings;\n","import {\n\tCol,\n\tDropdown as DropDownComponent,\n\tInput as InputComponent,\n\tTypography as TypographyComponent,\n} from 'antd';\nimport styled from 'styled-components';\n\nexport const RetentionContainer = styled(Col)`\n\tmargin: 0.75rem 0;\n`;\n\nexport const Input = styled(InputComponent)`\n\t&&& {\n\t\theight: 2rem;\n\t\tmax-width: 150px;\n\t}\n`;\n\nexport const Typography = styled(TypographyComponent)`\n\t&&& {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n`;\n\nexport const ButtonContainer = styled.div`\n\t&&& {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\twidth: 50%;\n\t\talign-items: center;\n\t\tmargin-top: 3rem;\n\t}\n`;\n\nexport const Dropdown = styled(DropDownComponent)`\n\t&&& {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tmax-width: 150px;\n\t\tmin-width: 150px;\n\t}\n`;\n\nexport const TextContainer = styled.div`\n\t&&& {\n\t\tmin-width: 100px;\n\t}\n`;\n\nexport const ErrorTextContainer = styled.div`\n\t&&& {\n\t\tmargin-top: 2rem;\n\t\tmargin-bottom: 2rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: 1rem;\n\n\t\t> article {\n\t\t\tmargin-right: 1rem;\n\t\t}\n\t}\n`;\n\nexport const ToolTipContainer = styled.div`\n\t&&& {\n\t\tmargin-top: 2rem;\n\t\tmargin-bottom: 2rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\twidth: 50%;\n\t\tjustify-content: flex-end;\n\t}\n`;\n\nexport const ErrorText = styled(TypographyComponent)`\n\t&&& {\n\t\tcolor: #e89a3c;\n\t\tfont-style: italic;\n\t}\n`;\n\nexport const RetentionFieldLabel = styled(TypographyComponent)`\n\tvertical-align: middle;\n\twhite-space: pre-wrap;\n`;\n\nexport const RetentionFieldInputContainer = styled.div`\n\tdisplay: inline-flex;\n`;\n\nexport const ActionItemsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 1rem;\n\tmargin-top: 10%;\n`;\n","export type SettingPeriod = 'hr' | 'day' | 'month';\n\nexport interface ITimeUnit {\n\tvalue: SettingPeriod;\n\tkey: string;\n\tmultiplier: number;\n}\nexport const TimeUnits: ITimeUnit[] = [\n\t{\n\t\tvalue: 'hr',\n\t\tkey: 'Hours',\n\t\tmultiplier: 1,\n\t},\n\t{\n\t\tvalue: 'day',\n\t\tkey: 'Days',\n\t\tmultiplier: 1 / 24,\n\t},\n\t{\n\t\tvalue: 'month',\n\t\tkey: 'Months',\n\t\tmultiplier: 1 / (24 * 30),\n\t},\n];\n\ninterface ITimeUnitConversion {\n\tvalue: number;\n\ttimeUnitValue: SettingPeriod;\n}\nexport const convertHoursValueToRelevantUnit = (\n\tvalue: number,\n): ITimeUnitConversion => {\n\tif (value)\n\t\tfor (let idx = TimeUnits.length - 1; idx >= 0; idx -= 1) {\n\t\t\tconst timeUnit = TimeUnits[idx];\n\t\t\tconst convertedValue = timeUnit.multiplier * value;\n\n\t\t\tif (\n\t\t\t\tconvertedValue >= 1 &&\n\t\t\t\tconvertedValue === parseInt(`${convertedValue}`, 10)\n\t\t\t) {\n\t\t\t\treturn { value: convertedValue, timeUnitValue: timeUnit.value };\n\t\t\t}\n\t\t}\n\treturn { value, timeUnitValue: TimeUnits[0].value };\n};\n\nexport const convertHoursValueToRelevantUnitString = (\n\tvalue: number,\n): string => {\n\tif (!value) return '';\n\tconst convertedTimeUnit = convertHoursValueToRelevantUnit(value);\n\treturn `${convertedTimeUnit.value} ${convertedTimeUnit.timeUnitValue}${\n\t\tconvertedTimeUnit.value >= 2 ? 's' : ''\n\t}`;\n};\n","import './GeneralSettingsCloud.styles.scss';\n\nimport { Card, Typography } from 'antd';\nimport { Info } from 'lucide-react';\n\nexport default function GeneralSettingsCloud(): JSX.Element {\n\treturn (\n\t\t<Card className=\"general-settings-container\">\n\t\t\t<Info size={16} />\n\t\t\t<Typography.Text>\n\t\t\t\tPlease <a href=\"mailto:cloud-support@signoz.io\"> email us </a> or connect\n\t\t\t\twith us via chat support to change the retention period.\n\t\t\t</Typography.Text>\n\t\t</Card>\n\t);\n}\n","import GeneralSettingsCloud from './GeneralSettingsCloud';\n\nexport default GeneralSettingsCloud;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".overlay--text-wrap{white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/TextToolTip/TextToolTip.style.scss\"],\"names\":[],\"mappings\":\"AAAA,oBACC,oBAAA\",\"sourcesContent\":[\".overlay--text-wrap {\\n\\twhite-space: pre-wrap;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".general-settings-container{margin:16px 8px}.general-settings-container .ant-card-body{display:flex;align-items:center;gap:16px;padding:8px;margin:16px 0}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/GeneralSettingsCloud/GeneralSettingsCloud.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,4BACC,eAAA,CAEA,2CACC,YAAA,CACA,kBAAA,CACA,QAAA,CACA,WAAA,CACA,aAAA\",\"sourcesContent\":[\".general-settings-container {\\n\\tmargin: 16px 8px;\\n\\n\\t.ant-card-body {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 16px;\\n\\t\\tpadding: 8px;\\n\\t\\tmargin: 16px 0;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./TextToolTip.style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./GeneralSettingsCloud.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["getDisks","async","statusCode","error","message","payload","axios","get","data","ErrorResponseHandler","_default","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","getRetention","concat","props","setRetention","post","totalDuration","type","coldStorage","toColdDuration","TextToolTip","_ref","text","url","useFilledIcon","urlText","isDarkMode","useIsDarkMode","onClickHandler","event","stopPropagation","overlay","useMemo","_jsxs","className","children","_jsx","onClick","href","rel","target","iconStyle","style","color","themeColors","whiteCream","grey","iconOutlinedStyle","navyBlue","blue","Tooltip","QuestionCircleFilled","QuestionCircleOutlined","defaultProps","fontSize","GeneralSettings","metricsTtlValuesPayload","tracesTtlValuesPayload","logsTtlValuesPayload","getAvailableDiskPayload","metricsTtlValuesRefetch","tracesTtlValuesRefetch","logsTtlValuesRefetch","t","useTranslation","modalMetrics","setModalMetrics","useState","modalTraces","setModalTraces","modalLogs","setModalLogs","postApiLoadingMetrics","setPostApiLoadingMetrics","postApiLoadingTraces","setPostApiLoadingTraces","postApiLoadingLogs","setPostApiLoadingLogs","availableDisks","metricsCurrentTTLValues","setMetricsCurrentTTLValues","tracesCurrentTTLValues","setTracesCurrentTTLValues","logsCurrentTTLValues","setLogsCurrentTTLValues","user","useAppContext","setRetentionPermission","useComponentPermission","role","metricsTotalRetentionPeriod","setMetricsTotalRetentionPeriod","metricsS3RetentionPeriod","setMetricsS3RetentionPeriod","tracesTotalRetentionPeriod","setTracesTotalRetentionPeriod","tracesS3RetentionPeriod","setTracesS3RetentionPeriod","logsTotalRetentionPeriod","setLogsTotalRetentionPeriod","logsS3RetentionPeriod","setLogsS3RetentionPeriod","useEffect","metrics_ttl_duration_hrs","metrics_move_ttl_duration_hrs","traces_ttl_duration_hrs","traces_move_ttl_duration_hrs","logs_ttl_duration_hrs","logs_move_ttl_duration_hrs","useInterval","status","notifications","useNotifications","onModalToggleHandler","modal","onPostApiLoadingHandler","onClickSaveHandler","useCallback","s3Enabled","find","disks","isMetricsSaveDisabled","isTracesSaveDisabled","isLogsSaveDisabled","errorText","messages","name","Number","isCloudUser","isCloudUserVal","useGetTenantLicense","renderConfig","retentionFields","value","setValue","hide","save","modalOpen","apiLoading","saveButtonText","Spin","spinning","size","indicator","LoadingOutlined","spin","isDisabled","statusComponent","StatusMessage","total_retention","expected_metrics_ttl_duration_hrs","s3_retention","expected_metrics_move_ttl_duration_hrs","expected_traces_ttl_duration_hrs","expected_traces_move_ttl_duration_hrs","expected_logs_ttl_duration_hrs","expected_logs_move_ttl_duration_hrs","map","category","Array","isArray","length","Fragment","Col","xs","xl","margin","Card","height","Typography","Title","level","Divider","padding","opacity","marginBottom","retentionField","Retention","retentionValue","setRetentionValue","_Fragment","ActionItemsContainer","Button","disabled","Modal","title","focusTriggerAfterClose","forceRender","destroyOnClose","closable","onCancel","toLowerCase","onOk","apiCallTotalRetention","apiCallS3Retention","setTTLResponse","setRetentionApi","hasSetTTLFailed","description","placement","onOkHandler","centered","open","confirmLoading","Element","md","xxl","ErrorTextContainer","ErrorText","Row","justify","GeneralSettingsCloud","Option","Select","initialValue","timeUnitValue","initialTimeUnitValue","convertHoursValueToRelevantUnit","selectedTimeUnit","setSelectTimeUnit","selectedValue","setSelectedValue","interacted","useRef","current","menuItems","TimeUnits","option","key","_find2","inverseMultiplier","timeUnit","multiplier","RetentionContainer","span","display","RetentionFieldLabel","RetentionFieldInputContainer","Input","onChange","e","onChangeHandler","func","integerValue","parseInt","toString","Math","abs","width","_find","__signature__","messageColor","green","orange","volcano","s3Part","convertHoursValueToRelevantUnitString","statusMessage","s3_part","gap","alignItems","justifyContent","InfoCircleOutlined","_getDisksResponse$dat4","_getRetentionPeriodMe2","_getRetentionPeriodTr2","_getRetentionPeriodLo2","_getDisksResponse$dat5","_getRetentionPeriodMe3","_getRetentionPeriodTr3","_getRetentionPeriodLo3","getRetentionPeriodMetricsApiResponse","getRetentionPeriodTracesApiResponse","getRetentionPeriodLogsApiResponse","getDisksResponse","useQueries","queryFn","getRetentionPeriodApi","queryKey","accessJwt","_getRetentionPeriodMe","_getDisksResponse$dat","_getRetentionPeriodTr","_getDisksResponse$dat2","_getRetentionPeriodLo","_getDisksResponse$dat3","isError","isLoading","Spinner","tip","GeneralSettingsContainer","refetch","styled","_templateObject","_taggedTemplateLiteral","InputComponent","_templateObject2","TypographyComponent","_templateObject3","ButtonContainer","div","_templateObject4","Dropdown","DropDownComponent","_templateObject5","TextContainer","_templateObject6","_templateObject7","ToolTipContainer","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","idx","convertedValue","convertedTimeUnit","Info","Text","___CSS_LOADER_EXPORT___","push","id","api","content","__esModule","options","exports","locals"],"sourceRoot":""}