{"version":3,"file":"src_container_QueryBuilder_index_ts-src_hooks_queryBuilder_useShareBuilderUrl_ts.4d547fe69853013f565a.js","mappings":"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","sources":["webpack://frontend/./src/api/queryBuilder/getAggregateAttribute.ts","webpack://frontend/./src/constants/global.ts","webpack://frontend/./src/constants/queryFunctionOptions.ts","webpack://frontend/./src/container/NewWidget/RightContainer/alertFomatCategories.ts","webpack://frontend/./src/container/QueryBuilder/QueryBuilder.tsx","webpack://frontend/./src/container/QueryBuilder/components/AdditionalFiltersToggler/AdditionalFiltersToggler.styled.ts","webpack://frontend/./src/container/QueryBuilder/components/AdditionalFiltersToggler/AdditionalFiltersToggler.tsx","webpack://frontend/./src/container/QueryBuilder/components/DataSourceDropdown/DataSourceDropdown.tsx","webpack://frontend/./src/container/QueryBuilder/components/FilterLabel/FilterLabel.styled.ts","webpack://frontend/./src/container/QueryBuilder/components/FilterLabel/FilterLabel.tsx","webpack://frontend/./src/container/QueryBuilder/components/Formula/Formula.tsx","webpack://frontend/./src/container/QueryBuilder/components/HavingFilterTag/HavingFilterTag.styled.ts","webpack://frontend/./src/container/QueryBuilder/components/HavingFilterTag/HavingFilterTag.tsx","webpack://frontend/./src/container/QueryBuilder/components/ListItemWrapper/ListItemWrapper.styled.ts","webpack://frontend/./src/container/QueryBuilder/components/ListItemWrapper/ListItemWrapper.tsx","webpack://frontend/./src/container/QueryBuilder/components/ListMarker/ListMarker.styled.ts","webpack://frontend/./src/container/QueryBuilder/components/ListMarker/ListMarker.tsx","webpack://frontend/./src/container/QueryBuilder/components/QBEntityOptions/QBEntityOptions.tsx","webpack://frontend/./src/container/QueryBuilder/components/Query/Query.tsx","webpack://frontend/./src/container/QueryBuilder/components/QueryFunctions/Function.tsx","webpack://frontend/./src/container/QueryBuilder/components/QueryFunctions/QueryFunctions.tsx","webpack://frontend/./src/container/QueryBuilder/components/QueryFunctions/utils.ts","webpack://frontend/./src/container/QueryBuilder/components/SpaceAggregationOptions/SpaceAggregationOptions.tsx","webpack://frontend/./src/container/QueryBuilder/filters/AggregateEveryFilter/index.tsx","webpack://frontend/./src/container/QueryBuilder/filters/AggregatorFilter/AggregatorFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/BuilderUnitsFilter/BuilderUnits.tsx","webpack://frontend/./src/container/QueryBuilder/filters/BuilderUnitsFilter/styles.ts","webpack://frontend/./src/container/QueryBuilder/filters/BuilderUnitsFilter/utils.ts","webpack://frontend/./src/container/QueryBuilder/filters/Formula/Having/HavingFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/Formula/Limit/Limit.tsx","webpack://frontend/./src/container/QueryBuilder/filters/Formula/OrderBy/OrderByFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/Formula/OrderBy/useOrderByFormulaFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/Formula/OrderBy/utils.ts","webpack://frontend/./src/container/QueryBuilder/filters/GroupByFilter/GroupByFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/GroupByFilter/utils.ts","webpack://frontend/./src/container/QueryBuilder/filters/HavingFilter/HavingFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/LimitFilter/LimitFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/OperatorsSelect/OperatorsSelect.tsx","webpack://frontend/./src/container/QueryBuilder/filters/OrderByFilter/OrderByFilter.tsx","webpack://frontend/./src/container/QueryBuilder/filters/OrderByFilter/useOrderByFilter.ts","webpack://frontend/./src/container/QueryBuilder/filters/ReduceToFilter/ReduceToFilter.tsx","webpack://frontend/./src/hooks/queryBuilder/useQueryBuilderOperations.ts","webpack://frontend/./src/hooks/queryBuilder/useShareBuilderUrl.ts","webpack://frontend/./src/lib/newQueryBuilder/getAutocompleteValueAndType.ts","webpack://frontend/./src/lib/newQueryBuilder/getMetricsOperatorsByAttributeType.ts","webpack://frontend/./src/lib/query/findDataTypeOfOperator.ts","webpack://frontend/./src/lib/query/transformQueryBuilderData.ts","webpack://frontend/./src/utils/getFormatedLegend.ts","webpack://frontend/./src/utils/transformToUpperCase.ts","webpack://frontend/./src/container/QueryBuilder/QueryBuilder.styles.scss","webpack://frontend/./src/container/QueryBuilder/components/AdditionalFiltersToggler/AdditionalFiltersToggler.styles.scss","webpack://frontend/./src/container/QueryBuilder/components/Formula/Formula.styles.scss","webpack://frontend/./src/container/QueryBuilder/components/QBEntityOptions/QBEntityOptions.styles.scss","webpack://frontend/./src/container/QueryBuilder/components/Query/Query.styles.scss","webpack://frontend/./src/container/QueryBuilder/components/QueryFunctions/QueryFunctions.styles.scss","webpack://frontend/./src/container/QueryBuilder/QueryBuilder.styles.scss?866a","webpack://frontend/./src/container/QueryBuilder/components/AdditionalFiltersToggler/AdditionalFiltersToggler.styles.scss?0912","webpack://frontend/./src/container/QueryBuilder/components/Formula/Formula.styles.scss?0bd8","webpack://frontend/./src/container/QueryBuilder/components/QBEntityOptions/QBEntityOptions.styles.scss?fd33","webpack://frontend/./src/container/QueryBuilder/components/Query/Query.styles.scss?6456","webpack://frontend/./src/container/QueryBuilder/components/QueryFunctions/QueryFunctions.styles.scss?6587"],"sourcesContent":["import { ApiV3Instance } from 'api';\nimport { ErrorResponseHandler } from 'api/ErrorResponseHandler';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { baseAutoCompleteIdKeysOrder } from 'constants/queryBuilder';\nimport { createIdFromObjectFields } from 'lib/createIdFromObjectFields';\nimport createQueryParams from 'lib/createQueryParams';\n// ** Helpers\nimport { ErrorResponse, SuccessResponse } from 'types/api';\n// ** Types\nimport { IGetAggregateAttributePayload } from 'types/api/queryBuilder/getAggregatorAttribute';\nimport {\n\tBaseAutocompleteData,\n\tIQueryAutocompleteResponse,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\n\nexport const getAggregateAttribute = async ({\n\taggregateOperator,\n\tsearchText,\n\tdataSource,\n}: IGetAggregateAttributePayload): Promise<\n\tSuccessResponse<IQueryAutocompleteResponse> | ErrorResponse\n> => {\n\ttry {\n\t\tconst response: AxiosResponse<{\n\t\t\tdata: IQueryAutocompleteResponse;\n\t\t}> = await ApiV3Instance.get(\n\t\t\t`/autocomplete/aggregate_attributes?${createQueryParams({\n\t\t\t\taggregateOperator,\n\t\t\t\tsearchText,\n\t\t\t\tdataSource,\n\t\t\t})}`,\n\t\t);\n\n\t\tconst payload: BaseAutocompleteData[] =\n\t\t\tresponse.data.data.attributeKeys?.map(({ id: _, ...item }) => ({\n\t\t\t\t...item,\n\t\t\t\tid: createIdFromObjectFields(item, baseAutoCompleteIdKeysOrder),\n\t\t\t})) || [];\n\n\t\treturn {\n\t\t\tstatusCode: 200,\n\t\t\terror: null,\n\t\t\tmessage: response.statusText,\n\t\t\tpayload: { attributeKeys: payload },\n\t\t};\n\t} catch (e) {\n\t\treturn ErrorResponseHandler(e as AxiosError);\n\t}\n};\n","import { ManipulateType } from 'dayjs';\n\nconst MAX_RPS_LIMIT = 100;\nexport { MAX_RPS_LIMIT };\n\nexport const LEGEND = 'legend';\n\nexport const DAYJS_MANIPULATE_TYPES: { [key: string]: ManipulateType } = {\n\tDAY: 'day',\n\tWEEK: 'week',\n\tMONTH: 'month',\n\tYEAR: 'year',\n\tHOUR: 'hour',\n\tMINUTE: 'minute',\n\tSECOND: 'second',\n\tMILLISECOND: 'millisecond',\n};\n","/* eslint-disable sonarjs/no-duplicate-string */\nimport { QueryFunctionsTypes } from 'types/common/queryBuilder';\nimport { SelectOption } from 'types/common/select';\n\nexport const metricQueryFunctionOptions: SelectOption<string, string>[] = [\n\t{\n\t\tvalue: QueryFunctionsTypes.CUTOFF_MIN,\n\t\tlabel: 'Cut Off Min',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.CUTOFF_MAX,\n\t\tlabel: 'Cut Off Max',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.CLAMP_MIN,\n\t\tlabel: 'Clamp Min',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.CLAMP_MAX,\n\t\tlabel: 'Clamp Max',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.ABSOLUTE,\n\t\tlabel: 'Absolute',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.RUNNING_DIFF,\n\t\tlabel: 'Running Diff',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.LOG_2,\n\t\tlabel: 'Log2',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.LOG_10,\n\t\tlabel: 'Log10',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.CUMULATIVE_SUM,\n\t\tlabel: 'Cumulative Sum',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.EWMA_3,\n\t\tlabel: 'EWMA 3',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.EWMA_5,\n\t\tlabel: 'EWMA 5',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.EWMA_7,\n\t\tlabel: 'EWMA 7',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.MEDIAN_3,\n\t\tlabel: 'Median 3',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.MEDIAN_5,\n\t\tlabel: 'Median 5',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.MEDIAN_7,\n\t\tlabel: 'Median 7',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.TIME_SHIFT,\n\t\tlabel: 'Time Shift',\n\t},\n\t{\n\t\tvalue: QueryFunctionsTypes.TIME_SHIFT,\n\t\tlabel: 'Time Shift',\n\t},\n];\n\nexport const logsQueryFunctionOptions: SelectOption<string, string>[] = [\n\t{\n\t\tvalue: QueryFunctionsTypes.TIME_SHIFT,\n\t\tlabel: 'Time Shift',\n\t},\n];\ninterface QueryFunctionConfigType {\n\t[key: string]: {\n\t\tshowInput: boolean;\n\t\tinputType?: string;\n\t\tplaceholder?: string;\n\t\tdisabled?: boolean;\n\t};\n}\n\nexport const queryFunctionsTypesConfig: QueryFunctionConfigType = {\n\tanomaly: {\n\t\tshowInput: false,\n\t\tdisabled: true,\n\t},\n\tcutOffMin: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Threshold',\n\t},\n\tcutOffMax: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Threshold',\n\t},\n\tclampMin: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Threshold',\n\t},\n\tclampMax: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Threshold',\n\t},\n\tabsolute: {\n\t\tshowInput: false,\n\t},\n\trunningDiff: {\n\t\tshowInput: false,\n\t},\n\tlog2: {\n\t\tshowInput: false,\n\t},\n\tlog10: {\n\t\tshowInput: false,\n\t},\n\tcumSum: {\n\t\tshowInput: false,\n\t},\n\tewma3: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Alpha',\n\t},\n\tewma5: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Alpha',\n\t},\n\tewma7: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t\tplaceholder: 'Alpha',\n\t},\n\tmedian3: {\n\t\tshowInput: false,\n\t},\n\tmedian5: {\n\t\tshowInput: false,\n\t},\n\tmedian7: {\n\t\tshowInput: false,\n\t},\n\ttimeShift: {\n\t\tshowInput: true,\n\t\tinputType: 'text',\n\t},\n};\n","import { DefaultOptionType } from 'antd/es/select';\n\nimport {\n\tBooleanFormats,\n\tCategory,\n\tCategoryNames,\n\tDataFormats,\n\tDataRateFormats,\n\tHelperCategory,\n\tHelperFormat,\n\tMiscellaneousFormats,\n\tThroughputFormats,\n\tTimeFormats,\n} from './types';\n\nexport const alertsCategory = [\n\t{\n\t\tname: CategoryNames.Time,\n\t\tformats: [\n\t\t\t{ name: 'nanoseconds (ns)', id: TimeFormats.Nanoseconds },\n\t\t\t{ name: 'microseconds (µs)', id: TimeFormats.Microseconds },\n\t\t\t{ name: 'milliseconds (ms)', id: TimeFormats.Milliseconds },\n\t\t\t{ name: 'seconds (s)', id: TimeFormats.Seconds },\n\t\t\t{ name: 'minutes (m)', id: TimeFormats.Minutes },\n\t\t\t{ name: 'hours (h)', id: TimeFormats.Hours },\n\t\t\t{ name: 'days (d)', id: TimeFormats.Days },\n\t\t],\n\t},\n\t{\n\t\tname: CategoryNames.Data,\n\t\tformats: [\n\t\t\t{ name: 'bytes(IEC)', id: DataFormats.BytesIEC },\n\t\t\t{ name: 'bytes(SI)', id: DataFormats.BytesSI },\n\t\t\t{ name: 'bits(IEC)', id: DataFormats.BitsIEC },\n\t\t\t{ name: 'bits(SI)', id: DataFormats.BitsSI },\n\t\t\t{ name: 'kibibytes', id: DataFormats.KibiBytes },\n\t\t\t{ name: 'kilobytes', id: DataFormats.KiloBytes },\n\t\t\t{ name: 'mebibytes', id: DataFormats.MebiBytes },\n\t\t\t{ name: 'megabytes', id: DataFormats.MegaBytes },\n\t\t\t{ name: 'gibibytes', id: DataFormats.GibiBytes },\n\t\t\t{ name: 'gigabytes', id: DataFormats.GigaBytes },\n\t\t\t{ name: 'tebibytes', id: DataFormats.TebiBytes },\n\t\t\t{ name: 'terabytes', id: DataFormats.TeraBytes },\n\t\t\t{ name: 'pebibytes', id: DataFormats.PebiBytes },\n\t\t\t{ name: 'petabytes', id: DataFormats.PetaBytes },\n\t\t],\n\t},\n\t{\n\t\tname: CategoryNames.DataRate,\n\t\tformats: [\n\t\t\t{ name: 'bytes/sec(IEC)', id: DataRateFormats.BytesPerSecIEC },\n\t\t\t{ name: 'bytes/sec(SI)', id: DataRateFormats.BytesPerSecSI },\n\t\t\t{ name: 'bits/sec(IEC)', id: DataRateFormats.BitsPerSecIEC },\n\t\t\t{ name: 'bits/sec(SI)', id: DataRateFormats.BitsPerSecSI },\n\t\t\t{ name: 'kibibytes/sec', id: DataRateFormats.KibiBytesPerSec },\n\t\t\t{ name: 'kibibits/sec', id: DataRateFormats.KibiBitsPerSec },\n\t\t\t{ name: 'kilobytes/sec', id: DataRateFormats.KiloBytesPerSec },\n\t\t\t{ name: 'kilobits/sec', id: DataRateFormats.KiloBitsPerSec },\n\t\t\t{ name: 'mebibytes/sec', id: DataRateFormats.MebiBytesPerSec },\n\t\t\t{ name: 'mebibits/sec', id: DataRateFormats.MebiBitsPerSec },\n\t\t\t{ name: 'megabytes/sec', id: DataRateFormats.MegaBytesPerSec },\n\t\t\t{ name: 'megabits/sec', id: DataRateFormats.MegaBitsPerSec },\n\t\t\t{ name: 'gibibytes/sec', id: DataRateFormats.GibiBytesPerSec },\n\t\t\t{ name: 'gibibits/sec', id: DataRateFormats.GibiBitsPerSec },\n\t\t\t{ name: 'gigabytes/sec', id: DataRateFormats.GigaBytesPerSec },\n\t\t\t{ name: 'gigabits/sec', id: DataRateFormats.GigaBitsPerSec },\n\t\t\t{ name: 'tebibytes/sec', id: DataRateFormats.TebiBytesPerSec },\n\t\t\t{ name: 'tebibits/sec', id: DataRateFormats.TebiBitsPerSec },\n\t\t\t{ name: 'terabytes/sec', id: DataRateFormats.TeraBytesPerSec },\n\t\t\t{ name: 'terabits/sec', id: DataRateFormats.TeraBitsPerSec },\n\t\t\t{ name: 'pebibytes/sec', id: DataRateFormats.PebiBytesPerSec },\n\t\t\t{ name: 'pebibits/sec', id: DataRateFormats.PebiBitsPerSec },\n\t\t\t{ name: 'petabytes/sec', id: DataRateFormats.PetaBytesPerSec },\n\t\t\t{ name: 'petabits/sec', id: DataRateFormats.PetaBitsPerSec },\n\t\t],\n\t},\n\t{\n\t\tname: CategoryNames.Miscellaneous,\n\t\tformats: [\n\t\t\t{ name: 'Percent (0.0-1.0)', id: MiscellaneousFormats.PercentUnit },\n\t\t\t{ name: 'Percent (0 - 100)', id: MiscellaneousFormats.Percent },\n\t\t],\n\t},\n\t{\n\t\tname: CategoryNames.Boolean,\n\t\tformats: [\n\t\t\t{ name: 'True / False', id: BooleanFormats.TRUE_FALSE },\n\t\t\t{ name: 'Yes / No', id: BooleanFormats.YES_NO },\n\t\t],\n\t},\n\t{\n\t\tname: CategoryNames.Throughput,\n\t\tformats: [\n\t\t\t{ name: 'counts/sec (cps)', id: ThroughputFormats.CountsPerSec },\n\t\t\t{ name: 'ops/sec (ops)', id: ThroughputFormats.OpsPerSec },\n\t\t\t{ name: 'requests/sec (reqps)', id: ThroughputFormats.RequestsPerSec },\n\t\t\t{ name: 'reads/sec (rps)', id: ThroughputFormats.ReadsPerSec },\n\t\t\t{ name: 'writes/sec (wps)', id: ThroughputFormats.WritesPerSec },\n\t\t\t{ name: 'I/O operations/sec (iops)', id: ThroughputFormats.IOOpsPerSec },\n\t\t\t{ name: 'counts/min (cpm)', id: ThroughputFormats.CountsPerMin },\n\t\t\t{ name: 'ops/min (opm)', id: ThroughputFormats.OpsPerMin },\n\t\t\t{ name: 'reads/min (rpm)', id: ThroughputFormats.ReadsPerMin },\n\t\t\t{ name: 'writes/min (wpm)', id: ThroughputFormats.WritesPerMin },\n\t\t],\n\t},\n];\n\nexport const getCategorySelectOptionByName = (\n\tname?: CategoryNames | string,\n): DefaultOptionType[] =>\n\talertsCategory\n\t\t.find((category) => category.name === name)\n\t\t?.formats.map((format) => ({\n\t\t\tlabel: format.name,\n\t\t\tvalue: format.id,\n\t\t})) || [];\n\nexport const getCategoryByOptionId = (id: string): Category | undefined =>\n\talertsCategory.find((category) =>\n\t\tcategory.formats.some((format) => format.id === id),\n\t);\n\nexport const isCategoryName = (name: string): name is CategoryNames =>\n\talertsCategory.some((category) => category.name === name);\n\nconst allFormats: HelperFormat[] = alertsCategory.flatMap(\n\t(category: HelperCategory) => category.formats,\n);\n\nexport const getFormatNameByOptionId = (id: string): string | undefined =>\n\tallFormats.find((format) => format.id === id)?.name;\n","import './QueryBuilder.styles.scss';\n\nimport { Button, Col, Divider, Row, Tooltip, Typography } from 'antd';\nimport cx from 'classnames';\nimport {\n\tMAX_FORMULAS,\n\tMAX_QUERIES,\n\tOPERATORS,\n\tPANEL_TYPES,\n} from 'constants/queryBuilder';\nimport ROUTES from 'constants/routes';\n// ** Hooks\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { DatabaseZap, Sigma } from 'lucide-react';\n// ** Constants\nimport { memo, useEffect, useMemo, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { DataSource } from 'types/common/queryBuilder';\n\n// ** Components\nimport { Formula, Query } from './components';\n// ** Types\nimport { QueryBuilderProps } from './QueryBuilder.interfaces';\n\nexport const QueryBuilder = memo(function QueryBuilder({\n\tconfig,\n\tpanelType: newPanelType,\n\tfilterConfigs = {},\n\tqueryComponents,\n\tisListViewPanel = false,\n\tshowFunctions = false,\n\tversion,\n}: QueryBuilderProps): JSX.Element {\n\tconst {\n\t\tcurrentQuery,\n\t\taddNewBuilderQuery,\n\t\taddNewFormula,\n\t\thandleSetConfig,\n\t\tpanelType,\n\t\tinitialDataSource,\n\t\tsetLastUsedQuery,\n\t\tlastUsedQuery,\n\t} = useQueryBuilder();\n\n\tconst containerRef = useRef(null);\n\n\tconst currentDataSource = useMemo(\n\t\t() =>\n\t\t\t(config && config.queryVariant === 'static' && config.initialDataSource) ||\n\t\t\tnull,\n\t\t[config],\n\t);\n\n\tconst { pathname } = useLocation();\n\n\tconst isLogsExplorerPage = pathname === ROUTES.LOGS_EXPLORER;\n\n\tuseEffect(() => {\n\t\tif (currentDataSource !== initialDataSource || newPanelType !== panelType) {\n\t\t\tif (newPanelType === PANEL_TYPES.BAR) {\n\t\t\t\thandleSetConfig(PANEL_TYPES.BAR, DataSource.METRICS);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\thandleSetConfig(newPanelType, currentDataSource);\n\t\t}\n\t}, [\n\t\thandleSetConfig,\n\t\tpanelType,\n\t\tinitialDataSource,\n\t\tcurrentDataSource,\n\t\tnewPanelType,\n\t]);\n\n\tconst isDisabledQueryButton = useMemo(\n\t\t() => currentQuery.builder.queryData.length >= MAX_QUERIES,\n\t\t[currentQuery],\n\t);\n\n\tconst isDisabledFormulaButton = useMemo(\n\t\t() => currentQuery.builder.queryFormulas.length >= MAX_FORMULAS,\n\t\t[currentQuery],\n\t);\n\n\tconst isAvailableToDisableQuery = useMemo(\n\t\t() =>\n\t\t\tcurrentQuery.builder.queryData.length > 0 ||\n\t\t\tcurrentQuery.builder.queryFormulas.length > 0,\n\t\t[currentQuery],\n\t);\n\n\tconst handleScrollIntoView = (\n\t\tentityType: string,\n\t\tentityName: string,\n\t): void => {\n\t\tconst selectedEntity = document.getElementById(\n\t\t\t`qb-${entityType}-${entityName}`,\n\t\t);\n\n\t\tif (selectedEntity) {\n\t\t\tselectedEntity.scrollIntoView({\n\t\t\t\tbehavior: 'smooth',\n\t\t\t\tblock: 'start',\n\t\t\t\tinline: 'nearest',\n\t\t\t});\n\t\t}\n\t};\n\n\tconst listViewLogFilterConfigs: QueryBuilderProps['filterConfigs'] = useMemo(() => {\n\t\tconst config: QueryBuilderProps['filterConfigs'] = {\n\t\t\tstepInterval: { isHidden: true, isDisabled: true },\n\t\t\thaving: { isHidden: true, isDisabled: true },\n\t\t\tfilters: {\n\t\t\t\tcustomKey: 'body',\n\t\t\t\tcustomOp: OPERATORS.CONTAINS,\n\t\t\t},\n\t\t};\n\n\t\treturn config;\n\t}, []);\n\n\tconst listViewTracesFilterConfigs: QueryBuilderProps['filterConfigs'] = useMemo(() => {\n\t\tconst config: QueryBuilderProps['filterConfigs'] = {\n\t\t\tstepInterval: { isHidden: true, isDisabled: true },\n\t\t\thaving: { isHidden: true, isDisabled: true },\n\t\t\tlimit: { isHidden: true, isDisabled: true },\n\t\t\tfilters: {\n\t\t\t\tcustomKey: 'body',\n\t\t\t\tcustomOp: OPERATORS.CONTAINS,\n\t\t\t},\n\t\t};\n\n\t\treturn config;\n\t}, []);\n\n\treturn (\n\t\t<Row\n\t\t\tstyle={{ width: '100%' }}\n\t\t\tgutter={[0, 20]}\n\t\t\tjustify=\"start\"\n\t\t\tclassName=\"query-builder-container\"\n\t\t>\n\t\t\t{!isListViewPanel && (\n\t\t\t\t<div className=\"new-query-formula-buttons-container\">\n\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\tAdd New Query\n\t\t\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/userguide/query-builder/?utm_source=product&utm_medium=query-builder#multiple-queries-and-functions\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button disabled={isDisabledQueryButton} onClick={addNewBuilderQuery}>\n\t\t\t\t\t\t\t\t<DatabaseZap size={12} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\tAdd New Formula\n\t\t\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/userguide/query-builder/?utm_source=product&utm_medium=query-builder#multiple-queries-and-functions\"\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Button disabled={isDisabledFormulaButton} onClick={addNewFormula}>\n\t\t\t\t\t\t\t\t<Sigma size={12} />\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t</Button.Group>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t<Col span={23} className=\"qb-entities-list\">\n\t\t\t\t<Row>\n\t\t\t\t\t<Col span={1} className=\"query-builder-left-col\">\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t</Col>\n\n\t\t\t\t\t<Col span={23} className=\"query-builder\">\n\t\t\t\t\t\t<Row\n\t\t\t\t\t\t\tgutter={[0, 16]}\n\t\t\t\t\t\t\tclassName=\"query-builder-queries-formula-container\"\n\t\t\t\t\t\t\tref={containerRef}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{panelType === PANEL_TYPES.LIST && isListViewPanel && (\n\t\t\t\t\t\t\t\t<Query\n\t\t\t\t\t\t\t\t\tindex={0}\n\t\t\t\t\t\t\t\t\tisAvailableToDisable={isAvailableToDisableQuery}\n\t\t\t\t\t\t\t\t\tqueryVariant=\"dropdown\"\n\t\t\t\t\t\t\t\t\tquery={currentQuery.builder.queryData[0]}\n\t\t\t\t\t\t\t\t\tfilterConfigs={\n\t\t\t\t\t\t\t\t\t\tcurrentQuery.builder.queryData[0].dataSource === DataSource.TRACES\n\t\t\t\t\t\t\t\t\t\t\t? listViewTracesFilterConfigs\n\t\t\t\t\t\t\t\t\t\t\t: listViewLogFilterConfigs\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tqueryComponents={queryComponents}\n\t\t\t\t\t\t\t\t\tshowFunctions={showFunctions}\n\t\t\t\t\t\t\t\t\tversion={version}\n\t\t\t\t\t\t\t\t\tisListViewPanel\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{!isListViewPanel &&\n\t\t\t\t\t\t\t\tcurrentQuery.builder.queryData.map((query, index) => (\n\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\tkey={query.queryName}\n\t\t\t\t\t\t\t\t\t\tspan={24}\n\t\t\t\t\t\t\t\t\t\tonClickCapture={(): void => setLastUsedQuery(index)}\n\t\t\t\t\t\t\t\t\t\tclassName=\"query\"\n\t\t\t\t\t\t\t\t\t\tid={`qb-query-${query.queryName}`}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Query\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\tisAvailableToDisable={isAvailableToDisableQuery}\n\t\t\t\t\t\t\t\t\t\t\tqueryVariant={config?.queryVariant || 'dropdown'}\n\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t\tfilterConfigs={filterConfigs}\n\t\t\t\t\t\t\t\t\t\t\tqueryComponents={queryComponents}\n\t\t\t\t\t\t\t\t\t\t\tshowFunctions={showFunctions}\n\t\t\t\t\t\t\t\t\t\t\tversion={version}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{!isListViewPanel &&\n\t\t\t\t\t\t\t\tcurrentQuery.builder.queryFormulas.map((formula, index) => {\n\t\t\t\t\t\t\t\t\tconst isAllMetricDataSource = currentQuery.builder.queryData.every(\n\t\t\t\t\t\t\t\t\t\t(query) => query.dataSource === DataSource.METRICS,\n\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\tconst query =\n\t\t\t\t\t\t\t\t\t\tcurrentQuery.builder.queryData[index] ||\n\t\t\t\t\t\t\t\t\t\tcurrentQuery.builder.queryData[0];\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Col\n\t\t\t\t\t\t\t\t\t\t\tkey={formula.queryName}\n\t\t\t\t\t\t\t\t\t\t\tspan={24}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"formula\"\n\t\t\t\t\t\t\t\t\t\t\tid={`qb-formula-${formula.queryName}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<Formula\n\t\t\t\t\t\t\t\t\t\t\t\tfilterConfigs={filterConfigs}\n\t\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t\t\tisAdditionalFilterEnable={isAllMetricDataSource}\n\t\t\t\t\t\t\t\t\t\t\t\tformula={formula}\n\t\t\t\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t<Col span={24} className=\"divider\">\n\t\t\t\t\t\t\t<Divider />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Col>\n\n\t\t\t{!isListViewPanel && (\n\t\t\t\t<Col span={1} className=\"query-builder-mini-map\">\n\t\t\t\t\t{currentQuery.builder.queryData.map((query, index) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={isDisabledQueryButton}\n\t\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t\t'query-btn',\n\t\t\t\t\t\t\t\tisLogsExplorerPage && lastUsedQuery === index ? 'sync-btn' : '',\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tkey={query.queryName}\n\t\t\t\t\t\t\tonClick={(): void => handleScrollIntoView('query', query.queryName)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{query.queryName}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\n\t\t\t\t\t{currentQuery.builder.queryFormulas.map((formula) => (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={isDisabledFormulaButton}\n\t\t\t\t\t\t\tclassName=\"formula-btn\"\n\t\t\t\t\t\t\tkey={formula.queryName}\n\t\t\t\t\t\t\tonClick={(): void => handleScrollIntoView('formula', formula.queryName)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{formula.queryName}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t))}\n\t\t\t\t</Col>\n\t\t\t)}\n\t\t</Row>\n\t);\n});\n","import { MinusSquareOutlined, PlusSquareOutlined } from '@ant-design/icons';\nimport { Color } from '@signozhq/design-tokens';\nimport { Col, Typography } from 'antd';\nimport styled, { css } from 'styled-components';\n\nconst IconCss = css`\n\tmargin-right: 0.6875rem;\n\ttransition: all 0.2s ease;\n`;\n\nexport const StyledIconOpen = styled(PlusSquareOutlined)`\n\t${IconCss}\n`;\n\nexport const StyledIconClose = styled(MinusSquareOutlined)`\n\t${IconCss}\n`;\n\nexport const StyledInner = styled(Col)`\n\twidth: fit-content;\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 8px;\n\tmargin-bottom: 0.875rem;\n\tmin-height: 1.375rem;\n\tcursor: pointer;\n\t&:hover {\n\t\t${StyledIconOpen}, ${StyledIconClose} {\n\t\t\topacity: 0.7;\n\t\t}\n\t}\n`;\n\nexport const StyledLink = styled(Typography.Link)`\n\tpointer-events: none;\n\tcolor: ${Color.BG_ROBIN_400} !important;\n`;\n","import './AdditionalFiltersToggler.styles.scss';\n\nimport { Color } from '@signozhq/design-tokens';\nimport { Col, Row, Typography } from 'antd';\nimport { Minus, Plus } from 'lucide-react';\nimport { Fragment, memo, ReactNode, useState } from 'react';\n\n// ** Types\nimport { AdditionalFiltersProps } from './AdditionalFiltersToggler.interfaces';\n// ** Styles\nimport { StyledInner, StyledLink } from './AdditionalFiltersToggler.styled';\n\nexport const AdditionalFiltersToggler = memo(function AdditionalFiltersToggler({\n\tchildren,\n\tlistOfAdditionalFilter,\n}: AdditionalFiltersProps): JSX.Element {\n\tconst [isOpenedFilters, setIsOpenedFilters] = useState<boolean>(false);\n\n\tconst handleToggleOpenFilters = (): void => {\n\t\tsetIsOpenedFilters((prevState) => !prevState);\n\t};\n\n\tconst filtersTexts: ReactNode = listOfAdditionalFilter?.map((str, index) => {\n\t\tconst isNextLast = index + 1 === listOfAdditionalFilter.length - 1;\n\n\t\tif (index === listOfAdditionalFilter.length - 1) {\n\t\t\treturn (\n\t\t\t\t<Fragment key={str}>\n\t\t\t\t\t{listOfAdditionalFilter?.length > 1 && 'and'}{' '}\n\t\t\t\t\t<StyledLink>{str.toUpperCase()}</StyledLink>\n\t\t\t\t</Fragment>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<span key={str}>\n\t\t\t\t<StyledLink>{str.toUpperCase()}</StyledLink>\n\t\t\t\t{isNextLast ? ' ' : ', '}\n\t\t\t</span>\n\t\t);\n\t});\n\n\treturn (\n\t\t<Row className=\"additinal-filters-container\">\n\t\t\t<Col span={24}>\n\t\t\t\t<StyledInner onClick={handleToggleOpenFilters} style={{ marginBottom: 0 }}>\n\t\t\t\t\t{isOpenedFilters ? (\n\t\t\t\t\t\t<span className=\"action-btn\">\n\t\t\t\t\t\t\t<Minus size={14} color={Color.BG_INK_500} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"action-btn\">\n\t\t\t\t\t\t\t<Plus size={14} color={Color.BG_INK_500} />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\n\t\t\t\t\t{!isOpenedFilters && (\n\t\t\t\t\t\t<Typography>Add conditions for {filtersTexts}</Typography>\n\t\t\t\t\t)}\n\t\t\t\t</StyledInner>\n\t\t\t</Col>\n\t\t\t{isOpenedFilters && <Col span={24}>{children}</Col>}\n\t\t</Row>\n\t);\n});\n","import { Select } from 'antd';\nimport { memo } from 'react';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { SelectOption } from 'types/common/select';\n// ** Helpers\nimport { transformToUpperCase } from 'utils/transformToUpperCase';\n\n// ** Types\nimport { QueryLabelProps } from './DataSourceDropdown.interfaces';\n\nconst dataSourceMap = [DataSource.LOGS, DataSource.METRICS, DataSource.TRACES];\n\nconst exploreDataSourceMap = [DataSource.LOGS, DataSource.TRACES];\n\nexport const DataSourceDropdown = memo(function DataSourceDropdown(\n\tprops: QueryLabelProps,\n): JSX.Element {\n\tconst { onChange, value, style, isListViewPanel = false } = props;\n\n\tconst dataSourceOptions: SelectOption<DataSource, string>[] = isListViewPanel\n\t\t? exploreDataSourceMap.map((source) => ({\n\t\t\t\tlabel: transformToUpperCase(source),\n\t\t\t\tvalue: source,\n\t\t  }))\n\t\t: dataSourceMap.map((source) => ({\n\t\t\t\tlabel: transformToUpperCase(source),\n\t\t\t\tvalue: source,\n\t\t  }));\n\n\treturn (\n\t\t<Select\n\t\t\tdefaultValue={dataSourceOptions[0].value}\n\t\t\toptions={dataSourceOptions}\n\t\t\tonChange={onChange}\n\t\t\tvalue={value}\n\t\t\tstyle={style}\n\t\t/>\n\t);\n});\n","import styled from 'styled-components';\n\ninterface Props {\n\tisDarkMode: boolean;\n\tchildren?: React.ReactNode;\n}\n\nexport const StyledLabel = styled.div<Props>`\n\tpadding: 0 0.6875rem;\n\tmin-height: 2rem;\n\tmin-width: 5.625rem;\n\tdisplay: inline-flex;\n\twhite-space: nowrap;\n\talign-items: center;\n\tborder-radius: 0.125rem;\n`;\n","import { Typography } from 'antd';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { memo } from 'react';\n\n// ** Types\nimport { FilterLabelProps } from './FilterLabel.interfaces';\n// ** Styles\nimport { StyledLabel } from './FilterLabel.styled';\n\nexport const FilterLabel = memo(function FilterLabel({\n\tlabel,\n}: FilterLabelProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\n\treturn (\n\t\t<StyledLabel isDarkMode={isDarkMode}>\n\t\t\t<Typography\n\t\t\t\tstyle={{\n\t\t\t\t\tcolor: '#c0c1c3',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{label}\n\t\t\t</Typography>\n\t\t</StyledLabel>\n\t);\n});\n","import './Formula.styles.scss';\n\nimport { Col, Input, Row } from 'antd';\nimport { LEGEND } from 'constants/global';\n// ** Components\nimport { FilterLabel } from 'container/QueryBuilder/components';\nimport HavingFilter from 'container/QueryBuilder/filters/Formula/Having/HavingFilter';\nimport LimitFilter from 'container/QueryBuilder/filters/Formula/Limit/Limit';\nimport OrderByFilter from 'container/QueryBuilder/filters/Formula/OrderBy/OrderByFilter';\n// ** Hooks\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { useQueryOperations } from 'hooks/queryBuilder/useQueryBuilderOperations';\nimport { ChangeEvent, useCallback, useMemo, useState } from 'react';\nimport { IBuilderFormula } from 'types/api/queryBuilder/queryBuilderData';\nimport { getFormatedLegend } from 'utils/getFormatedLegend';\n\nimport { AdditionalFiltersToggler } from '../AdditionalFiltersToggler';\nimport QBEntityOptions from '../QBEntityOptions/QBEntityOptions';\n// ** Types\nimport { FormulaProps } from './Formula.interfaces';\n\nexport function Formula({\n\tindex,\n\tformula,\n\tfilterConfigs,\n\tquery,\n\tisAdditionalFilterEnable,\n}: FormulaProps): JSX.Element {\n\tconst {\n\t\tremoveQueryBuilderEntityByIndex,\n\t\thandleSetFormulaData,\n\t} = useQueryBuilder();\n\n\tconst {\n\t\tlistOfAdditionalFormulaFilters,\n\t\thandleChangeFormulaData,\n\t} = useQueryOperations({\n\t\tindex,\n\t\tquery,\n\t\tfilterConfigs,\n\t\tformula,\n\t\tentityVersion: '',\n\t});\n\n\tconst [isCollapse, setIsCollapsed] = useState(false);\n\n\tconst handleDelete = useCallback(() => {\n\t\tremoveQueryBuilderEntityByIndex('queryFormulas', index);\n\t}, [index, removeQueryBuilderEntityByIndex]);\n\n\tconst handleToggleDisableFormula = useCallback((): void => {\n\t\tconst newFormula: IBuilderFormula = {\n\t\t\t...formula,\n\t\t\tdisabled: !formula.disabled,\n\t\t};\n\n\t\thandleSetFormulaData(index, newFormula);\n\t}, [index, formula, handleSetFormulaData]);\n\n\tconst handleToggleCollapseFormula = (): void => {\n\t\tsetIsCollapsed(!isCollapse);\n\t};\n\n\tconst handleChange = useCallback(\n\t\t(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n\t\t\tconst { name, value } = e.target;\n\t\t\tconst newFormula: IBuilderFormula = {\n\t\t\t\t...formula,\n\t\t\t\t[name]: name === LEGEND ? getFormatedLegend(value) : value,\n\t\t\t};\n\n\t\t\thandleSetFormulaData(index, newFormula);\n\t\t},\n\t\t[index, formula, handleSetFormulaData],\n\t);\n\n\tconst handleChangeLimit = useCallback(\n\t\t(value: IBuilderFormula['limit']) => {\n\t\t\thandleChangeFormulaData('limit', value);\n\t\t},\n\t\t[handleChangeFormulaData],\n\t);\n\n\tconst handleChangeHavingFilter = useCallback(\n\t\t(value: IBuilderFormula['having']) => {\n\t\t\thandleChangeFormulaData('having', value);\n\t\t},\n\t\t[handleChangeFormulaData],\n\t);\n\n\tconst handleChangeOrderByFilter = useCallback(\n\t\t(value: IBuilderFormula['orderBy']) => {\n\t\t\thandleChangeFormulaData('orderBy', value);\n\t\t},\n\t\t[handleChangeFormulaData],\n\t);\n\n\tconst renderAdditionalFilters = useMemo(\n\t\t() => (\n\t\t\t<>\n\t\t\t\t<Col span={11}>\n\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t<FilterLabel label=\"Limit\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t<LimitFilter formula={formula} onChange={handleChangeLimit} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={11}>\n\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t<FilterLabel label=\"HAVING\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t<HavingFilter formula={formula} onChange={handleChangeHavingFilter} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={11}>\n\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t<FilterLabel label=\"Order by\" />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t<OrderByFilter\n\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\tformula={formula}\n\t\t\t\t\t\t\t\tonChange={handleChangeOrderByFilter}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t</>\n\t\t),\n\t\t[\n\t\t\tformula,\n\t\t\thandleChangeHavingFilter,\n\t\t\thandleChangeLimit,\n\t\t\thandleChangeOrderByFilter,\n\t\t\tquery,\n\t\t],\n\t);\n\n\treturn (\n\t\t<Row gutter={[0, 15]}>\n\t\t\t<QBEntityOptions\n\t\t\t\tisCollapsed={isCollapse}\n\t\t\t\tshowFunctions={false}\n\t\t\t\tentityType=\"formula\"\n\t\t\t\tentityData={formula}\n\t\t\t\tonToggleVisibility={handleToggleDisableFormula}\n\t\t\t\tonDelete={handleDelete}\n\t\t\t\tonCollapseEntity={handleToggleCollapseFormula}\n\t\t\t\tshowDeleteButton\n\t\t\t/>\n\n\t\t\t{!isCollapse && (\n\t\t\t\t<Row gutter={[0, 15]} className=\"formula-container\">\n\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t<Input.TextArea\n\t\t\t\t\t\t\tname=\"expression\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tsize=\"middle\"\n\t\t\t\t\t\t\tvalue={formula.expression}\n\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tname=\"legend\"\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tsize=\"middle\"\n\t\t\t\t\t\t\tvalue={formula.legend}\n\t\t\t\t\t\t\taddonBefore=\"Legend Format\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t{isAdditionalFilterEnable && (\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<AdditionalFiltersToggler\n\t\t\t\t\t\t\t\tlistOfAdditionalFilter={listOfAdditionalFormulaFilters}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Row gutter={[0, 11]} justify=\"space-between\">\n\t\t\t\t\t\t\t\t\t{renderAdditionalFilters}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</AdditionalFiltersToggler>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</Row>\n\t);\n}\n","import { Tag, Typography } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledText = styled(Typography.Text)`\n\tcursor: pointer;\n`;\n\nexport const StyledTag = styled(Tag)`\n\tmargin-top: 0.125rem;\n\tmargin-bottom: 0.125rem;\n\tpadding-left: 0.5rem;\n\tdisplay: flex;\n`;\n","import { HavingFilterTagProps } from './HavingFilterTag.interfaces';\nimport { StyledTag, StyledText } from './HavingFilterTag.styled';\n\nexport function HavingFilterTag({\n\tvalue,\n\tclosable,\n\tonClose,\n\tonUpdate,\n}: HavingFilterTagProps): JSX.Element {\n\tconst handleClick = (): void => {\n\t\tonUpdate(value);\n\t};\n\n\treturn (\n\t\t<StyledTag closable={closable} onClose={onClose}>\n\t\t\t<StyledText ellipsis onClick={handleClick}>\n\t\t\t\t{value}\n\t\t\t</StyledText>\n\t\t</StyledTag>\n\t);\n}\n","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { Row } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledDeleteEntity = styled(CloseCircleOutlined)`\n\tposition: absolute;\n\ttop: 0.5rem;\n\tright: 0.9375rem;\n\tz-index: 1;\n\tcursor: pointer;\n\topacity: 0.45;\n\twidth: 1.3125rem;\n\theight: 1.3125rem;\n\tsvg {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n`;\n\nexport const StyledRow = styled(Row)`\n\tpadding-right: 3rem;\n`;\n\nexport const StyledFilterRow = styled(Row)`\n\tmargin-bottom: 0.875rem;\n`;\n","// ** Types\nimport { ListItemWrapperProps } from './ListItemWrapper.interfaces';\n// ** Styles\nimport { StyledDeleteEntity, StyledRow } from './ListItemWrapper.styled';\n\nexport function ListItemWrapper({\n\tchildren,\n\tonDelete,\n}: ListItemWrapperProps): JSX.Element {\n\treturn (\n\t\t<StyledRow gutter={[0, 15]}>\n\t\t\t<StyledDeleteEntity onClick={onDelete} />\n\t\t\t{children}\n\t\t</StyledRow>\n\t);\n}\n","import { Button } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledButton = styled(Button)<{ $isAvailableToDisable: boolean }>`\n\tmin-width: 2rem;\n\theight: 2.25rem;\n\tpadding: ${(props): string =>\n\t\tprops.$isAvailableToDisable ? '0.43rem' : '0.43rem 0.68rem'};\n\tborder-radius: 0.375rem;\n\tpointer-events: ${(props): string =>\n\t\tprops.$isAvailableToDisable ? 'default' : 'none'};\n`;\n","import { EyeFilled, EyeInvisibleFilled } from '@ant-design/icons';\nimport { ButtonProps } from 'antd';\nimport { memo } from 'react';\n\n// ** Types\nimport { ListMarkerProps } from './ListMarker.interfaces';\n// ** Styles\nimport { StyledButton } from './ListMarker.styled';\n\nexport const ListMarker = memo(function ListMarker({\n\tisDisabled,\n\tlabelName,\n\tindex,\n\tisAvailableToDisable = true,\n\tclassName,\n\tonDisable,\n\tstyle,\n}: ListMarkerProps): JSX.Element {\n\tconst buttonProps: Partial<ButtonProps> = isAvailableToDisable\n\t\t? {\n\t\t\t\ttype: isDisabled ? 'default' : 'primary',\n\t\t\t\ticon: isDisabled ? <EyeInvisibleFilled /> : <EyeFilled />,\n\t\t\t\tonClick: (): void => onDisable(index),\n\t\t  }\n\t\t: { type: 'primary' };\n\n\treturn (\n\t\t<StyledButton\n\t\t\ttype={buttonProps.type}\n\t\t\ticon={buttonProps.icon}\n\t\t\tonClick={buttonProps.onClick}\n\t\t\tclassName={className}\n\t\t\t$isAvailableToDisable={isAvailableToDisable}\n\t\t\tstyle={style}\n\t\t>\n\t\t\t{labelName}\n\t\t</StyledButton>\n\t);\n});\n","/* eslint-disable sonarjs/no-duplicate-string */\nimport './QBEntityOptions.styles.scss';\n\nimport { Button, Col, Tooltip } from 'antd';\nimport { noop } from 'antd/lib/_util/warning';\nimport cx from 'classnames';\nimport ROUTES from 'constants/routes';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { isFunction } from 'lodash-es';\nimport {\n\tChevronDown,\n\tChevronRight,\n\tCopy,\n\tEye,\n\tEyeOff,\n\tTrash2,\n} from 'lucide-react';\nimport { useLocation } from 'react-router-dom';\nimport {\n\tIBuilderQuery,\n\tQueryFunctionProps,\n} from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\n\nimport QueryFunctions from '../QueryFunctions/QueryFunctions';\n\ninterface QBEntityOptionsProps {\n\tquery?: IBuilderQuery;\n\tisMetricsDataSource?: boolean;\n\tshowFunctions?: boolean;\n\tisCollapsed: boolean;\n\tentityType: string;\n\tentityData: any;\n\tonDelete: () => void;\n\tonCloneQuery?: (type: string, query: IBuilderQuery) => void;\n\tonToggleVisibility: () => void;\n\tonCollapseEntity: () => void;\n\tonQueryFunctionsUpdates?: (functions: QueryFunctionProps[]) => void;\n\tshowDeleteButton: boolean;\n\tisListViewPanel?: boolean;\n\tindex?: number;\n}\n\nexport default function QBEntityOptions({\n\tquery,\n\tisMetricsDataSource,\n\tisCollapsed,\n\tshowFunctions,\n\tentityType,\n\tentityData,\n\tonDelete,\n\tonCloneQuery,\n\tonToggleVisibility,\n\tonCollapseEntity,\n\tshowDeleteButton,\n\tonQueryFunctionsUpdates,\n\tisListViewPanel,\n\tindex,\n}: QBEntityOptionsProps): JSX.Element {\n\tconst handleCloneEntity = (): void => {\n\t\tif (isFunction(onCloneQuery)) {\n\t\t\tonCloneQuery(entityType, entityData);\n\t\t}\n\t};\n\n\tconst { pathname } = useLocation();\n\n\tconst isLogsExplorerPage = pathname === ROUTES.LOGS_EXPLORER;\n\n\tconst { lastUsedQuery } = useQueryBuilder();\n\n\tconst isLogsDataSource = query?.dataSource === DataSource.LOGS;\n\n\treturn (\n\t\t<Col span={24}>\n\t\t\t<div className=\"qb-entity-options\">\n\t\t\t\t<div className=\"left-col-items\">\n\t\t\t\t\t<div className=\"options periscope-btn-group\">\n\t\t\t\t\t\t<Button.Group>\n\t\t\t\t\t\t\t<Tooltip title={isCollapsed ? 'Uncollapse' : 'Collapse'}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvalue=\"search\"\n\t\t\t\t\t\t\t\t\tclassName=\"periscope-btn collapse\"\n\t\t\t\t\t\t\t\t\tonClick={onCollapseEntity}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{isCollapsed ? <ChevronRight size={16} /> : <ChevronDown size={16} />}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t<Tooltip title={entityData.disabled ? 'Show' : 'Hide'}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvalue=\"query-builder\"\n\t\t\t\t\t\t\t\t\tclassName=\"periscope-btn visibility-toggle\"\n\t\t\t\t\t\t\t\t\tonClick={onToggleVisibility}\n\t\t\t\t\t\t\t\t\tdisabled={isListViewPanel}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{entityData.disabled ? <EyeOff size={16} /> : <Eye size={16} />}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Tooltip>\n\n\t\t\t\t\t\t\t{entityType === 'query' && (\n\t\t\t\t\t\t\t\t<Tooltip title={`Clone Query ${entityData.queryName}`}>\n\t\t\t\t\t\t\t\t\t<Button className={cx('periscope-btn')} onClick={handleCloneEntity}>\n\t\t\t\t\t\t\t\t\t\t<Copy size={14} />\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tclassName={cx(\n\t\t\t\t\t\t\t\t\t'periscope-btn',\n\t\t\t\t\t\t\t\t\tentityType === 'query' ? 'query-name' : 'formula-name',\n\t\t\t\t\t\t\t\t\tisLogsExplorerPage && lastUsedQuery === index ? 'sync-btn' : '',\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{entityData.queryName}\n\t\t\t\t\t\t\t</Button>\n\n\t\t\t\t\t\t\t{showFunctions &&\n\t\t\t\t\t\t\t\t(isMetricsDataSource || isLogsDataSource) &&\n\t\t\t\t\t\t\t\tquery &&\n\t\t\t\t\t\t\t\tonQueryFunctionsUpdates && (\n\t\t\t\t\t\t\t\t\t<QueryFunctions\n\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\tqueryFunctions={query.functions || []}\n\t\t\t\t\t\t\t\t\t\tkey={query.functions?.toString()}\n\t\t\t\t\t\t\t\t\t\tonChange={onQueryFunctionsUpdates}\n\t\t\t\t\t\t\t\t\t\tmaxFunctions={isLogsDataSource ? 1 : 3}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Button.Group>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{isCollapsed && (\n\t\t\t\t\t\t<div className=\"title\">\n\t\t\t\t\t\t\t<span className=\"entityType\"> {entityType} </span> -{' '}\n\t\t\t\t\t\t\t<span className=\"entityData\"> {entityData.queryName} </span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t{showDeleteButton && (\n\t\t\t\t\t<Button className=\"periscope-btn ghost\" onClick={onDelete}>\n\t\t\t\t\t\t<Trash2 size={14} />\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Col>\n\t);\n}\n\nQBEntityOptions.defaultProps = {\n\tisListViewPanel: false,\n\tquery: undefined,\n\tisMetricsDataSource: false,\n\tonQueryFunctionsUpdates: undefined,\n\tshowFunctions: false,\n\tonCloneQuery: noop,\n\tindex: 0,\n};\n","/* eslint-disable sonarjs/cognitive-complexity */\nimport './Query.styles.scss';\n\nimport { Col, Input, Row, Tooltip, Typography } from 'antd';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\n// ** Constants\nimport { ATTRIBUTE_TYPES, PANEL_TYPES } from 'constants/queryBuilder';\nimport ROUTES from 'constants/routes';\n// ** Components\nimport {\n\tAdditionalFiltersToggler,\n\tDataSourceDropdown,\n\tFilterLabel,\n} from 'container/QueryBuilder/components';\nimport {\n\tAggregatorFilter,\n\tGroupByFilter,\n\tHavingFilter,\n\tOperatorsSelect,\n\tOrderByFilter,\n\tReduceToFilter,\n} from 'container/QueryBuilder/filters';\nimport AggregateEveryFilter from 'container/QueryBuilder/filters/AggregateEveryFilter';\nimport LimitFilter from 'container/QueryBuilder/filters/LimitFilter/LimitFilter';\nimport QueryBuilderSearch from 'container/QueryBuilder/filters/QueryBuilderSearch';\nimport QueryBuilderSearchV2 from 'container/QueryBuilder/filters/QueryBuilderSearchV2/QueryBuilderSearchV2';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { useQueryOperations } from 'hooks/queryBuilder/useQueryBuilderOperations';\n// ** Hooks\nimport {\n\tChangeEvent,\n\tmemo,\n\tReactNode,\n\tuseCallback,\n\tuseMemo,\n\tuseState,\n} from 'react';\nimport { useLocation } from 'react-use';\nimport { IBuilderQuery } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { transformToUpperCase } from 'utils/transformToUpperCase';\n\nimport QBEntityOptions from '../QBEntityOptions/QBEntityOptions';\nimport SpaceAggregationOptions from '../SpaceAggregationOptions/SpaceAggregationOptions';\n// ** Types\nimport { QueryProps } from './Query.interfaces';\n\n// eslint-disable-next-line sonarjs/cognitive-complexity\nexport const Query = memo(function Query({\n\tindex,\n\tqueryVariant,\n\tquery,\n\tfilterConfigs,\n\tqueryComponents,\n\tisListViewPanel = false,\n\tshowFunctions = false,\n\tversion,\n}: QueryProps): JSX.Element {\n\tconst { panelType, currentQuery, cloneQuery } = useQueryBuilder();\n\tconst { pathname } = useLocation();\n\n\tconst [isCollapse, setIsCollapsed] = useState(false);\n\n\tconst {\n\t\toperators,\n\t\tspaceAggregationOptions,\n\t\tisMetricsDataSource,\n\t\tisTracePanelType,\n\t\tlistOfAdditionalFilters,\n\t\thandleChangeAggregatorAttribute,\n\t\thandleChangeQueryData,\n\t\thandleChangeDataSource,\n\t\thandleChangeOperator,\n\t\thandleSpaceAggregationChange,\n\t\thandleDeleteQuery,\n\t\thandleQueryFunctionsUpdates,\n\t} = useQueryOperations({\n\t\tindex,\n\t\tquery,\n\t\tfilterConfigs,\n\t\tisListViewPanel,\n\t\tentityVersion: version,\n\t});\n\n\tconst handleChangeAggregateEvery = useCallback(\n\t\t(value: IBuilderQuery['stepInterval']) => {\n\t\t\thandleChangeQueryData('stepInterval', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleChangeLimit = useCallback(\n\t\t(value: IBuilderQuery['limit']) => {\n\t\t\thandleChangeQueryData('limit', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleChangeHavingFilter = useCallback(\n\t\t(value: IBuilderQuery['having']) => {\n\t\t\thandleChangeQueryData('having', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleChangeOrderByKeys = useCallback(\n\t\t(value: IBuilderQuery['orderBy']) => {\n\t\t\thandleChangeQueryData('orderBy', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleToggleDisableQuery = useCallback(() => {\n\t\thandleChangeQueryData('disabled', !query.disabled);\n\t}, [handleChangeQueryData, query]);\n\n\tconst handleChangeTagFilters = useCallback(\n\t\t(value: IBuilderQuery['filters']) => {\n\t\t\thandleChangeQueryData('filters', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleChangeReduceTo = useCallback(\n\t\t(value: IBuilderQuery['reduceTo']) => {\n\t\t\thandleChangeQueryData('reduceTo', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleChangeGroupByKeys = useCallback(\n\t\t(value: IBuilderQuery['groupBy']) => {\n\t\t\thandleChangeQueryData('groupBy', value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleChangeQueryLegend = useCallback(\n\t\t(event: ChangeEvent<HTMLInputElement>) => {\n\t\t\thandleChangeQueryData('legend', event.target.value);\n\t\t},\n\t\t[handleChangeQueryData],\n\t);\n\n\tconst handleToggleCollapsQuery = (): void => {\n\t\tsetIsCollapsed(!isCollapse);\n\t};\n\n\tconst renderOrderByFilter = useCallback((): ReactNode => {\n\t\tif (queryComponents?.renderOrderBy) {\n\t\t\treturn queryComponents.renderOrderBy({\n\t\t\t\tquery,\n\t\t\t\tonChange: handleChangeOrderByKeys,\n\t\t\t});\n\t\t}\n\n\t\treturn (\n\t\t\t<OrderByFilter\n\t\t\t\tentityVersion={version}\n\t\t\t\tquery={query}\n\t\t\t\tonChange={handleChangeOrderByKeys}\n\t\t\t\tisListViewPanel={isListViewPanel}\n\t\t\t/>\n\t\t);\n\t}, [\n\t\tqueryComponents,\n\t\tquery,\n\t\tversion,\n\t\thandleChangeOrderByKeys,\n\t\tisListViewPanel,\n\t]);\n\n\tconst renderAggregateEveryFilter = useCallback(\n\t\t(): JSX.Element | null =>\n\t\t\t!filterConfigs?.stepInterval?.isHidden ? (\n\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t<FilterLabel label=\"Aggregate Every\" />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col flex=\"1 1 6rem\">\n\t\t\t\t\t\t<AggregateEveryFilter\n\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\tdisabled={filterConfigs?.stepInterval?.isDisabled || false}\n\t\t\t\t\t\t\tonChange={handleChangeAggregateEvery}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t) : null,\n\t\t[\n\t\t\tfilterConfigs?.stepInterval?.isHidden,\n\t\t\tfilterConfigs?.stepInterval?.isDisabled,\n\t\t\tquery,\n\t\t\thandleChangeAggregateEvery,\n\t\t],\n\t);\n\n\tconst isExplorerPage = useMemo(\n\t\t() =>\n\t\t\tpathname === ROUTES.LOGS_EXPLORER || pathname === ROUTES.TRACES_EXPLORER,\n\t\t[pathname],\n\t);\n\n\tconst renderAdditionalFilters = useCallback((): ReactNode => {\n\t\tswitch (panelType) {\n\t\t\tcase PANEL_TYPES.TIME_SERIES: {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t<FilterLabel label=\"Limit\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t<LimitFilter query={query} onChange={handleChangeLimit} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t<FilterLabel label=\"HAVING\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t<HavingFilter\n\t\t\t\t\t\t\t\t\t\tentityVersion={version}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangeHavingFilter}\n\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t<FilterLabel label=\"Order by\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">{renderOrderByFilter()}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col span={11}>{renderAggregateEveryFilter()}</Col>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tcase PANEL_TYPES.VALUE: {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t<FilterLabel label=\"HAVING\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t<HavingFilter\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangeHavingFilter}\n\t\t\t\t\t\t\t\t\t\tentityVersion={version}\n\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col span={11}>{renderAggregateEveryFilter()}</Col>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tdefault: {\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{!filterConfigs?.limit?.isHidden && (\n\t\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t\t<FilterLabel label=\"Limit\" />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t\t<LimitFilter query={query} onChange={handleChangeLimit} />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{!filterConfigs?.having?.isHidden && (\n\t\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t\t<FilterLabel label=\"HAVING\" />\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t\t<HavingFilter\n\t\t\t\t\t\t\t\t\t\t\tentityVersion={version}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeHavingFilter}\n\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t<FilterLabel label=\"Order by\" />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">{renderOrderByFilter()}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col span={11}>{renderAggregateEveryFilter()}</Col>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}, [\n\t\tpanelType,\n\t\tquery,\n\t\thandleChangeLimit,\n\t\tversion,\n\t\thandleChangeHavingFilter,\n\t\trenderOrderByFilter,\n\t\trenderAggregateEveryFilter,\n\t\tfilterConfigs?.limit?.isHidden,\n\t\tfilterConfigs?.having?.isHidden,\n\t]);\n\n\tconst disableOperatorSelector =\n\t\t!query?.aggregateAttribute.key || query?.aggregateAttribute.key === '';\n\n\tconst isVersionV4 = version && version === ENTITY_VERSION_V4;\n\n\treturn (\n\t\t<Row gutter={[0, 12]} className={`query-builder-${version}`}>\n\t\t\t<QBEntityOptions\n\t\t\t\tisMetricsDataSource={isMetricsDataSource}\n\t\t\t\tshowFunctions={\n\t\t\t\t\t(version && version === ENTITY_VERSION_V4) ||\n\t\t\t\t\tquery.dataSource === DataSource.LOGS ||\n\t\t\t\t\tshowFunctions ||\n\t\t\t\t\tfalse\n\t\t\t\t}\n\t\t\t\tisCollapsed={isCollapse}\n\t\t\t\tentityType=\"query\"\n\t\t\t\tentityData={query}\n\t\t\t\tonToggleVisibility={handleToggleDisableQuery}\n\t\t\t\tonDelete={handleDeleteQuery}\n\t\t\t\tonCloneQuery={cloneQuery}\n\t\t\t\tonCollapseEntity={handleToggleCollapsQuery}\n\t\t\t\tquery={query}\n\t\t\t\tonQueryFunctionsUpdates={handleQueryFunctionsUpdates}\n\t\t\t\tshowDeleteButton={currentQuery.builder.queryData.length > 1}\n\t\t\t\tisListViewPanel={isListViewPanel}\n\t\t\t\tindex={index}\n\t\t\t/>\n\n\t\t\t{!isCollapse && (\n\t\t\t\t<Row gutter={[0, 12]} className=\"qb-container\">\n\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t<Row align=\"middle\" gutter={[5, 11]}>\n\t\t\t\t\t\t\t{!isExplorerPage && (\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t{queryVariant === 'dropdown' ? (\n\t\t\t\t\t\t\t\t\t\t<DataSourceDropdown\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeDataSource}\n\t\t\t\t\t\t\t\t\t\t\tvalue={query.dataSource}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ minWidth: '5.625rem' }}\n\t\t\t\t\t\t\t\t\t\t\tisListViewPanel={isListViewPanel}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<FilterLabel label={transformToUpperCase(query.dataSource)} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{isMetricsDataSource && (\n\t\t\t\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t\t\t{version && version === 'v3' && (\n\t\t\t\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSelect Aggregate Operator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"learn-more\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/userguide/query-builder/?utm_source=product&utm_medium=query-builder#aggregation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<OperatorsSelect\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={query.aggregateOperator}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeOperator}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toperators={operators}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t\t<Col flex=\"auto\">\n\t\t\t\t\t\t\t\t\t\t\t<AggregatorFilter\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeAggregatorAttribute}\n\t\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t\t\t{version &&\n\t\t\t\t\t\t\t\t\t\t\tversion === ENTITY_VERSION_V4 &&\n\t\t\t\t\t\t\t\t\t\t\toperators &&\n\t\t\t\t\t\t\t\t\t\t\tArray.isArray(operators) &&\n\t\t\t\t\t\t\t\t\t\t\toperators.length > 0 && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSelect Aggregate Operator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"learn-more\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/metrics-management/types-and-aggregation/?utm_source=product&utm_medium=query-builder#aggregation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<OperatorsSelect\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={query.aggregateOperator}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeOperator}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toperators={operators}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={disableOperatorSelector}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Col flex=\"1 1 40rem\">\n\t\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t\t{isMetricsDataSource && (\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t<FilterLabel label=\"WHERE\" />\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t<Col flex=\"1\" className=\"qb-search-container\">\n\t\t\t\t\t\t\t\t\t\t{[DataSource.LOGS, DataSource.TRACES].includes(query.dataSource) ? (\n\t\t\t\t\t\t\t\t\t\t\t<QueryBuilderSearchV2\n\t\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeTagFilters}\n\t\t\t\t\t\t\t\t\t\t\t\twhereClauseConfig={filterConfigs?.filters}\n\t\t\t\t\t\t\t\t\t\t\t\thideSpanScopeSelector={query.dataSource !== DataSource.TRACES}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t\t<QueryBuilderSearch\n\t\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeTagFilters}\n\t\t\t\t\t\t\t\t\t\t\t\twhereClauseConfig={filterConfigs?.filters}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Col>\n\t\t\t\t\t{!isMetricsDataSource && !isListViewPanel && (\n\t\t\t\t\t\t<Col span={11}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t\t\tSelect Aggregate Operator\n\t\t\t\t\t\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/userguide/query-builder/?utm_source=product&utm_medium=query-builder#aggregation\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<OperatorsSelect\n\t\t\t\t\t\t\t\t\t\t\tvalue={query.aggregateOperator}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeOperator}\n\t\t\t\t\t\t\t\t\t\t\toperators={operators}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t<AggregatorFilter\n\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChangeAggregatorAttribute}\n\t\t\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\t\t\tpanelType === PANEL_TYPES.LIST || panelType === PANEL_TYPES.TRACE\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isListViewPanel && (\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<Row gutter={[11, 5]}>\n\t\t\t\t\t\t\t\t<Col flex=\"5.93rem\">\n\t\t\t\t\t\t\t\t\t{isVersionV4 && isMetricsDataSource ? (\n\t\t\t\t\t\t\t\t\t\t<SpaceAggregationOptions\n\t\t\t\t\t\t\t\t\t\t\tpanelType={panelType}\n\t\t\t\t\t\t\t\t\t\t\tkey={`${panelType}${query.spaceAggregation}${query.timeAggregation}`}\n\t\t\t\t\t\t\t\t\t\t\taggregatorAttributeType={\n\t\t\t\t\t\t\t\t\t\t\t\tquery?.aggregateAttribute.type as ATTRIBUTE_TYPES\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tselectedValue={query.spaceAggregation}\n\t\t\t\t\t\t\t\t\t\t\tdisabled={disableOperatorSelector}\n\t\t\t\t\t\t\t\t\t\t\tonSelect={handleSpaceAggregationChange}\n\t\t\t\t\t\t\t\t\t\t\toperators={spaceAggregationOptions}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<FilterLabel\n\t\t\t\t\t\t\t\t\t\t\tlabel={panelType === PANEL_TYPES.VALUE ? 'Reduce to' : 'Group by'}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t{panelType === PANEL_TYPES.VALUE ? (\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t{isVersionV4 && isMetricsDataSource && (\n\t\t\t\t\t\t\t\t\t\t\t\t<Col span={4}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FilterLabel label=\"Reduce to\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t<Col span={isVersionV4 && isMetricsDataSource ? 20 : 24}>\n\t\t\t\t\t\t\t\t\t\t\t\t<ReduceToFilter query={query} onChange={handleChangeReduceTo} />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<GroupByFilter\n\t\t\t\t\t\t\t\t\t\t\tdisabled={isMetricsDataSource && !query.aggregateAttribute.key}\n\t\t\t\t\t\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\t\t\t\t\t\tonChange={handleChangeGroupByKeys}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t{isVersionV4 &&\n\t\t\t\t\t\t\t\t\tisMetricsDataSource &&\n\t\t\t\t\t\t\t\t\t(panelType === PANEL_TYPES.TABLE || panelType === PANEL_TYPES.PIE) && (\n\t\t\t\t\t\t\t\t\t\t<Col flex=\"1 1 12.5rem\">\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col span={6}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FilterLabel label=\"Reduce to\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t\t\t\t\t\t\t<Col span={18}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ReduceToFilter query={query} onChange={handleChangeReduceTo} />\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t\t{!isTracePanelType && !isListViewPanel && (\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<AdditionalFiltersToggler\n\t\t\t\t\t\t\t\tlistOfAdditionalFilter={listOfAdditionalFilters}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Row gutter={[0, 11]} justify=\"space-between\">\n\t\t\t\t\t\t\t\t\t{renderAdditionalFilters()}\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</AdditionalFiltersToggler>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t\t{isListViewPanel && (\n\t\t\t\t\t\t<Col span={24}>\n\t\t\t\t\t\t\t<Row gutter={[0, 11]} justify=\"space-between\">\n\t\t\t\t\t\t\t\t{renderAdditionalFilters()}\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t)}\n\t\t\t\t\t{panelType !== PANEL_TYPES.LIST && panelType !== PANEL_TYPES.TRACE && (\n\t\t\t\t\t\t<Row style={{ width: '100%' }}>\n\t\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\t\tplacement=\"right\"\n\t\t\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\tName of legend\n\t\t\t\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/userguide/query-builder/?utm_source=product&utm_medium=query-builder#legend-format\"\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tonChange={handleChangeQueryLegend}\n\t\t\t\t\t\t\t\t\tsize=\"middle\"\n\t\t\t\t\t\t\t\t\tvalue={query.legend}\n\t\t\t\t\t\t\t\t\taddonBefore=\"Legend Format\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t)}\n\t\t\t\t</Row>\n\t\t\t)}\n\t\t</Row>\n\t);\n});\n","/* eslint-disable react/jsx-props-no-spreading */\nimport { Button, Flex, Input, Select } from 'antd';\nimport cx from 'classnames';\nimport {\n\tlogsQueryFunctionOptions,\n\tmetricQueryFunctionOptions,\n\tqueryFunctionsTypesConfig,\n} from 'constants/queryFunctionOptions';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { debounce, isNil } from 'lodash-es';\nimport { X } from 'lucide-react';\nimport {\n\tIBuilderQuery,\n\tQueryFunctionProps,\n} from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource, QueryFunctionsTypes } from 'types/common/queryBuilder';\n\ninterface FunctionProps {\n\tquery: IBuilderQuery;\n\tfuncData: QueryFunctionProps;\n\tindex: any;\n\thandleUpdateFunctionArgs: any;\n\thandleUpdateFunctionName: any;\n\thandleDeleteFunction: any;\n}\n\nexport default function Function({\n\tquery,\n\tfuncData,\n\tindex,\n\thandleUpdateFunctionArgs,\n\thandleUpdateFunctionName,\n\thandleDeleteFunction,\n}: FunctionProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\tconst { showInput, disabled } = queryFunctionsTypesConfig[funcData.name];\n\n\tlet functionValue;\n\n\tconst hasValue = !isNil(\n\t\tfuncData.args && funcData.args.length > 0 && funcData.args[0],\n\t);\n\n\tif (hasValue) {\n\t\t// eslint-disable-next-line prefer-destructuring\n\t\tfunctionValue = funcData.args[0];\n\t}\n\n\tconst debouncedhandleUpdateFunctionArgs = debounce(\n\t\thandleUpdateFunctionArgs,\n\t\t500,\n\t);\n\n\t// update the logic when we start supporting functions for traces\n\tconst functionOptions =\n\t\tquery.dataSource === DataSource.LOGS\n\t\t\t? logsQueryFunctionOptions\n\t\t\t: metricQueryFunctionOptions;\n\n\tconst disableRemoveFunction = funcData.name === QueryFunctionsTypes.ANOMALY;\n\n\tif (funcData.name === QueryFunctionsTypes.ANOMALY) {\n\t\t// eslint-disable-next-line react/jsx-no-useless-fragment\n\t\treturn <></>;\n\t}\n\n\treturn (\n\t\t<Flex className=\"query-function\">\n\t\t\t<Select\n\t\t\t\tclassName={cx('query-function-name-selector', showInput ? 'showInput' : '')}\n\t\t\t\tvalue={funcData.name}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tstyle={{ minWidth: '100px' }}\n\t\t\t\tonChange={(value): void => {\n\t\t\t\t\thandleUpdateFunctionName(funcData, index, value);\n\t\t\t\t}}\n\t\t\t\tdropdownStyle={{\n\t\t\t\t\tminWidth: 200,\n\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\tborder: isDarkMode\n\t\t\t\t\t\t? '1px solid var(--bg-slate-400)'\n\t\t\t\t\t\t: '1px solid var(--bg-vanilla-300)',\n\t\t\t\t\tboxShadow: `4px 10px 16px 2px rgba(0, 0, 0, 0.20)`,\n\t\t\t\t}}\n\t\t\t\tplacement=\"bottomRight\"\n\t\t\t\toptions={functionOptions}\n\t\t\t/>\n\n\t\t\t{showInput && (\n\t\t\t\t<Input\n\t\t\t\t\tclassName=\"query-function-value\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\tdefaultValue={functionValue}\n\t\t\t\t\tonChange={(event): void => {\n\t\t\t\t\t\tdebouncedhandleUpdateFunctionArgs(funcData, index, event.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t<Button\n\t\t\t\tclassName=\"periscope-btn query-function-delete-btn\"\n\t\t\t\tdisabled={disableRemoveFunction}\n\t\t\t\tonClick={(): void => {\n\t\t\t\t\thandleDeleteFunction(funcData, index);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<X size={12} />\n\t\t\t</Button>\n\t\t</Flex>\n\t);\n}\n","import './QueryFunctions.styles.scss';\n\nimport { Button, Tooltip, Typography } from 'antd';\nimport cx from 'classnames';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { cloneDeep, pullAt } from 'lodash-es';\nimport { Plus } from 'lucide-react';\nimport { useState } from 'react';\nimport {\n\tIBuilderQuery,\n\tQueryFunctionProps,\n} from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource, QueryFunctionsTypes } from 'types/common/queryBuilder';\n\nimport Function from './Function';\nimport { toFloat64 } from './utils';\n\nconst defaultMetricFunctionStruct: QueryFunctionProps = {\n\tname: QueryFunctionsTypes.CUTOFF_MIN,\n\targs: [],\n};\n\nconst defaultLogFunctionStruct: QueryFunctionProps = {\n\tname: QueryFunctionsTypes.TIME_SHIFT,\n\targs: [],\n};\n\ninterface QueryFunctionsProps {\n\tquery: IBuilderQuery;\n\tqueryFunctions: QueryFunctionProps[];\n\tonChange: (functions: QueryFunctionProps[]) => void;\n\tmaxFunctions: number;\n}\n\n// SVG component\nfunction FunctionIcon({\n\tfillColor = 'white',\n\tclassName,\n}: {\n\tfillColor: string;\n\tclassName: string;\n}): JSX.Element {\n\treturn (\n\t\t<svg\n\t\t\twidth=\"24\"\n\t\t\theight=\"24\"\n\t\t\tviewBox=\"0 0 24 24\"\n\t\t\tfill=\"none\"\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\tclassName={className}\n\t\t>\n\t\t\t<path\n\t\t\t\td=\"M3 18.13C5.71436 18.13 6.8001 16.7728 6.8001 14.3299V8.62978C6.8001 5.91542 8.15728 4.15109 11.1431 4.55824\"\n\t\t\t\tstroke={fillColor}\n\t\t\t\tstrokeWidth=\"1.995\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M3 10.2583H10.7359\"\n\t\t\t\tstroke={fillColor}\n\t\t\t\tstrokeWidth=\"1.995\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M22.0005 11.344L15.2146 18.1299\"\n\t\t\t\tstroke={fillColor}\n\t\t\t\tstrokeWidth=\"1.995\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t\t<path\n\t\t\t\td=\"M15.2146 11.344L22.0005 18.1299\"\n\t\t\t\tstroke={fillColor}\n\t\t\t\tstrokeWidth=\"1.995\"\n\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\tstrokeLinejoin=\"round\"\n\t\t\t/>\n\t\t</svg>\n\t);\n}\n\nexport default function QueryFunctions({\n\tquery,\n\tqueryFunctions,\n\tonChange,\n\tmaxFunctions = 3,\n}: QueryFunctionsProps): JSX.Element {\n\tconst [functions, setFunctions] = useState<QueryFunctionProps[]>(\n\t\tqueryFunctions,\n\t);\n\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst hasAnomalyFunction = functions.some((func) => func.name === 'anomaly');\n\n\tconst handleAddNewFunction = (): void => {\n\t\tconst defaultFunctionStruct =\n\t\t\tquery.dataSource === DataSource.LOGS\n\t\t\t\t? defaultLogFunctionStruct\n\t\t\t\t: defaultMetricFunctionStruct;\n\n\t\tconst updatedFunctionsArr = [\n\t\t\t...functions,\n\t\t\t{\n\t\t\t\t...defaultFunctionStruct,\n\t\t\t},\n\t\t];\n\n\t\tconst functionsCopy = cloneDeep(updatedFunctionsArr);\n\n\t\tconst anomalyFuncIndex = functionsCopy.findIndex(\n\t\t\t(func) => func.name === 'anomaly',\n\t\t);\n\n\t\tif (anomalyFuncIndex !== -1) {\n\t\t\tconst anomalyFunc = functionsCopy[anomalyFuncIndex];\n\n\t\t\tfunctionsCopy.splice(anomalyFuncIndex, 1);\n\t\t\tfunctionsCopy.push(anomalyFunc);\n\t\t}\n\n\t\tsetFunctions(functionsCopy);\n\n\t\tonChange(functionsCopy);\n\t};\n\n\tconst handleDeleteFunction = (\n\t\tqueryFunction: QueryFunctionProps,\n\t\tindex: number,\n\t): void => {\n\t\tconst clonedFunctions = cloneDeep(functions);\n\t\tpullAt(clonedFunctions, index);\n\n\t\tsetFunctions(clonedFunctions);\n\t\tonChange(clonedFunctions);\n\t};\n\n\tconst handleUpdateFunctionName = (\n\t\tfunc: QueryFunctionProps,\n\t\tindex: number,\n\t\tvalue: string,\n\t): void => {\n\t\tconst updateFunctions = cloneDeep(functions);\n\n\t\tif (updateFunctions && updateFunctions.length > 0 && updateFunctions[index]) {\n\t\t\tupdateFunctions[index].name = value;\n\t\t\tsetFunctions(updateFunctions);\n\t\t\tonChange(updateFunctions);\n\t\t}\n\t};\n\n\tconst handleUpdateFunctionArgs = (\n\t\tfunc: QueryFunctionProps,\n\t\tindex: number,\n\t\tvalue: string,\n\t): void => {\n\t\tconst updateFunctions = cloneDeep(functions);\n\n\t\tif (updateFunctions && updateFunctions.length > 0 && updateFunctions[index]) {\n\t\t\tupdateFunctions[index].args = [\n\t\t\t\t// timeShift expects a float64 value, so we convert the string to a number\n\t\t\t\t// For other functions, we keep the value as a string\n\t\t\t\tupdateFunctions[index].name === QueryFunctionsTypes.TIME_SHIFT\n\t\t\t\t\t? toFloat64(value)\n\t\t\t\t\t: value,\n\t\t\t];\n\t\t\tsetFunctions(updateFunctions);\n\t\t\tonChange(updateFunctions);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={cx(\n\t\t\t\t'query-functions-container',\n\t\t\t\tfunctions && functions.length > 0 ? 'hasFunctions' : '',\n\t\t\t)}\n\t\t>\n\t\t\t<Button className=\"periscope-btn function-btn\">\n\t\t\t\t<FunctionIcon\n\t\t\t\t\tclassName=\"function-icon\"\n\t\t\t\t\tfillColor={!isDarkMode ? '#0B0C0E' : 'white'}\n\t\t\t\t/>\n\t\t\t</Button>\n\n\t\t\t<div className=\"query-functions-list\">\n\t\t\t\t{functions.map((func, index) => (\n\t\t\t\t\t<Function\n\t\t\t\t\t\tquery={query}\n\t\t\t\t\t\tfuncData={func}\n\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t// eslint-disable-next-line react/no-array-index-key\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\thandleUpdateFunctionArgs={handleUpdateFunctionArgs}\n\t\t\t\t\t\thandleUpdateFunctionName={handleUpdateFunctionName}\n\t\t\t\t\t\thandleDeleteFunction={handleDeleteFunction}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</div>\n\n\t\t\t<Tooltip\n\t\t\t\ttitle={\n\t\t\t\t\tfunctions && functions.length >= 3 ? (\n\t\t\t\t\t\t`Functions are in early access. You can add a maximum of ${\n\t\t\t\t\t\t\thasAnomalyFunction ? 2 : 3\n\t\t\t\t\t\t} function as of now.`\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\tAdd new function\n\t\t\t\t\t\t\t<Typography.Link\n\t\t\t\t\t\t\t\tstyle={{ textDecoration: 'underline' }}\n\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/userguide/query-builder/?utm_source=product&utm_medium=query-builder#functions-for-extended-data-analysis\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\tLearn more\n\t\t\t\t\t\t\t</Typography.Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tplacement=\"right\"\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"periscope-btn add-function-btn\"\n\t\t\t\t\tdisabled={functions && functions.length >= maxFunctions}\n\t\t\t\t\tonClick={handleAddNewFunction}\n\t\t\t\t>\n\t\t\t\t\t<Plus size={14} color={!isDarkMode ? '#0B0C0E' : 'white'} />\n\t\t\t\t</Button>\n\t\t\t</Tooltip>\n\t\t</div>\n\t);\n}\n","export const toFloat64 = (value: string): number => {\n\tconst parsed = parseFloat(value);\n\tif (!Number.isFinite(parsed)) {\n\t\tconsole.error(`Invalid value for timeshift. value: ${value}`);\n\t}\n\treturn parsed;\n};\n","import { Select } from 'antd';\nimport { ATTRIBUTE_TYPES, PANEL_TYPES } from 'constants/queryBuilder';\nimport { useEffect, useState } from 'react';\nimport { MetricAggregateOperator } from 'types/common/queryBuilder';\n\ninterface SpaceAggregationOptionsProps {\n\tpanelType: PANEL_TYPES | null;\n\tselectedValue: string | undefined;\n\taggregatorAttributeType: ATTRIBUTE_TYPES | null;\n\tdisabled: boolean;\n\tonSelect: (value: string) => void;\n\toperators: any[];\n}\n\nexport default function SpaceAggregationOptions({\n\tpanelType,\n\tselectedValue,\n\taggregatorAttributeType = ATTRIBUTE_TYPES.GAUGE,\n\tdisabled,\n\tonSelect,\n\toperators,\n}: SpaceAggregationOptionsProps): JSX.Element {\n\tconst placeHolderText = panelType === PANEL_TYPES.VALUE ? 'Sum' : 'Sum By';\n\tconst [defaultValue, setDefaultValue] = useState(\n\t\tselectedValue || placeHolderText,\n\t);\n\n\tuseEffect(() => {\n\t\tif (!selectedValue) {\n\t\t\tif (\n\t\t\t\taggregatorAttributeType === ATTRIBUTE_TYPES.HISTOGRAM ||\n\t\t\t\taggregatorAttributeType === ATTRIBUTE_TYPES.EXPONENTIAL_HISTOGRAM\n\t\t\t) {\n\t\t\t\tsetDefaultValue(MetricAggregateOperator.P90);\n\t\t\t\tonSelect(MetricAggregateOperator.P90);\n\t\t\t} else if (aggregatorAttributeType === ATTRIBUTE_TYPES.SUM) {\n\t\t\t\tsetDefaultValue(MetricAggregateOperator.SUM);\n\t\t\t\tonSelect(MetricAggregateOperator.SUM);\n\t\t\t} else if (aggregatorAttributeType === ATTRIBUTE_TYPES.GAUGE) {\n\t\t\t\tsetDefaultValue(MetricAggregateOperator.AVG);\n\t\t\t\tonSelect(MetricAggregateOperator.AVG);\n\t\t\t}\n\t\t}\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [aggregatorAttributeType]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"spaceAggregationOptionsContainer\"\n\t\t\tkey={aggregatorAttributeType}\n\t\t>\n\t\t\t<Select\n\t\t\t\tdefaultValue={defaultValue}\n\t\t\t\tstyle={{ minWidth: '5.625rem' }}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonChange={onSelect}\n\t\t\t>\n\t\t\t\t{operators.map((operator) => (\n\t\t\t\t\t<Select.Option key={operator.value} value={operator.value}>\n\t\t\t\t\t\t{operator.label} {panelType !== PANEL_TYPES.VALUE ? ' By' : ''}\n\t\t\t\t\t</Select.Option>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t</div>\n\t);\n}\n","import { InputNumber, InputNumberProps } from 'antd';\nimport { useMemo } from 'react';\nimport { IBuilderQuery } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\n\nimport { selectStyle } from '../QueryBuilderSearch/config';\n\nfunction AggregateEveryFilter({\n\tonChange,\n\tquery,\n\tdisabled,\n}: AggregateEveryFilterProps): JSX.Element {\n\tconst isMetricsDataSource = useMemo(\n\t\t() => query.dataSource === DataSource.METRICS,\n\t\t[query.dataSource],\n\t);\n\n\tconst onChangeHandler: InputNumberProps<number>['onChange'] = (event) => {\n\t\tif (event && event >= 0) {\n\t\t\tonChange(event);\n\t\t}\n\t};\n\n\tconst isDisabled =\n\t\t(isMetricsDataSource && !query.aggregateAttribute.key) || disabled;\n\n\treturn (\n\t\t<InputNumber\n\t\t\tplaceholder=\"Enter in seconds\"\n\t\t\tdisabled={isDisabled}\n\t\t\tstyle={selectStyle}\n\t\t\tvalue={query.stepInterval}\n\t\t\tonChange={onChangeHandler}\n\t\t\tmin={0}\n\t\t/>\n\t);\n}\n\ninterface AggregateEveryFilterProps {\n\tonChange: (values: number) => void;\n\tquery: IBuilderQuery;\n\tdisabled: boolean;\n}\n\nexport default AggregateEveryFilter;\n","// ** Components\nimport { AutoComplete, Spin } from 'antd';\n// ** Api\nimport { getAggregateAttribute } from 'api/queryBuilder/getAggregateAttribute';\nimport {\n\tbaseAutoCompleteIdKeysOrder,\n\tQueryBuilderKeys,\n\tselectValueDivider,\n} from 'constants/queryBuilder';\nimport { DEBOUNCE_DELAY } from 'constants/queryBuilderFilterConfig';\nimport useDebounce from 'hooks/useDebounce';\nimport { createIdFromObjectFields } from 'lib/createIdFromObjectFields';\nimport { chooseAutocompleteFromCustomValue } from 'lib/newQueryBuilder/chooseAutocompleteFromCustomValue';\nimport { getAutocompleteValueAndType } from 'lib/newQueryBuilder/getAutocompleteValueAndType';\nimport { transformStringWithPrefix } from 'lib/query/transformStringWithPrefix';\nimport { memo, useCallback, useMemo, useState } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { SuccessResponse } from 'types/api';\nimport {\n\tBaseAutocompleteData,\n\tIQueryAutocompleteResponse,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { ExtendedSelectOption } from 'types/common/select';\nimport { popupContainer } from 'utils/selectPopupContainer';\nimport { transformToUpperCase } from 'utils/transformToUpperCase';\n\nimport { removePrefix } from '../GroupByFilter/utils';\nimport { selectStyle } from '../QueryBuilderSearch/config';\nimport OptionRenderer from '../QueryBuilderSearch/OptionRenderer';\n// ** Types\nimport { AgregatorFilterProps } from './AggregatorFilter.intefaces';\n\nexport const AggregatorFilter = memo(function AggregatorFilter({\n\tquery,\n\tdisabled,\n\tonChange,\n\tdefaultValue,\n\tonSelect,\n}: AgregatorFilterProps): JSX.Element {\n\tconst queryClient = useQueryClient();\n\tconst [optionsData, setOptionsData] = useState<ExtendedSelectOption[]>([]);\n\tconst [searchText, setSearchText] = useState<string>('');\n\n\tconst debouncedSearchText = useMemo(() => {\n\t\t// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars\n\t\tconst [_, value] = getAutocompleteValueAndType(searchText);\n\n\t\treturn value;\n\t}, [searchText]);\n\n\tconst debouncedValue = useDebounce(debouncedSearchText, DEBOUNCE_DELAY);\n\tconst { isFetching } = useQuery(\n\t\t[\n\t\t\tQueryBuilderKeys.GET_AGGREGATE_ATTRIBUTE,\n\t\t\tdebouncedValue,\n\t\t\tquery.aggregateOperator,\n\t\t\tquery.dataSource,\n\t\t],\n\t\tasync () =>\n\t\t\tgetAggregateAttribute({\n\t\t\t\tsearchText: debouncedValue,\n\t\t\t\taggregateOperator: query.aggregateOperator,\n\t\t\t\tdataSource: query.dataSource,\n\t\t\t}),\n\t\t{\n\t\t\tenabled:\n\t\t\t\tquery.dataSource === DataSource.METRICS ||\n\t\t\t\t(!!query.aggregateOperator && !!query.dataSource),\n\t\t\tonSuccess: (data) => {\n\t\t\t\tconst options: ExtendedSelectOption[] =\n\t\t\t\t\tdata?.payload?.attributeKeys?.map(({ id: _, ...item }) => ({\n\t\t\t\t\t\tlabel: (\n\t\t\t\t\t\t\t<OptionRenderer\n\t\t\t\t\t\t\t\tlabel={transformStringWithPrefix({\n\t\t\t\t\t\t\t\t\tstr: item.key,\n\t\t\t\t\t\t\t\t\tprefix: item.type || '',\n\t\t\t\t\t\t\t\t\tcondition: !item.isColumn,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tvalue={removePrefix(\n\t\t\t\t\t\t\t\t\ttransformStringWithPrefix({\n\t\t\t\t\t\t\t\t\t\tstr: item.key,\n\t\t\t\t\t\t\t\t\t\tprefix: item.type || '',\n\t\t\t\t\t\t\t\t\t\tcondition: !item.isColumn,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t!item.isColumn && item.type ? item.type : '',\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tdataType={item.dataType}\n\t\t\t\t\t\t\t\ttype={item.type || ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvalue: `${item.key}${selectValueDivider}${createIdFromObjectFields(\n\t\t\t\t\t\t\titem,\n\t\t\t\t\t\t\tbaseAutoCompleteIdKeysOrder,\n\t\t\t\t\t\t)}`,\n\t\t\t\t\t\tkey: createIdFromObjectFields(item, baseAutoCompleteIdKeysOrder),\n\t\t\t\t\t})) || [];\n\n\t\t\t\tsetOptionsData(options);\n\t\t\t},\n\t\t},\n\t);\n\n\tconst handleSearchText = useCallback((text: string): void => {\n\t\tsetSearchText(text);\n\t}, []);\n\n\tconst placeholder: string =\n\t\tquery.dataSource === DataSource.METRICS\n\t\t\t? `${transformToUpperCase(query.dataSource)} name`\n\t\t\t: 'Aggregate attribute';\n\n\tconst getAttributesData = useCallback(\n\t\t(): BaseAutocompleteData[] =>\n\t\t\tqueryClient.getQueryData<SuccessResponse<IQueryAutocompleteResponse>>([\n\t\t\t\tQueryBuilderKeys.GET_AGGREGATE_ATTRIBUTE,\n\t\t\t\tdebouncedValue,\n\t\t\t\tquery.aggregateOperator,\n\t\t\t\tquery.dataSource,\n\t\t\t])?.payload?.attributeKeys || [],\n\t\t[debouncedValue, query.aggregateOperator, query.dataSource, queryClient],\n\t);\n\n\tconst getResponseAttributes = useCallback(async () => {\n\t\tconst response = await queryClient.fetchQuery(\n\t\t\t[\n\t\t\t\tQueryBuilderKeys.GET_AGGREGATE_ATTRIBUTE,\n\t\t\t\tsearchText,\n\t\t\t\tquery.aggregateOperator,\n\t\t\t\tquery.dataSource,\n\t\t\t],\n\t\t\tasync () =>\n\t\t\t\tgetAggregateAttribute({\n\t\t\t\t\tsearchText,\n\t\t\t\t\taggregateOperator: query.aggregateOperator,\n\t\t\t\t\tdataSource: query.dataSource,\n\t\t\t\t}),\n\t\t);\n\n\t\treturn response.payload?.attributeKeys || [];\n\t}, [query.aggregateOperator, query.dataSource, queryClient, searchText]);\n\n\tconst handleChangeCustomValue = useCallback(\n\t\tasync (value: string, attributes: BaseAutocompleteData[]) => {\n\t\t\tconst customAttribute: BaseAutocompleteData = chooseAutocompleteFromCustomValue(\n\t\t\t\tattributes,\n\t\t\t\tvalue,\n\t\t\t);\n\n\t\t\tonChange(customAttribute);\n\t\t},\n\t\t[onChange],\n\t);\n\n\tconst handleBlur = useCallback(async () => {\n\t\tif (searchText) {\n\t\t\tconst aggregateAttributes = await getResponseAttributes();\n\t\t\thandleChangeCustomValue(searchText, aggregateAttributes);\n\t\t}\n\t}, [getResponseAttributes, handleChangeCustomValue, searchText]);\n\n\tconst handleChange = useCallback(\n\t\t(\n\t\t\tvalue: string,\n\t\t\toption: ExtendedSelectOption | ExtendedSelectOption[],\n\t\t): void => {\n\t\t\tconst currentOption = option as ExtendedSelectOption;\n\n\t\t\tconst aggregateAttributes = getAttributesData();\n\n\t\t\tif (currentOption.key) {\n\t\t\t\tconst attribute = aggregateAttributes.find(\n\t\t\t\t\t(item) => item.id === currentOption.key,\n\t\t\t\t);\n\n\t\t\t\tif (attribute) {\n\t\t\t\t\tonChange(attribute);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thandleChangeCustomValue(value, aggregateAttributes);\n\t\t\t}\n\n\t\t\tsetSearchText('');\n\t\t},\n\t\t[getAttributesData, handleChangeCustomValue, onChange],\n\t);\n\n\tconst handleSelect = useCallback(\n\t\t(_: string, option: ExtendedSelectOption | ExtendedSelectOption[]): void => {\n\t\t\tconst currentOption = option as ExtendedSelectOption;\n\n\t\t\tconst aggregateAttributes = getAttributesData();\n\n\t\t\tif (currentOption.key) {\n\t\t\t\tconst attribute = aggregateAttributes.find(\n\t\t\t\t\t(item) => item.id === currentOption.key,\n\t\t\t\t);\n\n\t\t\t\tif (attribute && onSelect) {\n\t\t\t\t\tonSelect(attribute);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetSearchText('');\n\t\t},\n\t\t[getAttributesData, onSelect],\n\t);\n\n\tconst value = removePrefix(\n\t\ttransformStringWithPrefix({\n\t\t\tstr: query.aggregateAttribute.key,\n\t\t\tprefix: query.aggregateAttribute.type || '',\n\t\t\tcondition: !query.aggregateAttribute.isColumn,\n\t\t}),\n\t\t!query.aggregateAttribute.isColumn && query.aggregateAttribute.type\n\t\t\t? query.aggregateAttribute.type\n\t\t\t: '',\n\t);\n\n\treturn (\n\t\t<AutoComplete\n\t\t\tgetPopupContainer={popupContainer}\n\t\t\tplaceholder={placeholder}\n\t\t\tstyle={selectStyle}\n\t\t\tfilterOption={false}\n\t\t\tonSearch={handleSearchText}\n\t\t\tnotFoundContent={isFetching ? <Spin size=\"small\" /> : null}\n\t\t\toptions={optionsData}\n\t\t\tvalue={defaultValue || value}\n\t\t\tonBlur={handleBlur}\n\t\t\tonChange={handleChange}\n\t\t\tdisabled={disabled}\n\t\t\tonSelect={handleSelect}\n\t\t/>\n\t);\n});\n","import { Select, SelectProps, Space } from 'antd';\nimport { getCategorySelectOptionByName } from 'container/NewWidget/RightContainer/alertFomatCategories';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { popupContainer } from 'utils/selectPopupContainer';\n\nimport { categoryToSupport } from './config';\nimport { DefaultLabel, selectStyles } from './styles';\nimport { IBuilderUnitsFilterProps } from './types';\nimport { filterOption } from './utils';\n\nfunction BuilderUnitsFilter({\n\tonChange,\n\tyAxisUnit,\n}: IBuilderUnitsFilterProps): JSX.Element {\n\tconst { currentQuery, handleOnUnitsChange } = useQueryBuilder();\n\n\tconst selectedValue = yAxisUnit || currentQuery?.unit;\n\n\tconst allOptions = categoryToSupport.map((category) => ({\n\t\tlabel: category,\n\t\toptions: getCategorySelectOptionByName(category),\n\t}));\n\n\tconst onChangeHandler: SelectProps['onChange'] = (value): void => {\n\t\tif (onChange) {\n\t\t\tonChange(value);\n\t\t}\n\n\t\thandleOnUnitsChange(value);\n\t};\n\n\treturn (\n\t\t<Space>\n\t\t\t<DefaultLabel>Y-axis unit</DefaultLabel>\n\t\t\t<Select\n\t\t\t\tgetPopupContainer={popupContainer}\n\t\t\t\tstyle={selectStyles}\n\t\t\t\tonChange={onChangeHandler}\n\t\t\t\tvalue={selectedValue}\n\t\t\t\toptions={allOptions}\n\t\t\t\tallowClear\n\t\t\t\tshowSearch\n\t\t\t\toptionFilterProp=\"label\"\n\t\t\t\tplaceholder=\"Select unit\"\n\t\t\t\tfilterOption={filterOption}\n\t\t\t/>\n\t\t</Space>\n\t);\n}\n\nexport { BuilderUnitsFilter };\n","import styled from 'styled-components';\n\nexport const selectStyles: React.CSSProperties = {\n\tminWidth: '10rem',\n};\n\nexport const DefaultLabel = styled.label`\n\tdisplay: inline-block;\n\tfont-size: 1rem;\n\tline-height: 2rem;\n`;\n","import { DefaultOptionType } from 'antd/es/select';\n\nexport const filterOption = (\n\tinputValue: string,\n\toption: DefaultOptionType['options'][number],\n): boolean => option.label.toLowerCase().includes(inputValue.toLowerCase());\n","import { Select } from 'antd';\nimport { HAVING_OPERATORS, initialHavingValues } from 'constants/queryBuilder';\nimport { HavingFilterTag } from 'container/QueryBuilder/components';\nimport { useTagValidation } from 'hooks/queryBuilder/useTagValidation';\nimport {\n\ttransformFromStringToHaving,\n\ttransformHavingToStringValue,\n} from 'lib/query/transformQueryBuilderData';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Having, HavingForm } from 'types/api/queryBuilder/queryBuilderData';\nimport { SelectOption } from 'types/common/select';\nimport { popupContainer } from 'utils/selectPopupContainer';\n\nimport { getHavingObject, isValidHavingValue } from '../../utils';\nimport { HavingFilterProps, HavingTagRenderProps } from './types';\n\nfunction HavingFilter({ formula, onChange }: HavingFilterProps): JSX.Element {\n\tconst { having } = formula;\n\tconst [searchText, setSearchText] = useState<string>('');\n\tconst [localValues, setLocalValues] = useState<string[]>([]);\n\tconst [currentFormValue, setCurrentFormValue] = useState<HavingForm>(\n\t\tinitialHavingValues,\n\t);\n\tconst [options, setOptions] = useState<SelectOption<string, string>[]>([]);\n\n\tconst { isMulti } = useTagValidation(\n\t\tcurrentFormValue.op,\n\t\tcurrentFormValue.value,\n\t);\n\n\tconst columnName = formula.expression.replace(/ /g, '').toUpperCase();\n\n\tconst aggregatorOptions: SelectOption<string, string>[] = useMemo(\n\t\t() => [{ label: columnName, value: columnName }],\n\t\t[columnName],\n\t);\n\n\tconst handleUpdateTag = useCallback(\n\t\t(value: string) => {\n\t\t\tconst filteredValues = localValues.filter(\n\t\t\t\t(currentValue) => currentValue !== value,\n\t\t\t);\n\t\t\tconst having: Having[] = filteredValues.map(transformFromStringToHaving);\n\n\t\t\tonChange(having);\n\t\t\tsetSearchText(value);\n\t\t},\n\t\t[localValues, onChange],\n\t);\n\n\tconst generateOptions = useCallback(\n\t\t(currentString: string) => {\n\t\t\tconst [aggregator = '', op = '', ...restValue] = currentString.split(' ');\n\t\t\tlet newOptions: SelectOption<string, string>[] = [];\n\n\t\t\tconst isAggregatorExist = columnName\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes(currentString.toLowerCase());\n\n\t\t\tconst isAggregatorChosen = aggregator === columnName;\n\n\t\t\tif (isAggregatorExist || aggregator === '') {\n\t\t\t\tnewOptions = aggregatorOptions;\n\t\t\t}\n\n\t\t\tif ((isAggregatorChosen && op === '') || op) {\n\t\t\t\tconst filteredOperators = HAVING_OPERATORS.filter((num) =>\n\t\t\t\t\tnum.toLowerCase().includes(op.toLowerCase()),\n\t\t\t\t);\n\n\t\t\t\tnewOptions = filteredOperators.map((opt) => ({\n\t\t\t\t\tlabel: `${columnName} ${opt} ${restValue && restValue.join(' ')}`,\n\t\t\t\t\tvalue: `${columnName} ${opt} ${restValue && restValue.join(' ')}`,\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tsetOptions(newOptions);\n\t\t},\n\t\t[aggregatorOptions, columnName],\n\t);\n\n\tconst parseSearchText = useCallback(\n\t\t(text: string) => {\n\t\t\tconst { columnName, op, value } = getHavingObject(text);\n\t\t\tsetCurrentFormValue({ columnName, op, value });\n\n\t\t\tgenerateOptions(text);\n\t\t},\n\t\t[generateOptions],\n\t);\n\n\tconst tagRender = ({\n\t\tlabel,\n\t\tvalue,\n\t\tclosable,\n\t\tdisabled,\n\t\tonClose,\n\t}: HavingTagRenderProps): JSX.Element => {\n\t\tconst handleClose = (): void => {\n\t\t\tonClose();\n\t\t\tsetSearchText('');\n\t\t};\n\t\treturn (\n\t\t\t<HavingFilterTag\n\t\t\t\tlabel={label}\n\t\t\t\tvalue={value}\n\t\t\t\tclosable={closable}\n\t\t\t\tdisabled={disabled}\n\t\t\t\tonClose={handleClose}\n\t\t\t\tonUpdate={handleUpdateTag}\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst handleSearch = (search: string): void => {\n\t\tconst trimmedSearch = search.replace(/\\s\\s+/g, ' ').trimStart();\n\n\t\tconst currentSearch = isMulti\n\t\t\t? trimmedSearch\n\t\t\t: trimmedSearch.split(' ').slice(0, 3).join(' ');\n\n\t\tconst isValidSearch = isValidHavingValue(currentSearch);\n\n\t\tif (isValidSearch) {\n\t\t\tsetSearchText(currentSearch);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tsetLocalValues(transformHavingToStringValue(having || []));\n\t}, [having]);\n\n\tuseEffect(() => {\n\t\tparseSearchText(searchText);\n\t}, [searchText, parseSearchText]);\n\n\tconst resetChanges = (): void => {\n\t\tsetSearchText('');\n\t\tsetCurrentFormValue(initialHavingValues);\n\t\tsetOptions(aggregatorOptions);\n\t};\n\n\tconst handleDeselect = (value: string): void => {\n\t\tconst result = localValues.filter((item) => item !== value);\n\t\tconst having: Having[] = result.map(transformFromStringToHaving);\n\t\tonChange(having);\n\t\tresetChanges();\n\t};\n\n\tconst handleSelect = (currentValue: string): void => {\n\t\tconst { columnName, op, value } = getHavingObject(currentValue);\n\n\t\tconst isCompletedValue = value.every((item) => !!item);\n\n\t\tconst isClearSearch = isCompletedValue && columnName && op;\n\n\t\tsetSearchText(isClearSearch ? '' : currentValue);\n\t};\n\n\tconst handleChange = (values: string[]): void => {\n\t\tconst having: Having[] = values.map(transformFromStringToHaving);\n\n\t\tconst isSelectable =\n\t\t\tcurrentFormValue.value.length > 0 &&\n\t\t\tcurrentFormValue.value.every((value) => !!value);\n\n\t\tif (isSelectable) {\n\t\t\tonChange(having);\n\t\t\tresetChanges();\n\t\t}\n\t};\n\n\treturn (\n\t\t<Select\n\t\t\tgetPopupContainer={popupContainer}\n\t\t\tautoClearSearchValue={false}\n\t\t\tmode=\"multiple\"\n\t\t\tonSearch={handleSearch}\n\t\t\tsearchValue={searchText}\n\t\t\tdata-testid=\"havingSelectFormula\"\n\t\t\tplaceholder=\"Count(operation) > 5\"\n\t\t\tstyle={{ width: '100%' }}\n\t\t\ttagRender={tagRender}\n\t\t\tonDeselect={handleDeselect}\n\t\t\tonSelect={handleSelect}\n\t\t\tonChange={handleChange}\n\t\t\tvalue={localValues}\n\t\t>\n\t\t\t{options.map((opt) => (\n\t\t\t\t<Select.Option key={opt.value} value={opt.value} title=\"havingOption\">\n\t\t\t\t\t{opt.label}\n\t\t\t\t</Select.Option>\n\t\t\t))}\n\t\t</Select>\n\t);\n}\n\nexport default HavingFilter;\n","import { InputNumber } from 'antd';\n\nimport { selectStyle } from '../../QueryBuilderSearch/config';\nimport { handleKeyDownLimitFilter } from '../../utils';\nimport { LimitFilterProps } from './types';\n\nfunction LimitFilter({ onChange, formula }: LimitFilterProps): JSX.Element {\n\treturn (\n\t\t<InputNumber\n\t\t\tmin={1}\n\t\t\ttype=\"number\"\n\t\t\tvalue={formula.limit}\n\t\t\tstyle={selectStyle}\n\t\t\tonChange={onChange}\n\t\t\tonKeyDown={handleKeyDownLimitFilter}\n\t\t/>\n\t);\n}\n\nexport default LimitFilter;\n","import { Select, Spin } from 'antd';\nimport { useGetAggregateKeys } from 'hooks/queryBuilder/useGetAggregateKeys';\nimport { useMemo } from 'react';\nimport { MetricAggregateOperator } from 'types/common/queryBuilder';\nimport { popupContainer } from 'utils/selectPopupContainer';\n\nimport { selectStyle } from '../../QueryBuilderSearch/config';\nimport { OrderByProps } from './types';\nimport { useOrderByFormulaFilter } from './useOrderByFormulaFilter';\n\nfunction OrderByFilter({\n\tformula,\n\tonChange,\n\tquery,\n}: OrderByProps): JSX.Element {\n\tconst {\n\t\tdebouncedSearchText,\n\t\tcreateOptions,\n\t\taggregationOptions,\n\t\thandleChange,\n\t\thandleSearchKeys,\n\t\tselectedValue,\n\t\tgenerateOptions,\n\t} = useOrderByFormulaFilter({\n\t\tquery,\n\t\tonChange,\n\t\tformula,\n\t});\n\n\tconst { data, isFetching } = useGetAggregateKeys(\n\t\t{\n\t\t\taggregateAttribute: query.aggregateAttribute.key,\n\t\t\tdataSource: query.dataSource,\n\t\t\taggregateOperator: query.aggregateOperator,\n\t\t\tsearchText: debouncedSearchText,\n\t\t},\n\t\t{\n\t\t\tenabled: !!query.aggregateAttribute.key,\n\t\t\tkeepPreviousData: true,\n\t\t},\n\t);\n\n\tconst optionsData = useMemo(() => {\n\t\tconst keyOptions = createOptions(data?.payload?.attributeKeys || []);\n\t\tconst groupByOptions = createOptions(query.groupBy);\n\t\tconst options =\n\t\t\tquery.aggregateOperator === MetricAggregateOperator.NOOP\n\t\t\t\t? keyOptions\n\t\t\t\t: [...groupByOptions, ...aggregationOptions];\n\n\t\treturn generateOptions(options);\n\t}, [\n\t\taggregationOptions,\n\t\tcreateOptions,\n\t\tdata?.payload?.attributeKeys,\n\t\tgenerateOptions,\n\t\tquery.aggregateOperator,\n\t\tquery.groupBy,\n\t]);\n\n\tconst isDisabledSelect =\n\t\t!query.aggregateAttribute.key ||\n\t\tquery.aggregateOperator === MetricAggregateOperator.NOOP;\n\n\treturn (\n\t\t<Select\n\t\t\tgetPopupContainer={popupContainer}\n\t\t\tmode=\"tags\"\n\t\t\tstyle={selectStyle}\n\t\t\tonSearch={handleSearchKeys}\n\t\t\tshowSearch\n\t\t\tdisabled={isDisabledSelect}\n\t\t\tshowArrow={false}\n\t\t\tvalue={selectedValue}\n\t\t\tlabelInValue\n\t\t\tfilterOption={false}\n\t\t\toptions={optionsData}\n\t\t\tnotFoundContent={isFetching ? <Spin size=\"small\" /> : null}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n}\n\nexport default OrderByFilter;\n","import { DEBOUNCE_DELAY } from 'constants/queryBuilderFilterConfig';\nimport useDebounce from 'hooks/useDebounce';\nimport { IOption } from 'hooks/useResourceAttribute/types';\nimport isEqual from 'lodash-es/isEqual';\nimport uniqWith from 'lodash-es/uniqWith';\nimport { parse } from 'papaparse';\nimport { useMemo, useState } from 'react';\nimport { BaseAutocompleteData } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { OrderByPayload } from 'types/api/queryBuilder/queryBuilderData';\n\nimport { ORDERBY_FILTERS } from '../../OrderByFilter/config';\nimport { SIGNOZ_VALUE } from '../../OrderByFilter/constants';\nimport { UseOrderByFilterResult } from '../../OrderByFilter/useOrderByFilter';\nimport {\n\tgetLabelFromValue,\n\tmapLabelValuePairs,\n\torderByValueDelimiter,\n} from '../../OrderByFilter/utils';\nimport { getRemoveOrderFromValue } from '../../QueryBuilderSearch/utils';\nimport { getUniqueOrderByValues, getValidOrderByResult } from '../../utils';\nimport { IOrderByFormulaFilterProps } from './types';\nimport { transformToOrderByStringValuesByFormula } from './utils';\n\nexport const useOrderByFormulaFilter = ({\n\tonChange,\n\tformula,\n}: IOrderByFormulaFilterProps): UseOrderByFilterResult => {\n\tconst [searchText, setSearchText] = useState<string>('');\n\n\tconst debouncedSearchText = useDebounce(searchText, DEBOUNCE_DELAY);\n\n\tconst handleSearchKeys = (searchText: string): void =>\n\t\tsetSearchText(searchText);\n\n\tconst handleChange = (values: IOption[]): void => {\n\t\tconst validResult = getValidOrderByResult(values);\n\t\tconst result = getUniqueOrderByValues(validResult);\n\n\t\tconst orderByValues: OrderByPayload[] = result.map((item) => {\n\t\t\tconst match = parse(item.value, { delimiter: orderByValueDelimiter });\n\n\t\t\tif (!match) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnName: item.value,\n\t\t\t\t\torder: ORDERBY_FILTERS.ASC,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst [columnName, order] = match.data.flat() as string[];\n\n\t\t\tconst columnNameValue =\n\t\t\t\tcolumnName === SIGNOZ_VALUE ? SIGNOZ_VALUE : columnName;\n\n\t\t\tconst orderValue = order ?? ORDERBY_FILTERS.ASC;\n\n\t\t\treturn {\n\t\t\t\tcolumnName: columnNameValue,\n\t\t\t\torder: orderValue,\n\t\t\t};\n\t\t});\n\n\t\tsetSearchText('');\n\t\tonChange(orderByValues);\n\t};\n\n\tconst aggregationOptions = [\n\t\t{\n\t\t\tlabel: `${formula.expression} ${ORDERBY_FILTERS.ASC}`,\n\t\t\tvalue: `${SIGNOZ_VALUE}${orderByValueDelimiter}${ORDERBY_FILTERS.ASC}`,\n\t\t},\n\t\t{\n\t\t\tlabel: `${formula.expression} ${ORDERBY_FILTERS.DESC}`,\n\t\t\tvalue: `${SIGNOZ_VALUE}${orderByValueDelimiter}${ORDERBY_FILTERS.DESC}`,\n\t\t},\n\t];\n\n\tconst selectedValue = transformToOrderByStringValuesByFormula(formula);\n\n\tconst createOptions = (data: BaseAutocompleteData[]): IOption[] =>\n\t\tmapLabelValuePairs(data).flat();\n\n\tconst customValue: IOption[] = useMemo(() => {\n\t\tif (!searchText) return [];\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: `${searchText} ${ORDERBY_FILTERS.ASC}`,\n\t\t\t\tvalue: `${searchText}${orderByValueDelimiter}${ORDERBY_FILTERS.ASC}`,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: `${searchText} ${ORDERBY_FILTERS.DESC}`,\n\t\t\t\tvalue: `${searchText}${orderByValueDelimiter}${ORDERBY_FILTERS.DESC}`,\n\t\t\t},\n\t\t];\n\t}, [searchText]);\n\n\tconst generateOptions = (options: IOption[]): IOption[] => {\n\t\tconst currentCustomValue = options.find(\n\t\t\t(keyOption) =>\n\t\t\t\tgetRemoveOrderFromValue(keyOption.value) === debouncedSearchText,\n\t\t)\n\t\t\t? []\n\t\t\t: customValue;\n\n\t\tconst result = [...currentCustomValue, ...options];\n\n\t\tconst uniqResult = uniqWith(result, isEqual);\n\n\t\treturn uniqResult.filter(\n\t\t\t(option) =>\n\t\t\t\t!getLabelFromValue(selectedValue).includes(\n\t\t\t\t\tgetRemoveOrderFromValue(option.value),\n\t\t\t\t),\n\t\t);\n\t};\n\n\treturn {\n\t\tsearchText,\n\t\tdebouncedSearchText,\n\t\tselectedValue,\n\t\taggregationOptions,\n\t\tcreateOptions,\n\t\thandleChange,\n\t\thandleSearchKeys,\n\t\tgenerateOptions,\n\t};\n};\n","import { IOption } from 'hooks/useResourceAttribute/types';\nimport { IBuilderFormula } from 'types/api/queryBuilder/queryBuilderData';\n\nimport { SIGNOZ_VALUE } from '../../OrderByFilter/constants';\nimport { orderByValueDelimiter } from '../../OrderByFilter/utils';\n\nexport const transformToOrderByStringValuesByFormula = (\n\tformula: IBuilderFormula,\n): IOption[] => {\n\tconst prepareSelectedValue: IOption[] =\n\t\tformula?.orderBy?.map((item) => {\n\t\t\tif (item.columnName === SIGNOZ_VALUE) {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: `${formula.expression} ${item.order}`,\n\t\t\t\t\tvalue: `${item.columnName}${orderByValueDelimiter}${item.order}`,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tlabel: `${item.columnName} ${item.order}`,\n\t\t\t\tvalue: `${item.columnName}${orderByValueDelimiter}${item.order}`,\n\t\t\t};\n\t\t}) || [];\n\n\treturn prepareSelectedValue;\n};\n","import { Select, Spin } from 'antd';\nimport { getAggregateKeys } from 'api/queryBuilder/getAttributeKeys';\n// ** Constants\nimport { idDivider, QueryBuilderKeys } from 'constants/queryBuilder';\nimport { DEBOUNCE_DELAY } from 'constants/queryBuilderFilterConfig';\nimport { useGetAggregateKeys } from 'hooks/queryBuilder/useGetAggregateKeys';\nimport useDebounce from 'hooks/useDebounce';\nimport { chooseAutocompleteFromCustomValue } from 'lib/newQueryBuilder/chooseAutocompleteFromCustomValue';\n// ** Components\n// ** Helpers\nimport { transformStringWithPrefix } from 'lib/query/transformStringWithPrefix';\nimport { isEqual, uniqWith } from 'lodash-es';\nimport { memo, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useQueryClient } from 'react-query';\nimport { BaseAutocompleteData } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { SelectOption } from 'types/common/select';\nimport { popupContainer } from 'utils/selectPopupContainer';\n\nimport { selectStyle } from '../QueryBuilderSearch/config';\nimport OptionRenderer from '../QueryBuilderSearch/OptionRenderer';\nimport { GroupByFilterProps } from './GroupByFilter.interfaces';\nimport { removePrefix } from './utils';\n\nexport const GroupByFilter = memo(function GroupByFilter({\n\tquery,\n\tonChange,\n\tdisabled,\n}: GroupByFilterProps): JSX.Element {\n\tconst queryClient = useQueryClient();\n\tconst [searchText, setSearchText] = useState<string>('');\n\tconst [optionsData, setOptionsData] = useState<\n\t\tSelectOption<string, ReactNode>[]\n\t>([]);\n\tconst [localValues, setLocalValues] = useState<SelectOption<string, string>[]>(\n\t\t[],\n\t);\n\tconst [isFocused, setIsFocused] = useState<boolean>(false);\n\n\tconst debouncedValue = useDebounce(searchText, DEBOUNCE_DELAY);\n\n\tconst { isFetching } = useGetAggregateKeys(\n\t\t{\n\t\t\taggregateAttribute: query.aggregateAttribute.key,\n\t\t\tdataSource: query.dataSource,\n\t\t\taggregateOperator: query.aggregateOperator,\n\t\t\tsearchText: debouncedValue,\n\t\t},\n\t\t{\n\t\t\tqueryKey: [debouncedValue, isFocused],\n\t\t\tenabled: !disabled && isFocused,\n\t\t\tonSuccess: (data) => {\n\t\t\t\tconst keys = query.groupBy.reduce<string[]>((acc, item) => {\n\t\t\t\t\tacc.push(item.key);\n\t\t\t\t\treturn acc;\n\t\t\t\t}, []);\n\n\t\t\t\tconst filteredOptions: BaseAutocompleteData[] =\n\t\t\t\t\tdata?.payload?.attributeKeys?.filter(\n\t\t\t\t\t\t(attrKey) => !keys.includes(attrKey.key),\n\t\t\t\t\t) || [];\n\n\t\t\t\tconst options: SelectOption<string, ReactNode>[] =\n\t\t\t\t\tfilteredOptions.map((item) => ({\n\t\t\t\t\t\tlabel: (\n\t\t\t\t\t\t\t<OptionRenderer\n\t\t\t\t\t\t\t\tkey={item.key}\n\t\t\t\t\t\t\t\tlabel={transformStringWithPrefix({\n\t\t\t\t\t\t\t\t\tstr: item.key,\n\t\t\t\t\t\t\t\t\tprefix: item.type || '',\n\t\t\t\t\t\t\t\t\tcondition: !item.isColumn,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tvalue={removePrefix(\n\t\t\t\t\t\t\t\t\ttransformStringWithPrefix({\n\t\t\t\t\t\t\t\t\t\tstr: item.key,\n\t\t\t\t\t\t\t\t\t\tprefix: item.type || '',\n\t\t\t\t\t\t\t\t\t\tcondition: !item.isColumn,\n\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\t!item.isColumn && item.type ? item.type : '',\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tdataType={item.dataType || ''}\n\t\t\t\t\t\t\t\ttype={item.type || ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tvalue: `${item.id}`,\n\t\t\t\t\t})) || [];\n\n\t\t\t\tsetOptionsData(options);\n\t\t\t},\n\t\t},\n\t);\n\n\tconst getAttributeKeys = useCallback(async () => {\n\t\tconst response = await queryClient.fetchQuery(\n\t\t\t[QueryBuilderKeys.GET_AGGREGATE_KEYS, searchText, isFocused],\n\t\t\tasync () =>\n\t\t\t\tgetAggregateKeys({\n\t\t\t\t\taggregateAttribute: query.aggregateAttribute.key,\n\t\t\t\t\tdataSource: query.dataSource,\n\t\t\t\t\taggregateOperator: query.aggregateOperator,\n\t\t\t\t\tsearchText,\n\t\t\t\t}),\n\t\t);\n\n\t\treturn response.payload?.attributeKeys || [];\n\t}, [\n\t\tisFocused,\n\t\tquery.aggregateAttribute.key,\n\t\tquery.aggregateOperator,\n\t\tquery.dataSource,\n\t\tqueryClient,\n\t\tsearchText,\n\t]);\n\n\tconst handleSearchKeys = (searchText: string): void => {\n\t\tsetSearchText(searchText);\n\t};\n\n\tconst handleBlur = (): void => {\n\t\tsetIsFocused(false);\n\t\tsetSearchText('');\n\t};\n\n\tconst handleFocus = (): void => {\n\t\tsetIsFocused(true);\n\t};\n\n\tconst handleChange = useCallback(\n\t\tasync (values: SelectOption<string, string>[]): Promise<void> => {\n\t\t\tconst keys = await getAttributeKeys();\n\n\t\t\tconst groupByValues: BaseAutocompleteData[] = values.map((item) => {\n\t\t\t\tconst id = item.value;\n\t\t\t\tconst currentValue = item.value.split(idDivider)[0];\n\n\t\t\t\tif (id && id.includes(idDivider)) {\n\t\t\t\t\tconst attribute = keys.find((item) => item.id === id);\n\t\t\t\t\tconst existAttribute = query.groupBy.find((item) => item.id === id);\n\n\t\t\t\t\tif (attribute) {\n\t\t\t\t\t\treturn attribute;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (existAttribute) {\n\t\t\t\t\t\treturn existAttribute;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn chooseAutocompleteFromCustomValue(keys, currentValue);\n\t\t\t});\n\n\t\t\tconst result = uniqWith(groupByValues, isEqual);\n\n\t\t\tonChange(result);\n\t\t},\n\t\t[getAttributeKeys, onChange, query.groupBy],\n\t);\n\n\tconst clearSearch = useCallback(() => {\n\t\tsetSearchText('');\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst currentValues: SelectOption<string, string>[] = query.groupBy.map(\n\t\t\t(item) => ({\n\t\t\t\tlabel: `${removePrefix(\n\t\t\t\t\ttransformStringWithPrefix({\n\t\t\t\t\t\tstr: item.key,\n\t\t\t\t\t\tprefix: item.type || '',\n\t\t\t\t\t\tcondition: !item.isColumn,\n\t\t\t\t\t}),\n\t\t\t\t\t!item.isColumn && item.type ? item.type : '',\n\t\t\t\t)}`,\n\t\t\t\tvalue: `${item.id}`,\n\t\t\t}),\n\t\t);\n\n\t\tsetLocalValues(currentValues);\n\t}, [query]);\n\n\treturn (\n\t\t<Select\n\t\t\tgetPopupContainer={popupContainer}\n\t\t\tmode=\"tags\"\n\t\t\tstyle={selectStyle}\n\t\t\tonSearch={handleSearchKeys}\n\t\t\tshowSearch\n\t\t\tdisabled={disabled}\n\t\t\tfilterOption={false}\n\t\t\tonBlur={handleBlur}\n\t\t\tonFocus={handleFocus}\n\t\t\tonDeselect={clearSearch}\n\t\t\toptions={optionsData}\n\t\t\tvalue={localValues}\n\t\t\tlabelInValue\n\t\t\tnotFoundContent={isFetching ? <Spin size=\"small\" /> : null}\n\t\t\tonChange={handleChange}\n\t\t\tdata-testid=\"group-by\"\n\t\t/>\n\t);\n});\n","import { MetricsType } from 'container/MetricsApplication/constant';\n\nexport function removePrefix(str: string, type: string): string {\n\tconst tagPrefix = `${MetricsType.Tag}_`;\n\tconst resourcePrefix = `${MetricsType.Resource}_`;\n\tconst scopePrefix = `${MetricsType.Scope}_`;\n\n\tif (str.startsWith(tagPrefix)) {\n\t\treturn str.slice(tagPrefix.length);\n\t}\n\tif (str.startsWith(resourcePrefix)) {\n\t\treturn str.slice(resourcePrefix.length);\n\t}\n\tif (str.startsWith(scopePrefix) && type === MetricsType.Scope) {\n\t\treturn str.slice(scopePrefix.length);\n\t}\n\n\treturn str;\n}\n","import { Color } from '@signozhq/design-tokens';\nimport { Select } from 'antd';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\n// ** Constants\nimport { HAVING_OPERATORS, initialHavingValues } from 'constants/queryBuilder';\nimport { HavingFilterTag } from 'container/QueryBuilder/components';\nimport { HavingTagRenderProps } from 'container/QueryBuilder/components/HavingFilterTag/HavingFilterTag.interfaces';\n// ** Hooks\nimport { useTagValidation } from 'hooks/queryBuilder/useTagValidation';\nimport {\n\ttransformFromStringToHaving,\n\ttransformHavingToStringValue,\n} from 'lib/query/transformQueryBuilderData';\n// ** Helpers\nimport { transformStringWithPrefix } from 'lib/query/transformStringWithPrefix';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Having, HavingForm } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { SelectOption } from 'types/common/select';\nimport { popupContainer } from 'utils/selectPopupContainer';\n\nimport { getHavingObject, isValidHavingValue } from '../utils';\n// ** Types\nimport { HavingFilterProps } from './HavingFilter.interfaces';\n\nexport function HavingFilter({\n\tentityVersion,\n\tquery,\n\tonChange,\n}: HavingFilterProps): JSX.Element {\n\tconst { having } = query;\n\tconst [searchText, setSearchText] = useState<string>('');\n\tconst [options, setOptions] = useState<SelectOption<string, string>[]>([]);\n\tconst [localValues, setLocalValues] = useState<string[]>([]);\n\tconst [currentFormValue, setCurrentFormValue] = useState<HavingForm>(\n\t\tinitialHavingValues,\n\t);\n\tconst [errorMessage, setErrorMessage] = useState<string | null>(null);\n\n\tconst { isMulti } = useTagValidation(\n\t\tcurrentFormValue.op,\n\t\tcurrentFormValue.value,\n\t);\n\n\tconst aggregatorAttribute = useMemo(\n\t\t() =>\n\t\t\ttransformStringWithPrefix({\n\t\t\t\tstr: query.aggregateAttribute.key,\n\t\t\t\tprefix: query.aggregateAttribute.type || '',\n\t\t\t\tcondition: !query.aggregateAttribute.isColumn,\n\t\t\t}),\n\t\t[query],\n\t);\n\n\tconst columnName = useMemo(() => {\n\t\tif (\n\t\t\tquery &&\n\t\t\tquery.dataSource === DataSource.METRICS &&\n\t\t\tquery.spaceAggregation &&\n\t\t\tentityVersion === ENTITY_VERSION_V4\n\t\t) {\n\t\t\treturn `${query.spaceAggregation.toUpperCase()}(${aggregatorAttribute})`;\n\t\t}\n\n\t\treturn `${query.aggregateOperator.toUpperCase()}(${aggregatorAttribute})`;\n\t}, [query, aggregatorAttribute, entityVersion]);\n\n\tconst aggregatorOptions: SelectOption<string, string>[] = useMemo(\n\t\t() => [{ label: columnName, value: columnName }],\n\t\t[columnName],\n\t);\n\n\tconst generateOptions = useCallback(\n\t\t(search: string): void => {\n\t\t\tconst [aggregator = '', op = '', ...restValue] = search.split(' ');\n\t\t\tlet newOptions: SelectOption<string, string>[] = [];\n\n\t\t\tconst isAggregatorExist = columnName\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes(search.toLowerCase());\n\n\t\t\tconst isAggregatorChosen = aggregator === columnName;\n\n\t\t\tif (isAggregatorExist || aggregator === '') {\n\t\t\t\tnewOptions = aggregatorOptions;\n\t\t\t}\n\n\t\t\tif ((isAggregatorChosen && op === '') || op) {\n\t\t\t\tconst filteredOperators = HAVING_OPERATORS.filter((num) =>\n\t\t\t\t\tnum.toLowerCase().includes(op.toLowerCase()),\n\t\t\t\t);\n\n\t\t\t\tnewOptions = filteredOperators.map((opt) => ({\n\t\t\t\t\tlabel: `${columnName} ${opt} ${restValue && restValue.join(' ')}`,\n\t\t\t\t\tvalue: `${columnName} ${opt} ${restValue && restValue.join(' ')}`,\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tsetOptions(newOptions);\n\t\t},\n\t\t[columnName, aggregatorOptions],\n\t);\n\n\tconst handleSearch = useCallback(\n\t\t(search: string): void => {\n\t\t\tconst trimmedSearch = search.replace(/\\s\\s+/g, ' ').trimStart();\n\n\t\t\tconst currentSearch = isMulti\n\t\t\t\t? trimmedSearch\n\t\t\t\t: trimmedSearch.split(' ').slice(0, 3).join(' ');\n\n\t\t\tconst isValidSearch = isValidHavingValue(currentSearch);\n\n\t\t\tif (isValidSearch) {\n\t\t\t\tsetSearchText(currentSearch);\n\t\t\t}\n\t\t},\n\t\t[isMulti],\n\t);\n\n\tconst resetChanges = useCallback((): void => {\n\t\tsetSearchText('');\n\t\tsetCurrentFormValue(initialHavingValues);\n\t\tsetOptions(aggregatorOptions);\n\t}, [aggregatorOptions]);\n\n\tconst handleChange = useCallback(\n\t\t(values: string[]): void => {\n\t\t\tconst having: Having[] = values.map(transformFromStringToHaving);\n\n\t\t\tconst isSelectable =\n\t\t\t\tcurrentFormValue.value.length > 0 &&\n\t\t\t\tcurrentFormValue.value.every((value) => !!value);\n\n\t\t\tif (isSelectable) {\n\t\t\t\tonChange(having);\n\t\t\t\tresetChanges();\n\t\t\t}\n\t\t},\n\t\t[currentFormValue, resetChanges, onChange],\n\t);\n\n\tconst handleUpdateTag = useCallback(\n\t\t(value: string) => {\n\t\t\tconst filteredValues = localValues.filter(\n\t\t\t\t(currentValue) => currentValue !== value,\n\t\t\t);\n\t\t\tconst having: Having[] = filteredValues.map(transformFromStringToHaving);\n\n\t\t\tonChange(having);\n\t\t\tsetSearchText(value);\n\t\t},\n\t\t[localValues, onChange],\n\t);\n\n\tconst tagRender = useCallback(\n\t\t({ label, value, closable, disabled, onClose }: HavingTagRenderProps) => {\n\t\t\tconst handleClose = (): void => {\n\t\t\t\tonClose();\n\t\t\t\tsetSearchText('');\n\t\t\t};\n\t\t\treturn (\n\t\t\t\t<HavingFilterTag\n\t\t\t\t\tlabel={label}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tclosable={closable}\n\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tonUpdate={handleUpdateTag}\n\t\t\t\t/>\n\t\t\t);\n\t\t},\n\t\t[handleUpdateTag],\n\t);\n\n\tconst handleSelect = (currentValue: string): void => {\n\t\tconst { columnName, op, value } = getHavingObject(currentValue);\n\n\t\tconst isCompletedValue = value.every((item) => !!item);\n\n\t\tconst isClearSearch = isCompletedValue && columnName && op;\n\n\t\tsetSearchText(isClearSearch ? '' : currentValue);\n\t};\n\n\tconst parseSearchText = useCallback(\n\t\t(text: string) => {\n\t\t\tconst { columnName, op, value } = getHavingObject(text);\n\t\t\tsetCurrentFormValue({ columnName, op, value });\n\n\t\t\tgenerateOptions(text);\n\t\t},\n\t\t[generateOptions],\n\t);\n\n\tconst handleDeselect = (value: string): void => {\n\t\tconst result = localValues.filter((item) => item !== value);\n\t\tconst having: Having[] = result.map(transformFromStringToHaving);\n\t\tonChange(having);\n\t\tresetChanges();\n\t};\n\n\tconst handleFocus = useCallback(() => {\n\t\tsetErrorMessage(null);\n\t}, []);\n\n\tconst handleBlur = useCallback((): void => {\n\t\tif (searchText) {\n\t\t\tconst { columnName, op, value } = getHavingObject(searchText);\n\t\t\tconst isCompleteHavingClause =\n\t\t\t\tcolumnName && op && value.every((v) => v !== '');\n\n\t\t\tif (isCompleteHavingClause && isValidHavingValue(searchText)) {\n\t\t\t\tsetLocalValues((prev) => {\n\t\t\t\t\tconst updatedValues = [...prev, searchText];\n\t\t\t\t\tonChange(updatedValues.map(transformFromStringToHaving));\n\t\t\t\t\treturn updatedValues;\n\t\t\t\t});\n\t\t\t\tsetSearchText('');\n\t\t\t} else {\n\t\t\t\tsetErrorMessage('Invalid HAVING clause');\n\t\t\t}\n\t\t}\n\t}, [searchText, onChange]);\n\n\tuseEffect(() => {\n\t\tparseSearchText(searchText);\n\t}, [searchText, parseSearchText]);\n\n\tuseEffect(() => {\n\t\tsetLocalValues(transformHavingToStringValue(having));\n\t}, [having]);\n\n\tconst isMetricsDataSource = query.dataSource === DataSource.METRICS;\n\n\treturn (\n\t\t<>\n\t\t\t<Select\n\t\t\t\tgetPopupContainer={popupContainer}\n\t\t\t\tautoClearSearchValue={false}\n\t\t\t\tmode=\"multiple\"\n\t\t\t\tonSearch={handleSearch}\n\t\t\t\tsearchValue={searchText}\n\t\t\t\ttagRender={tagRender}\n\t\t\t\tvalue={localValues}\n\t\t\t\tdata-testid=\"havingSelect\"\n\t\t\t\tdisabled={isMetricsDataSource && !query.aggregateAttribute.key}\n\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\tnotFoundContent={currentFormValue.value.length === 0 ? undefined : null}\n\t\t\t\tplaceholder=\"GroupBy(operation) > 5\"\n\t\t\t\tonDeselect={handleDeselect}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tonSelect={handleSelect}\n\t\t\t\tonFocus={handleFocus}\n\t\t\t\tonBlur={handleBlur}\n\t\t\t\tstatus={errorMessage ? 'error' : undefined}\n\t\t\t>\n\t\t\t\t{options.map((opt) => (\n\t\t\t\t\t<Select.Option key={opt.value} value={opt.value} title=\"havingOption\">\n\t\t\t\t\t\t{opt.label}\n\t\t\t\t\t</Select.Option>\n\t\t\t\t))}\n\t\t\t</Select>\n\t\t\t{errorMessage && (\n\t\t\t\t<div style={{ color: Color.BG_CHERRY_500 }}>{errorMessage}</div>\n\t\t\t)}\n\t\t</>\n\t);\n}\n","import { InputNumber } from 'antd';\nimport { IBuilderQuery } from 'types/api/queryBuilder/queryBuilderData';\nimport { DataSource } from 'types/common/queryBuilder';\n\nimport { selectStyle } from '../QueryBuilderSearch/config';\nimport { handleKeyDownLimitFilter } from '../utils';\n\nfunction LimitFilter({ onChange, query }: LimitFilterProps): JSX.Element {\n\tconst isMetricsDataSource = query.dataSource === DataSource.METRICS;\n\n\tconst isDisabled = isMetricsDataSource && !query.aggregateAttribute.key;\n\n\treturn (\n\t\t<InputNumber\n\t\t\tmin={1}\n\t\t\ttype=\"number\"\n\t\t\tvalue={query.limit}\n\t\t\tstyle={selectStyle}\n\t\t\tdisabled={isDisabled}\n\t\t\tonChange={onChange}\n\t\t\tonKeyDown={handleKeyDownLimitFilter}\n\t\t/>\n\t);\n}\n\ninterface LimitFilterProps {\n\tonChange: (values: number | null) => void;\n\tquery: IBuilderQuery;\n}\n\nexport default LimitFilter;\n","import { Select } from 'antd';\nimport { memo } from 'react';\n\n// ** Types\nimport { selectStyle } from '../QueryBuilderSearch/config';\nimport { OperatorsSelectProps } from './OperatorsSelect.interfaces';\n\nexport const OperatorsSelect = memo(function OperatorsSelect({\n\toperators,\n\tvalue,\n\tonChange,\n\t...props\n}: OperatorsSelectProps): JSX.Element {\n\treturn (\n\t\t<Select\n\t\t\toptions={operators}\n\t\t\tvalue={value}\n\t\t\tonChange={onChange}\n\t\t\tstyle={selectStyle}\n\t\t\tshowSearch\n\t\t\t// eslint-disable-next-line react/jsx-props-no-spreading\n\t\t\t{...props}\n\t\t/>\n\t);\n});\n","import { Select, Spin } from 'antd';\nimport { useGetAggregateKeys } from 'hooks/queryBuilder/useGetAggregateKeys';\nimport { useMemo } from 'react';\nimport { DataSource, MetricAggregateOperator } from 'types/common/queryBuilder';\nimport { popupContainer } from 'utils/selectPopupContainer';\n\nimport { selectStyle } from '../QueryBuilderSearch/config';\nimport { OrderByFilterProps } from './OrderByFilter.interfaces';\nimport { useOrderByFilter } from './useOrderByFilter';\n\nexport function OrderByFilter({\n\tquery,\n\tonChange,\n\tisListViewPanel = false,\n\tentityVersion,\n}: OrderByFilterProps): JSX.Element {\n\tconst {\n\t\tdebouncedSearchText,\n\t\tselectedValue,\n\t\taggregationOptions,\n\t\tgenerateOptions,\n\t\tcreateOptions,\n\t\thandleChange,\n\t\thandleSearchKeys,\n\t} = useOrderByFilter({ query, onChange, entityVersion });\n\n\tconst { data, isFetching } = useGetAggregateKeys(\n\t\t{\n\t\t\taggregateAttribute: query.aggregateAttribute.key,\n\t\t\tdataSource: query.dataSource,\n\t\t\taggregateOperator: query.aggregateOperator,\n\t\t\tsearchText: debouncedSearchText,\n\t\t},\n\t\t{\n\t\t\tenabled: !!query.aggregateAttribute.key || isListViewPanel,\n\t\t\tkeepPreviousData: true,\n\t\t},\n\t);\n\n\tconst optionsData = useMemo(() => {\n\t\tconst keyOptions = createOptions(data?.payload?.attributeKeys || []);\n\t\tconst groupByOptions = createOptions(query.groupBy);\n\t\tconst options =\n\t\t\tquery.aggregateOperator === MetricAggregateOperator.NOOP\n\t\t\t\t? keyOptions\n\t\t\t\t: [...groupByOptions, ...aggregationOptions];\n\n\t\treturn generateOptions(options);\n\t}, [\n\t\taggregationOptions,\n\t\tcreateOptions,\n\t\tdata?.payload?.attributeKeys,\n\t\tgenerateOptions,\n\t\tquery.aggregateOperator,\n\t\tquery.groupBy,\n\t]);\n\n\tconst isDisabledSelect =\n\t\t!query.aggregateAttribute.key ||\n\t\tquery.aggregateOperator === MetricAggregateOperator.NOOP;\n\n\tconst isMetricsDataSource = query.dataSource === DataSource.METRICS;\n\n\treturn (\n\t\t<Select\n\t\t\tgetPopupContainer={popupContainer}\n\t\t\tmode=\"tags\"\n\t\t\tstyle={selectStyle}\n\t\t\tonSearch={handleSearchKeys}\n\t\t\tshowSearch\n\t\t\tdisabled={isMetricsDataSource && isDisabledSelect}\n\t\t\tshowArrow={false}\n\t\t\tvalue={selectedValue}\n\t\t\tlabelInValue\n\t\t\tfilterOption={false}\n\t\t\toptions={optionsData}\n\t\t\tnotFoundContent={isFetching ? <Spin size=\"small\" /> : null}\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n}\n","import { DEBOUNCE_DELAY } from 'constants/queryBuilderFilterConfig';\nimport useDebounce from 'hooks/useDebounce';\nimport { IOption } from 'hooks/useResourceAttribute/types';\nimport { isEqual, uniqWith } from 'lodash-es';\nimport { parse } from 'papaparse';\nimport { useCallback, useMemo, useState } from 'react';\nimport { BaseAutocompleteData } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { OrderByPayload } from 'types/api/queryBuilder/queryBuilderData';\n\nimport { getRemoveOrderFromValue } from '../QueryBuilderSearch/utils';\nimport { getUniqueOrderByValues, getValidOrderByResult } from '../utils';\nimport { ORDERBY_FILTERS } from './config';\nimport { SIGNOZ_VALUE } from './constants';\nimport { OrderByFilterProps } from './OrderByFilter.interfaces';\nimport {\n\tgetLabelFromValue,\n\tmapLabelValuePairs,\n\torderByValueDelimiter,\n\ttransformToOrderByStringValues,\n} from './utils';\n\nexport type UseOrderByFilterResult = {\n\tsearchText: string;\n\tdebouncedSearchText: string;\n\tselectedValue: IOption[];\n\taggregationOptions: IOption[];\n\tgenerateOptions: (options: IOption[]) => IOption[];\n\tcreateOptions: (data: BaseAutocompleteData[]) => IOption[];\n\thandleChange: (values: IOption[]) => void;\n\thandleSearchKeys: (search: string) => void;\n};\n\nexport const useOrderByFilter = ({\n\tquery,\n\tonChange,\n\tentityVersion,\n}: OrderByFilterProps): UseOrderByFilterResult => {\n\tconst [searchText, setSearchText] = useState<string>('');\n\n\tconst debouncedSearchText = useDebounce(searchText, DEBOUNCE_DELAY);\n\n\tconst handleSearchKeys = useCallback(\n\t\t(searchText: string): void => setSearchText(searchText),\n\t\t[],\n\t);\n\n\tconst customValue: IOption[] = useMemo(() => {\n\t\tif (!searchText) return [];\n\n\t\treturn [\n\t\t\t{\n\t\t\t\tlabel: `${searchText} ${ORDERBY_FILTERS.ASC}`,\n\t\t\t\tvalue: `${searchText}${orderByValueDelimiter}${ORDERBY_FILTERS.ASC}`,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: `${searchText} ${ORDERBY_FILTERS.DESC}`,\n\t\t\t\tvalue: `${searchText}${orderByValueDelimiter}${ORDERBY_FILTERS.DESC}`,\n\t\t\t},\n\t\t];\n\t}, [searchText]);\n\n\tconst selectedValue = useMemo(\n\t\t() => transformToOrderByStringValues(query, entityVersion),\n\t\t[query, entityVersion],\n\t);\n\n\tconst generateOptions = useCallback(\n\t\t(options: IOption[]): IOption[] => {\n\t\t\tconst currentCustomValue = options.find(\n\t\t\t\t(keyOption) =>\n\t\t\t\t\tgetRemoveOrderFromValue(keyOption.value) === debouncedSearchText,\n\t\t\t)\n\t\t\t\t? []\n\t\t\t\t: customValue;\n\n\t\t\tconst result = [...currentCustomValue, ...options];\n\n\t\t\tconst uniqResult = uniqWith(result, isEqual);\n\n\t\t\treturn uniqResult.filter(\n\t\t\t\t(option) =>\n\t\t\t\t\t!getLabelFromValue(selectedValue).includes(\n\t\t\t\t\t\tgetRemoveOrderFromValue(option.value),\n\t\t\t\t\t),\n\t\t\t);\n\t\t},\n\t\t[customValue, debouncedSearchText, selectedValue],\n\t);\n\n\tconst handleChange = (values: IOption[]): void => {\n\t\tconst validResult = getValidOrderByResult(values);\n\t\tconst result = getUniqueOrderByValues(validResult);\n\n\t\tconst orderByValues: OrderByPayload[] = result.map((item) => {\n\t\t\tconst match = parse(item.value, { delimiter: orderByValueDelimiter });\n\n\t\t\tif (!match) {\n\t\t\t\treturn {\n\t\t\t\t\tcolumnName: item.value,\n\t\t\t\t\torder: 'asc',\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst [columnName, order] = match.data.flat() as string[];\n\n\t\t\tconst columnNameValue =\n\t\t\t\tcolumnName === SIGNOZ_VALUE ? SIGNOZ_VALUE : columnName;\n\n\t\t\tconst orderValue = order ?? 'asc';\n\n\t\t\treturn {\n\t\t\t\tcolumnName: columnNameValue,\n\t\t\t\torder: orderValue,\n\t\t\t};\n\t\t});\n\n\t\tsetSearchText('');\n\t\tonChange(orderByValues);\n\t};\n\n\tconst createOptions = useCallback(\n\t\t(data: BaseAutocompleteData[]): IOption[] => mapLabelValuePairs(data).flat(),\n\t\t[],\n\t);\n\n\tconst aggregationOptions = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tlabel: `${\n\t\t\t\t\tentityVersion === 'v4' ? query.spaceAggregation : query.aggregateOperator\n\t\t\t\t}(${query.aggregateAttribute.key}) ${ORDERBY_FILTERS.ASC}`,\n\t\t\t\tvalue: `${SIGNOZ_VALUE}${orderByValueDelimiter}${ORDERBY_FILTERS.ASC}`,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: `${\n\t\t\t\t\tentityVersion === 'v4' ? query.spaceAggregation : query.aggregateOperator\n\t\t\t\t}(${query.aggregateAttribute.key}) ${ORDERBY_FILTERS.DESC}`,\n\t\t\t\tvalue: `${SIGNOZ_VALUE}${orderByValueDelimiter}${ORDERBY_FILTERS.DESC}`,\n\t\t\t},\n\t\t],\n\t\t[query, entityVersion],\n\t);\n\n\treturn {\n\t\tsearchText,\n\t\tdebouncedSearchText,\n\t\tselectedValue,\n\t\taggregationOptions,\n\t\tcreateOptions,\n\t\thandleChange,\n\t\thandleSearchKeys,\n\t\tgenerateOptions,\n\t};\n};\n","import { Select } from 'antd';\nimport { REDUCE_TO_VALUES } from 'constants/queryBuilder';\nimport { memo } from 'react';\n// ** Types\nimport { ReduceOperators } from 'types/common/queryBuilder';\nimport { SelectOption } from 'types/common/select';\n\nimport { ReduceToFilterProps } from './ReduceToFilter.interfaces';\n\nexport const ReduceToFilter = memo(function ReduceToFilter({\n\tquery,\n\tonChange,\n}: ReduceToFilterProps): JSX.Element {\n\tconst currentValue =\n\t\tREDUCE_TO_VALUES.find((option) => option.value === query.reduceTo) ||\n\t\tREDUCE_TO_VALUES[0];\n\n\tconst handleChange = (\n\t\tnewValue: SelectOption<ReduceOperators, string>,\n\t): void => {\n\t\tonChange(newValue.value);\n\t};\n\n\treturn (\n\t\t<Select\n\t\t\tplaceholder=\"Reduce to\"\n\t\t\tstyle={{ width: '100%' }}\n\t\t\toptions={REDUCE_TO_VALUES}\n\t\t\tvalue={currentValue}\n\t\t\tdata-testid=\"reduce-to\"\n\t\t\tlabelInValue\n\t\t\tonChange={handleChange}\n\t\t/>\n\t);\n});\n","import { ENTITY_VERSION_V4 } from 'constants/app';\nimport { LEGEND } from 'constants/global';\nimport {\n\tATTRIBUTE_TYPES,\n\tinitialAutocompleteData,\n\tinitialQueryBuilderFormValuesMap,\n\tmapOfFormulaToFilters,\n\tmapOfQueryFilters,\n\tPANEL_TYPES,\n} from 'constants/queryBuilder';\nimport {\n\tmetricsGaugeSpaceAggregateOperatorOptions,\n\tmetricsHistogramSpaceAggregateOperatorOptions,\n\tmetricsSumSpaceAggregateOperatorOptions,\n\tmetricsUnknownSpaceAggregateOperatorOptions,\n\tmetricsUnknownTimeAggregateOperatorOptions,\n} from 'constants/queryBuilderOperators';\nimport {\n\tlistViewInitialLogQuery,\n\tlistViewInitialTraceQuery,\n} from 'container/NewDashboard/ComponentsSlider/constants';\nimport { useQueryBuilder } from 'hooks/queryBuilder/useQueryBuilder';\nimport { getMetricsOperatorsByAttributeType } from 'lib/newQueryBuilder/getMetricsOperatorsByAttributeType';\nimport { getOperatorsBySourceAndPanelType } from 'lib/newQueryBuilder/getOperatorsBySourceAndPanelType';\nimport { findDataTypeOfOperator } from 'lib/query/findDataTypeOfOperator';\nimport { isEmpty } from 'lodash-es';\nimport { useCallback, useEffect, useState } from 'react';\nimport { BaseAutocompleteData } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport {\n\tIBuilderFormula,\n\tIBuilderQuery,\n\tQueryFunctionProps,\n} from 'types/api/queryBuilder/queryBuilderData';\nimport {\n\tHandleChangeFormulaData,\n\tHandleChangeQueryData,\n\tUseQueryOperations,\n} from 'types/common/operations.types';\nimport { DataSource, MetricAggregateOperator } from 'types/common/queryBuilder';\nimport { SelectOption } from 'types/common/select';\nimport { getFormatedLegend } from 'utils/getFormatedLegend';\n\nexport const useQueryOperations: UseQueryOperations = ({\n\tquery,\n\tindex,\n\tfilterConfigs,\n\tformula,\n\tisListViewPanel = false,\n\tentityVersion,\n}) => {\n\tconst {\n\t\thandleSetQueryData,\n\t\thandleSetFormulaData,\n\t\tremoveQueryBuilderEntityByIndex,\n\t\tpanelType,\n\t\tinitialDataSource,\n\t\tcurrentQuery,\n\t\tsetLastUsedQuery,\n\t\tredirectWithQueryBuilderData,\n\t} = useQueryBuilder();\n\n\tconst [operators, setOperators] = useState<SelectOption<string, string>[]>([]);\n\tconst [spaceAggregationOptions, setSpaceAggregationOptions] = useState<\n\t\tSelectOption<string, string>[]\n\t>([]);\n\n\tconst { dataSource, aggregateOperator } = query;\n\n\tconst getNewListOfAdditionalFilters = useCallback(\n\t\t(dataSource: DataSource, isQuery: boolean): string[] => {\n\t\t\tconst additionalFiltersKeys: (keyof Pick<\n\t\t\t\tIBuilderQuery,\n\t\t\t\t'orderBy' | 'limit' | 'having' | 'stepInterval'\n\t\t\t>)[] = ['having', 'limit', 'orderBy', 'stepInterval'];\n\n\t\t\tconst mapsOfFilters = isQuery ? mapOfQueryFilters : mapOfFormulaToFilters;\n\n\t\t\tconst result: string[] = mapsOfFilters[dataSource]?.reduce<string[]>(\n\t\t\t\t(acc, item) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tfilterConfigs &&\n\t\t\t\t\t\tfilterConfigs[item.field as typeof additionalFiltersKeys[number]]\n\t\t\t\t\t\t\t?.isHidden\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}\n\n\t\t\t\t\tacc.push(item.text);\n\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t[],\n\t\t\t);\n\n\t\t\treturn result;\n\t\t},\n\n\t\t[filterConfigs],\n\t);\n\n\tconst [listOfAdditionalFilters, setListOfAdditionalFilters] = useState<\n\t\tstring[]\n\t>(getNewListOfAdditionalFilters(dataSource, true));\n\n\tconst [\n\t\tlistOfAdditionalFormulaFilters,\n\t\tsetListOfAdditionalFormulaFilters,\n\t] = useState<string[]>(getNewListOfAdditionalFilters(dataSource, false));\n\n\tconst handleChangeOperator = useCallback(\n\t\t(value: string): void => {\n\t\t\tconst aggregateDataType: BaseAutocompleteData['dataType'] =\n\t\t\t\tquery.aggregateAttribute.dataType;\n\n\t\t\tconst typeOfValue = findDataTypeOfOperator(value);\n\n\t\t\tconst shouldResetAggregateAttribute =\n\t\t\t\t(aggregateDataType === 'string' || aggregateDataType === 'bool') &&\n\t\t\t\ttypeOfValue === 'number';\n\n\t\t\tconst newQuery: IBuilderQuery = {\n\t\t\t\t...query,\n\t\t\t\taggregateOperator: value,\n\t\t\t\ttimeAggregation: value,\n\t\t\t\thaving: [],\n\t\t\t\tlimit: null,\n\t\t\t\t...(shouldResetAggregateAttribute\n\t\t\t\t\t? { aggregateAttribute: initialAutocompleteData }\n\t\t\t\t\t: {}),\n\t\t\t};\n\n\t\t\thandleSetQueryData(index, newQuery);\n\t\t},\n\t\t[index, query, handleSetQueryData],\n\t);\n\n\tconst handleSpaceAggregationChange = useCallback(\n\t\t(value: string): void => {\n\t\t\tconst newQuery: IBuilderQuery = {\n\t\t\t\t...query,\n\t\t\t\tspaceAggregation: value,\n\t\t\t};\n\n\t\t\thandleSetQueryData(index, newQuery);\n\t\t},\n\t\t[index, query, handleSetQueryData],\n\t);\n\n\tconst handleMetricAggregateAtributeTypes = useCallback(\n\t\t(aggregateAttribute: BaseAutocompleteData): any => {\n\t\t\t// operators for unknown metric\n\t\t\tconst isUnknownMetric =\n\t\t\t\tisEmpty(aggregateAttribute.type) && !isEmpty(aggregateAttribute.key);\n\n\t\t\tconst newOperators = isUnknownMetric\n\t\t\t\t? metricsUnknownTimeAggregateOperatorOptions\n\t\t\t\t: getMetricsOperatorsByAttributeType({\n\t\t\t\t\t\tdataSource: DataSource.METRICS,\n\t\t\t\t\t\tpanelType: panelType || PANEL_TYPES.TIME_SERIES,\n\t\t\t\t\t\taggregateAttributeType:\n\t\t\t\t\t\t\t(aggregateAttribute.type as ATTRIBUTE_TYPES) || ATTRIBUTE_TYPES.GAUGE,\n\t\t\t\t  });\n\n\t\t\tswitch (aggregateAttribute.type) {\n\t\t\t\tcase ATTRIBUTE_TYPES.SUM:\n\t\t\t\t\tsetSpaceAggregationOptions(metricsSumSpaceAggregateOperatorOptions);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ATTRIBUTE_TYPES.GAUGE:\n\t\t\t\t\tsetSpaceAggregationOptions(metricsGaugeSpaceAggregateOperatorOptions);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ATTRIBUTE_TYPES.HISTOGRAM:\n\t\t\t\t\tsetSpaceAggregationOptions(metricsHistogramSpaceAggregateOperatorOptions);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ATTRIBUTE_TYPES.EXPONENTIAL_HISTOGRAM:\n\t\t\t\t\tsetSpaceAggregationOptions(metricsHistogramSpaceAggregateOperatorOptions);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tsetSpaceAggregationOptions(metricsUnknownSpaceAggregateOperatorOptions);\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsetOperators(newOperators);\n\t\t},\n\t\t[panelType],\n\t);\n\n\tconst handleChangeAggregatorAttribute = useCallback(\n\t\t(value: BaseAutocompleteData): void => {\n\t\t\tconst newQuery: IBuilderQuery = {\n\t\t\t\t...query,\n\t\t\t\taggregateAttribute: value,\n\t\t\t\thaving: [],\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tnewQuery.dataSource === DataSource.METRICS &&\n\t\t\t\tentityVersion === ENTITY_VERSION_V4\n\t\t\t) {\n\t\t\t\thandleMetricAggregateAtributeTypes(newQuery.aggregateAttribute);\n\n\t\t\t\tif (newQuery.aggregateAttribute.type === ATTRIBUTE_TYPES.SUM) {\n\t\t\t\t\tnewQuery.aggregateOperator = MetricAggregateOperator.RATE;\n\t\t\t\t\tnewQuery.timeAggregation = MetricAggregateOperator.RATE;\n\t\t\t\t} else if (newQuery.aggregateAttribute.type === ATTRIBUTE_TYPES.GAUGE) {\n\t\t\t\t\tnewQuery.aggregateOperator = MetricAggregateOperator.AVG;\n\t\t\t\t\tnewQuery.timeAggregation = MetricAggregateOperator.AVG;\n\t\t\t\t} else {\n\t\t\t\t\tnewQuery.timeAggregation = '';\n\t\t\t\t}\n\n\t\t\t\tnewQuery.spaceAggregation = '';\n\n\t\t\t\t// Handled query with unknown metric to avoid 400 and 500 errors\n\t\t\t\t// With metric value typed and not available then - time - 'avg', space - 'avg'\n\t\t\t\t// If not typed - time - 'rate', space - 'sum', op - 'count'\n\t\t\t\tif (isEmpty(newQuery.aggregateAttribute.type)) {\n\t\t\t\t\tif (!isEmpty(newQuery.aggregateAttribute.key)) {\n\t\t\t\t\t\tnewQuery.aggregateOperator = MetricAggregateOperator.AVG;\n\t\t\t\t\t\tnewQuery.timeAggregation = MetricAggregateOperator.AVG;\n\t\t\t\t\t\tnewQuery.spaceAggregation = MetricAggregateOperator.AVG;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewQuery.aggregateOperator = MetricAggregateOperator.COUNT;\n\t\t\t\t\t\tnewQuery.timeAggregation = MetricAggregateOperator.RATE;\n\t\t\t\t\t\tnewQuery.spaceAggregation = MetricAggregateOperator.SUM;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thandleSetQueryData(index, newQuery);\n\t\t},\n\t\t[\n\t\t\tquery,\n\t\t\tentityVersion,\n\t\t\thandleSetQueryData,\n\t\t\tindex,\n\t\t\thandleMetricAggregateAtributeTypes,\n\t\t],\n\t);\n\n\tconst handleChangeDataSource = useCallback(\n\t\t(nextSource: DataSource): void => {\n\t\t\tif (isListViewPanel) {\n\t\t\t\tif (nextSource === DataSource.LOGS) {\n\t\t\t\t\tredirectWithQueryBuilderData(listViewInitialLogQuery);\n\t\t\t\t} else if (nextSource === DataSource.TRACES) {\n\t\t\t\t\tredirectWithQueryBuilderData(listViewInitialTraceQuery);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst newOperators = getOperatorsBySourceAndPanelType({\n\t\t\t\tdataSource: nextSource,\n\t\t\t\tpanelType: panelType || PANEL_TYPES.TIME_SERIES,\n\t\t\t});\n\n\t\t\tconst entries = Object.entries(\n\t\t\t\tinitialQueryBuilderFormValuesMap.metrics,\n\t\t\t).filter(([key]) => key !== 'queryName' && key !== 'expression');\n\n\t\t\tconst initCopyResult = Object.fromEntries(entries);\n\n\t\t\tconst newQuery: IBuilderQuery = {\n\t\t\t\t...query,\n\t\t\t\t...initCopyResult,\n\t\t\t\tdataSource: nextSource,\n\t\t\t\taggregateOperator: newOperators[0].value,\n\t\t\t};\n\n\t\t\tsetOperators(newOperators);\n\t\t\thandleSetQueryData(index, newQuery);\n\t\t},\n\t\t[\n\t\t\tisListViewPanel,\n\t\t\tpanelType,\n\t\t\tquery,\n\t\t\thandleSetQueryData,\n\t\t\tindex,\n\t\t\tredirectWithQueryBuilderData,\n\t\t],\n\t);\n\n\tconst handleDeleteQuery = useCallback(() => {\n\t\tif (currentQuery.builder.queryData.length > 1) {\n\t\t\tremoveQueryBuilderEntityByIndex('queryData', index);\n\t\t}\n\t\tsetLastUsedQuery(0);\n\t}, [\n\t\tcurrentQuery.builder.queryData.length,\n\t\tsetLastUsedQuery,\n\t\tremoveQueryBuilderEntityByIndex,\n\t\tindex,\n\t]);\n\n\tconst handleChangeQueryData: HandleChangeQueryData = useCallback(\n\t\t(key, value) => {\n\t\t\tconst newQuery: IBuilderQuery = {\n\t\t\t\t...query,\n\t\t\t\t[key]:\n\t\t\t\t\tkey === LEGEND && typeof value === 'string'\n\t\t\t\t\t\t? getFormatedLegend(value)\n\t\t\t\t\t\t: value,\n\t\t\t};\n\n\t\t\thandleSetQueryData(index, newQuery);\n\t\t},\n\t\t[query, index, handleSetQueryData],\n\t);\n\n\tconst handleChangeFormulaData: HandleChangeFormulaData = useCallback(\n\t\t(key, value) => {\n\t\t\tconst newFormula: IBuilderFormula = {\n\t\t\t\t...(formula || ({} as IBuilderFormula)),\n\t\t\t\t[key]: value,\n\t\t\t};\n\n\t\t\thandleSetFormulaData(index, newFormula);\n\t\t},\n\t\t[formula, handleSetFormulaData, index],\n\t);\n\n\tconst handleQueryFunctionsUpdates = useCallback(\n\t\t(functions: QueryFunctionProps[]): void => {\n\t\t\tconst newQuery: IBuilderQuery = {\n\t\t\t\t...query,\n\t\t\t};\n\n\t\t\tif (\n\t\t\t\tnewQuery.dataSource === DataSource.METRICS ||\n\t\t\t\tnewQuery.dataSource === DataSource.LOGS\n\t\t\t) {\n\t\t\t\tnewQuery.functions = functions;\n\t\t\t}\n\n\t\t\thandleSetQueryData(index, newQuery);\n\t\t},\n\t\t[query, handleSetQueryData, index],\n\t);\n\n\tconst isMetricsDataSource = query.dataSource === DataSource.METRICS;\n\tconst isLogsDataSource = query.dataSource === DataSource.LOGS;\n\n\tconst isTracePanelType = panelType === PANEL_TYPES.TRACE;\n\n\tuseEffect(() => {\n\t\tif (initialDataSource && dataSource !== initialDataSource) return;\n\n\t\tif (\n\t\t\tdataSource === DataSource.METRICS &&\n\t\t\tquery &&\n\t\t\tquery.aggregateAttribute &&\n\t\t\tentityVersion === ENTITY_VERSION_V4\n\t\t) {\n\t\t\thandleMetricAggregateAtributeTypes(query.aggregateAttribute);\n\t\t} else {\n\t\t\tconst initialOperators = getOperatorsBySourceAndPanelType({\n\t\t\t\tdataSource,\n\t\t\t\tpanelType: panelType || PANEL_TYPES.TIME_SERIES,\n\t\t\t});\n\n\t\t\tif (JSON.stringify(operators) === JSON.stringify(initialOperators)) return;\n\n\t\t\tsetOperators(initialOperators);\n\t\t}\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dataSource, initialDataSource, panelType, operators, entityVersion]);\n\n\tuseEffect(() => {\n\t\tconst additionalFilters = getNewListOfAdditionalFilters(dataSource, true);\n\n\t\tsetListOfAdditionalFilters(additionalFilters);\n\t}, [dataSource, aggregateOperator, getNewListOfAdditionalFilters]);\n\n\tuseEffect(() => {\n\t\tconst additionalFilters = getNewListOfAdditionalFilters(dataSource, false);\n\n\t\tsetListOfAdditionalFormulaFilters(additionalFilters);\n\t}, [dataSource, aggregateOperator, getNewListOfAdditionalFilters]);\n\n\treturn {\n\t\tisTracePanelType,\n\t\tisMetricsDataSource,\n\t\tisLogsDataSource,\n\t\toperators,\n\t\tspaceAggregationOptions,\n\t\tlistOfAdditionalFilters,\n\t\thandleChangeOperator,\n\t\thandleSpaceAggregationChange,\n\t\thandleChangeAggregatorAttribute,\n\t\thandleChangeDataSource,\n\t\thandleDeleteQuery,\n\t\thandleChangeQueryData,\n\t\tlistOfAdditionalFormulaFilters,\n\t\thandleChangeFormulaData,\n\t\thandleQueryFunctionsUpdates,\n\t};\n};\n","import useUrlQuery from 'hooks/useUrlQuery';\nimport { useEffect } from 'react';\nimport { Query } from 'types/api/queryBuilder/queryBuilderData';\n\nimport { useGetCompositeQueryParam } from './useGetCompositeQueryParam';\nimport { useQueryBuilder } from './useQueryBuilder';\n\nexport type UseShareBuilderUrlParams = { defaultValue: Query };\n\nexport const useShareBuilderUrl = (defaultQuery: Query): void => {\n\tconst { resetQuery, redirectWithQueryBuilderData } = useQueryBuilder();\n\tconst urlQuery = useUrlQuery();\n\n\tconst compositeQuery = useGetCompositeQueryParam();\n\n\tuseEffect(() => {\n\t\tif (!compositeQuery) {\n\t\t\tresetQuery(defaultQuery);\n\t\t\tredirectWithQueryBuilderData(defaultQuery);\n\t\t}\n\t}, [\n\t\tdefaultQuery,\n\t\turlQuery,\n\t\tredirectWithQueryBuilderData,\n\t\tcompositeQuery,\n\t\tresetQuery,\n\t]);\n};\n","import { autocompleteType } from 'constants/queryBuilder';\nimport { SPLIT_FIRST_UNDERSCORE } from 'constants/regExp';\n\nexport const getAutocompleteValueAndType = (str: string): [string, string] => {\n\tconst [firstValue, secondValue] = str.split(SPLIT_FIRST_UNDERSCORE);\n\n\tif (\n\t\tfirstValue === autocompleteType.tag ||\n\t\tfirstValue === autocompleteType.resource\n\t) {\n\t\treturn [firstValue, secondValue];\n\t}\n\n\treturn [str, str];\n};\n","import {\n\tATTRIBUTE_TYPES,\n\tmetricsOperatorsByType,\n\tPANEL_TYPES,\n} from 'constants/queryBuilder';\nimport {\n\tmetricsEmptyTimeAggregateOperatorOptions,\n\tmetricsUnknownTimeAggregateOperatorOptions,\n} from 'constants/queryBuilderOperators';\nimport { isEmpty } from 'lodash-es';\nimport { DataSource } from 'types/common/queryBuilder';\nimport { SelectOption } from 'types/common/select';\n\ntype GetQueryOperatorsParams = {\n\tdataSource: DataSource;\n\tpanelType: PANEL_TYPES;\n\taggregateAttributeType: ATTRIBUTE_TYPES;\n};\n\nexport const getMetricsOperatorsByAttributeType = ({\n\tdataSource,\n\taggregateAttributeType,\n}: GetQueryOperatorsParams): SelectOption<string, string>[] => {\n\tif (dataSource === DataSource.METRICS && aggregateAttributeType) {\n\t\tif (aggregateAttributeType === ATTRIBUTE_TYPES.SUM) {\n\t\t\treturn metricsOperatorsByType.Sum;\n\t\t}\n\n\t\tif (aggregateAttributeType === ATTRIBUTE_TYPES.GAUGE) {\n\t\t\treturn metricsOperatorsByType.Gauge;\n\t\t}\n\t}\n\n\tif (dataSource === DataSource.METRICS && isEmpty(aggregateAttributeType)) {\n\t\treturn metricsUnknownTimeAggregateOperatorOptions;\n\t}\n\n\treturn metricsEmptyTimeAggregateOperatorOptions;\n};\n","import { operatorsByTypes } from 'constants/queryBuilder';\nimport { LocalDataType } from 'types/api/queryBuilder/queryAutocompleteResponse';\n\nexport const findDataTypeOfOperator = (value: string): LocalDataType | null => {\n\tconst entries = Object.entries(operatorsByTypes) as [\n\t\tLocalDataType,\n\t\tstring[],\n\t][];\n\n\tfor (let i = 0; i < entries.length; i += 1) {\n\t\tfor (let j = 0; j < entries[i][1].length; j += 1) {\n\t\t\tconst currentOperator = entries[i][1][j];\n\t\t\tconst type = entries[i][0];\n\n\t\t\tif (currentOperator === value) {\n\t\t\t\treturn type;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n};\n","import { OPERATORS } from 'constants/queryBuilder';\nimport { Having } from 'types/api/queryBuilder/queryBuilderData';\n\nexport const transformHavingToStringValue = (having: Having[]): string[] => {\n\tconst result: string[] = having.map((item) => {\n\t\tconst operator = Object.entries(OPERATORS).find(([key]) => key === item.op);\n\t\tconst value = Array.isArray(item.value) ? item.value.join(', ') : item.value;\n\n\t\treturn `${item.columnName} ${operator ? operator[1] : ''} ${value}`;\n\t});\n\n\treturn result;\n};\n\nexport const transformFromStringToHaving = (havingStr: string): Having => {\n\tconst [columnName, op, ...values] = havingStr.split(' ');\n\n\tconst operator = Object.entries(OPERATORS).find(([, value]) => value === op);\n\n\tconst currentValue = values.reduce<number[]>((acc, strNum) => {\n\t\tconst num = parseFloat(strNum);\n\t\tif (Number.isNaN(num)) {\n\t\t\treturn acc;\n\t\t}\n\n\t\treturn [...acc, num];\n\t}, []);\n\n\treturn {\n\t\tcolumnName,\n\t\top: operator ? operator[0] : '',\n\t\tvalue: currentValue.length > 1 ? currentValue : currentValue[0],\n\t};\n};\n","export const getFormatedLegend = (value: string): string =>\n\tvalue.replace(/\\{\\s*\\{\\s*(.*?)\\s*\\}\\s*\\}/g, '{{$1}}');\n","export const transformToUpperCase = (str: string): string =>\n\tstr.charAt(0).toUpperCase() + str.slice(1);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".query-builder-container{position:relative;border-top:1px solid var(--bg-slate-400);border-bottom:1px solid var(--bg-slate-400);background:var(--bg-ink-400)}.query-builder-container .query-builder-left-col{border-top:1px solid var(--bg-slate-400);border-right:1px solid var(--bg-slate-400);border-bottom:1px solid var(--bg-slate-400);border-left:1px solid var(--bg-slate-400);background:var(--bg-slate-500)}.query-builder-container .new-query-formula-buttons-container{position:absolute;display:flex;z-index:10;bottom:10px;left:16px;border-radius:2px;background:var(--bg-ink-200);box-shadow:0px 0px 8px 0px rgba(0,0,0,.1)}.query-builder-container .new-query-formula-buttons-container .ant-btn{border-radius:0px;border:1px solid var(--bg-slate-200);background:var(--bg-ink-200);box-shadow:0px 0px 8px 0px rgba(0,0,0,.1);padding:2px 10px;display:flex;justify-content:center;align-items:center}.query-builder-container .query-builder-mini-map{border-left:1px solid var(--bg-slate-400);border-right:1px solid var(--bg-slate-400);display:flex;flex-direction:column;justify-content:flex-start;gap:8px;align-items:center;padding:8px}.query-builder-container .query-builder-mini-map .ant-btn{min-width:32px;padding:4px 9px;display:flex;justify-content:center;align-items:center;border-radius:2px}.query-builder-container .query-builder-mini-map .ant-btn.query-btn{color:var(--bg-sakura-400);border:1px solid rgba(242,71,105,.2);background:rgba(242,71,105,.1)}.query-builder-container .query-builder-mini-map .ant-btn.query-btn:hover{border:1px solid rgba(242,71,105,.4);color:var(--bg-sakura-400)}.query-builder-container .query-builder-mini-map .ant-btn.query-btn.sync-btn{border:1px solid rgba(78,116,248,.2);background:rgba(78,116,248,.1);color:var(--bg-robin-500)}.query-builder-container .query-builder-mini-map .ant-btn.formula-btn{color:var(--bg-sienna-400);border:1px solid rgba(189,153,121,.2);background:rgba(189,153,121,.1)}.query-builder-container .query-builder-mini-map .ant-btn.formula-btn:hover{border:1px solid rgba(189,153,121,.4);color:var(--bg-sienna-400)}.query-builder-container .qb-entities-list{scroll-behavior:smooth}.query-builder-container .query-builder{padding:12px}.query-builder-container .query-builder .query-builder-queries-formula-container{display:flex;gap:16px;scroll-snap-type:y mandatory}.query-builder-container .query-builder .query-builder-queries-formula-container .query,.query-builder-container .query-builder .query-builder-queries-formula-container .formula{scroll-snap-align:start}.query-builder-container .query-builder .ant-select-selector{border-radius:2px;border:1px solid var(--bg-slate-400);background:var(--bg-ink-300)}.query-builder-container .query-builder .ant-select-selector input{font-size:12px}.query-builder-container .query-builder .ant-select-selector .ant-tag .ant-typography{font-size:12px}.query-builder-container .query-builder .ant-input-number{border-radius:2px;border:1px solid var(--bg-slate-400)}.query-builder-container .query-builder .divider{margin:12px -12px}.query-builder-container .query-builder .divider .ant-divider-horizontal{width:calc(100% + 24px);margin:24px 0 12px;border-block-start:2px solid var(--bg-slate-400)}.query-builder-container ::-webkit-scrollbar{height:.2rem;width:.2rem}.lightMode .query-builder-container{border-top-color:var(--bg-vanilla-300);border-bottom-color:var(--bg-vanilla-300);background:var(--bg-vanilla-100)}.lightMode .query-builder-container .query-builder-left-col{border-top-color:var(--bg-vanilla-300);border-right-color:var(--bg-vanilla-300);border-bottom-color:var(--bg-vanilla-300);border-left-color:var(--bg-vanilla-300);background-color:var(--bg-vanilla-100)}.lightMode .query-builder-container .query-builder-left-col .new-query-formula-buttons-container{border-color:var(--bg-vanilla-200);background:var(--bg-vanilla-200)}.lightMode .query-builder-container .query-builder-left-col .new-query-formula-buttons-container .ant-btn{border-color:var(--bg-vanilla-300);background:var(--bg-vanilla-100)}.lightMode .query-builder-container .new-query-formula-buttons-container{border-color:var(--bg-vanilla-200);background:var(--bg-vanilla-200)}.lightMode .query-builder-container .new-query-formula-buttons-container .ant-btn{border-color:var(--bg-vanilla-300);background:var(--bg-vanilla-100)}.lightMode .query-builder-container .query-builder-mini-map{border-left-color:var(--bg-vanilla-300);border-right-color:var(--bg-vanilla-300)}.lightMode .query-builder-container .query-builder .divider .ant-divider-horizontal{border-block-start:2px solid var(--bg-vanilla-300)}.lightMode .query-builder-container .query-builder .ant-select-selector{border-color:var(--bg-vanilla-300);background:var(--bg-vanilla-300)}.lightMode .query-builder-container .query-builder .ant-input-number{border-color:var(--bg-vanilla-300)}.lightMode .query-builder-container .query-builder .anticon{color:var(--bg-vanilla-400)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/QueryBuilder/QueryBuilder.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,yBACC,iBAAA,CACA,wCAAA,CACA,2CAAA,CACA,4BAAA,CAKA,iDAIC,wCAAA,CACA,0CAAA,CACA,2CAAA,CACA,yCAAA,CACA,8BAAA,CAGD,8DACC,iBAAA,CACA,YAAA,CACA,UAAA,CACA,WAAA,CACA,SAAA,CAEA,iBAAA,CACA,4BAAA,CACA,yCAAA,CAEA,uEACC,iBAAA,CACA,oCAAA,CACA,4BAAA,CACA,yCAAA,CAEA,gBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAIF,iDACC,yCAAA,CACA,0CAAA,CAEA,YAAA,CACA,qBAAA,CACA,0BAAA,CACA,OAAA,CACA,kBAAA,CACA,WAAA,CAMA,0DACC,cAAA,CACA,eAAA,CAEA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,iBAAA,CAEA,oEACC,0BAAA,CAEA,oCAAA,CACA,8BAAA,CAEA,0EACC,oCAAA,CACA,0BAAA,CAGD,6EACC,oCAAA,CACA,8BAAA,CACA,yBAAA,CAIF,sEACC,0BAAA,CAEA,qCAAA,CACA,+BAAA,CAEA,4EACC,qCAAA,CACA,0BAAA,CAMJ,2CAKC,sBAAA,CAGD,wCACC,YAAA,CAMA,iFACC,YAAA,CACA,QAAA,CAGA,4BAAA,CAEA,kLAEC,uBAAA,CAIF,6DACC,iBAAA,CACA,oCAAA,CACA,4BAAA,CAEA,mEACC,cAAA,CAGD,sFACC,cAAA,CAIF,0DACC,iBAAA,CACA,oCAAA,CAGD,iDACC,iBAAA,CAEA,yEACC,uBAAA,CACA,kBAAA,CACA,gDAAA,CAKH,6CACC,YAAA,CACA,WAAA,CAKD,oCACC,sCAAA,CACA,yCAAA,CACA,gCAAA,CAEA,4DACC,sCAAA,CACA,wCAAA,CACA,yCAAA,CACA,uCAAA,CACA,sCAAA,CAEA,iGACC,kCAAA,CACA,gCAAA,CAEA,0GACC,kCAAA,CACA,gCAAA,CAKH,yEACC,kCAAA,CACA,gCAAA,CAEA,kFACC,kCAAA,CACA,gCAAA,CAIF,4DACC,uCAAA,CACA,wCAAA,CAKC,oFACC,kDAAA,CAIF,wEACC,kCAAA,CACA,gCAAA,CAGD,qEACC,kCAAA,CAGD,4DACC,2BAAA\",\"sourcesContent\":[\".query-builder-container {\\n\\tposition: relative;\\n\\tborder-top: 1px solid var(--bg-slate-400);\\n\\tborder-bottom: 1px solid var(--bg-slate-400);\\n\\tbackground: var(--bg-ink-400);\\n\\n\\t// height: 280px;\\n\\t// overflow: hidden;\\n\\n\\t.query-builder-left-col {\\n\\t\\t// min-height: 280px;\\n\\t\\t// position: relative;\\n\\n\\t\\tborder-top: 1px solid var(--bg-slate-400);\\n\\t\\tborder-right: 1px solid var(--bg-slate-400);\\n\\t\\tborder-bottom: 1px solid var(--bg-slate-400);\\n\\t\\tborder-left: 1px solid var(--bg-slate-400);\\n\\t\\tbackground: var(--bg-slate-500);\\n\\t}\\n\\n\\t.new-query-formula-buttons-container {\\n\\t\\tposition: absolute;\\n\\t\\tdisplay: flex;\\n\\t\\tz-index: 10;\\n\\t\\tbottom: 10px;\\n\\t\\tleft: 16px;\\n\\n\\t\\tborder-radius: 2px;\\n\\t\\tbackground: var(--bg-ink-200);\\n\\t\\tbox-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);\\n\\n\\t\\t.ant-btn {\\n\\t\\t\\tborder-radius: 0px;\\n\\t\\t\\tborder: 1px solid var(--bg-slate-200);\\n\\t\\t\\tbackground: var(--bg-ink-200);\\n\\t\\t\\tbox-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);\\n\\n\\t\\t\\tpadding: 2px 10px;\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\talign-items: center;\\n\\t\\t}\\n\\t}\\n\\n\\t.query-builder-mini-map {\\n\\t\\tborder-left: 1px solid var(--bg-slate-400);\\n\\t\\tborder-right: 1px solid var(--bg-slate-400);\\n\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tjustify-content: flex-start;\\n\\t\\tgap: 8px;\\n\\t\\talign-items: center;\\n\\t\\tpadding: 8px;\\n\\n\\t\\t// min-height: 280px;\\n\\t\\t// height: 100%;\\n\\t\\t// overflow-y: auto;\\n\\n\\t\\t.ant-btn {\\n\\t\\t\\tmin-width: 32px;\\n\\t\\t\\tpadding: 4px 9px;\\n\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t\\talign-items: center;\\n\\n\\t\\t\\tborder-radius: 2px;\\n\\n\\t\\t\\t&.query-btn {\\n\\t\\t\\t\\tcolor: var(--bg-sakura-400);\\n\\n\\t\\t\\t\\tborder: 1px solid rgba(242, 71, 105, 0.2);\\n\\t\\t\\t\\tbackground: rgba(242, 71, 105, 0.1);\\n\\n\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\tborder: 1px solid rgba(242, 71, 105, 0.4);\\n\\t\\t\\t\\t\\tcolor: var(--bg-sakura-400);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t&.sync-btn {\\n\\t\\t\\t\\t\\tborder: 1px solid rgba(78, 116, 248, 0.2);\\n\\t\\t\\t\\t\\tbackground: rgba(78, 116, 248, 0.1);\\n\\t\\t\\t\\t\\tcolor: var(--bg-robin-500);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t&.formula-btn {\\n\\t\\t\\t\\tcolor: var(--bg-sienna-400);\\n\\n\\t\\t\\t\\tborder: 1px solid rgba(189, 153, 121, 0.2);\\n\\t\\t\\t\\tbackground: rgba(189, 153, 121, 0.1);\\n\\n\\t\\t\\t\\t&:hover {\\n\\t\\t\\t\\t\\tborder: 1px solid rgba(189, 153, 121, 0.4);\\n\\t\\t\\t\\t\\tcolor: var(--bg-sienna-400);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.qb-entities-list {\\n\\t\\t// height: 280px;\\n\\t\\t// overflow-y: auto;\\n\\t\\t// height: 100%;\\n\\n\\t\\tscroll-behavior: smooth;\\n\\t}\\n\\n\\t.query-builder {\\n\\t\\tpadding: 12px;\\n\\n\\t\\t// height: 348px;\\n\\t\\t// overflow-y: auto;\\n\\t\\t// scroll-snap-align: start;\\n\\n\\t\\t.query-builder-queries-formula-container {\\n\\t\\t\\tdisplay: flex;\\n\\t\\t\\tgap: 16px;\\n\\t\\t\\t// height: 100%;\\n\\n\\t\\t\\tscroll-snap-type: y mandatory;\\n\\n\\t\\t\\t.query,\\n\\t\\t\\t.formula {\\n\\t\\t\\t\\tscroll-snap-align: start;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.ant-select-selector {\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tborder: 1px solid var(--bg-slate-400);\\n\\t\\t\\tbackground: var(--bg-ink-300);\\n\\n\\t\\t\\tinput {\\n\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-tag .ant-typography {\\n\\t\\t\\t\\tfont-size: 12px;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.ant-input-number {\\n\\t\\t\\tborder-radius: 2px;\\n\\t\\t\\tborder: 1px solid var(--bg-slate-400);\\n\\t\\t}\\n\\n\\t\\t.divider {\\n\\t\\t\\tmargin: 12px -12px;\\n\\n\\t\\t\\t.ant-divider-horizontal {\\n\\t\\t\\t\\twidth: calc(100% + 24px);\\n\\t\\t\\t\\tmargin: 24px 0 12px;\\n\\t\\t\\t\\tborder-block-start: 2px solid var(--bg-slate-400);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t::-webkit-scrollbar {\\n\\t\\theight: 0.2rem;\\n\\t\\twidth: 0.2rem;\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.query-builder-container {\\n\\t\\tborder-top-color: var(--bg-vanilla-300);\\n\\t\\tborder-bottom-color: var(--bg-vanilla-300);\\n\\t\\tbackground: var(--bg-vanilla-100);\\n\\n\\t\\t.query-builder-left-col {\\n\\t\\t\\tborder-top-color: var(--bg-vanilla-300);\\n\\t\\t\\tborder-right-color: var(--bg-vanilla-300);\\n\\t\\t\\tborder-bottom-color: var(--bg-vanilla-300);\\n\\t\\t\\tborder-left-color: var(--bg-vanilla-300);\\n\\t\\t\\tbackground-color: var(--bg-vanilla-100);\\n\\n\\t\\t\\t.new-query-formula-buttons-container {\\n\\t\\t\\t\\tborder-color: var(--bg-vanilla-200);\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-200);\\n\\n\\t\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\t\\tborder-color: var(--bg-vanilla-300);\\n\\t\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.new-query-formula-buttons-container {\\n\\t\\t\\tborder-color: var(--bg-vanilla-200);\\n\\t\\t\\tbackground: var(--bg-vanilla-200);\\n\\n\\t\\t\\t.ant-btn {\\n\\t\\t\\t\\tborder-color: var(--bg-vanilla-300);\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.query-builder-mini-map {\\n\\t\\t\\tborder-left-color: var(--bg-vanilla-300);\\n\\t\\t\\tborder-right-color: var(--bg-vanilla-300);\\n\\t\\t}\\n\\n\\t\\t.query-builder {\\n\\t\\t\\t.divider {\\n\\t\\t\\t\\t.ant-divider-horizontal {\\n\\t\\t\\t\\t\\tborder-block-start: 2px solid var(--bg-vanilla-300);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\tborder-color: var(--bg-vanilla-300);\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-300);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.ant-input-number {\\n\\t\\t\\t\\tborder-color: var(--bg-vanilla-300);\\n\\t\\t\\t}\\n\\n\\t\\t\\t.anticon {\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-400);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".filter-toggler{margin-right:8px}.additinal-filters-container .action-btn{background:#4e74f8;width:16px;height:16px;border-radius:3px;display:flex;justify-content:center;align-items:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/QueryBuilder/components/AdditionalFiltersToggler/AdditionalFiltersToggler.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,gBACC,gBAAA,CAIA,yCACC,kBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA\",\"sourcesContent\":[\".filter-toggler {\\n\\tmargin-right: 8px;\\n}\\n\\n.additinal-filters-container {\\n\\t.action-btn {\\n\\t\\tbackground: #4e74f8;\\n\\t\\twidth: 16px;\\n\\t\\theight: 16px;\\n\\t\\tborder-radius: 3px;\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\talign-items: center;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".formula-container{padding:0 24px;width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/QueryBuilder/components/Formula/Formula.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,mBACC,cAAA,CACA,UAAA\",\"sourcesContent\":[\".formula-container {\\n\\tpadding: 0 24px;\\n\\twidth: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".qb-entity-options{display:flex;justify-content:space-between;margin:4px 0;width:100%}.qb-entity-options .left-col-items{display:flex;align-items:center;gap:12px;max-width:100%}.qb-entity-options .left-col-items .title{font-weight:500;font-style:italic}.qb-entity-options .left-col-items .title .entityType{text-transform:capitalize}.qb-entity-options .options{box-shadow:0px 0px 8px 0px rgba(0,0,0,.1);border-radius:2px;margin-left:-32px;max-width:100%;border-radius:2px}.qb-entity-options .options .periscope-btn{border:1px solid var(--bg-slate-200);background:var(--bg-ink-200);min-width:32px}.qb-entity-options .options .query-name{font-size:12px;font-style:normal;font-weight:400;color:var(--bg-sakura-400) !important;border:1px solid rgba(242,71,105,.2) !important;background:rgba(242,71,105,.1) !important}.qb-entity-options .options .query-name.sync-btn{border:1px solid rgba(78,116,248,.2) !important;background:rgba(78,116,248,.1) !important;color:var(--bg-robin-500) !important}.qb-entity-options .options .query-name:hover{border:1px solid rgba(242,71,105,.4) !important;color:var(--bg-sakura-400) !important}.qb-entity-options .options .formula-name{font-size:12px;font-style:normal;font-weight:400;color:var(--bg-sienna-400) !important;border:1px solid rgba(189,153,121,.2) !important;background:rgba(189,153,121,.1)}.qb-entity-options .options .formula-name:hover{border:1px solid rgba(189,153,121,.4) !important;color:var(--bg-sienna-400) !important}.qb-entity-options .options .options-group{max-width:100%}.lightMode .qb-entity-options .options{border-color:var(--bg-vanilla-300);box-shadow:none}.lightMode .qb-entity-options .options .periscope-btn{border-color:var(--bg-vanilla-300);background:var(--bg-vanilla-100);color:var(--bg-ink-200)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/QueryBuilder/components/QBEntityOptions/QBEntityOptions.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,mBACC,YAAA,CACA,6BAAA,CACA,YAAA,CACA,UAAA,CAEA,mCACC,YAAA,CACA,kBAAA,CACA,QAAA,CACA,cAAA,CAEA,0CACC,eAAA,CACA,iBAAA,CACA,sDACC,yBAAA,CAKH,4BACC,yCAAA,CACA,iBAAA,CACA,iBAAA,CACA,cAAA,CAEA,iBAAA,CAEA,2CACC,oCAAA,CACA,4BAAA,CACA,cAAA,CAGD,wCACC,cAAA,CACA,iBAAA,CACA,eAAA,CAGA,qCAAA,CAEA,+CAAA,CACA,yCAAA,CAEA,iDACC,+CAAA,CACA,yCAAA,CACA,oCAAA,CAGD,8CACC,+CAAA,CACA,qCAAA,CAIF,0CACC,cAAA,CACA,iBAAA,CACA,eAAA,CAGA,qCAAA,CAEA,gDAAA,CACA,+BAAA,CAEA,gDACC,gDAAA,CACA,qCAAA,CAIF,2CACC,cAAA,CAOD,uCACC,kCAAA,CACA,eAAA,CAEA,sDACC,kCAAA,CACA,gCAAA,CACA,uBAAA\",\"sourcesContent\":[\".qb-entity-options {\\n\\tdisplay: flex;\\n\\tjustify-content: space-between;\\n\\tmargin: 4px 0;\\n\\twidth: 100%;\\n\\n\\t.left-col-items {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 12px;\\n\\t\\tmax-width: 100%;\\n\\n\\t\\t.title {\\n\\t\\t\\tfont-weight: 500;\\n\\t\\t\\tfont-style: italic;\\n\\t\\t\\t.entityType {\\n\\t\\t\\t\\ttext-transform: capitalize;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t.options {\\n\\t\\tbox-shadow: 0px 0px 8px 0px rgba(0, 0, 0, 0.1);\\n\\t\\tborder-radius: 2px;\\n\\t\\tmargin-left: -32px;\\n\\t\\tmax-width: 100%;\\n\\n\\t\\tborder-radius: 2px;\\n\\n\\t\\t.periscope-btn {\\n\\t\\t\\tborder: 1px solid var(--bg-slate-200);\\n\\t\\t\\tbackground: var(--bg-ink-200);\\n\\t\\t\\tmin-width: 32px;\\n\\t\\t}\\n\\n\\t\\t.query-name {\\n\\t\\t\\tfont-size: 12px;\\n\\t\\t\\tfont-style: normal;\\n\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t// line-height: 18px;\\n\\n\\t\\t\\tcolor: var(--bg-sakura-400) !important;\\n\\n\\t\\t\\tborder: 1px solid rgba(242, 71, 105, 0.2) !important;\\n\\t\\t\\tbackground: rgba(242, 71, 105, 0.1) !important;\\n\\n\\t\\t\\t&.sync-btn {\\n\\t\\t\\t\\tborder: 1px solid rgba(78, 116, 248, 0.2) !important;\\n\\t\\t\\t\\tbackground: rgba(78, 116, 248, 0.1) !important;\\n\\t\\t\\t\\tcolor: var(--bg-robin-500) !important;\\n\\t\\t\\t}\\n\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tborder: 1px solid rgba(242, 71, 105, 0.4) !important;\\n\\t\\t\\t\\tcolor: var(--bg-sakura-400) !important;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.formula-name {\\n\\t\\t\\tfont-size: 12px;\\n\\t\\t\\tfont-style: normal;\\n\\t\\t\\tfont-weight: 400;\\n\\t\\t\\t// line-height: 18px;\\n\\n\\t\\t\\tcolor: var(--bg-sienna-400) !important;\\n\\n\\t\\t\\tborder: 1px solid rgba(189, 153, 121, 0.2) !important;\\n\\t\\t\\tbackground: rgba(189, 153, 121, 0.1);\\n\\n\\t\\t\\t&:hover {\\n\\t\\t\\t\\tborder: 1px solid rgba(189, 153, 121, 0.4) !important;\\n\\t\\t\\t\\tcolor: var(--bg-sienna-400) !important;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.options-group {\\n\\t\\t\\tmax-width: 100%;\\n\\t\\t}\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.qb-entity-options {\\n\\t\\t.options {\\n\\t\\t\\tborder-color: var(--bg-vanilla-300);\\n\\t\\t\\tbox-shadow: none;\\n\\n\\t\\t\\t.periscope-btn {\\n\\t\\t\\t\\tborder-color: var(--bg-vanilla-300);\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t\\tcolor: var(--bg-ink-200);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".qb-search-container{display:block;position:relative}.qb-container{padding:0 24px}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/QueryBuilder/components/Query/Query.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,qBACC,aAAA,CACA,iBAAA,CAGD,cACC,cAAA\",\"sourcesContent\":[\".qb-search-container {\\n\\tdisplay: block;\\n\\tposition: relative;\\n}\\n\\n.qb-container {\\n\\tpadding: 0 24px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".query-functions-container{display:flex;margin:0 12px;justify-content:center;align-items:center}.query-functions-container .function-btn,.query-functions-container .add-function-btn{display:flex;gap:8px;cursor:pointer;border-radius:3px !important}.query-functions-container .function-btn{border-top-right-radius:0px !important;border-bottom-right-radius:0px !important}.query-functions-container .function-btn .function-icon{height:18px;width:18px}.query-functions-container .add-function-btn{border-top-left-radius:0px !important;border-bottom-left-radius:0px !important;background-color:var(--bg-slate-500) !important;opacity:.8}.query-functions-container .add-function-btn:disabled{opacity:.4}.query-functions-container.hasFunctions .function-btn{border-top-right-radius:3px !important;border-bottom-right-radius:3px !important;margin-right:8px}.query-functions-container.hasFunctions .add-function-btn{border-top-left-radius:3px !important;border-bottom-left-radius:3px !important;margin-left:8px}.query-functions-list{display:flex;gap:8px}.query-functions-list .query-function{position:relative}.query-functions-list .query-function::before{content:\\\"\\\";height:1px;width:8px;position:absolute;left:-8px;top:16px;z-index:0;color:var(--bg-ink-200);background-color:var(--bg-ink-200)}.query-functions-list .query-function::after{content:\\\"\\\";height:1px;width:8px;position:absolute;right:-8px;top:16px;z-index:0;color:var(--bg-ink-200);background-color:var(--bg-ink-200)}.query-functions-list .query-function .query-function-name-selector{border-top-left-radius:3px;border-bottom-left-radius:3px}.query-functions-list .query-function .query-function-name-selector .ant-select-selector{border:none;background:var(--bg-ink-200)}.query-functions-list .query-function .query-function-name-selector.showInput .ant-select-selector{border-top-right-radius:0;border-bottom-right-radius:0}.query-functions-list .query-function .query-function-value{width:55px;border-left:0;background:var(--bg-ink-200);border-radius:0;border:1px solid rgba(0,0,0,0)}.query-functions-list .query-function .query-function-value:focus{border-color:rgba(0,0,0,0) !important}.query-functions-list .query-function .query-function-delete-btn{border-top-right-radius:3px;border-bottom-right-radius:3px;border:none !important;border-top-left-radius:0px !important;border-bottom-left-radius:0px !important;min-width:24px !important}.lightMode .query-functions-container .add-function-btn{background-color:var(--bg-vanilla-100) !important}.lightMode .query-functions-list .query-function{border:1px solid var(--bg-vanilla-300)}.lightMode .query-functions-list .query-function .query-function-name-selector .ant-select-selector{background:var(--bg-vanilla-100)}.lightMode .query-functions-list .query-function .query-function-value{background:var(--bg-vanilla-100)}.lightMode .query-functions-list .query-function .query-function-value:focus{border-color:rgba(0,0,0,0) !important}.lightMode .query-functions-list .query-function::before,.lightMode .query-functions-list .query-function::after{color:var(--bg-vanilla-300);background-color:var(--bg-vanilla-300)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/QueryBuilder/components/QueryFunctions/QueryFunctions.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,2BACC,YAAA,CACA,aAAA,CACA,sBAAA,CACA,kBAAA,CAEA,sFAEC,YAAA,CACA,OAAA,CAEA,cAAA,CACA,4BAAA,CAGD,yCACC,sCAAA,CACA,yCAAA,CAEA,wDACC,WAAA,CACA,UAAA,CAIF,6CACC,qCAAA,CACA,wCAAA,CAEA,+CAAA,CACA,UAAA,CAEA,sDACC,UAAA,CAKD,sDACC,sCAAA,CACA,yCAAA,CACA,gBAAA,CAGD,0DACC,qCAAA,CACA,wCAAA,CACA,eAAA,CAKH,sBACC,YAAA,CACA,OAAA,CAEA,sCACC,iBAAA,CAEA,8CACC,UAAA,CACA,UAAA,CACA,SAAA,CACA,iBAAA,CACA,SAAA,CACA,QAAA,CACA,SAAA,CACA,uBAAA,CACA,kCAAA,CAGD,6CACC,UAAA,CACA,UAAA,CACA,SAAA,CACA,iBAAA,CACA,UAAA,CACA,QAAA,CACA,SAAA,CACA,uBAAA,CACA,kCAAA,CAGD,oEACC,0BAAA,CACA,6BAAA,CAEA,yFACC,WAAA,CACA,4BAAA,CAIA,mGACC,yBAAA,CACA,4BAAA,CAKH,4DACC,UAAA,CACA,aAAA,CACA,4BAAA,CACA,eAAA,CACA,8BAAA,CAEA,kEACC,qCAAA,CAIF,iEACC,2BAAA,CACA,8BAAA,CAEA,sBAAA,CAEA,qCAAA,CACA,wCAAA,CACA,yBAAA,CAOD,wDACC,iDAAA,CAKD,iDACC,sCAAA,CAEC,oGACC,gCAAA,CAIF,uEACC,gCAAA,CAEA,6EACC,qCAAA,CAIF,iHAEC,2BAAA,CACA,sCAAA\",\"sourcesContent\":[\".query-functions-container {\\n\\tdisplay: flex;\\n\\tmargin: 0 12px;\\n\\tjustify-content: center;\\n\\talign-items: center;\\n\\n\\t.function-btn,\\n\\t.add-function-btn {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 8px;\\n\\n\\t\\tcursor: pointer;\\n\\t\\tborder-radius: 3px !important;\\n\\t}\\n\\n\\t.function-btn {\\n\\t\\tborder-top-right-radius: 0px !important;\\n\\t\\tborder-bottom-right-radius: 0px !important;\\n\\n\\t\\t.function-icon {\\n\\t\\t\\theight: 18px;\\n\\t\\t\\twidth: 18px;\\n\\t\\t}\\n\\t}\\n\\n\\t.add-function-btn {\\n\\t\\tborder-top-left-radius: 0px !important;\\n\\t\\tborder-bottom-left-radius: 0px !important;\\n\\n\\t\\tbackground-color: var(--bg-slate-500) !important;\\n\\t\\topacity: 0.8;\\n\\n\\t\\t&:disabled {\\n\\t\\t\\topacity: 0.4;\\n\\t\\t}\\n\\t}\\n\\n\\t&.hasFunctions {\\n\\t\\t.function-btn {\\n\\t\\t\\tborder-top-right-radius: 3px !important;\\n\\t\\t\\tborder-bottom-right-radius: 3px !important;\\n\\t\\t\\tmargin-right: 8px;\\n\\t\\t}\\n\\n\\t\\t.add-function-btn {\\n\\t\\t\\tborder-top-left-radius: 3px !important;\\n\\t\\t\\tborder-bottom-left-radius: 3px !important;\\n\\t\\t\\tmargin-left: 8px;\\n\\t\\t}\\n\\t}\\n}\\n\\n.query-functions-list {\\n\\tdisplay: flex;\\n\\tgap: 8px;\\n\\n\\t.query-function {\\n\\t\\tposition: relative;\\n\\n\\t\\t&::before {\\n\\t\\t\\tcontent: '';\\n\\t\\t\\theight: 1px;\\n\\t\\t\\twidth: 8px;\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\tleft: -8px;\\n\\t\\t\\ttop: 16px;\\n\\t\\t\\tz-index: 0;\\n\\t\\t\\tcolor: var(--bg-ink-200);\\n\\t\\t\\tbackground-color: var(--bg-ink-200);\\n\\t\\t}\\n\\n\\t\\t&::after {\\n\\t\\t\\tcontent: '';\\n\\t\\t\\theight: 1px;\\n\\t\\t\\twidth: 8px;\\n\\t\\t\\tposition: absolute;\\n\\t\\t\\tright: -8px;\\n\\t\\t\\ttop: 16px;\\n\\t\\t\\tz-index: 0;\\n\\t\\t\\tcolor: var(--bg-ink-200);\\n\\t\\t\\tbackground-color: var(--bg-ink-200);\\n\\t\\t}\\n\\n\\t\\t.query-function-name-selector {\\n\\t\\t\\tborder-top-left-radius: 3px;\\n\\t\\t\\tborder-bottom-left-radius: 3px;\\n\\n\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\tborder: none;\\n\\t\\t\\t\\tbackground: var(--bg-ink-200);\\n\\t\\t\\t}\\n\\n\\t\\t\\t&.showInput {\\n\\t\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\t\\tborder-top-right-radius: 0;\\n\\t\\t\\t\\t\\tborder-bottom-right-radius: 0;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.query-function-value {\\n\\t\\t\\twidth: 55px;\\n\\t\\t\\tborder-left: 0;\\n\\t\\t\\tbackground: var(--bg-ink-200);\\n\\t\\t\\tborder-radius: 0;\\n\\t\\t\\tborder: 1px solid transparent;\\n\\n\\t\\t\\t&:focus {\\n\\t\\t\\t\\tborder-color: transparent !important;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t.query-function-delete-btn {\\n\\t\\t\\tborder-top-right-radius: 3px;\\n\\t\\t\\tborder-bottom-right-radius: 3px;\\n\\n\\t\\t\\tborder: none !important;\\n\\n\\t\\t\\tborder-top-left-radius: 0px !important;\\n\\t\\t\\tborder-bottom-left-radius: 0px !important;\\n\\t\\t\\tmin-width: 24px !important;\\n\\t\\t}\\n\\t}\\n}\\n\\n.lightMode {\\n\\t.query-functions-container {\\n\\t\\t.add-function-btn {\\n\\t\\t\\tbackground-color: var(--bg-vanilla-100) !important;\\n\\t\\t}\\n\\t}\\n\\n\\t.query-functions-list {\\n\\t\\t.query-function {\\n\\t\\t\\tborder: 1px solid var(--bg-vanilla-300);\\n\\t\\t\\t.query-function-name-selector {\\n\\t\\t\\t\\t.ant-select-selector {\\n\\t\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t.query-function-value {\\n\\t\\t\\t\\tbackground: var(--bg-vanilla-100);\\n\\n\\t\\t\\t\\t&:focus {\\n\\t\\t\\t\\t\\tborder-color: transparent !important;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t&::before,\\n\\t\\t\\t&::after {\\n\\t\\t\\t\\tcolor: var(--bg-vanilla-300);\\n\\t\\t\\t\\tbackground-color: var(--bg-vanilla-300);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./QueryBuilder.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./AdditionalFiltersToggler.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Formula.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./QBEntityOptions.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./Query.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js!./QueryFunctions.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["getAggregateAttribute","async","aggregateOperator","searchText","dataSource","_ref","_response$data$data$a","response","ApiV3Instance","get","concat","createQueryParams","payload","data","attributeKeys","map","_ref2","id","_","item","createIdFromObjectFields","baseAutoCompleteIdKeysOrder","statusCode","error","message","statusText","e","ErrorResponseHandler","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","MAX_RPS_LIMIT","LEGEND","DAYJS_MANIPULATE_TYPES","DAY","WEEK","MONTH","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","metricQueryFunctionOptions","value","QueryFunctionsTypes","CUTOFF_MIN","label","CUTOFF_MAX","CLAMP_MIN","CLAMP_MAX","ABSOLUTE","RUNNING_DIFF","LOG_2","LOG_10","CUMULATIVE_SUM","EWMA_3","EWMA_5","EWMA_7","MEDIAN_3","MEDIAN_5","MEDIAN_7","TIME_SHIFT","logsQueryFunctionOptions","queryFunctionsTypesConfig","anomaly","showInput","disabled","cutOffMin","inputType","placeholder","cutOffMax","clampMin","clampMax","absolute","runningDiff","log2","log10","cumSum","ewma3","ewma5","ewma7","median3","median5","median7","timeShift","alertsCategory","name","CategoryNames","Time","formats","TimeFormats","Nanoseconds","Microseconds","Milliseconds","Seconds","Minutes","Hours","Days","Data","DataFormats","BytesIEC","BytesSI","BitsIEC","BitsSI","KibiBytes","KiloBytes","MebiBytes","MegaBytes","GibiBytes","GigaBytes","TebiBytes","TeraBytes","PebiBytes","PetaBytes","DataRate","DataRateFormats","BytesPerSecIEC","BytesPerSecSI","BitsPerSecIEC","BitsPerSecSI","KibiBytesPerSec","KibiBitsPerSec","KiloBytesPerSec","KiloBitsPerSec","MebiBytesPerSec","MebiBitsPerSec","MegaBytesPerSec","MegaBitsPerSec","GibiBytesPerSec","GibiBitsPerSec","GigaBytesPerSec","GigaBitsPerSec","TebiBytesPerSec","TebiBitsPerSec","TeraBytesPerSec","TeraBitsPerSec","PebiBytesPerSec","PebiBitsPerSec","PetaBytesPerSec","PetaBitsPerSec","Miscellaneous","MiscellaneousFormats","PercentUnit","Percent","Boolean","BooleanFormats","TRUE_FALSE","YES_NO","Throughput","ThroughputFormats","CountsPerSec","OpsPerSec","RequestsPerSec","ReadsPerSec","WritesPerSec","IOOpsPerSec","CountsPerMin","OpsPerMin","ReadsPerMin","WritesPerMin","getCategorySelectOptionByName","_alertsCategory$find","find","category","format","getCategoryByOptionId","some","isCategoryName","allFormats","flatMap","getFormatNameByOptionId","_allFormats$find","QueryBuilder","memo","__signature__","config","panelType","newPanelType","filterConfigs","queryComponents","isListViewPanel","showFunctions","version","currentQuery","addNewBuilderQuery","addNewFormula","handleSetConfig","initialDataSource","setLastUsedQuery","lastUsedQuery","useQueryBuilder","containerRef","useRef","currentDataSource","useMemo","queryVariant","pathname","useLocation","isLogsExplorerPage","ROUTES","LOGS_EXPLORER","useEffect","PANEL_TYPES","BAR","DataSource","METRICS","isDisabledQueryButton","builder","queryData","length","MAX_QUERIES","isDisabledFormulaButton","queryFormulas","MAX_FORMULAS","isAvailableToDisableQuery","handleScrollIntoView","entityType","entityName","selectedEntity","document","getElementById","scrollIntoView","behavior","block","inline","listViewLogFilterConfigs","stepInterval","isHidden","isDisabled","having","filters","customKey","customOp","OPERATORS","CONTAINS","listViewTracesFilterConfigs","limit","_jsxs","Row","style","width","gutter","justify","className","children","_jsx","Button","Group","Tooltip","title","textAlign","Typography","Link","href","target","textDecoration","onClick","DatabaseZap","size","Sigma","Col","span","ref","LIST","Query","index","isAvailableToDisable","query","TRACES","onClickCapture","queryName","formula","isAllMetricDataSource","every","Formula","isAdditionalFilterEnable","Divider","cx","IconCss","css","_templateObject","_taggedTemplateLiteral","StyledIconOpen","styled","PlusSquareOutlined","_templateObject2","StyledIconClose","MinusSquareOutlined","_templateObject3","StyledInner","_templateObject4","StyledLink","_templateObject5","Color","BG_ROBIN_400","AdditionalFiltersToggler","listOfAdditionalFilter","isOpenedFilters","setIsOpenedFilters","useState","filtersTexts","str","isNextLast","Fragment","toUpperCase","handleToggleOpenFilters","prevState","marginBottom","Minus","color","BG_INK_500","Plus","dataSourceMap","LOGS","exploreDataSourceMap","DataSourceDropdown","props","onChange","dataSourceOptions","source","transformToUpperCase","Select","defaultValue","options","StyledLabel","div","FilterLabel","isDarkMode","useIsDarkMode","removeQueryBuilderEntityByIndex","handleSetFormulaData","listOfAdditionalFormulaFilters","handleChangeFormulaData","useQueryOperations","entityVersion","isCollapse","setIsCollapsed","handleDelete","useCallback","handleToggleDisableFormula","newFormula","handleChange","getFormatedLegend","handleChangeLimit","handleChangeHavingFilter","handleChangeOrderByFilter","renderAdditionalFilters","_Fragment","flex","LimitFilter","HavingFilter","OrderByFilter","QBEntityOptions","isCollapsed","entityData","onToggleVisibility","onDelete","onCollapseEntity","handleToggleCollapseFormula","showDeleteButton","Input","TextArea","expression","rows","legend","addonBefore","StyledText","Text","StyledTag","Tag","HavingFilterTag","closable","onClose","onUpdate","ellipsis","handleClick","StyledDeleteEntity","CloseCircleOutlined","StyledRow","StyledFilterRow","ListItemWrapper","StyledButton","$isAvailableToDisable","ListMarker","labelName","onDisable","buttonProps","type","icon","EyeInvisibleFilled","EyeFilled","_query$functions","isMetricsDataSource","onCloneQuery","onQueryFunctionsUpdates","isLogsDataSource","ChevronRight","ChevronDown","EyeOff","Eye","handleCloneEntity","isFunction","Copy","QueryFunctions","queryFunctions","functions","maxFunctions","toString","Trash2","defaultProps","noop","_filterConfigs$stepIn3","_filterConfigs$stepIn4","_filterConfigs$limit2","_filterConfigs$having2","cloneQuery","operators","spaceAggregationOptions","isTracePanelType","listOfAdditionalFilters","handleChangeAggregatorAttribute","handleChangeQueryData","handleChangeDataSource","handleChangeOperator","handleSpaceAggregationChange","handleDeleteQuery","handleQueryFunctionsUpdates","handleChangeAggregateEvery","handleChangeOrderByKeys","handleToggleDisableQuery","handleChangeTagFilters","handleChangeReduceTo","handleChangeGroupByKeys","handleChangeQueryLegend","event","renderOrderByFilter","renderOrderBy","renderAggregateEveryFilter","_filterConfigs$stepIn","_filterConfigs$stepIn2","AggregateEveryFilter","isExplorerPage","TRACES_EXPLORER","TIME_SERIES","VALUE","_filterConfigs$limit","_filterConfigs$having","disableOperatorSelector","aggregateAttribute","key","isVersionV4","ENTITY_VERSION_V4","handleToggleCollapsQuery","align","minWidth","OperatorsSelect","AggregatorFilter","Array","isArray","includes","QueryBuilderSearchV2","whereClauseConfig","hideSpanScopeSelector","QueryBuilderSearch","TRACE","SpaceAggregationOptions","aggregatorAttributeType","selectedValue","spaceAggregation","onSelect","timeAggregation","ReduceToFilter","GroupByFilter","TABLE","PIE","placement","Function","funcData","handleUpdateFunctionArgs","handleUpdateFunctionName","handleDeleteFunction","functionValue","isNil","args","debouncedhandleUpdateFunctionArgs","debounce","functionOptions","disableRemoveFunction","ANOMALY","Flex","dropdownStyle","borderRadius","border","boxShadow","autoFocus","X","defaultMetricFunctionStruct","defaultLogFunctionStruct","FunctionIcon","fillColor","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","setFunctions","hasAnomalyFunction","func","queryFunction","clonedFunctions","cloneDeep","pullAt","updateFunctions","toFloat64","handleAddNewFunction","defaultFunctionStruct","updatedFunctionsArr","functionsCopy","anomalyFuncIndex","findIndex","anomalyFunc","splice","push","parsed","parseFloat","Number","isFinite","console","ATTRIBUTE_TYPES","GAUGE","placeHolderText","setDefaultValue","HISTOGRAM","EXPONENTIAL_HISTOGRAM","MetricAggregateOperator","P90","SUM","AVG","operator","Option","InputNumber","selectStyle","min","_default","queryClient","useQueryClient","optionsData","setOptionsData","setSearchText","debouncedSearchText","getAutocompleteValueAndType","debouncedValue","useDebounce","DEBOUNCE_DELAY","isFetching","useQuery","QueryBuilderKeys","GET_AGGREGATE_ATTRIBUTE","enabled","onSuccess","_data$payload","OptionRenderer","transformStringWithPrefix","prefix","condition","isColumn","removePrefix","dataType","selectValueDivider","handleSearchText","text","getAttributesData","_queryClient$getQuery","getQueryData","getResponseAttributes","_response$payload","fetchQuery","handleChangeCustomValue","attributes","customAttribute","chooseAutocompleteFromCustomValue","handleBlur","aggregateAttributes","option","currentOption","attribute","handleSelect","AutoComplete","getPopupContainer","popupContainer","filterOption","onSearch","notFoundContent","Spin","onBlur","BuilderUnitsFilter","yAxisUnit","handleOnUnitsChange","unit","allOptions","categoryToSupport","Space","DefaultLabel","selectStyles","allowClear","showSearch","optionFilterProp","inputValue","toLowerCase","localValues","setLocalValues","currentFormValue","setCurrentFormValue","initialHavingValues","setOptions","isMulti","useTagValidation","op","columnName","replace","aggregatorOptions","handleUpdateTag","filter","currentValue","transformFromStringToHaving","generateOptions","currentString","aggregator","restValue","split","newOptions","HAVING_OPERATORS","num","opt","join","parseSearchText","getHavingObject","transformHavingToStringValue","resetChanges","autoClearSearchValue","mode","search","trimmedSearch","trimStart","currentSearch","slice","isValidHavingValue","searchValue","tagRender","handleClose","onDeselect","isCompletedValue","values","onKeyDown","handleKeyDownLimitFilter","_data$payload2","createOptions","aggregationOptions","handleSearchKeys","useOrderByFormulaFilter","useGetAggregateKeys","keepPreviousData","keyOptions","groupByOptions","groupBy","NOOP","isDisabledSelect","showArrow","labelInValue","ORDERBY_FILTERS","ASC","SIGNOZ_VALUE","orderByValueDelimiter","DESC","transformToOrderByStringValuesByFormula","customValue","mapLabelValuePairs","flat","validResult","getValidOrderByResult","orderByValues","getUniqueOrderByValues","match","parse","delimiter","order","result","keyOption","getRemoveOrderFromValue","uniqWith","isEqual","getLabelFromValue","_formula$orderBy","orderBy","isFocused","setIsFocused","queryKey","keys","reduce","acc","attrKey","getAttributeKeys","GET_AGGREGATE_KEYS","getAggregateKeys","groupByValues","idDivider","existAttribute","clearSearch","currentValues","onFocus","handleFocus","tagPrefix","MetricsType","resourcePrefix","Resource","scopePrefix","Scope","startsWith","errorMessage","setErrorMessage","aggregatorAttribute","handleSearch","v","prev","updatedValues","status","BG_CHERRY_500","useOrderByFilter","transformToOrderByStringValues","REDUCE_TO_VALUES","reduceTo","newValue","handleSetQueryData","redirectWithQueryBuilderData","setOperators","setSpaceAggregationOptions","getNewListOfAdditionalFilters","isQuery","_mapsOfFilters$dataSo","mapOfQueryFilters","mapOfFormulaToFilters","_filterConfigs","field","setListOfAdditionalFilters","setListOfAdditionalFormulaFilters","aggregateDataType","typeOfValue","findDataTypeOfOperator","shouldResetAggregateAttribute","newQuery","initialAutocompleteData","handleMetricAggregateAtributeTypes","newOperators","isEmpty","metricsUnknownTimeAggregateOperatorOptions","getMetricsOperatorsByAttributeType","aggregateAttributeType","metricsSumSpaceAggregateOperatorOptions","metricsGaugeSpaceAggregateOperatorOptions","metricsHistogramSpaceAggregateOperatorOptions","metricsUnknownSpaceAggregateOperatorOptions","RATE","COUNT","nextSource","listViewInitialLogQuery","listViewInitialTraceQuery","getOperatorsBySourceAndPanelType","entries","Object","initialQueryBuilderFormValuesMap","metrics","initCopyResult","fromEntries","initialOperators","JSON","stringify","additionalFilters","useShareBuilderUrl","defaultQuery","resetQuery","urlQuery","useUrlQuery","compositeQuery","useGetCompositeQueryParam","firstValue","secondValue","SPLIT_FIRST_UNDERSCORE","autocompleteType","tag","resource","metricsOperatorsByType","Sum","Gauge","metricsEmptyTimeAggregateOperatorOptions","operatorsByTypes","i","j","currentOperator","havingStr","strNum","isNaN","charAt","___CSS_LOADER_EXPORT___","api","content","__esModule","exports","locals"],"sourceRoot":""}