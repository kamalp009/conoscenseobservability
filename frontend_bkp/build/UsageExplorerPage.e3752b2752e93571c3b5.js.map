{"version":3,"file":"UsageExplorerPage.e3752b2752e93571c3b5.js","mappings":"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","sources":["webpack://frontend/./src/modules/Usage/UsageExplorer.tsx","webpack://frontend/./src/modules/Usage/index.tsx","webpack://frontend/./src/modules/Usage/styles.ts"],"sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n\nimport { Select, Space, Typography } from 'antd';\nimport Graph from 'components/Graph';\nimport { useEffect, useState } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { GetService, getUsageData, UsageDataItem } from 'store/actions';\nimport { AppState } from 'store/reducers';\nimport { GlobalTime } from 'types/actions/globalTime';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport MetricReducer from 'types/reducer/metrics';\nimport { isOnboardingSkipped } from 'utils/app';\n\nimport { Card } from './styles';\n\nconst { Option } = Select;\n\ninterface UsageExplorerProps {\n\tusageData: UsageDataItem[];\n\tgetUsageData: (\n\t\tminTime: number,\n\t\tmaxTime: number,\n\t\tselectedInterval: number,\n\t\tselectedService: string,\n\t) => void;\n\tgetServicesList: ({\n\t\tselectedTimeInterval,\n\t}: {\n\t\tselectedTimeInterval: GlobalReducer['selectedTime'];\n\t}) => void;\n\tglobalTime: GlobalTime;\n\tservicesList: servicesListItem[];\n\ttotalCount: number;\n}\nconst timeDaysOptions = [\n\t{ value: 30, label: 'Last 30 Days' },\n\t{ value: 7, label: 'Last week' },\n\t{ value: 1, label: 'Last day' },\n];\n\nconst interval = [\n\t{\n\t\tvalue: 604800,\n\t\tchartDivideMultiplier: 1,\n\t\tlabel: 'Weekly',\n\t\tapplicableOn: [timeDaysOptions[0]],\n\t},\n\t{\n\t\tvalue: 86400,\n\t\tchartDivideMultiplier: 30,\n\t\tlabel: 'Daily',\n\t\tapplicableOn: [timeDaysOptions[0], timeDaysOptions[1]],\n\t},\n\t{\n\t\tvalue: 3600,\n\t\tchartDivideMultiplier: 10,\n\t\tlabel: 'Hours',\n\t\tapplicableOn: [timeDaysOptions[2], timeDaysOptions[1]],\n\t},\n];\n\nfunction _UsageExplorer(props: UsageExplorerProps): JSX.Element {\n\tconst [selectedTime, setSelectedTime] = useState(timeDaysOptions[1]);\n\tconst [selectedInterval, setSelectedInterval] = useState(interval[2]);\n\tconst [selectedService, setSelectedService] = useState<string>('');\n\tconst { selectedTime: globalSelectedTime } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\tconst {\n\t\tgetServicesList,\n\t\tgetUsageData,\n\t\tglobalTime,\n\t\ttotalCount,\n\t\tusageData,\n\t} = props;\n\tconst { services } = useSelector<AppState, MetricReducer>(\n\t\t(state) => state.metrics,\n\t);\n\n\tuseEffect(() => {\n\t\tif (selectedTime && selectedInterval) {\n\t\t\tconst maxTime = new Date().getTime() * 1000000;\n\t\t\tconst minTime = maxTime - selectedTime.value * 24 * 3600000 * 1000000;\n\n\t\t\tgetUsageData(minTime, maxTime, selectedInterval.value, selectedService);\n\t\t}\n\t}, [selectedTime, selectedInterval, selectedService, getUsageData]);\n\n\tuseEffect(() => {\n\t\tgetServicesList({\n\t\t\tselectedTimeInterval: globalSelectedTime,\n\t\t});\n\t}, [globalTime, getServicesList, globalSelectedTime]);\n\n\tconst data = {\n\t\tlabels: usageData.map((s) => new Date(s.timestamp / 1000000)),\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Span Count',\n\t\t\t\tdata: usageData.map((s) => s.count),\n\t\t\t\tbackgroundColor: 'rgba(255, 99, 132, 0.2)',\n\t\t\t\tborderColor: 'rgba(255, 99, 132, 1)',\n\t\t\t\tborderWidth: 2,\n\t\t\t},\n\t\t],\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Space style={{ marginTop: 40, marginLeft: 20 }}>\n\t\t\t\t<Space>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tonSelect={(value): void => {\n\t\t\t\t\t\t\tsetSelectedTime(\n\t\t\t\t\t\t\t\ttimeDaysOptions.filter((item) => item.value == parseInt(value))[0],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={selectedTime.label}\n\t\t\t\t\t>\n\t\t\t\t\t\t{timeDaysOptions.map(({ value, label }) => (\n\t\t\t\t\t\t\t<Option key={value} value={value}>\n\t\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</Space>\n\t\t\t\t<Space>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tonSelect={(value): void => {\n\t\t\t\t\t\t\tsetSelectedInterval(\n\t\t\t\t\t\t\t\tinterval.filter((item) => item.value === parseInt(value))[0],\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={selectedInterval.label}\n\t\t\t\t\t>\n\t\t\t\t\t\t{interval\n\t\t\t\t\t\t\t.filter((interval) => interval.applicableOn.includes(selectedTime))\n\t\t\t\t\t\t\t.map((item) => (\n\t\t\t\t\t\t\t\t<Option key={item.label} value={item.value}>\n\t\t\t\t\t\t\t\t\t{item.label}\n\t\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</Space>\n\n\t\t\t\t<Space>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tonSelect={(value): void => {\n\t\t\t\t\t\t\tsetSelectedService(value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={selectedService || 'All Services'}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Option value=\"\">All Services</Option>\n\t\t\t\t\t\t{services?.map((service) => (\n\t\t\t\t\t\t\t<Option key={service.serviceName} value={service.serviceName}>\n\t\t\t\t\t\t\t\t{service.serviceName}\n\t\t\t\t\t\t\t</Option>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</Space>\n\n\t\t\t\t{isOnboardingSkipped() && totalCount === 0 ? (\n\t\t\t\t\t<Space\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\tmargin: '40px 0',\n\t\t\t\t\t\t\tmarginLeft: 20,\n\t\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tNo spans found. Please add instrumentation (follow this\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref=\"https://signoz.io/docs/instrumentation/overview\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\tstyle={{ marginLeft: 3 }}\n\t\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tguide\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Space>\n\t\t\t\t) : (\n\t\t\t\t\t<Space style={{ display: 'block', marginLeft: 20, width: 200 }}>\n\t\t\t\t\t\t<Typography>{`Total count is ${totalCount}`}</Typography>\n\t\t\t\t\t</Space>\n\t\t\t\t)}\n\t\t\t</Space>\n\n\t\t\t<Card>\n\t\t\t\t<Graph name=\"usage\" data={data} type=\"bar\" />\n\t\t\t</Card>\n\t\t</>\n\t);\n}\n\nconst mapStateToProps = (\n\tstate: AppState,\n): {\n\ttotalCount: number;\n\tglobalTime: GlobalTime;\n\tusageData: UsageDataItem[];\n} => {\n\tlet totalCount = 0;\n\tfor (const item of state.usageDate) {\n\t\ttotalCount += item.count;\n\t}\n\treturn {\n\t\ttotalCount,\n\t\tusageData: state.usageDate,\n\t\tglobalTime: state.globalTime,\n\t};\n};\n\nexport const UsageExplorer = withRouter(\n\tconnect(mapStateToProps, {\n\t\tgetUsageData,\n\t\tgetServicesList: GetService,\n\t})(_UsageExplorer),\n);\n","import { UsageExplorer } from './UsageExplorer';\n\nfunction UsageExplorerContainer(): JSX.Element {\n\treturn <UsageExplorer />;\n}\n\nexport default UsageExplorerContainer;\n","import { Card as CardComponent } from 'antd';\nimport styled from 'styled-components';\n\nexport const Card = styled(CardComponent)`\n\t&&& {\n\t\twidth: 90%;\n\t\tmargin-top: 2rem;\n\t}\n\n\t.ant-card-body {\n\t\theight: 70vh;\n\t}\n`;\n"],"names":["Option","Select","timeDaysOptions","value","label","interval","chartDivideMultiplier","applicableOn","_UsageExplorer","props","selectedTime","setSelectedTime","useState","selectedInterval","setSelectedInterval","selectedService","setSelectedService","globalSelectedTime","useSelector","state","globalTime","getServicesList","getUsageData","totalCount","usageData","services","metrics","useEffect","maxTime","Date","getTime","minTime","selectedTimeInterval","data","labels","map","s","timestamp","datasets","count","backgroundColor","borderColor","borderWidth","_jsxs","_Fragment","children","Space","style","marginTop","marginLeft","_jsx","onSelect","filter","item","parseInt","_ref","includes","service","serviceName","isOnboardingSkipped","width","margin","justifyContent","Typography","href","target","rel","display","concat","Card","Graph","name","type","__signature__","mapStateToProps","usageDate","UsageExplorer","withRouter","connect","GetService","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","UsageExplorerContainer","_default","styled","CardComponent","_templateObject"],"sourceRoot":""}