{"version":3,"file":"ServiceMetricsPage.0848d13ac8f69639c3c8.js","mappings":"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","sources":["webpack://frontend/./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","webpack://frontend/./node_modules/@ant-design/icons-svg/es/asn/QuestionCircleFilled.js","webpack://frontend/./node_modules/@ant-design/icons-svg/es/asn/QuestionCircleOutlined.js","webpack://frontend/./node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack://frontend/./node_modules/@ant-design/icons/es/icons/QuestionCircleFilled.js","webpack://frontend/./node_modules/@ant-design/icons/es/icons/QuestionCircleOutlined.js","webpack://frontend/./src/api/metrics/ApDex/apDexSettings.ts","webpack://frontend/./src/api/metrics/ApDex/getMetricMeta.ts","webpack://frontend/./src/api/metrics/getTopOperations.ts","webpack://frontend/./src/api/v1/settings/apdex/services/get.ts","webpack://frontend/./src/components/TextToolTip/TextToolTip.tsx","webpack://frontend/./src/components/TextToolTip/constant.ts","webpack://frontend/./src/components/TextToolTip/index.tsx","webpack://frontend/./src/constants/apDex.ts","webpack://frontend/./src/container/GridCardLayout/WidgetHeader/DisplayThreshold.tsx","webpack://frontend/./src/container/GridCardLayout/WidgetHeader/styles.ts","webpack://frontend/./src/container/MetricsApplication/MetricsPageQueries/DBCallQueries.ts","webpack://frontend/./src/container/MetricsApplication/MetricsPageQueries/ExternalQueries.ts","webpack://frontend/./src/container/MetricsApplication/MetricsPageQueries/OverviewQueries.ts","webpack://frontend/./src/container/MetricsApplication/MetricsPageQueries/TopOperationQueries.ts","webpack://frontend/./src/container/MetricsApplication/Tabs/DBCall.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/External.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/ApDex/ApDexMetrics.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/ApDex/ApDexMetricsApplication.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/ApDex/constants.ts","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/ApDex/index.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/GraphControlsPanel/GraphControlsPanel.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/ServiceOverview.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/TableRenderer/ColumnWithLink.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/TableRenderer/TableColumnRenderer.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/TopLevelOperations.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/TopOperation.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/TopOperationMetrics.tsx","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/config.ts","webpack://frontend/./src/container/MetricsApplication/TopOperationsTable.tsx","webpack://frontend/./src/container/MetricsApplication/styles.ts","webpack://frontend/./src/container/MetricsApplication/utils.ts","webpack://frontend/./src/hooks/apDex/useGetApDexSettings.ts","webpack://frontend/./src/hooks/apDex/useGetMetricMeta.ts","webpack://frontend/./src/hooks/apDex/useSetApDexSettings.ts","webpack://frontend/./src/pages/MetricsApplication/ApDex/ApDexApplication.tsx","webpack://frontend/./src/pages/MetricsApplication/ApDex/ApDexSettings.tsx","webpack://frontend/./src/pages/MetricsApplication/MetricsApplication.tsx","webpack://frontend/./src/pages/MetricsApplication/config.ts","webpack://frontend/./src/pages/MetricsApplication/constants.ts","webpack://frontend/./src/pages/MetricsApplication/styles.ts","webpack://frontend/./src/pages/MetricsApplication/types.ts","webpack://frontend/./src/pages/MetricsApplication/useMetricsApplicationTabKey.tsx","webpack://frontend/./src/pages/MetricsApplication/utils.ts","webpack://frontend/./src/pages/ServiceTopLevelOperations/index.tsx","webpack://frontend/./src/components/TextToolTip/TextToolTip.style.scss","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/GraphControlsPanel/GraphControlsPanel.styles.scss","webpack://frontend/./src/container/MetricsApplication/TopOperationsTable.styles.scss","webpack://frontend/./src/pages/ServiceTopLevelOperations/ServiceTopLevelOperations.styles.scss","webpack://frontend/./src/components/TextToolTip/TextToolTip.style.scss?1fd1","webpack://frontend/./src/container/MetricsApplication/Tabs/Overview/GraphControlsPanel/GraphControlsPanel.styles.scss?7f53","webpack://frontend/./src/container/MetricsApplication/TopOperationsTable.styles.scss?1f32","webpack://frontend/./src/pages/ServiceTopLevelOperations/ServiceTopLevelOperations.styles.scss?3853"],"sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","// This icon file is generated automatically.\nvar QuestionCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 708c-22.1 0-40-17.9-40-40s17.9-40 40-40 40 17.9 40 40-17.9 40-40 40zm62.9-219.5a48.3 48.3 0 00-30.9 44.8V620c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8v-21.5c0-23.1 6.7-45.9 19.9-64.9 12.9-18.6 30.9-32.8 52.1-40.9 34-13.1 56-41.6 56-72.7 0-44.1-43.1-80-96-80s-96 35.9-96 80v7.6c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V420c0-39.3 17.2-76 48.4-103.3C430.4 290.4 470 276 512 276s81.6 14.5 111.6 40.7C654.8 344 672 380.7 672 420c0 57.8-38.1 109.8-97.1 132.5z\" } }] }, \"name\": \"question-circle\", \"theme\": \"filled\" };\nexport default QuestionCircleFilled;\n","// This icon file is generated automatically.\nvar QuestionCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0130.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-17.1-76-48.3-103.3zM472 732a40 40 0 1080 0 40 40 0 10-80 0z\" } }] }, \"name\": \"question-circle\", \"theme\": \"outlined\" };\nexport default QuestionCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleFilledSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar QuestionCircleFilled = function QuestionCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleFilledSvg\n  }));\n};\nQuestionCircleFilled.displayName = 'QuestionCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleFilled);","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar QuestionCircleOutlined = function QuestionCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionCircleOutlinedSvg\n  }));\n};\nQuestionCircleOutlined.displayName = 'QuestionCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(QuestionCircleOutlined);","import axios from 'api';\nimport {\n\tApDexPayloadAndSettingsProps,\n\tSetApDexPayloadProps,\n} from 'types/api/metrics/getApDex';\n\nexport const setApDexSettings = async ({\n\tservicename,\n\tthreshold,\n\texcludeStatusCode,\n}: ApDexPayloadAndSettingsProps): Promise<SetApDexPayloadProps> =>\n\taxios.post('/settings/apdex', {\n\t\tservicename,\n\t\tthreshold,\n\t\texcludeStatusCode,\n\t});\n","import { ApiV4Instance } from 'api';\nimport { AxiosResponse } from 'axios';\nimport { MetricMetaProps } from 'types/api/metrics/getApDex';\n\nexport const getMetricMeta = (\n\tmetricName: string,\n\tservicename: string,\n): Promise<AxiosResponse<MetricMetaProps>> =>\n\tApiV4Instance.get(\n\t\t`/metric/metric_metadata?metricName=${metricName}&serviceName=${servicename}`,\n\t);\n","import axios from 'api';\nimport { PayloadProps, Props } from 'types/api/metrics/getTopOperations';\n\nconst getTopOperations = async (props: Props): Promise<PayloadProps> => {\n\tconst response = await axios.post(`/service/top_operations`, {\n\t\tstart: `${props.start}`,\n\t\tend: `${props.end}`,\n\t\tservice: props.service,\n\t\ttags: props.selectedTags,\n\t});\n\n\treturn response.data;\n};\n\nexport default getTopOperations;\n","import axios from 'api';\nimport { ErrorResponseHandlerV2 } from 'api/ErrorResponseHandlerV2';\nimport { AxiosError } from 'axios';\nimport { ErrorV2Resp, SuccessResponseV2 } from 'types/api';\nimport {\n\tApDexPayloadAndSettingsProps,\n\tPayloadProps,\n} from 'types/api/metrics/getApDex';\n\nconst getApDexSettings = async (\n\tservicename: string,\n): Promise<SuccessResponseV2<ApDexPayloadAndSettingsProps[]>> => {\n\ttry {\n\t\tconst response = await axios.get<PayloadProps>(\n\t\t\t`/settings/apdex?services=${servicename}`,\n\t\t);\n\t\treturn {\n\t\t\thttpStatusCode: response.status,\n\t\t\tdata: response.data.data,\n\t\t};\n\t} catch (error) {\n\t\tErrorResponseHandlerV2(error as AxiosError<ErrorV2Resp>);\n\t}\n};\n\nexport default getApDexSettings;\n","import './TextToolTip.style.scss';\n\nimport { blue, grey } from '@ant-design/colors';\nimport {\n\tQuestionCircleFilled,\n\tQuestionCircleOutlined,\n} from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nimport { themeColors } from 'constants/theme';\nimport { useIsDarkMode } from 'hooks/useDarkMode';\nimport { useMemo } from 'react';\n\nimport { style } from './constant';\n\nfunction TextToolTip({\n\ttext,\n\turl,\n\tuseFilledIcon = true,\n\turlText,\n}: TextToolTipProps): JSX.Element {\n\tconst isDarkMode = useIsDarkMode();\n\n\tconst onClickHandler = (\n\t\tevent: React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n\t): void => {\n\t\tevent.stopPropagation();\n\t};\n\n\tconst overlay = useMemo(\n\t\t() => (\n\t\t\t<div className=\"overlay--text-wrap\">\n\t\t\t\t{`${text} `}\n\t\t\t\t{url && (\n\t\t\t\t\t<a\n\t\t\t\t\t\t// Stopping event propagation on click so that parent click listener are not triggered\n\t\t\t\t\t\tonClick={onClickHandler}\n\t\t\t\t\t\thref={url}\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{urlText || 'here'}\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t),\n\t\t[text, url, urlText],\n\t);\n\n\tconst iconStyle = useMemo(\n\t\t() => ({\n\t\t\t...style,\n\t\t\tcolor: isDarkMode ? themeColors.whiteCream : grey[0],\n\t\t}),\n\t\t[isDarkMode],\n\t);\n\n\tconst iconOutlinedStyle = useMemo(\n\t\t() => ({\n\t\t\t...style,\n\t\t\tcolor: isDarkMode ? themeColors.navyBlue : blue[6],\n\t\t}),\n\t\t[isDarkMode],\n\t);\n\n\treturn (\n\t\t<Tooltip overlay={overlay}>\n\t\t\t{useFilledIcon ? (\n\t\t\t\t<QuestionCircleFilled style={iconStyle} />\n\t\t\t) : (\n\t\t\t\t<QuestionCircleOutlined style={iconOutlinedStyle} />\n\t\t\t)}\n\t\t</Tooltip>\n\t);\n}\n\nTextToolTip.defaultProps = {\n\turl: '',\n\turlText: '',\n\tuseFilledIcon: true,\n};\ninterface TextToolTipProps {\n\turl?: string;\n\ttext: string;\n\tuseFilledIcon?: boolean;\n\turlText?: string;\n}\n\nexport default TextToolTip;\n","export const style = { fontSize: '1rem' };\n","import TextToolTip from './TextToolTip';\n\nexport default TextToolTip;\n","export const apDexToolTipText =\n\t\"Apdex is a way to measure your users' satisfaction with the response time of your web service. It's represented as a score from 0-1.\";\nexport const apDexToolTipUrl =\n\t'https://Conoscense.io/docs/userguide/metrics/#apdex?utm_source=product&utm_medium=frontend&utm_campaign=apdex';\nexport const apDexToolTipUrlText = 'Learn more about Apdex.';\n","import { InfoCircleOutlined } from '@ant-design/icons';\n\nimport {\n\tDisplayThresholdContainer,\n\tTypographHeading,\n\tTypography,\n} from './styles';\nimport { DisplayThresholdProps } from './types';\n\nfunction DisplayThreshold({ threshold }: DisplayThresholdProps): JSX.Element {\n\treturn (\n\t\t<DisplayThresholdContainer>\n\t\t\t<TypographHeading>Threshold </TypographHeading>\n\t\t\t<Typography>{threshold || <InfoCircleOutlined />}</Typography>\n\t\t</DisplayThresholdContainer>\n\t);\n}\n\nexport default DisplayThreshold;\n","import { grey } from '@ant-design/colors';\nimport { Typography as TypographyComponent } from 'antd';\nimport styled from 'styled-components';\n\nexport const HeaderContainer = styled.div<{ hover: boolean }>`\n\twidth: 100%;\n\ttext-align: center;\n\tpadding: 0.25rem 0;\n\tfont-size: 0.8rem;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n`;\n\nexport const HeaderContentContainer = styled.span`\n\tcursor: pointer;\n\tposition: relative;\n\ttext-align: center;\n`;\n\nexport const ThesholdContainer = styled.span`\n\tmargin-top: -0.3rem;\n`;\n\nexport const DisplayThresholdContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: auto;\n\tjustify-content: space-between;\n`;\n\nexport const WidgetHeaderContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-end;\n\talign-items: center;\n\theight: 30px;\n\twidth: 100%;\n\tleft: 0;\n`;\n\nexport const ArrowContainer = styled.span<{ hover: boolean }>`\n\tvisibility: ${({ hover }): string => (hover ? 'visible' : 'hidden')};\n`;\n\nexport const Typography = styled(TypographyComponent)`\n\t&&& {\n\t\twidth: auto;\n\t\tmargin-left: 0.2rem;\n\t\tcolor: ${grey[2]};\n\t}\n`;\n\nexport const TypographHeading = styled(TypographyComponent)`\n\t&&& {\n\t\tcolor: ${grey[2]};\n\t}\n`;\n","import { OPERATORS } from 'constants/queryBuilder';\nimport {\n\tBaseAutocompleteData,\n\tDataTypes,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport {\n\tDataSource,\n\tMetricAggregateOperator,\n\tQueryBuilderData,\n} from 'types/common/queryBuilder';\n\nimport { FORMULA, MetricsType, WidgetKeys } from '../constant';\nimport { DatabaseCallProps, DatabaseCallsRPSProps } from '../types';\nimport {\n\tgetQueryBuilderQueries,\n\tgetQueryBuilderQuerieswithFormula,\n} from './MetricsPageQueriesFactory';\n\nexport const databaseCallsRPS = ({\n\tservicename,\n\tlegend,\n\ttagFilterItems,\n\tdotMetricsEnabled,\n}: DatabaseCallsRPSProps): QueryBuilderData => {\n\tconst autocompleteData: BaseAutocompleteData[] = [\n\t\t{\n\t\t\tkey: WidgetKeys.SignozDBLatencyCount,\n\t\t\tdataType: DataTypes.Float64,\n\t\t\tisColumn: true,\n\t\t\ttype: '',\n\t\t},\n\t];\n\tconst groupBy: BaseAutocompleteData[] = [\n\t\t{\n\t\t\tdataType: DataTypes.String,\n\t\t\tisColumn: false,\n\t\t\tkey: dotMetricsEnabled ? WidgetKeys.Db_system : WidgetKeys.Db_system_norm,\n\t\t\ttype: 'tag',\n\t\t},\n\t];\n\tconst filterItems: TagFilterItem[][] = [\n\t\t[\n\t\t\t{\n\t\t\t\tid: '',\n\t\t\t\tkey: {\n\t\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\tisColumn: false,\n\t\t\t\t\ttype: MetricsType.Resource,\n\t\t\t\t},\n\t\t\t\top: OPERATORS.IN,\n\t\t\t\tvalue: [`${servicename}`],\n\t\t\t},\n\t\t\t...tagFilterItems,\n\t\t],\n\t];\n\n\tconst legends = [legend];\n\tconst dataSource = DataSource.METRICS;\n\n\tconst timeAggregateOperators = [MetricAggregateOperator.RATE];\n\tconst spaceAggregateOperators = [MetricAggregateOperator.SUM];\n\n\treturn getQueryBuilderQueries({\n\t\tautocompleteData,\n\t\tgroupBy,\n\t\tlegends,\n\t\tfilterItems,\n\t\tdataSource,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t});\n};\n\nexport const databaseCallsAvgDuration = ({\n\tservicename,\n\ttagFilterItems,\n\tdotMetricsEnabled,\n}: DatabaseCallProps): QueryBuilderData => {\n\tconst autocompleteDataA: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozDbLatencySum,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\tconst autocompleteDataB: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozDBLatencyCount,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst additionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [servicename],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst autocompleteData: BaseAutocompleteData[] = [\n\t\tautocompleteDataA,\n\t\tautocompleteDataB,\n\t];\n\n\tconst additionalItems: TagFilterItem[][] = [\n\t\tadditionalItemsA,\n\t\tadditionalItemsA,\n\t];\n\n\tconst legends = ['', ''];\n\tconst disabled = [true, true];\n\tconst legendFormulas = ['Average Duration'];\n\tconst expressions = [FORMULA.DATABASE_CALLS_AVG_DURATION];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n","import { OPERATORS } from 'constants/queryBuilder';\nimport {\n\tBaseAutocompleteData,\n\tDataTypes,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport {\n\tDataSource,\n\tMetricAggregateOperator,\n\tQueryBuilderData,\n} from 'types/common/queryBuilder';\n\nimport { FORMULA, MetricsType, WidgetKeys } from '../constant';\nimport {\n\tExternalCallDurationByAddressProps,\n\tExternalCallProps,\n} from '../Tabs/types';\nimport {\n\tgetQueryBuilderQueries,\n\tgetQueryBuilderQuerieswithFormula,\n} from './MetricsPageQueriesFactory';\n\nconst groupBy: BaseAutocompleteData[] = [\n\t{\n\t\tdataType: DataTypes.String,\n\t\tisColumn: false,\n\t\tkey: WidgetKeys.Address,\n\t\ttype: MetricsType.Tag,\n\t},\n];\n\nexport const externalCallErrorPercent = ({\n\tservicename,\n\tlegend,\n\ttagFilterItems,\n\tdotMetricsEnabled,\n}: ExternalCallDurationByAddressProps): QueryBuilderData => {\n\tconst autocompleteDataA: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozExternalCallLatencyCount,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\tconst autocompleteDataB: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozExternalCallLatencyCount,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst additionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [servicename],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled ? WidgetKeys.StatusCode : WidgetKeys.StatusCodeNorm,\n\t\t\t\tdataType: DataTypes.Int64,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: ['STATUS_CODE_ERROR'],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\tconst additionalItemsB: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [servicename],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\tconst legendFormulas = [legend];\n\tconst expressions = [FORMULA.ERROR_PERCENTAGE];\n\tconst disabled = [true, true];\n\tconst autocompleteData = [autocompleteDataA, autocompleteDataB];\n\n\tconst additionalItems = [additionalItemsA, additionalItemsB];\n\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst legends = [legend, legend];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tgroupBy,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n\nexport const externalCallDuration = ({\n\tservicename,\n\ttagFilterItems,\n\tdotMetricsEnabled,\n}: ExternalCallProps): QueryBuilderData => {\n\tconst autocompleteDataA: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: WidgetKeys.SignozExternalCallLatencySum,\n\t\ttype: '',\n\t};\n\tconst autocompleteDataB: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: WidgetKeys.SignozExternalCallLatencyCount,\n\t\ttype: '',\n\t};\n\tconst expressions = [FORMULA.DATABASE_CALLS_AVG_DURATION];\n\tconst legendFormulas = ['Average Duration'];\n\tconst legend = '';\n\tconst disabled = [true, true];\n\tconst additionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [servicename],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst autocompleteData = [autocompleteDataA, autocompleteDataB];\n\n\tconst additionalItems = [additionalItemsA, additionalItemsA];\n\tconst legends = [legend, legend];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n\nexport const externalCallRpsByAddress = ({\n\tservicename,\n\tlegend,\n\ttagFilterItems,\n\tdotMetricsEnabled,\n}: ExternalCallDurationByAddressProps): QueryBuilderData => {\n\tconst autocompleteData: BaseAutocompleteData[] = [\n\t\t{\n\t\t\tdataType: DataTypes.Float64,\n\t\t\tisColumn: true,\n\t\t\tkey: WidgetKeys.SignozExternalCallLatencyCount,\n\t\t\ttype: '',\n\t\t},\n\t];\n\tconst filterItems: TagFilterItem[][] = [\n\t\t[\n\t\t\t{\n\t\t\t\tid: '',\n\t\t\t\tkey: {\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\tisColumn: false,\n\t\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\t\ttype: MetricsType.Resource,\n\t\t\t\t},\n\t\t\t\top: OPERATORS.IN,\n\t\t\t\tvalue: [servicename],\n\t\t\t},\n\t\t\t...tagFilterItems,\n\t\t],\n\t];\n\n\tconst legends = [legend];\n\tconst dataSource = DataSource.METRICS;\n\n\tconst timeAggregateOperators = [MetricAggregateOperator.RATE];\n\tconst spaceAggregateOperators = [MetricAggregateOperator.SUM];\n\n\treturn getQueryBuilderQueries({\n\t\tautocompleteData,\n\t\tgroupBy,\n\t\tlegends,\n\t\tfilterItems,\n\t\tdataSource,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t});\n};\n\nexport const externalCallDurationByAddress = ({\n\tservicename,\n\tlegend,\n\ttagFilterItems,\n\tdotMetricsEnabled,\n}: ExternalCallDurationByAddressProps): QueryBuilderData => {\n\tconst autocompleteDataA: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: WidgetKeys.SignozExternalCallLatencySum,\n\t\ttype: '',\n\t};\n\tconst autocompleteDataB: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: WidgetKeys.SignozExternalCallLatencyCount,\n\t\ttype: '',\n\t};\n\tconst expressions = [FORMULA.DATABASE_CALLS_AVG_DURATION];\n\tconst legendFormulas = [legend];\n\tconst disabled = [true, true];\n\tconst additionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [servicename],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst autocompleteData = [autocompleteDataA, autocompleteDataB];\n\tconst additionalItems = [additionalItemsA, additionalItemsA];\n\tconst legends = [legend, legend];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tgroupBy,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n","import { OPERATORS } from 'constants/queryBuilder';\nimport {\n\tBaseAutocompleteData,\n\tDataTypes,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport {\n\tDataSource,\n\tMetricAggregateOperator,\n\tQueryBuilderData,\n} from 'types/common/queryBuilder';\n\nimport {\n\tFORMULA,\n\tGraphTitle,\n\tLATENCY_AGGREGATEOPERATOR,\n\tLATENCY_AGGREGATEOPERATOR_SPAN_METRICS,\n\tMetricsType,\n\tOPERATION_LEGENDS,\n\tQUERYNAME_AND_EXPRESSION,\n\tWidgetKeys,\n} from '../constant';\nimport {\n\tApDexMetricsQueryBuilderQueriesProps,\n\tApDexProps,\n\tLatencyProps,\n\tOperationPerSecProps,\n} from '../Tabs/types';\nimport { convertMilSecToNanoSec, getNearestHighestBucketValue } from '../utils';\nimport {\n\tgetQueryBuilderQueries,\n\tgetQueryBuilderQuerieswithFormula,\n} from './MetricsPageQueriesFactory';\n\nexport const latency = ({\n\tservicename,\n\ttagFilterItems,\n\tisSpanMetricEnable = false,\n\ttopLevelOperationsRoute,\n\tdotMetricsEnabled,\n}: LatencyProps): QueryBuilderData => {\n\tconst signozLatencyBucketMetrics = dotMetricsEnabled\n\t\t? WidgetKeys.Signoz_latency_bucket\n\t\t: WidgetKeys.Signoz_latency_bucket_norm;\n\n\tconst signozMetricsServiceName = dotMetricsEnabled\n\t\t? WidgetKeys.Service_name\n\t\t: WidgetKeys.Service_name_norm;\n\tconst newAutoCompleteData: BaseAutocompleteData = {\n\t\tkey: isSpanMetricEnable\n\t\t\t? signozLatencyBucketMetrics\n\t\t\t: WidgetKeys.DurationNano,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: isSpanMetricEnable ? '' : MetricsType.Tag,\n\t};\n\n\tconst autocompleteData = Array(3).fill(newAutoCompleteData);\n\n\tconst filterItem: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: isSpanMetricEnable ? signozMetricsServiceName : WidgetKeys.ServiceName,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\ttype: isSpanMetricEnable ? MetricsType.Resource : MetricsType.Tag,\n\t\t\t\tisColumn: !isSpanMetricEnable,\n\t\t\t},\n\t\t\top: isSpanMetricEnable ? OPERATORS.IN : OPERATORS['='],\n\t\t\tvalue: isSpanMetricEnable ? [servicename] : servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: !isSpanMetricEnable,\n\t\t\t\tkey: isSpanMetricEnable ? WidgetKeys.Operation : WidgetKeys.Name,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN.toLowerCase(), // TODO: need to remove toLowerCase() this once backend is changed\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst filterItems = Array(3).fill([...filterItem]);\n\tconst legends = LATENCY_AGGREGATEOPERATOR;\n\tconst aggregateOperator = isSpanMetricEnable\n\t\t? LATENCY_AGGREGATEOPERATOR_SPAN_METRICS\n\t\t: LATENCY_AGGREGATEOPERATOR;\n\tconst dataSource = isSpanMetricEnable ? DataSource.METRICS : DataSource.TRACES;\n\tconst queryNameAndExpression = QUERYNAME_AND_EXPRESSION;\n\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.EMPTY,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.P50,\n\t\tMetricAggregateOperator.P90,\n\t\tMetricAggregateOperator.P99,\n\t];\n\n\treturn getQueryBuilderQueries({\n\t\tautocompleteData,\n\t\tlegends,\n\t\tfilterItems,\n\t\taggregateOperator,\n\t\tdataSource,\n\t\tqueryNameAndExpression,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t});\n};\n\nexport const apDexTracesQueryBuilderQueries = ({\n\tservicename,\n\ttagFilterItems,\n\ttopLevelOperationsRoute,\n\tthreashold,\n}: ApDexProps): QueryBuilderData => {\n\tconst autoCompleteDataA: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: '',\n\t\ttype: '',\n\t};\n\n\tconst autoCompleteDataB: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: '',\n\t\ttype: '',\n\t};\n\n\tconst autoCompleteDataC: BaseAutocompleteData = {\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\tkey: '',\n\t\ttype: '',\n\t};\n\n\tconst filterItemA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.ServiceName,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Name,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst filterItemB: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.HasError,\n\t\t\t\tdataType: DataTypes.bool,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: false,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.DurationNano,\n\t\t\t\tdataType: DataTypes.Float64,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['<='],\n\t\t\tvalue: convertMilSecToNanoSec(threashold),\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.ServiceName,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Name,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t];\n\n\tconst filterItemC: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.DurationNano,\n\t\t\t\tdataType: DataTypes.Float64,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['<='],\n\t\t\tvalue: convertMilSecToNanoSec(threashold * 4),\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.HasError,\n\t\t\t\tdataType: DataTypes.bool,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: false,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.ServiceName,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Name,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: true,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t];\n\n\tconst autocompleteData = [\n\t\tautoCompleteDataA,\n\t\tautoCompleteDataB,\n\t\tautoCompleteDataC,\n\t];\n\tconst additionalItems = [filterItemA, filterItemB, filterItemC];\n\tconst legends = [GraphTitle.APDEX];\n\tconst disabled = Array(3).fill(true);\n\tconst expressions = [FORMULA.APDEX_TRACES];\n\tconst legendFormulas = [GraphTitle.APDEX];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.COUNT,\n\t\tMetricAggregateOperator.COUNT,\n\t\tMetricAggregateOperator.COUNT,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.EMPTY,\n\t];\n\tconst dataSource = DataSource.TRACES;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n\nexport const apDexMetricsQueryBuilderQueries = ({\n\tservicename,\n\ttagFilterItems,\n\ttopLevelOperationsRoute,\n\tthreashold,\n\tdelta,\n\tmetricsBuckets,\n\tdotMetricsEnabled,\n}: ApDexMetricsQueryBuilderQueriesProps): QueryBuilderData => {\n\tconst autoCompleteDataA: BaseAutocompleteData = {\n\t\tkey: dotMetricsEnabled\n\t\t\t? WidgetKeys.SignozLatencyCount\n\t\t\t: WidgetKeys.SignozLatencyCountNorm,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst autoCompleteDataB: BaseAutocompleteData = {\n\t\tkey: dotMetricsEnabled\n\t\t\t? WidgetKeys.Signoz_latency_bucket\n\t\t\t: WidgetKeys.Signoz_latency_bucket_norm,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst autoCompleteDataC: BaseAutocompleteData = {\n\t\tkey: dotMetricsEnabled\n\t\t\t? WidgetKeys.Signoz_latency_bucket\n\t\t\t: WidgetKeys.Signoz_latency_bucket_norm,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst filterItemA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst filterItemB: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled ? WidgetKeys.StatusCode : WidgetKeys.StatusCodeNorm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['!='],\n\t\t\tvalue: 'STATUS_CODE_ERROR',\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Le,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: getNearestHighestBucketValue(threashold * 1000, metricsBuckets),\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst filterItemC: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Le,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: getNearestHighestBucketValue(threashold * 1000 * 4, metricsBuckets),\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled ? WidgetKeys.StatusCode : WidgetKeys.StatusCodeNorm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['!='],\n\t\t\tvalue: 'STATUS_CODE_ERROR',\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS['='],\n\t\t\tvalue: servicename,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [...topLevelOperationsRoute],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst autocompleteData = [\n\t\tautoCompleteDataA,\n\t\tautoCompleteDataB,\n\t\tautoCompleteDataC,\n\t];\n\n\tconst additionalItems = [filterItemA, filterItemB, filterItemC];\n\tconst legends = [GraphTitle.APDEX];\n\tconst disabled = Array(3).fill(true);\n\tconst expressions = delta\n\t\t? [FORMULA.APDEX_DELTA_SPAN_METRICS]\n\t\t: [FORMULA.APDEX_CUMULATIVE_SPAN_METRICS];\n\tconst legendFormulas = [GraphTitle.APDEX];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n\nexport const operationPerSec = ({\n\tservicename,\n\ttagFilterItems,\n\ttopLevelOperations,\n\tdotMetricsEnabled,\n}: OperationPerSecProps): QueryBuilderData => {\n\tconst autocompleteData: BaseAutocompleteData[] = [\n\t\t{\n\t\t\tkey: dotMetricsEnabled\n\t\t\t\t? WidgetKeys.SignozLatencyCount\n\t\t\t\t: WidgetKeys.SignozLatencyCountNorm,\n\t\t\tdataType: DataTypes.Float64,\n\t\t\tisColumn: true,\n\t\t\ttype: '',\n\t\t},\n\t];\n\n\tconst filterItems: TagFilterItem[][] = [\n\t\t[\n\t\t\t{\n\t\t\t\tid: '',\n\t\t\t\tkey: {\n\t\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\tisColumn: false,\n\t\t\t\t\ttype: MetricsType.Resource,\n\t\t\t\t},\n\t\t\t\top: OPERATORS.IN,\n\t\t\t\tvalue: [`${servicename}`],\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '',\n\t\t\t\tkey: {\n\t\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\tisColumn: false,\n\t\t\t\t\ttype: MetricsType.Tag,\n\t\t\t\t},\n\t\t\t\top: OPERATORS.IN,\n\t\t\t\tvalue: topLevelOperations,\n\t\t\t},\n\t\t\t...tagFilterItems,\n\t\t],\n\t];\n\n\tconst legends = OPERATION_LEGENDS;\n\tconst dataSource = DataSource.METRICS;\n\n\tconst timeAggregateOperators = [MetricAggregateOperator.RATE];\n\tconst spaceAggregateOperators = [MetricAggregateOperator.SUM];\n\n\treturn getQueryBuilderQueries({\n\t\tautocompleteData,\n\t\tlegends,\n\t\tfilterItems,\n\t\tdataSource,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t});\n};\n\nexport const errorPercentage = ({\n\tservicename,\n\ttagFilterItems,\n\ttopLevelOperations,\n\tdotMetricsEnabled,\n}: OperationPerSecProps): QueryBuilderData => {\n\tconst autocompleteDataA: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozCallsTotal,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\tconst autocompleteDataB: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozCallsTotal,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst autocompleteData = [autocompleteDataA, autocompleteDataB];\n\n\tconst additionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [`${servicename}`],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: topLevelOperations,\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.StatusCodeNorm,\n\t\t\t\tdataType: DataTypes.Int64,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: ['STATUS_CODE_ERROR'],\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst additionalItemsB: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [`${servicename}`],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: WidgetKeys.Operation,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: topLevelOperations,\n\t\t},\n\t\t...tagFilterItems,\n\t];\n\n\tconst additionalItems = [additionalItemsA, additionalItemsB];\n\tconst legends = [GraphTitle.ERROR_PERCENTAGE];\n\tconst disabled = [true, true];\n\tconst expressions = [FORMULA.ERROR_PERCENTAGE];\n\tconst legendFormulas = [GraphTitle.ERROR_PERCENTAGE];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tlegends,\n\t\tdisabled,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\tdataSource,\n\t});\n};\n","import { OPERATORS } from 'constants/queryBuilder';\nimport {\n\tBaseAutocompleteData,\n\tDataTypes,\n} from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport {\n\tDataSource,\n\tMetricAggregateOperator,\n\tQueryBuilderData,\n} from 'types/common/queryBuilder';\n\nimport {\n\tGraphTitle,\n\tKeyOperationTableHeader,\n\tMetricsType,\n\tWidgetKeys,\n} from '../constant';\nimport { TopOperationQueryFactoryProps } from '../Tabs/types';\nimport { getQueryBuilderQuerieswithFormula } from './MetricsPageQueriesFactory';\n\nexport const topOperationQueries = ({\n\tservicename,\n\tdotMetricsEnabled,\n}: TopOperationQueryFactoryProps): QueryBuilderData => {\n\tconst latencyAutoCompleteData: BaseAutocompleteData = {\n\t\tkey: dotMetricsEnabled\n\t\t\t? WidgetKeys.Signoz_latency_bucket\n\t\t\t: WidgetKeys.Signoz_latency_bucket_norm,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst errorRateAutoCompleteData: BaseAutocompleteData = {\n\t\tkey: WidgetKeys.SignozCallsTotal,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst numOfCallAutoCompleteData: BaseAutocompleteData = {\n\t\tkey: dotMetricsEnabled\n\t\t\t? WidgetKeys.SignozLatencyCount\n\t\t\t: WidgetKeys.SignozLatencyCountNorm,\n\t\tdataType: DataTypes.Float64,\n\t\tisColumn: true,\n\t\ttype: '',\n\t};\n\n\tconst latencyAndNumberOfCallAdditionalItems: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\tvalue: [servicename],\n\t\t\top: OPERATORS.IN,\n\t\t},\n\t];\n\n\tconst errorRateAdditionalItemsA: TagFilterItem[] = [\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.String,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled\n\t\t\t\t\t? WidgetKeys.Service_name\n\t\t\t\t\t: WidgetKeys.Service_name_norm,\n\t\t\t\ttype: MetricsType.Resource,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: [servicename],\n\t\t},\n\t\t{\n\t\t\tid: '',\n\t\t\tkey: {\n\t\t\t\tdataType: DataTypes.Int64,\n\t\t\t\tisColumn: false,\n\t\t\t\tkey: dotMetricsEnabled ? WidgetKeys.StatusCode : WidgetKeys.StatusCodeNorm,\n\t\t\t\ttype: MetricsType.Tag,\n\t\t\t},\n\t\t\top: OPERATORS.IN,\n\t\t\tvalue: ['STATUS_CODE_ERROR'],\n\t\t},\n\t];\n\n\tconst errorRateAdditionalItemsB = latencyAndNumberOfCallAdditionalItems;\n\n\tconst groupBy: BaseAutocompleteData[] = [\n\t\t{\n\t\t\tdataType: DataTypes.String,\n\t\t\tisColumn: false,\n\t\t\tkey: WidgetKeys.Operation,\n\t\t\ttype: MetricsType.Tag,\n\t\t},\n\t];\n\n\tconst autocompleteData = [\n\t\tlatencyAutoCompleteData,\n\t\tlatencyAutoCompleteData,\n\t\tlatencyAutoCompleteData,\n\t\terrorRateAutoCompleteData,\n\t\terrorRateAutoCompleteData,\n\t\tnumOfCallAutoCompleteData,\n\t];\n\tconst additionalItems = [\n\t\tlatencyAndNumberOfCallAdditionalItems,\n\t\tlatencyAndNumberOfCallAdditionalItems,\n\t\tlatencyAndNumberOfCallAdditionalItems,\n\t\terrorRateAdditionalItemsA,\n\t\terrorRateAdditionalItemsB,\n\t\tlatencyAndNumberOfCallAdditionalItems,\n\t];\n\tconst disabled = [false, false, false, true, true, false];\n\tconst legends = [\n\t\tKeyOperationTableHeader.P50,\n\t\tKeyOperationTableHeader.P90,\n\t\tKeyOperationTableHeader.P99,\n\t\tKeyOperationTableHeader.ERROR_RATE,\n\t\tKeyOperationTableHeader.ERROR_RATE,\n\t\tKeyOperationTableHeader.NUM_OF_CALLS,\n\t];\n\tconst timeAggregateOperators = [\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.EMPTY,\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t\tMetricAggregateOperator.RATE,\n\t];\n\tconst spaceAggregateOperators = [\n\t\tMetricAggregateOperator.P50,\n\t\tMetricAggregateOperator.P90,\n\t\tMetricAggregateOperator.P99,\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t\tMetricAggregateOperator.SUM,\n\t];\n\tconst expressions = ['D*100/E'];\n\tconst legendFormulas = [GraphTitle.ERROR_PERCENTAGE];\n\tconst dataSource = DataSource.METRICS;\n\n\treturn getQueryBuilderQuerieswithFormula({\n\t\tautocompleteData,\n\t\tadditionalItems,\n\t\tdisabled,\n\t\tlegends,\n\t\ttimeAggregateOperators,\n\t\tspaceAggregateOperators,\n\t\texpressions,\n\t\tlegendFormulas,\n\t\tdataSource,\n\t\tgroupBy,\n\t});\n};\n","import { Col } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport { QueryParams } from 'constants/query';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport Graph from 'container/GridCardLayout/GridCard';\nimport {\n\tdatabaseCallsAvgDuration,\n\tdatabaseCallsRPS,\n} from 'container/MetricsApplication/MetricsPageQueries/DBCallQueries';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport {\n\tconvertRawQueriesToTraceSelectedTags,\n\tgetResourceDeploymentKeys,\n\tresourceAttributesToTagFilterItems,\n} from 'hooks/useResourceAttribute/utils';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport getStep from 'lib/getStep';\nimport history from 'lib/history';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom';\nimport store from 'store';\nimport { UpdateTimeInterval } from 'store/actions';\nimport { TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport { EQueryType } from 'types/common/dashboard';\nimport { v4 as uuid } from 'uuid';\n\nimport { FeatureKeys } from '../../../constants/features';\nimport { useAppContext } from '../../../providers/App/App';\nimport { GraphTitle, MENU_ITEMS, SERVICE_CHART_ID } from '../constant';\nimport { getWidgetQueryBuilder } from '../MetricsApplication.factory';\nimport { Card, GraphContainer, Row } from '../styles';\nimport { Button } from './styles';\nimport { IServiceName } from './types';\nimport {\n\tdbSystemTags,\n\thandleNonInQueryRange,\n\tonViewTracePopupClick,\n\tuseGetAPMToTracesQueries,\n\tuseGraphClickHandler,\n} from './util';\n\nfunction DBCall(): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\tconst [selectedTimeStamp, setSelectedTimeStamp] = useState<number>(0);\n\tconst { queries } = useResourceAttribute();\n\tconst urlQuery = useUrlQuery();\n\tconst { pathname } = useLocation();\n\tconst dispatch = useDispatch();\n\n\tconst onDragSelect = useCallback(\n\t\t(start: number, end: number) => {\n\t\t\tconst startTimestamp = Math.trunc(start);\n\t\t\tconst endTimestamp = Math.trunc(end);\n\n\t\t\turlQuery.set(QueryParams.startTime, startTimestamp.toString());\n\t\t\turlQuery.set(QueryParams.endTime, endTimestamp.toString());\n\t\t\tconst generatedUrl = `${pathname}?${urlQuery.toString()}`;\n\t\t\thistory.push(generatedUrl);\n\n\t\t\tif (startTimestamp !== endTimestamp) {\n\t\t\t\tdispatch(UpdateTimeInterval('custom', [startTimestamp, endTimestamp]));\n\t\t\t}\n\t\t},\n\t\t[dispatch, pathname, urlQuery],\n\t);\n\n\tconst tagFilterItems: TagFilterItem[] = useMemo(\n\t\t() =>\n\t\t\thandleNonInQueryRange(resourceAttributesToTagFilterItems(queries)) || [],\n\t\t[queries],\n\t);\n\n\tconst selectedTraceTags: string = useMemo(\n\t\t() =>\n\t\t\tJSON.stringify(\n\t\t\t\tconvertRawQueriesToTraceSelectedTags(queries).concat(...dbSystemTags) || [],\n\t\t\t),\n\t\t[queries],\n\t);\n\n\tconst { featureFlags } = useAppContext();\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tconst legend = dotMetricsEnabled ? '{{db.system}}' : '{{db_system}}';\n\n\tconst databaseCallsRPSWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: databaseCallsRPS({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tlegend,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.DATABASE_CALLS_RPS,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'reqps',\n\t\t\t\tid: SERVICE_CHART_ID.dbCallsRPS,\n\t\t\t\tfillSpans: false,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, dotMetricsEnabled, legend],\n\t);\n\tconst databaseCallsAverageDurationWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: databaseCallsAvgDuration({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.DATABASE_CALLS_AVG_DURATION,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'ms',\n\t\t\t\tid: GraphTitle.DATABASE_CALLS_AVG_DURATION,\n\t\t\t\tfillSpans: true,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, dotMetricsEnabled],\n\t);\n\n\tconst stepInterval = useMemo(\n\t\t() =>\n\t\t\tgetStep({\n\t\t\t\tend: store.getState().globalTime.maxTime,\n\t\t\t\tinputFormat: 'ns',\n\t\t\t\tstart: store.getState().globalTime.minTime,\n\t\t\t}),\n\t\t[],\n\t);\n\n\tconst logEventCalledRef = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (!logEventCalledRef.current) {\n\t\t\tconst selectedEnvironments = queries.find(\n\t\t\t\t(val) => val.tagKey === getResourceDeploymentKeys(dotMetricsEnabled),\n\t\t\t)?.tagValue;\n\n\t\t\tlogEvent('APM: Service detail page visited', {\n\t\t\t\tselectedEnvironments,\n\t\t\t\tresourceAttributeUsed: !!queries?.length,\n\t\t\t\tsection: 'dbMetrics',\n\t\t\t});\n\t\t\tlogEventCalledRef.current = true;\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst apmToTraceQuery = useGetAPMToTracesQueries({\n\t\tservicename,\n\t\tisDBCall: true,\n\t});\n\tconst { safeNavigate } = useSafeNavigate();\n\n\tconst onGraphClickHandler = useGraphClickHandler(setSelectedTimeStamp);\n\n\treturn (\n\t\t<Row gutter={24}>\n\t\t\t<Col span={12}>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"default\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tid=\"database_call_rps_button\"\n\t\t\t\t\tonClick={onViewTracePopupClick({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\tView Traces\n\t\t\t\t</Button>\n\t\t\t\t<Card data-testid=\"database_call_rps\">\n\t\t\t\t\t<GraphContainer>\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\twidget={databaseCallsRPSWidget}\n\t\t\t\t\t\t\tonClickHandler={(xValue, yValue, mouseX, mouseY): void => {\n\t\t\t\t\t\t\t\tonGraphClickHandler(\n\t\t\t\t\t\t\t\t\txValue,\n\t\t\t\t\t\t\t\t\tyValue,\n\t\t\t\t\t\t\t\t\tmouseX,\n\t\t\t\t\t\t\t\t\tmouseY,\n\t\t\t\t\t\t\t\t\t'database_call_rps',\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GraphContainer>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\n\t\t\t<Col span={12}>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"default\"\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tid=\"database_call_avg_duration_button\"\n\t\t\t\t\tonClick={onViewTracePopupClick({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\tView Traces\n\t\t\t\t</Button>\n\n\t\t\t\t<Card data-testid=\"database_call_avg_duration\">\n\t\t\t\t\t<GraphContainer>\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\twidget={databaseCallsAverageDurationWidget}\n\t\t\t\t\t\t\theaderMenuList={MENU_ITEMS}\n\t\t\t\t\t\t\tonClickHandler={(xValue, yValue, mouseX, mouseY): void => {\n\t\t\t\t\t\t\t\tonGraphClickHandler(\n\t\t\t\t\t\t\t\t\txValue,\n\t\t\t\t\t\t\t\t\tyValue,\n\t\t\t\t\t\t\t\t\tmouseX,\n\t\t\t\t\t\t\t\t\tmouseY,\n\t\t\t\t\t\t\t\t\t'database_call_avg_duration',\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</GraphContainer>\n\t\t\t\t</Card>\n\t\t\t</Col>\n\t\t</Row>\n\t);\n}\n\nexport default DBCall;\n","import { Col } from 'antd';\nimport logEvent from 'api/common/logEvent';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport { QueryParams } from 'constants/query';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport Graph from 'container/GridCardLayout/GridCard';\nimport {\n\texternalCallDuration,\n\texternalCallDurationByAddress,\n\texternalCallErrorPercent,\n\texternalCallRpsByAddress,\n} from 'container/MetricsApplication/MetricsPageQueries/ExternalQueries';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport {\n\tconvertRawQueriesToTraceSelectedTags,\n\tgetResourceDeploymentKeys,\n\tresourceAttributesToTagFilterItems,\n} from 'hooks/useResourceAttribute/utils';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport getStep from 'lib/getStep';\nimport history from 'lib/history';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom';\nimport store from 'store';\nimport { UpdateTimeInterval } from 'store/actions';\nimport { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { EQueryType } from 'types/common/dashboard';\nimport { v4 as uuid } from 'uuid';\n\nimport { FeatureKeys } from '../../../constants/features';\nimport { useAppContext } from '../../../providers/App/App';\nimport { GraphTitle, legend, MENU_ITEMS } from '../constant';\nimport { getWidgetQueryBuilder } from '../MetricsApplication.factory';\nimport { Card, GraphContainer, Row } from '../styles';\nimport GraphControlsPanel from './Overview/GraphControlsPanel/GraphControlsPanel';\nimport { IServiceName } from './types';\nimport {\n\thandleNonInQueryRange,\n\tonViewAPIMonitoringPopupClick,\n\tonViewTracePopupClick,\n\tuseGetAPMToTracesQueries,\n\tuseGraphClickHandler,\n} from './util';\n\nfunction External(): JSX.Element {\n\tconst [selectedTimeStamp, setSelectedTimeStamp] = useState<number>(0);\n\tconst [selectedData, setSelectedData] = useState<any>(undefined);\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\tconst { queries } = useResourceAttribute();\n\n\tconst urlQuery = useUrlQuery();\n\tconst { pathname } = useLocation();\n\tconst dispatch = useDispatch();\n\n\tconst onDragSelect = useCallback(\n\t\t(start: number, end: number) => {\n\t\t\tconst startTimestamp = Math.trunc(start);\n\t\t\tconst endTimestamp = Math.trunc(end);\n\n\t\t\turlQuery.set(QueryParams.startTime, startTimestamp.toString());\n\t\t\turlQuery.set(QueryParams.endTime, endTimestamp.toString());\n\t\t\tconst generatedUrl = `${pathname}?${urlQuery.toString()}`;\n\t\t\thistory.push(generatedUrl);\n\n\t\t\tif (startTimestamp !== endTimestamp) {\n\t\t\t\tdispatch(UpdateTimeInterval('custom', [startTimestamp, endTimestamp]));\n\t\t\t}\n\t\t},\n\t\t[dispatch, pathname, urlQuery],\n\t);\n\n\tconst tagFilterItems = useMemo(\n\t\t() =>\n\t\t\thandleNonInQueryRange(resourceAttributesToTagFilterItems(queries)) || [],\n\t\t[queries],\n\t);\n\tconst { featureFlags } = useAppContext();\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tconst externalCallErrorWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: externalCallErrorPercent({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tlegend: legend.address,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.EXTERNAL_CALL_ERROR_PERCENTAGE,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: '%',\n\t\t\t\tid: GraphTitle.EXTERNAL_CALL_ERROR_PERCENTAGE,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, dotMetricsEnabled],\n\t);\n\n\tconst selectedTraceTags = useMemo(\n\t\t() => JSON.stringify(convertRawQueriesToTraceSelectedTags(queries) || []),\n\t\t[queries],\n\t);\n\n\tconst externalCallDurationWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: externalCallDuration({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.EXTERNAL_CALL_DURATION,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'ms',\n\t\t\t\tid: GraphTitle.EXTERNAL_CALL_DURATION,\n\t\t\t\tfillSpans: true,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, dotMetricsEnabled],\n\t);\n\n\tconst errorApmToTraceQuery = useGetAPMToTracesQueries({\n\t\tservicename,\n\t\tisExternalCall: true,\n\t\tfilters: [\n\t\t\t{\n\t\t\t\tid: uuid().slice(0, 8),\n\t\t\t\tkey: {\n\t\t\t\t\tkey: 'hasError',\n\t\t\t\t\tdataType: DataTypes.bool,\n\t\t\t\t\ttype: 'tag',\n\t\t\t\t\tisColumn: true,\n\t\t\t\t\tisJSON: false,\n\t\t\t\t\tid: 'hasError--bool--tag--true',\n\t\t\t\t},\n\t\t\t\top: 'in',\n\t\t\t\tvalue: ['true'],\n\t\t\t},\n\t\t],\n\t});\n\n\tconst stepInterval = useMemo(\n\t\t() =>\n\t\t\tgetStep({\n\t\t\t\tend: store.getState().globalTime.maxTime,\n\t\t\t\tinputFormat: 'ns',\n\t\t\t\tstart: store.getState().globalTime.minTime,\n\t\t\t}),\n\t\t[],\n\t);\n\tconst logEventCalledRef = useRef(false);\n\tuseEffect(() => {\n\t\tif (!logEventCalledRef.current) {\n\t\t\tconst selectedEnvironments = queries.find(\n\t\t\t\t(val) => val.tagKey === getResourceDeploymentKeys(dotMetricsEnabled),\n\t\t\t)?.tagValue;\n\n\t\t\tlogEvent('APM: Service detail page visited', {\n\t\t\t\tselectedEnvironments,\n\t\t\t\tresourceAttributeUsed: !!queries?.length,\n\t\t\t\tsection: 'externalMetrics',\n\t\t\t});\n\t\t\tlogEventCalledRef.current = true;\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst externalCallRPSWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: externalCallRpsByAddress({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tlegend: legend.address,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.EXTERNAL_CALL_RPS_BY_ADDRESS,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'reqps',\n\t\t\t\tid: GraphTitle.EXTERNAL_CALL_RPS_BY_ADDRESS,\n\t\t\t\tfillSpans: true,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, dotMetricsEnabled],\n\t);\n\n\tconst externalCallDurationAddressWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: externalCallDurationByAddress({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tlegend: legend.address,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.EXTERNAL_CALL_DURATION_BY_ADDRESS,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'ms',\n\t\t\t\tid: GraphTitle.EXTERNAL_CALL_DURATION_BY_ADDRESS,\n\t\t\t\tfillSpans: true,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, dotMetricsEnabled],\n\t);\n\n\tconst apmToTraceQuery = useGetAPMToTracesQueries({\n\t\tservicename,\n\t\tisExternalCall: true,\n\t});\n\n\tconst { safeNavigate } = useSafeNavigate();\n\n\tconst onGraphClickHandler = useGraphClickHandler(\n\t\tsetSelectedTimeStamp,\n\t\tsetSelectedData,\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Row gutter={24}>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<GraphControlsPanel\n\t\t\t\t\t\tid=\"external_call_error_percentage_button\"\n\t\t\t\t\t\tonViewTracesClick={onViewTracePopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tapmToTraceQuery: errorApmToTraceQuery,\n\t\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonViewAPIMonitoringClick={onViewAPIMonitoringPopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tdomainName: selectedData?.address || '',\n\t\t\t\t\t\t\tisError: true,\n\t\t\t\t\t\t\tstepInterval: 300,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Card data-testid=\"external_call_error_percentage\">\n\t\t\t\t\t\t<GraphContainer>\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\theaderMenuList={MENU_ITEMS}\n\t\t\t\t\t\t\t\twidget={externalCallErrorWidget}\n\t\t\t\t\t\t\t\tonClickHandler={(xValue, yValue, mouseX, mouseY, data): void => {\n\t\t\t\t\t\t\t\t\tonGraphClickHandler(\n\t\t\t\t\t\t\t\t\t\txValue,\n\t\t\t\t\t\t\t\t\t\tyValue,\n\t\t\t\t\t\t\t\t\t\tmouseX,\n\t\t\t\t\t\t\t\t\t\tmouseY,\n\t\t\t\t\t\t\t\t\t\t'external_call_error_percentage',\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GraphContainer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<GraphControlsPanel\n\t\t\t\t\t\tid=\"external_call_duration_button\"\n\t\t\t\t\t\tonViewTracesClick={onViewTracePopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonViewAPIMonitoringClick={onViewAPIMonitoringPopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tdomainName: selectedData?.address,\n\t\t\t\t\t\t\tisError: false,\n\t\t\t\t\t\t\tstepInterval: 300,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Card data-testid=\"external_call_duration\">\n\t\t\t\t\t\t<GraphContainer>\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\theaderMenuList={MENU_ITEMS}\n\t\t\t\t\t\t\t\twidget={externalCallDurationWidget}\n\t\t\t\t\t\t\t\tonClickHandler={(xValue, yValue, mouseX, mouseY, data): void => {\n\t\t\t\t\t\t\t\t\tonGraphClickHandler(\n\t\t\t\t\t\t\t\t\t\txValue,\n\t\t\t\t\t\t\t\t\t\tyValue,\n\t\t\t\t\t\t\t\t\t\tmouseX,\n\t\t\t\t\t\t\t\t\t\tmouseY,\n\t\t\t\t\t\t\t\t\t\t'external_call_duration',\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GraphContainer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t\t<Row gutter={24}>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<GraphControlsPanel\n\t\t\t\t\t\tid=\"external_call_rps_by_address_button\"\n\t\t\t\t\t\tonViewTracesClick={onViewTracePopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonViewAPIMonitoringClick={onViewAPIMonitoringPopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tdomainName: selectedData?.address,\n\t\t\t\t\t\t\tisError: false,\n\t\t\t\t\t\t\tstepInterval: 300,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Card data-testid=\"external_call_rps_by_address\">\n\t\t\t\t\t\t<GraphContainer>\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\twidget={externalCallRPSWidget}\n\t\t\t\t\t\t\t\theaderMenuList={MENU_ITEMS}\n\t\t\t\t\t\t\t\tonClickHandler={(xValue, yValue, mouseX, mouseY, data): Promise<void> =>\n\t\t\t\t\t\t\t\t\tonGraphClickHandler(\n\t\t\t\t\t\t\t\t\t\txValue,\n\t\t\t\t\t\t\t\t\t\tyValue,\n\t\t\t\t\t\t\t\t\t\tmouseX,\n\t\t\t\t\t\t\t\t\t\tmouseY,\n\t\t\t\t\t\t\t\t\t\t'external_call_rps_by_address',\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GraphContainer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<GraphControlsPanel\n\t\t\t\t\t\tid=\"external_call_duration_by_address_button\"\n\t\t\t\t\t\tonViewTracesClick={onViewTracePopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\tonViewAPIMonitoringClick={onViewAPIMonitoringPopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tdomainName: selectedData?.address,\n\t\t\t\t\t\t\tisError: false,\n\t\t\t\t\t\t\tstepInterval: 300,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Card data-testid=\"external_call_duration_by_address\">\n\t\t\t\t\t\t<GraphContainer>\n\t\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\t\twidget={externalCallDurationAddressWidget}\n\t\t\t\t\t\t\t\theaderMenuList={MENU_ITEMS}\n\t\t\t\t\t\t\t\tonClickHandler={(xValue, yValue, mouseX, mouseY, data): void => {\n\t\t\t\t\t\t\t\t\tonGraphClickHandler(\n\t\t\t\t\t\t\t\t\t\txValue,\n\t\t\t\t\t\t\t\t\t\tyValue,\n\t\t\t\t\t\t\t\t\t\tmouseX,\n\t\t\t\t\t\t\t\t\t\tmouseY,\n\t\t\t\t\t\t\t\t\t\t'external_call_duration_by_address',\n\t\t\t\t\t\t\t\t\t\tdata,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</GraphContainer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n}\n\nexport default External;\n","import logEvent from 'api/common/logEvent';\nimport getTopLevelOperations, {\n\tServiceDataProps,\n} from 'api/metrics/getTopLevelOperations';\nimport { FeatureKeys } from 'constants/features';\nimport { QueryParams } from 'constants/query';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport ROUTES from 'constants/routes';\nimport { routeConfig } from 'container/SideNav/config';\nimport { getQueryString } from 'container/SideNav/helper';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport {\n\tconvertRawQueriesToTraceSelectedTags,\n\tgetResourceDeploymentKeys,\n\tresourceAttributesToTagFilterItems,\n} from 'hooks/useResourceAttribute/utils';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport getStep from 'lib/getStep';\nimport history from 'lib/history';\nimport { OnClickPluginOpts } from 'lib/uPlotLib/plugins/onClickPlugin';\nimport { defaultTo } from 'lodash-es';\nimport { useAppContext } from 'providers/App/App';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { UpdateTimeInterval } from 'store/actions';\nimport { AppState } from 'store/reducers';\nimport { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { Query } from 'types/api/queryBuilder/queryBuilderData';\nimport { EQueryType } from 'types/common/dashboard';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { secondsToMilliseconds } from 'utils/timeUtils';\nimport { v4 as uuid } from 'uuid';\n\nimport { GraphTitle, SERVICE_CHART_ID } from '../constant';\nimport { getWidgetQueryBuilder } from '../MetricsApplication.factory';\nimport {\n\terrorPercentage,\n\toperationPerSec,\n} from '../MetricsPageQueries/OverviewQueries';\nimport { Col, ColApDexContainer, ColErrorContainer, Row } from '../styles';\nimport ApDex from './Overview/ApDex';\nimport GraphControlsPanel from './Overview/GraphControlsPanel/GraphControlsPanel';\nimport ServiceOverview from './Overview/ServiceOverview';\nimport TopLevelOperation from './Overview/TopLevelOperations';\nimport TopOperation from './Overview/TopOperation';\nimport TopOperationMetrics from './Overview/TopOperationMetrics';\nimport { Button, Card } from './styles';\nimport { IServiceName } from './types';\nimport {\n\tgenerateExplorerPath,\n\thandleNonInQueryRange,\n\tonViewTracePopupClick,\n\tuseGetAPMToLogsQueries,\n\tuseGetAPMToTracesQueries,\n\tuseGraphClickHandler,\n} from './util';\n\nfunction Application(): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\tconst { maxTime, minTime } = useSelector<AppState, GlobalReducer>(\n\t\t(state) => state.globalTime,\n\t);\n\n\tconst [selectedTimeStamp, setSelectedTimeStamp] = useState<number>(0);\n\tconst { search, pathname } = useLocation();\n\tconst { queries } = useResourceAttribute();\n\tconst urlQuery = useUrlQuery();\n\n\tconst { featureFlags } = useAppContext();\n\tconst isSpanMetricEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.USE_SPAN_METRICS)\n\t\t\t?.active || false;\n\n\tconst handleSetTimeStamp = useCallback((selectTime: number) => {\n\t\tsetSelectedTimeStamp(selectTime);\n\t}, []);\n\n\tconst onGraphClickHandler = useGraphClickHandler(handleSetTimeStamp);\n\n\tconst dispatch = useDispatch();\n\tconst handleGraphClick = useCallback(\n\t\t(type: string): OnClickPluginOpts['onClick'] => (\n\t\t\txValue,\n\t\t\tyValue,\n\t\t\tmouseX,\n\t\t\tmouseY,\n\t\t): Promise<void> => onGraphClickHandler(xValue, yValue, mouseX, mouseY, type),\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[handleSetTimeStamp],\n\t);\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tconst logEventCalledRef = useRef(false);\n\tuseEffect(() => {\n\t\tif (!logEventCalledRef.current) {\n\t\t\tconst selectedEnvironments = queries.find(\n\t\t\t\t(val) => val.tagKey === getResourceDeploymentKeys(dotMetricsEnabled),\n\t\t\t)?.tagValue;\n\n\t\t\tlogEvent('APM: Service detail page visited', {\n\t\t\t\tselectedEnvironments,\n\t\t\t\tresourceAttributeUsed: !!queries?.length,\n\t\t\t\tsection: 'overview',\n\t\t\t});\n\t\t\tlogEventCalledRef.current = true;\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst {\n\t\tdata: topLevelOperations,\n\t\terror: topLevelOperationsError,\n\t\tisLoading: topLevelOperationsIsLoading,\n\t\tisError: topLevelOperationsIsError,\n\t} = useQuery<ServiceDataProps>({\n\t\tqueryKey: [servicename, minTime, maxTime],\n\t\tqueryFn: (): Promise<ServiceDataProps> =>\n\t\t\tgetTopLevelOperations({\n\t\t\t\tservice: servicename || '',\n\t\t\t\tstart: minTime,\n\t\t\t\tend: maxTime,\n\t\t\t}),\n\t});\n\n\tconst selectedTraceTags: string = JSON.stringify(\n\t\tconvertRawQueriesToTraceSelectedTags(queries) || [],\n\t);\n\n\tconst apmToTraceQuery = useGetAPMToTracesQueries({ servicename });\n\n\tconst tagFilterItems = useMemo(\n\t\t() =>\n\t\t\thandleNonInQueryRange(resourceAttributesToTagFilterItems(queries)) || [],\n\t\t[queries],\n\t);\n\n\tconst topLevelOperationsRoute = useMemo(\n\t\t() =>\n\t\t\ttopLevelOperations\n\t\t\t\t? defaultTo(topLevelOperations[servicename || ''], [])\n\t\t\t\t: [],\n\t\t[servicename, topLevelOperations],\n\t);\n\n\tconst operationPerSecWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: operationPerSec({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\ttopLevelOperations: topLevelOperationsRoute,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.RATE_PER_OPS,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'ops',\n\t\t\t\tid: SERVICE_CHART_ID.rps,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, topLevelOperationsRoute, dotMetricsEnabled],\n\t);\n\n\tconst errorPercentageWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: errorPercentage({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\ttopLevelOperations: topLevelOperationsRoute,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.ERROR_PERCENTAGE,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: '%',\n\t\t\t\tid: SERVICE_CHART_ID.errorPercentage,\n\t\t\t\tfillSpans: true,\n\t\t\t}),\n\t\t[servicename, tagFilterItems, topLevelOperationsRoute, dotMetricsEnabled],\n\t);\n\n\tconst stepInterval = useMemo(\n\t\t() =>\n\t\t\tgetStep({\n\t\t\t\tend: maxTime,\n\t\t\t\tinputFormat: 'ns',\n\t\t\t\tstart: minTime,\n\t\t\t}),\n\t\t[maxTime, minTime],\n\t);\n\n\tconst onDragSelect = useCallback(\n\t\t(start: number, end: number) => {\n\t\t\tconst startTimestamp = Math.trunc(start);\n\t\t\tconst endTimestamp = Math.trunc(end);\n\n\t\t\turlQuery.set(QueryParams.startTime, startTimestamp.toString());\n\t\t\turlQuery.set(QueryParams.endTime, endTimestamp.toString());\n\t\t\tconst generatedUrl = `${pathname}?${urlQuery.toString()}`;\n\t\t\thistory.push(generatedUrl);\n\n\t\t\tif (startTimestamp !== endTimestamp) {\n\t\t\t\tdispatch(UpdateTimeInterval('custom', [startTimestamp, endTimestamp]));\n\t\t\t}\n\t\t},\n\t\t[dispatch, pathname, urlQuery],\n\t);\n\n\t/**\n\t *\n\t * @param timestamp - The timestamp in seconds\n\t * @param apmToTraceQuery - query object\n\t * @param isViewLogsClicked - Whether this is for viewing logs vs traces\n\t * @returns A callback function that handles the navigation when executed\n\t */\n\tconst onErrorTrackHandler = useCallback(\n\t\t(\n\t\t\ttimestamp: number,\n\t\t\tapmToTraceQuery: Query,\n\t\t\tisViewLogsClicked?: boolean,\n\t\t): (() => void) => (): void => {\n\t\t\tconst endTime = secondsToMilliseconds(timestamp);\n\t\t\tconst startTime = secondsToMilliseconds(timestamp - stepInterval);\n\n\t\t\tconst urlParams = new URLSearchParams(search);\n\t\t\turlParams.set(QueryParams.startTime, startTime.toString());\n\t\t\turlParams.set(QueryParams.endTime, endTime.toString());\n\t\t\turlParams.delete(QueryParams.relativeTime);\n\t\t\tconst avialableParams = routeConfig[ROUTES.TRACE];\n\t\t\tconst queryString = getQueryString(avialableParams, urlParams);\n\n\t\t\tconst JSONCompositeQuery = encodeURIComponent(\n\t\t\t\tJSON.stringify(apmToTraceQuery),\n\t\t\t);\n\n\t\t\tconst newPath = generateExplorerPath(\n\t\t\t\tisViewLogsClicked,\n\t\t\t\turlParams,\n\t\t\t\tservicename,\n\t\t\t\tselectedTraceTags,\n\t\t\t\tJSONCompositeQuery,\n\t\t\t\tqueryString,\n\t\t\t);\n\n\t\t\thistory.push(newPath);\n\t\t},\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t\t[stepInterval],\n\t);\n\n\tconst logErrorQuery = useGetAPMToLogsQueries({\n\t\tservicename,\n\t\tfilters: [\n\t\t\t{\n\t\t\t\tid: uuid().slice(0, 8),\n\t\t\t\tkey: {\n\t\t\t\t\tkey: 'severity_text',\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\ttype: '',\n\t\t\t\t\tisColumn: true,\n\t\t\t\t\tisJSON: false,\n\t\t\t\t\tid: 'severity_text--string----true',\n\t\t\t\t},\n\t\t\t\top: 'in',\n\t\t\t\tvalue: ['ERROR', 'FATAL', 'error', 'fatal'],\n\t\t\t},\n\t\t],\n\t});\n\tconst errorTrackQuery = useGetAPMToTracesQueries({\n\t\tservicename,\n\t\tfilters: [\n\t\t\t{\n\t\t\t\tid: uuid().slice(0, 8),\n\t\t\t\tkey: {\n\t\t\t\t\tkey: 'hasError',\n\t\t\t\t\tdataType: DataTypes.bool,\n\t\t\t\t\ttype: 'tag',\n\t\t\t\t\tisColumn: true,\n\t\t\t\t\tisJSON: false,\n\t\t\t\t\tid: 'hasError--bool--tag--true',\n\t\t\t\t},\n\t\t\t\top: 'in',\n\t\t\t\tvalue: ['true'],\n\t\t\t},\n\t\t],\n\t});\n\tconst { safeNavigate } = useSafeNavigate();\n\n\treturn (\n\t\t<>\n\t\t\t<Row gutter={24}>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<ServiceOverview\n\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\thandleGraphClick={handleGraphClick}\n\t\t\t\t\t\tselectedTimeStamp={selectedTimeStamp}\n\t\t\t\t\t\tselectedTraceTags={selectedTraceTags}\n\t\t\t\t\t\ttopLevelOperationsRoute={topLevelOperationsRoute}\n\t\t\t\t\t\ttopLevelOperationsIsLoading={topLevelOperationsIsLoading}\n\t\t\t\t\t\tstepInterval={stepInterval}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"default\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tid=\"Rate_button\"\n\t\t\t\t\t\tonClick={onViewTracePopupClick({\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\tView Traces\n\t\t\t\t\t</Button>\n\t\t\t\t\t<TopLevelOperation\n\t\t\t\t\t\thandleGraphClick={handleGraphClick}\n\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\ttopLevelOperationsError={topLevelOperationsError}\n\t\t\t\t\t\ttopLevelOperationsIsError={topLevelOperationsIsError}\n\t\t\t\t\t\tname=\"operations_per_sec\"\n\t\t\t\t\t\twidget={operationPerSecWidget}\n\t\t\t\t\t\topName=\"Rate\"\n\t\t\t\t\t\ttopLevelOperationsIsLoading={topLevelOperationsIsLoading}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row gutter={24}>\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<ColApDexContainer>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"default\"\n\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\tid=\"ApDex_button\"\n\t\t\t\t\t\t\tonClick={onViewTracePopupClick({\n\t\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\t\t\t\tstepInterval,\n\t\t\t\t\t\t\t\tsafeNavigate,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tView Traces\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<ApDex\n\t\t\t\t\t\t\thandleGraphClick={handleGraphClick}\n\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\ttopLevelOperationsRoute={topLevelOperationsRoute}\n\t\t\t\t\t\t\ttagFilterItems={tagFilterItems}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ColApDexContainer>\n\t\t\t\t\t<ColErrorContainer>\n\t\t\t\t\t\t<GraphControlsPanel\n\t\t\t\t\t\t\tid=\"Error_button\"\n\t\t\t\t\t\t\tonViewLogsClick={onErrorTrackHandler(\n\t\t\t\t\t\t\t\tselectedTimeStamp,\n\t\t\t\t\t\t\t\tlogErrorQuery,\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tonViewTracesClick={onErrorTrackHandler(\n\t\t\t\t\t\t\t\tselectedTimeStamp,\n\t\t\t\t\t\t\t\terrorTrackQuery,\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<TopLevelOperation\n\t\t\t\t\t\t\thandleGraphClick={handleGraphClick}\n\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\ttopLevelOperationsError={topLevelOperationsError}\n\t\t\t\t\t\t\ttopLevelOperationsIsError={topLevelOperationsIsError}\n\t\t\t\t\t\t\tname=\"error_percentage_%\"\n\t\t\t\t\t\t\twidget={errorPercentageWidget}\n\t\t\t\t\t\t\topName=\"Error\"\n\t\t\t\t\t\t\ttopLevelOperationsIsLoading={topLevelOperationsIsLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ColErrorContainer>\n\t\t\t\t</Col>\n\n\t\t\t\t<Col span={12}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t{isSpanMetricEnabled ? <TopOperationMetrics /> : <TopOperation />}{' '}\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</>\n\t);\n}\n\nexport type ClickHandlerType = () => void;\n\nexport default Application;\n","import { Space, Typography } from 'antd';\nimport TextToolTip from 'components/TextToolTip';\nimport {\n\tapDexToolTipText,\n\tapDexToolTipUrl,\n\tapDexToolTipUrlText,\n} from 'constants/apDex';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport Graph from 'container/GridCardLayout/GridCard';\nimport DisplayThreshold from 'container/GridCardLayout/WidgetHeader/DisplayThreshold';\nimport {\n\tGraphTitle,\n\tSERVICE_CHART_ID,\n} from 'container/MetricsApplication/constant';\nimport { getWidgetQueryBuilder } from 'container/MetricsApplication/MetricsApplication.factory';\nimport { apDexMetricsQueryBuilderQueries } from 'container/MetricsApplication/MetricsPageQueries/OverviewQueries';\nimport { ReactNode, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EQueryType } from 'types/common/dashboard';\nimport { v4 as uuid } from 'uuid';\n\nimport { FeatureKeys } from '../../../../../constants/features';\nimport { useAppContext } from '../../../../../providers/App/App';\nimport { IServiceName } from '../../types';\nimport { ApDexMetricsProps } from './types';\n\nfunction ApDexMetrics({\n\tdelta,\n\tmetricsBuckets,\n\tthresholdValue,\n\tonDragSelect,\n\ttagFilterItems,\n\ttopLevelOperationsRoute,\n\thandleGraphClick,\n}: ApDexMetricsProps): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\tconst { featureFlags } = useAppContext();\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\tconst apDexMetricsWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: apDexMetricsQueryBuilderQueries({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\ttopLevelOperationsRoute,\n\t\t\t\t\t\tthreashold: thresholdValue || 0,\n\t\t\t\t\t\tdelta: delta || false,\n\t\t\t\t\t\tmetricsBuckets: metricsBuckets || [],\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: (\n\t\t\t\t\t<Space>\n\t\t\t\t\t\t<Typography>{GraphTitle.APDEX}</Typography>\n\t\t\t\t\t\t<TextToolTip\n\t\t\t\t\t\t\ttext={apDexToolTipText}\n\t\t\t\t\t\t\turl={apDexToolTipUrl}\n\t\t\t\t\t\t\tuseFilledIcon={false}\n\t\t\t\t\t\t\turlText={apDexToolTipUrlText}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Space>\n\t\t\t\t),\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tid: SERVICE_CHART_ID.apdex,\n\t\t\t}),\n\t\t[\n\t\t\tdelta,\n\t\t\tmetricsBuckets,\n\t\t\tservicename,\n\t\t\ttagFilterItems,\n\t\t\tthresholdValue,\n\t\t\ttopLevelOperationsRoute,\n\t\t\tdotMetricsEnabled,\n\t\t],\n\t);\n\n\tconst threshold: ReactNode = useMemo(() => {\n\t\tif (thresholdValue) return <DisplayThreshold threshold={thresholdValue} />;\n\t\treturn null;\n\t}, [thresholdValue]);\n\n\tconst isQueryEnabled =\n\t\ttopLevelOperationsRoute.length > 0 &&\n\t\t!!metricsBuckets &&\n\t\tmetricsBuckets?.length > 0 &&\n\t\tdelta !== undefined;\n\n\treturn (\n\t\t<Graph\n\t\t\twidget={apDexMetricsWidget}\n\t\t\tonDragSelect={onDragSelect}\n\t\t\tonClickHandler={handleGraphClick('ApDex')}\n\t\t\tthreshold={threshold}\n\t\t\tisQueryEnabled={isQueryEnabled}\n\t\t\tversion={ENTITY_VERSION_V4}\n\t\t/>\n\t);\n}\n\nApDexMetrics.defaultProps = {\n\tdelta: undefined,\n\tle: undefined,\n};\n\nexport default ApDexMetrics;\n","import Spinner from 'components/Spinner';\nimport { useGetMetricMeta } from 'hooks/apDex/useGetMetricMeta';\nimport useErrorNotification from 'hooks/useErrorNotification';\nimport { useParams } from 'react-router-dom';\n\nimport { IServiceName } from '../../types';\nimport ApDexMetrics from './ApDexMetrics';\nimport { metricMeta } from './constants';\nimport { ApDexDataSwitcherProps } from './types';\n\nfunction ApDexMetricsApplication({\n\thandleGraphClick,\n\tonDragSelect,\n\ttagFilterItems,\n\tthresholdValue,\n\ttopLevelOperationsRoute,\n}: ApDexDataSwitcherProps): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\tconst { data, isLoading, error } = useGetMetricMeta(metricMeta, servicename);\n\tuseErrorNotification(error);\n\n\tif (isLoading) {\n\t\treturn <Spinner height=\"40vh\" tip=\"Loading...\" />;\n\t}\n\n\treturn (\n\t\t<ApDexMetrics\n\t\t\ttopLevelOperationsRoute={topLevelOperationsRoute}\n\t\t\thandleGraphClick={handleGraphClick}\n\t\t\tdelta={data?.data.delta}\n\t\t\tmetricsBuckets={data?.data.le || []}\n\t\t\tonDragSelect={onDragSelect}\n\t\t\ttagFilterItems={tagFilterItems}\n\t\t\tthresholdValue={thresholdValue}\n\t\t/>\n\t);\n}\n\nexport default ApDexMetricsApplication;\n","export const metricMeta = 'signoz_latency_bucket';\n","import Spinner from 'components/Spinner';\nimport { Card, GraphContainer } from 'container/MetricsApplication/styles';\nimport { useGetApDexSettings } from 'hooks/apDex/useGetApDexSettings';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { memo, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { IServiceName } from '../../types';\nimport ApDexMetricsApplication from './ApDexMetricsApplication';\nimport { ApDexApplicationProps } from './types';\n\nfunction ApDexApplication({\n\thandleGraphClick,\n\tonDragSelect,\n\ttopLevelOperationsRoute,\n\ttagFilterItems,\n}: ApDexApplicationProps): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\tconst { notifications } = useNotifications();\n\n\tconst { data, isLoading, error, isRefetching } = useGetApDexSettings(\n\t\tservicename,\n\t);\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tnotifications.error({\n\t\t\t\tmessage: error.getErrorCode(),\n\t\t\t\tdescription: error.getErrorMessage(),\n\t\t\t});\n\t\t}\n\t}, [error, notifications]);\n\n\tif (isLoading || isRefetching) {\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<Spinner height=\"40vh\" tip=\"Loading...\" />\n\t\t\t</Card>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Card data-testid=\"apdex\">\n\t\t\t<GraphContainer>\n\t\t\t\t<ApDexMetricsApplication\n\t\t\t\t\thandleGraphClick={handleGraphClick}\n\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\ttopLevelOperationsRoute={topLevelOperationsRoute}\n\t\t\t\t\ttagFilterItems={tagFilterItems}\n\t\t\t\t\tthresholdValue={data?.data[0].threshold}\n\t\t\t\t/>\n\t\t\t</GraphContainer>\n\t\t</Card>\n\t);\n}\n\nexport default memo(ApDexApplication);\n","import './GraphControlsPanel.styles.scss';\n\nimport { Color } from '@signozhq/design-tokens';\nimport { Button } from 'antd';\nimport { Binoculars, DraftingCompass, ScrollText } from 'lucide-react';\n\ninterface GraphControlsPanelProps {\n\tid: string;\n\tonViewLogsClick?: () => void;\n\tonViewTracesClick: () => void;\n\tonViewAPIMonitoringClick?: () => void;\n}\n\nfunction GraphControlsPanel({\n\tid,\n\tonViewLogsClick,\n\tonViewTracesClick,\n\tonViewAPIMonitoringClick,\n}: GraphControlsPanelProps): JSX.Element {\n\treturn (\n\t\t<div id={id} className=\"graph-controls-panel\">\n\t\t\t<Button\n\t\t\t\ttype=\"link\"\n\t\t\t\ticon={<DraftingCompass size={14} />}\n\t\t\t\tsize=\"small\"\n\t\t\t\tonClick={onViewTracesClick}\n\t\t\t\tstyle={{ color: Color.BG_VANILLA_100 }}\n\t\t\t>\n\t\t\t\tView traces\n\t\t\t</Button>\n\t\t\t{onViewLogsClick && (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"link\"\n\t\t\t\t\ticon={<ScrollText size={14} />}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonClick={onViewLogsClick}\n\t\t\t\t\tstyle={{ color: Color.BG_VANILLA_100 }}\n\t\t\t\t>\n\t\t\t\t\tView logs\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t\t{onViewAPIMonitoringClick && (\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"link\"\n\t\t\t\t\ticon={<Binoculars size={14} />}\n\t\t\t\t\tsize=\"small\"\n\t\t\t\t\tonClick={onViewAPIMonitoringClick}\n\t\t\t\t\tstyle={{ color: Color.BG_VANILLA_100 }}\n\t\t\t\t>\n\t\t\t\t\tView External APIs\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nGraphControlsPanel.defaultProps = {\n\tonViewLogsClick: undefined,\n\tonViewAPIMonitoringClick: undefined,\n};\n\nexport default GraphControlsPanel;\n","import { Skeleton } from 'antd';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport { FeatureKeys } from 'constants/features';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport Graph from 'container/GridCardLayout/GridCard';\nimport {\n\tGraphTitle,\n\tSERVICE_CHART_ID,\n} from 'container/MetricsApplication/constant';\nimport { getWidgetQueryBuilder } from 'container/MetricsApplication/MetricsApplication.factory';\nimport { latency } from 'container/MetricsApplication/MetricsPageQueries/OverviewQueries';\nimport { Card, GraphContainer } from 'container/MetricsApplication/styles';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport { resourceAttributesToTagFilterItems } from 'hooks/useResourceAttribute/utils';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport { OnClickPluginOpts } from 'lib/uPlotLib/plugins/onClickPlugin';\nimport { useAppContext } from 'providers/App/App';\nimport { useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { EQueryType } from 'types/common/dashboard';\nimport { v4 as uuid } from 'uuid';\n\nimport { IServiceName } from '../types';\nimport {\n\thandleNonInQueryRange,\n\tonViewTracePopupClick,\n\tuseGetAPMToLogsQueries,\n\tuseGetAPMToTracesQueries,\n} from '../util';\nimport GraphControlsPanel from './GraphControlsPanel/GraphControlsPanel';\n\nfunction ServiceOverview({\n\tonDragSelect,\n\thandleGraphClick,\n\tselectedTraceTags,\n\tselectedTimeStamp,\n\ttopLevelOperationsRoute,\n\ttopLevelOperationsIsLoading,\n\tstepInterval,\n}: ServiceOverviewProps): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\tconst { featureFlags } = useAppContext();\n\tconst isSpanMetricEnable =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.USE_SPAN_METRICS)\n\t\t\t?.active || false;\n\n\tconst { queries } = useResourceAttribute();\n\n\tconst tagFilterItems = useMemo(\n\t\t() =>\n\t\t\thandleNonInQueryRange(\n\t\t\t\tresourceAttributesToTagFilterItems(queries, !isSpanMetricEnable),\n\t\t\t) || [],\n\t\t[isSpanMetricEnable, queries],\n\t);\n\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tconst latencyWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: latency({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\ttagFilterItems,\n\t\t\t\t\t\tisSpanMetricEnable,\n\t\t\t\t\t\ttopLevelOperationsRoute,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\ttitle: GraphTitle.LATENCY,\n\t\t\t\tpanelTypes: PANEL_TYPES.TIME_SERIES,\n\t\t\t\tyAxisUnit: 'ns',\n\t\t\t\tid: SERVICE_CHART_ID.latency,\n\t\t\t}),\n\t\t[\n\t\t\tisSpanMetricEnable,\n\t\t\tservicename,\n\t\t\ttagFilterItems,\n\t\t\ttopLevelOperationsRoute,\n\t\t\tdotMetricsEnabled,\n\t\t],\n\t);\n\n\tconst isQueryEnabled =\n\t\t!topLevelOperationsIsLoading && topLevelOperationsRoute.length > 0;\n\n\tconst apmToTraceQuery = useGetAPMToTracesQueries({ servicename });\n\n\tconst apmToLogQuery = useGetAPMToLogsQueries({ servicename });\n\n\tconst { safeNavigate } = useSafeNavigate();\n\n\treturn (\n\t\t<>\n\t\t\t<GraphControlsPanel\n\t\t\t\tid=\"Service_button\"\n\t\t\t\tonViewLogsClick={onViewTracePopupClick({\n\t\t\t\t\tservicename,\n\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\tapmToTraceQuery: apmToLogQuery,\n\t\t\t\t\tisViewLogsClicked: true,\n\t\t\t\t\tstepInterval,\n\t\t\t\t\tsafeNavigate,\n\t\t\t\t})}\n\t\t\t\tonViewTracesClick={onViewTracePopupClick({\n\t\t\t\t\tservicename,\n\t\t\t\t\tselectedTraceTags,\n\t\t\t\t\ttimestamp: selectedTimeStamp,\n\t\t\t\t\tapmToTraceQuery,\n\t\t\t\t\tstepInterval,\n\t\t\t\t\tsafeNavigate,\n\t\t\t\t})}\n\t\t\t/>\n\t\t\t<Card data-testid=\"service_latency\">\n\t\t\t\t<GraphContainer>\n\t\t\t\t\t{topLevelOperationsIsLoading && (\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\tpadding: '16px',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{!topLevelOperationsIsLoading && (\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\twidget={latencyWidget}\n\t\t\t\t\t\t\tonClickHandler={handleGraphClick('Service')}\n\t\t\t\t\t\t\tisQueryEnabled={isQueryEnabled}\n\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</GraphContainer>\n\t\t\t</Card>\n\t\t</>\n\t);\n}\ninterface ServiceOverviewProps {\n\tstepInterval: number;\n\tselectedTimeStamp: number;\n\tselectedTraceTags: string;\n\tonDragSelect: (start: number, end: number) => void;\n\thandleGraphClick: (type: string) => OnClickPluginOpts['onClick'];\n\ttopLevelOperationsRoute: string[];\n\ttopLevelOperationsIsLoading: boolean;\n}\n\nexport default ServiceOverview;\n","import { Tooltip, Typography } from 'antd';\nimport { navigateToTrace } from 'container/MetricsApplication/utils';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport { RowData } from 'lib/query/createTableColumnsFromQuery';\nimport { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { v4 as uuid } from 'uuid';\n\nimport { useGetAPMToTracesQueries } from '../../util';\n\nfunction ColumnWithLink({\n\tservicename,\n\tminTime,\n\tmaxTime,\n\tselectedTraceTags,\n\trecord,\n}: LinkColumnProps): JSX.Element {\n\tconst text = record.toString();\n\tconst { safeNavigate } = useSafeNavigate();\n\n\tconst apmToTraceQuery = useGetAPMToTracesQueries({\n\t\tservicename,\n\t\tfilters: [\n\t\t\t{\n\t\t\t\tid: uuid().slice(0, 8),\n\t\t\t\tkey: {\n\t\t\t\t\tkey: 'name',\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\ttype: 'tag',\n\t\t\t\t\tisColumn: true,\n\t\t\t\t\tisJSON: false,\n\t\t\t\t\tid: 'name--string--tag--true',\n\t\t\t\t},\n\t\t\t\top: 'in',\n\t\t\t\tvalue: [text],\n\t\t\t},\n\t\t],\n\t});\n\n\tconst handleOnClick = (operation: string) => (): void => {\n\t\tnavigateToTrace({\n\t\t\tservicename,\n\t\t\toperation,\n\t\t\tminTime,\n\t\t\tmaxTime,\n\t\t\tselectedTraceTags,\n\t\t\tapmToTraceQuery,\n\t\t\tsafeNavigate,\n\t\t});\n\t};\n\n\treturn (\n\t\t<Tooltip placement=\"topLeft\" title={text}>\n\t\t\t<Typography.Link onClick={handleOnClick(text)}>{text}</Typography.Link>\n\t\t</Tooltip>\n\t);\n}\n\ninterface LinkColumnProps {\n\tservicename: string;\n\tminTime: number;\n\tmaxTime: number;\n\tselectedTraceTags: string;\n\trecord: RowData;\n}\n\nexport default ColumnWithLink;\n","import { RowData } from 'lib/query/createTableColumnsFromQuery';\nimport { ReactNode } from 'react';\n\nimport { TableRendererProps } from '../../types';\n\nexport const getTableColumnRenderer = ({\n\tcolumnName,\n\trenderFunction,\n}: TableRendererProps): Record<string, (record: RowData) => ReactNode> => ({\n\t[columnName]: renderFunction,\n});\n","import { Skeleton, Typography } from 'antd';\nimport axios from 'axios';\nimport { SOMETHING_WENT_WRONG } from 'constants/api';\nimport { ENTITY_VERSION_V4 } from 'constants/app';\nimport Graph from 'container/GridCardLayout/GridCard';\nimport { Card, GraphContainer } from 'container/MetricsApplication/styles';\nimport { OnClickPluginOpts } from 'lib/uPlotLib/plugins/onClickPlugin';\nimport { Widgets } from 'types/api/dashboard/getAll';\n\nfunction TopLevelOperation({\n\tname,\n\topName,\n\ttopLevelOperationsIsError,\n\ttopLevelOperationsError,\n\tonDragSelect,\n\thandleGraphClick,\n\twidget,\n\ttopLevelOperationsIsLoading,\n}: TopLevelOperationProps): JSX.Element {\n\treturn (\n\t\t<Card data-testid={name}>\n\t\t\t{topLevelOperationsIsError ? (\n\t\t\t\t<Typography>\n\t\t\t\t\t{axios.isAxiosError(topLevelOperationsError)\n\t\t\t\t\t\t? topLevelOperationsError.response?.data\n\t\t\t\t\t\t: SOMETHING_WENT_WRONG}\n\t\t\t\t</Typography>\n\t\t\t) : (\n\t\t\t\t<GraphContainer>\n\t\t\t\t\t{topLevelOperationsIsLoading && (\n\t\t\t\t\t\t<Skeleton\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\theight: '100%',\n\t\t\t\t\t\t\t\tpadding: '16px',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{!topLevelOperationsIsLoading && (\n\t\t\t\t\t\t<Graph\n\t\t\t\t\t\t\twidget={widget}\n\t\t\t\t\t\t\tonClickHandler={handleGraphClick(opName)}\n\t\t\t\t\t\t\tonDragSelect={onDragSelect}\n\t\t\t\t\t\t\tisQueryEnabled={!topLevelOperationsIsLoading}\n\t\t\t\t\t\t\tversion={ENTITY_VERSION_V4}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</GraphContainer>\n\t\t\t)}\n\t\t</Card>\n\t);\n}\n\ninterface TopLevelOperationProps {\n\tname: string;\n\topName: string;\n\ttopLevelOperationsIsError: boolean;\n\ttopLevelOperationsError: unknown;\n\tonDragSelect: (start: number, end: number) => void;\n\thandleGraphClick: (type: string) => OnClickPluginOpts['onClick'];\n\twidget: Widgets;\n\ttopLevelOperationsIsLoading: boolean;\n}\n\nexport default TopLevelOperation;\n","import getTopOperations from 'api/metrics/getTopOperations';\nimport TopOperationsTable from 'container/MetricsApplication/TopOperationsTable';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport { convertRawQueriesToTraceSelectedTags } from 'hooks/useResourceAttribute/utils';\nimport { useMemo } from 'react';\nimport { useQuery } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { AppState } from 'store/reducers';\nimport { PayloadProps } from 'types/api/metrics/getTopOperations';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { Tags } from 'types/reducer/trace';\n\nfunction TopOperation(): JSX.Element {\n\tconst { maxTime, minTime } = useSelector<AppState, GlobalReducer>(\n\t\t(state) => state.globalTime,\n\t);\n\tconst { servicename: encodedServiceName } = useParams<{\n\t\tservicename?: string;\n\t}>();\n\tconst servicename = decodeURIComponent(encodedServiceName || '');\n\n\tconst { queries } = useResourceAttribute();\n\tconst selectedTags = useMemo(\n\t\t() => (convertRawQueriesToTraceSelectedTags(queries) as Tags[]) || [],\n\t\t[queries],\n\t);\n\n\tconst { data, isLoading } = useQuery<PayloadProps>({\n\t\tqueryKey: [minTime, maxTime, servicename, selectedTags],\n\t\tqueryFn: (): Promise<PayloadProps> =>\n\t\t\tgetTopOperations({\n\t\t\t\tservice: servicename || '',\n\t\t\t\tstart: minTime,\n\t\t\t\tend: maxTime,\n\t\t\t\tselectedTags,\n\t\t\t}),\n\t});\n\n\tconst topOperationData = data || [];\n\n\treturn <TopOperationsTable data={topOperationData} isLoading={isLoading} />;\n}\n\nexport default TopOperation;\n","import { ENTITY_VERSION_V4 } from 'constants/app';\nimport { PANEL_TYPES } from 'constants/queryBuilder';\nimport { topOperationMetricsDownloadOptions } from 'container/MetricsApplication/constant';\nimport { getWidgetQueryBuilder } from 'container/MetricsApplication/MetricsApplication.factory';\nimport { topOperationQueries } from 'container/MetricsApplication/MetricsPageQueries/TopOperationQueries';\nimport { QueryTable } from 'container/QueryTable';\nimport { useGetQueryRange } from 'hooks/queryBuilder/useGetQueryRange';\nimport { useStepInterval } from 'hooks/queryBuilder/useStepInterval';\nimport { useNotifications } from 'hooks/useNotifications';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport { convertRawQueriesToTraceSelectedTags } from 'hooks/useResourceAttribute/utils';\nimport { RowData } from 'lib/query/createTableColumnsFromQuery';\nimport { ReactNode, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { AppState } from 'store/reducers';\nimport { EQueryType } from 'types/common/dashboard';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { v4 as uuid } from 'uuid';\n\nimport { FeatureKeys } from '../../../../constants/features';\nimport { useAppContext } from '../../../../providers/App/App';\nimport { IServiceName } from '../types';\nimport { title } from './config';\nimport ColumnWithLink from './TableRenderer/ColumnWithLink';\nimport { getTableColumnRenderer } from './TableRenderer/TableColumnRenderer';\n\nfunction TopOperationMetrics(): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\tconst { notifications } = useNotifications();\n\n\tconst { minTime, maxTime, selectedTime: globalSelectedInterval } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\n\tconst { queries } = useResourceAttribute();\n\n\tconst selectedTraceTags = JSON.stringify(\n\t\tconvertRawQueriesToTraceSelectedTags(queries) || [],\n\t);\n\n\tconst { featureFlags } = useAppContext();\n\tconst dotMetricsEnabled =\n\t\tfeatureFlags?.find((flag) => flag.name === FeatureKeys.DOT_METRICS_ENABLED)\n\t\t\t?.active || false;\n\n\tconst keyOperationWidget = useMemo(\n\t\t() =>\n\t\t\tgetWidgetQueryBuilder({\n\t\t\t\tquery: {\n\t\t\t\t\tqueryType: EQueryType.QUERY_BUILDER,\n\t\t\t\t\tpromql: [],\n\t\t\t\t\tbuilder: topOperationQueries({\n\t\t\t\t\t\tservicename,\n\t\t\t\t\t\tdotMetricsEnabled,\n\t\t\t\t\t}),\n\t\t\t\t\tclickhouse_sql: [],\n\t\t\t\t\tid: uuid(),\n\t\t\t\t},\n\t\t\t\tpanelTypes: PANEL_TYPES.TABLE,\n\t\t\t}),\n\t\t[servicename, dotMetricsEnabled],\n\t);\n\n\tconst updatedQuery = useStepInterval(keyOperationWidget.query);\n\n\tconst isEmptyWidget = keyOperationWidget.id === PANEL_TYPES.EMPTY_WIDGET;\n\n\tconst { data, isLoading } = useGetQueryRange(\n\t\t{\n\t\t\tselectedTime: keyOperationWidget?.timePreferance,\n\t\t\tgraphType: keyOperationWidget?.panelTypes,\n\t\t\tquery: updatedQuery,\n\t\t\tglobalSelectedInterval,\n\t\t\tvariables: {},\n\t\t},\n\t\tENTITY_VERSION_V4,\n\t\t{\n\t\t\tqueryKey: [\n\t\t\t\t`GetMetricsQueryRange-${keyOperationWidget?.timePreferance}-${globalSelectedInterval}-${keyOperationWidget?.id}`,\n\t\t\t\tkeyOperationWidget,\n\t\t\t\tmaxTime,\n\t\t\t\tminTime,\n\t\t\t\tglobalSelectedInterval,\n\t\t\t],\n\t\t\tkeepPreviousData: true,\n\t\t\tenabled: !isEmptyWidget,\n\t\t\trefetchOnMount: false,\n\t\t\tonError: (error) => {\n\t\t\t\tnotifications.error({ message: error.message });\n\t\t\t},\n\t\t},\n\t);\n\n\tconst queryTableData = data?.payload?.data?.newResult?.data?.result || [];\n\n\tconst renderColumnCell = useMemo(\n\t\t() =>\n\t\t\tgetTableColumnRenderer({\n\t\t\t\tcolumnName: 'operation',\n\t\t\t\trenderFunction: (record: RowData): ReactNode => (\n\t\t\t\t\t<ColumnWithLink\n\t\t\t\t\t\tservicename={servicename}\n\t\t\t\t\t\tminTime={minTime}\n\t\t\t\t\t\tmaxTime={maxTime}\n\t\t\t\t\t\tselectedTraceTags={selectedTraceTags}\n\t\t\t\t\t\trecord={record}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t}),\n\t\t[servicename, minTime, maxTime, selectedTraceTags],\n\t);\n\n\treturn (\n\t\t<QueryTable\n\t\t\ttitle={title}\n\t\t\tquery={updatedQuery}\n\t\t\tqueryTableData={queryTableData}\n\t\t\tloading={isLoading}\n\t\t\trenderColumnCell={renderColumnCell}\n\t\t\tdownloadOption={topOperationMetricsDownloadOptions}\n\t\t\tsticky\n\t\t/>\n\t);\n}\n\nexport default TopOperationMetrics;\n","export const title = (): string => 'Key Operations';\n","import './TopOperationsTable.styles.scss';\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { InputRef, Tooltip, Typography } from 'antd';\nimport { ColumnsType, ColumnType } from 'antd/lib/table';\nimport { ResizeTable } from 'components/ResizeTable';\nimport Download from 'container/Download/Download';\nimport { filterDropdown } from 'container/ServiceApplication/Filter/FilterDropdown';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport { convertRawQueriesToTraceSelectedTags } from 'hooks/useResourceAttribute/utils';\nimport { useSafeNavigate } from 'hooks/useSafeNavigate';\nimport { useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { AppState } from 'store/reducers';\nimport { DataTypes } from 'types/api/queryBuilder/queryAutocompleteResponse';\nimport { Query, TagFilterItem } from 'types/api/queryBuilder/queryBuilderData';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { v4 as uuid } from 'uuid';\n\nimport { IServiceName } from './Tabs/types';\nimport { useGetAPMToTracesQueries } from './Tabs/util';\nimport {\n\tconvertedTracesToDownloadData,\n\tgetErrorRate,\n\tnavigateToTrace,\n} from './utils';\n\nfunction TopOperationsTable({\n\tdata,\n\tisLoading,\n}: TopOperationsTableProps): JSX.Element {\n\tconst searchInput = useRef<InputRef>(null);\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst { safeNavigate } = useSafeNavigate();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\tconst { minTime, maxTime } = useSelector<AppState, GlobalReducer>(\n\t\t(state) => state.globalTime,\n\t);\n\tconst { queries } = useResourceAttribute();\n\n\tconst selectedTraceTags: string = JSON.stringify(\n\t\tconvertRawQueriesToTraceSelectedTags(queries) || [],\n\t);\n\n\tconst apmToTraceQuery = useGetAPMToTracesQueries({ servicename });\n\n\tconst params = useParams<{ servicename: string }>();\n\n\tconst handleOnClick = (operation: string): void => {\n\t\tconst { servicename: encodedServiceName } = params;\n\t\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\t\tconst opFilters: TagFilterItem[] = [\n\t\t\t{\n\t\t\t\tid: uuid().slice(0, 8),\n\t\t\t\tkey: {\n\t\t\t\t\tkey: 'name',\n\t\t\t\t\tdataType: DataTypes.String,\n\t\t\t\t\ttype: 'tag',\n\t\t\t\t\tisColumn: true,\n\t\t\t\t\tisJSON: false,\n\t\t\t\t\tid: 'name--string--tag--true',\n\t\t\t\t},\n\t\t\t\top: 'in',\n\t\t\t\tvalue: [operation],\n\t\t\t},\n\t\t];\n\n\t\tconst preparedQuery: Query = {\n\t\t\t...apmToTraceQuery,\n\t\t\tbuilder: {\n\t\t\t\t...apmToTraceQuery.builder,\n\t\t\t\tqueryData: apmToTraceQuery.builder.queryData?.map((item) => ({\n\t\t\t\t\t...item,\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t...item.filters,\n\t\t\t\t\t\titems: [...item.filters.items, ...opFilters],\n\t\t\t\t\t},\n\t\t\t\t})),\n\t\t\t},\n\t\t};\n\n\t\tnavigateToTrace({\n\t\t\tservicename,\n\t\t\toperation,\n\t\t\tminTime,\n\t\t\tmaxTime,\n\t\t\tselectedTraceTags,\n\t\t\tapmToTraceQuery: preparedQuery,\n\t\t\tsafeNavigate,\n\t\t});\n\t};\n\n\tconst getSearchOption = (): ColumnType<TopOperationList> => ({\n\t\tfilterDropdown,\n\t\tfilterIcon: <SearchOutlined />,\n\t\tonFilter: (value, record): boolean =>\n\t\t\trecord.name\n\t\t\t\t.toString()\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes((value as string).toLowerCase()),\n\t\tonFilterDropdownOpenChange: (visible): void => {\n\t\t\tif (visible) {\n\t\t\t\tsetTimeout(() => searchInput.current?.select(), 100);\n\t\t\t}\n\t\t},\n\t\trender: (text: string): JSX.Element => (\n\t\t\t<Tooltip placement=\"topLeft\" title={text}>\n\t\t\t\t<Typography.Link onClick={(): void => handleOnClick(text)}>\n\t\t\t\t\t{text}\n\t\t\t\t</Typography.Link>\n\t\t\t</Tooltip>\n\t\t),\n\t});\n\n\tconst columns: ColumnsType<TopOperationList> = [\n\t\t{\n\t\t\ttitle: 'Name',\n\t\t\tdataIndex: 'name',\n\t\t\tkey: 'name',\n\t\t\twidth: 100,\n\t\t\t...getSearchOption(),\n\t\t},\n\t\t{\n\t\t\ttitle: 'P50  (in ms)',\n\t\t\tdataIndex: 'p50',\n\t\t\tkey: 'p50',\n\t\t\twidth: 50,\n\t\t\tsorter: (a: TopOperationList, b: TopOperationList): number => a.p50 - b.p50,\n\t\t\trender: (value: number): string => (value / 1_000_000).toFixed(2),\n\t\t},\n\t\t{\n\t\t\ttitle: 'P95  (in ms)',\n\t\t\tdataIndex: 'p95',\n\t\t\tkey: 'p95',\n\t\t\twidth: 50,\n\t\t\tsorter: (a: TopOperationList, b: TopOperationList): number => a.p95 - b.p95,\n\t\t\trender: (value: number): string => (value / 1_000_000).toFixed(2),\n\t\t},\n\t\t{\n\t\t\ttitle: 'P99  (in ms)',\n\t\t\tdataIndex: 'p99',\n\t\t\tkey: 'p99',\n\t\t\twidth: 50,\n\t\t\tsorter: (a: TopOperationList, b: TopOperationList): number => a.p99 - b.p99,\n\t\t\trender: (value: number): string => (value / 1_000_000).toFixed(2),\n\t\t},\n\t\t{\n\t\t\ttitle: 'Number of Calls',\n\t\t\tdataIndex: 'numCalls',\n\t\t\tkey: 'numCalls',\n\t\t\twidth: 50,\n\t\t\tsorter: (a: TopOperationList, b: TopOperationList): number =>\n\t\t\t\ta.numCalls - b.numCalls,\n\t\t},\n\t\t{\n\t\t\ttitle: 'Error Rate',\n\t\t\tdataIndex: 'errorCount',\n\t\t\tkey: 'errorCount',\n\t\t\twidth: 50,\n\t\t\tsorter: (first: TopOperationList, second: TopOperationList): number =>\n\t\t\t\tgetErrorRate(first) - getErrorRate(second),\n\t\t\trender: (_, record: TopOperationList): string =>\n\t\t\t\t`${getErrorRate(record).toFixed(2)} %`,\n\t\t},\n\t];\n\n\tconst downloadableData = convertedTracesToDownloadData(data);\n\n\tconst paginationConfig = {\n\t\tpageSize: 10,\n\t\tshowSizeChanger: false,\n\t\thideOnSinglePage: true,\n\t};\n\n\treturn (\n\t\t<div className=\"top-operation\">\n\t\t\t<div className=\"top-operation--download\">\n\t\t\t\t<Download\n\t\t\t\t\tdata={downloadableData}\n\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\tfileName={`top-operations-${servicename}`}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ResizeTable\n\t\t\t\tcolumns={columns}\n\t\t\t\tloading={isLoading}\n\t\t\t\tshowHeader\n\t\t\t\ttitle={(): string => 'Key Operations'}\n\t\t\t\ttableLayout=\"fixed\"\n\t\t\t\tdataSource={data}\n\t\t\t\trowKey=\"name\"\n\t\t\t\tpagination={paginationConfig}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport interface TopOperationList {\n\tp50: number;\n\tp95: number;\n\tp99: number;\n\tnumCalls: number;\n\tname: string;\n\terrorCount: number;\n}\n\ninterface TopOperationsTableProps {\n\tdata: TopOperationList[];\n\tisLoading: boolean;\n}\n\nexport default TopOperationsTable;\n","import {\n\tCard as CardComponent,\n\tCol as ColComponent,\n\tRow as RowComponent,\n\tTypography,\n} from 'antd';\nimport styled from 'styled-components';\n\nexport const Card = styled(CardComponent)`\n\t&&& {\n\t\theight: 40vh;\n\t\toverflow: hidden;\n\t}\n\n\t.ant-card-body {\n\t\theight: 100%;\n\t\tpadding: 0;\n\t}\n`;\n\nexport const Row = styled(RowComponent)`\n\t&&& {\n\t\tpadding: 1rem;\n\t}\n`;\n\nexport const Col = styled(ColComponent)`\n\tdisplay &&& {\n\t\tposition: relative;\n\t}\n`;\n\nexport const ColApDexContainer = styled(ColComponent)`\n\tpadding: 0 !important;\n`;\n\nexport const ColErrorContainer = styled(ColComponent)`\n\tpadding: 2rem 0 !important;\n`;\n\nexport const GraphContainer = styled.div`\n\tmin-height: calc(40vh - 40px);\n\theight: 100%;\n`;\n\nexport const GraphTitle = styled(Typography)`\n\t&&& {\n\t\ttext-align: center;\n\t}\n`;\n","import { QueryParams } from 'constants/query';\nimport ROUTES from 'constants/routes';\n\nimport { TopOperationList } from './TopOperationsTable';\nimport { NavigateToTraceProps } from './types';\n\nexport const getErrorRate = (list: TopOperationList): number => {\n\tif (list.errorCount === 0 && list.numCalls === 0) {\n\t\treturn 0;\n\t}\n\treturn (list.errorCount / list.numCalls) * 100;\n};\n\nexport const navigateToTrace = ({\n\tservicename,\n\toperation,\n\tminTime,\n\tmaxTime,\n\tselectedTraceTags,\n\tapmToTraceQuery,\n\tsafeNavigate,\n}: NavigateToTraceProps): void => {\n\tconst urlParams = new URLSearchParams();\n\turlParams.set(\n\t\tQueryParams.startTime,\n\t\tMath.floor(minTime / 1_000_000).toString(),\n\t);\n\turlParams.set(QueryParams.endTime, Math.floor(maxTime / 1_000_000).toString());\n\n\tconst JSONCompositeQuery = encodeURIComponent(JSON.stringify(apmToTraceQuery));\n\n\tconst newTraceExplorerPath = `${\n\t\tROUTES.TRACES_EXPLORER\n\t}?${urlParams.toString()}&selected={\"serviceName\":[\"${servicename}\"],\"operation\":[\"${operation}\"]}&filterToFetchData=[\"duration\",\"status\",\"serviceName\",\"operation\"]&spanAggregateCurrentPage=1&selectedTags=${selectedTraceTags}&${\n\t\tQueryParams.compositeQuery\n\t}=${JSONCompositeQuery}`;\n\n\tsafeNavigate(newTraceExplorerPath);\n};\n\nexport const getNearestHighestBucketValue = (\n\tvalue: number,\n\tbuckets: number[],\n): string => {\n\t// sort the buckets\n\tbuckets.sort((a, b) => a - b);\n\tconst nearestBucket = buckets.find((bucket) => bucket >= value);\n\treturn nearestBucket?.toString() || '+Inf';\n};\n\nexport const convertMilSecToNanoSec = (value: number): number =>\n\tvalue * 1000000000;\n\nexport const convertedTracesToDownloadData = (\n\toriginalData: TopOperationList[],\n): Record<string, string>[] =>\n\toriginalData.map((item) => {\n\t\tconst newObj: Record<string, string> = {\n\t\t\tName: item.name,\n\t\t\t'P50 (in ms)': (item.p50 / 1000000).toFixed(2),\n\t\t\t'P95 (in ms)': (item.p95 / 1000000).toFixed(2),\n\t\t\t'P99 (in ms)': (item.p99 / 1000000).toFixed(2),\n\t\t\t'Number of calls': item.numCalls.toString(),\n\t\t\t'Error Rate (%)': getErrorRate(item).toFixed(2),\n\t\t};\n\n\t\treturn newObj;\n\t});\n","import getApDexSettings from 'api/v1/settings/apdex/services/get';\nimport { useQuery, UseQueryResult } from 'react-query';\nimport { SuccessResponseV2 } from 'types/api';\nimport APIError from 'types/api/error';\nimport { ApDexPayloadAndSettingsProps } from 'types/api/metrics/getApDex';\n\nexport const useGetApDexSettings = (\n\tservicename: string,\n): UseQueryResult<\n\tSuccessResponseV2<ApDexPayloadAndSettingsProps[]>,\n\tAPIError\n> =>\n\tuseQuery<SuccessResponseV2<ApDexPayloadAndSettingsProps[]>, APIError>({\n\t\tqueryKey: [{ servicename }],\n\t\tqueryFn: async () => getApDexSettings(servicename),\n\t});\n","import { getMetricMeta } from 'api/metrics/ApDex/getMetricMeta';\nimport { AxiosError, AxiosResponse } from 'axios';\nimport { useQuery, UseQueryResult } from 'react-query';\nimport { MetricMetaProps } from 'types/api/metrics/getApDex';\n\nexport const useGetMetricMeta = (\n\tmetricName: string,\n\tservicename: string,\n): UseQueryResult<AxiosResponse<MetricMetaProps>, AxiosError> =>\n\tuseQuery<AxiosResponse<MetricMetaProps>, AxiosError>({\n\t\tqueryKey: [{ metricName, servicename }],\n\t\tqueryFn: async () => getMetricMeta(metricName, servicename),\n\t});\n","import { setApDexSettings } from 'api/metrics/ApDex/apDexSettings';\nimport { useMutation, UseMutationResult } from 'react-query';\nimport {\n\tApDexPayloadAndSettingsProps,\n\tSetApDexPayloadProps,\n} from 'types/api/metrics/getApDex';\n\nexport const useSetApDexSettings = ({\n\tservicename,\n\tthreshold,\n\texcludeStatusCode,\n}: ApDexPayloadAndSettingsProps): UseMutationResult<\n\tSetApDexPayloadProps,\n\tError,\n\tApDexPayloadAndSettingsProps\n> =>\n\tuseMutation<SetApDexPayloadProps, Error, ApDexPayloadAndSettingsProps>({\n\t\tmutationKey: [servicename, threshold.toString(), excludeStatusCode],\n\t\tmutationFn: async () =>\n\t\t\tsetApDexSettings({ servicename, threshold, excludeStatusCode }),\n\t});\n","import { SettingOutlined } from '@ant-design/icons';\nimport { Popover } from 'antd';\nimport { IServiceName } from 'container/MetricsApplication/Tabs/types';\nimport { useGetApDexSettings } from 'hooks/apDex/useGetApDexSettings';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Button } from '../styles';\nimport ApDexSettings from './ApDexSettings';\n\nfunction ApDexApplication(): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\tconst {\n\t\tdata,\n\t\tisLoading,\n\t\terror,\n\t\trefetch: refetchGetApDexSetting,\n\t} = useGetApDexSettings(servicename);\n\tconst [isOpen, setIsOpen] = useState<boolean>(false);\n\tconst { notifications } = useNotifications();\n\n\tuseEffect(() => {\n\t\tif (error) {\n\t\t\tnotifications.error({\n\t\t\t\tmessage: error.getErrorCode(),\n\t\t\t\tdescription: error.getErrorMessage(),\n\t\t\t});\n\t\t}\n\t}, [error, notifications]);\n\n\tconst handlePopOverClose = (): void => {\n\t\tsetIsOpen(false);\n\t};\n\n\tconst handleOpenChange = (newOpen: boolean): void => {\n\t\tsetIsOpen(newOpen);\n\t};\n\n\treturn (\n\t\t<Popover\n\t\t\tplacement=\"bottomRight\"\n\t\t\tdestroyTooltipOnHide\n\t\t\ttrigger={['click']}\n\t\t\tshowArrow={false}\n\t\t\topen={isOpen}\n\t\t\tonOpenChange={handleOpenChange}\n\t\t\tcontent={\n\t\t\t\t<ApDexSettings\n\t\t\t\t\tservicename={servicename}\n\t\t\t\t\thandlePopOverClose={handlePopOverClose}\n\t\t\t\t\tisLoading={isLoading}\n\t\t\t\t\tdata={data}\n\t\t\t\t\trefetchGetApDexSetting={refetchGetApDexSetting}\n\t\t\t\t/>\n\t\t\t}\n\t\t>\n\t\t\t<Button size=\"middle\" icon={<SettingOutlined />}>\n\t\t\t\tSettings\n\t\t\t</Button>\n\t\t</Popover>\n\t);\n}\n\nexport default ApDexApplication;\n","import { CloseOutlined } from '@ant-design/icons';\nimport { Card, InputNumber } from 'antd';\nimport Spinner from 'components/Spinner';\nimport TextToolTip from 'components/TextToolTip';\nimport {\n\tapDexToolTipText,\n\tapDexToolTipUrl,\n\tapDexToolTipUrlText,\n} from 'constants/apDex';\nimport { themeColors } from 'constants/theme';\nimport { useSetApDexSettings } from 'hooks/apDex/useSetApDexSettings';\nimport { useNotifications } from 'hooks/useNotifications';\nimport { useState } from 'react';\n\nimport { APPLICATION_SETTINGS } from '../constants';\nimport {\n\tAppDexThresholdContainer,\n\tButton,\n\tSaveAndCancelContainer,\n\tSaveButton,\n\tTypography,\n} from '../styles';\nimport { onSaveApDexSettings } from '../utils';\nimport { ApDexSettingsProps } from './types';\n\nfunction ApDexSettings({\n\tservicename,\n\thandlePopOverClose,\n\tisLoading,\n\tdata,\n\trefetchGetApDexSetting,\n}: ApDexSettingsProps): JSX.Element {\n\tconst [thresholdValue, setThresholdValue] = useState(() => {\n\t\tif (data) {\n\t\t\treturn data.data[0].threshold;\n\t\t}\n\t\treturn 0;\n\t});\n\tconst { notifications } = useNotifications();\n\n\tconst { isLoading: isApDexLoading, mutateAsync } = useSetApDexSettings({\n\t\tservicename,\n\t\tthreshold: thresholdValue,\n\t\texcludeStatusCode: '',\n\t});\n\n\tconst handleThreadholdChange = (value: number | null): void => {\n\t\tif (value !== null) {\n\t\t\tsetThresholdValue(value);\n\t\t}\n\t};\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Typography.Text style={{ color: themeColors.white }}>\n\t\t\t\t<Spinner height=\"5vh\" tip=\"Loading...\" />\n\t\t\t</Typography.Text>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Card\n\t\t\ttitle={APPLICATION_SETTINGS}\n\t\t\textra={<CloseOutlined width={10} height={10} onClick={handlePopOverClose} />}\n\t\t\tactions={[\n\t\t\t\t<SaveAndCancelContainer key=\"SaveAndCancelContainer\">\n\t\t\t\t\t<Button onClick={handlePopOverClose}>Cancel</Button>\n\t\t\t\t\t<SaveButton\n\t\t\t\t\t\tonClick={onSaveApDexSettings({\n\t\t\t\t\t\t\thandlePopOverClose,\n\t\t\t\t\t\t\tmutateAsync,\n\t\t\t\t\t\t\tnotifications,\n\t\t\t\t\t\t\trefetchGetApDexSetting,\n\t\t\t\t\t\t\tservicename,\n\t\t\t\t\t\t\tthresholdValue,\n\t\t\t\t\t\t})}\n\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\tloading={isApDexLoading}\n\t\t\t\t\t>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</SaveButton>\n\t\t\t\t</SaveAndCancelContainer>,\n\t\t\t]}\n\t\t>\n\t\t\t<AppDexThresholdContainer>\n\t\t\t\t<Typography>\n\t\t\t\t\tApdex threshold (in seconds){' '}\n\t\t\t\t\t<TextToolTip\n\t\t\t\t\t\ttext={apDexToolTipText}\n\t\t\t\t\t\turl={apDexToolTipUrl}\n\t\t\t\t\t\tuseFilledIcon={false}\n\t\t\t\t\t\turlText={apDexToolTipUrlText}\n\t\t\t\t\t/>\n\t\t\t\t</Typography>\n\t\t\t\t<InputNumber\n\t\t\t\t\tvalue={thresholdValue}\n\t\t\t\t\tonChange={handleThreadholdChange}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tstep={0.1}\n\t\t\t\t/>\n\t\t\t</AppDexThresholdContainer>\n\t\t\t{/* TODO: Add this feature later when backend is ready to support it. */}\n\t\t\t{/* <ExcludeErrorCodeContainer>\n\t\t\t\t<Typography.Text>\n\t\t\t\t\tExclude following error codes from error rate calculation\n\t\t\t\t</Typography.Text>\n\t\t\t\t<Input placeholder=\"e.g. 406, 418\" />\n\t\t\t</ExcludeErrorCodeContainer> */}\n\t\t</Card>\n\t);\n}\n\nApDexSettings.defaultProps = {\n\tisLoading: undefined,\n\tdata: undefined,\n\trefetchGetApDexSetting: undefined,\n};\n\nexport default ApDexSettings;\n","import RouteTab from 'components/RouteTab';\nimport ROUTES from 'constants/routes';\nimport DBCall from 'container/MetricsApplication/Tabs/DBCall';\nimport External from 'container/MetricsApplication/Tabs/External';\nimport Overview from 'container/MetricsApplication/Tabs/Overview';\nimport ResourceAttributesFilter from 'container/ResourceAttributesFilter';\nimport useUrlQuery from 'hooks/useUrlQuery';\nimport history from 'lib/history';\nimport { useCallback, useMemo } from 'react';\nimport { generatePath, useParams } from 'react-router-dom';\n\nimport ApDexApplication from './ApDex/ApDexApplication';\nimport { MetricsApplicationTab, TAB_KEY_VS_LABEL } from './types';\nimport useMetricsApplicationTabKey from './useMetricsApplicationTabKey';\n\nfunction MetricsApplication(): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<{\n\t\tservicename: string;\n\t}>();\n\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\n\tconst activeKey = useMetricsApplicationTabKey();\n\n\tconst urlQuery = useUrlQuery();\n\n\tconst getRouteUrl = useCallback(\n\t\t(tab: MetricsApplicationTab): string => {\n\t\t\turlQuery.set('tab', tab);\n\t\t\treturn `${generatePath(ROUTES.SERVICE_METRICS, {\n\t\t\t\tservicename,\n\t\t\t})}?${urlQuery.toString()}`;\n\t\t},\n\t\t[servicename, urlQuery],\n\t);\n\n\tconst routes = useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tComponent: Overview,\n\t\t\t\tname: TAB_KEY_VS_LABEL[MetricsApplicationTab.OVER_METRICS],\n\t\t\t\troute: getRouteUrl(MetricsApplicationTab.OVER_METRICS),\n\t\t\t\tkey: MetricsApplicationTab.OVER_METRICS,\n\t\t\t},\n\t\t\t{\n\t\t\t\tComponent: DBCall,\n\t\t\t\tname: TAB_KEY_VS_LABEL[MetricsApplicationTab.DB_CALL_METRICS],\n\t\t\t\troute: getRouteUrl(MetricsApplicationTab.DB_CALL_METRICS),\n\t\t\t\tkey: MetricsApplicationTab.DB_CALL_METRICS,\n\t\t\t},\n\t\t\t{\n\t\t\t\tComponent: External,\n\t\t\t\tname: TAB_KEY_VS_LABEL[MetricsApplicationTab.EXTERNAL_METRICS],\n\t\t\t\troute: getRouteUrl(MetricsApplicationTab.EXTERNAL_METRICS),\n\t\t\t\tkey: MetricsApplicationTab.EXTERNAL_METRICS,\n\t\t\t},\n\t\t],\n\t\t[getRouteUrl],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<ResourceAttributesFilter />\n\t\t\t<ApDexApplication />\n\t\t\t<RouteTab routes={routes} history={history} activeKey={activeKey} />\n\t\t</>\n\t);\n}\n\nexport default MetricsApplication;\n","import { MetricsApplicationTab } from './types';\n\nexport const TAB_KEYS_VS_METRICS_APPLICATION_KEY = {\n\t[MetricsApplicationTab.DB_CALL_METRICS]: MetricsApplicationTab.DB_CALL_METRICS,\n\t[MetricsApplicationTab.EXTERNAL_METRICS]:\n\t\tMetricsApplicationTab.EXTERNAL_METRICS,\n\t[MetricsApplicationTab.OVER_METRICS]: MetricsApplicationTab.OVER_METRICS,\n};\n","export const APPLICATION_SETTINGS = 'Application Settings';\n","import {\n\tButton as ButtonComponent,\n\tTypography as TypographyComponent,\n} from 'antd';\nimport styled from 'styled-components';\n\nexport const Button = styled(ButtonComponent)`\n\t&&& {\n\t\twidth: min-content;\n\t\talign-self: flex-end;\n\t}\n`;\n\nexport const AppDexThresholdContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nexport const Typography = styled(TypographyComponent)`\n\t&&& {\n\t\twidth: 24rem;\n\t\tmargin: 0.5rem 0;\n\t}\n`;\n\nexport const SaveAndCancelContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-right: 1rem;\n`;\n\nexport const SaveButton = styled(ButtonComponent)`\n\t&&& {\n\t\tmargin: 0 0.5rem;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t}\n`;\n\nexport const ExcludeErrorCodeContainer = styled.div`\n\tmargin: 1rem 0;\n`;\n","import { NotificationInstance } from 'antd/es/notification/interface';\nimport { UseMutateAsyncFunction } from 'react-query';\nimport {\n\tApDexPayloadAndSettingsProps,\n\tSetApDexPayloadProps,\n} from 'types/api/metrics/getApDex';\n\nexport enum MetricsApplicationTab {\n\tOVER_METRICS = 'OVER_METRICS',\n\tDB_CALL_METRICS = 'DB_CALL_METRICS',\n\tEXTERNAL_METRICS = 'EXTERNAL_METRICS',\n}\n\nexport const TAB_KEY_VS_LABEL = {\n\t[MetricsApplicationTab.OVER_METRICS]: 'Overview',\n\t[MetricsApplicationTab.DB_CALL_METRICS]: 'DB Call Metrics',\n\t[MetricsApplicationTab.EXTERNAL_METRICS]: 'External Metrics',\n};\n\nexport interface OnSaveApDexSettingsProps {\n\tthresholdValue: number;\n\tservicename: string;\n\tnotifications: NotificationInstance;\n\trefetchGetApDexSetting?: VoidFunction;\n\tmutateAsync: UseMutateAsyncFunction<\n\t\tSetApDexPayloadProps,\n\t\tError,\n\t\tApDexPayloadAndSettingsProps\n\t>;\n\thandlePopOverClose: VoidFunction;\n}\n","import useUrlQuery from 'hooks/useUrlQuery';\n\nimport { getMetricsApplicationKey } from './utils';\n\nconst useMetricsApplicationTabKey = (): string => {\n\tconst urlParams = useUrlQuery();\n\n\tconst tab = urlParams.get('tab');\n\n\treturn getMetricsApplicationKey(tab);\n};\n\nexport default useMetricsApplicationTabKey;\n","import axios from 'axios';\nimport { SOMETHING_WENT_WRONG } from 'constants/api';\n\nimport { TAB_KEYS_VS_METRICS_APPLICATION_KEY } from './config';\nimport { MetricsApplicationTab, OnSaveApDexSettingsProps } from './types';\n\nexport const isMetricsApplicationTab = (\n\ttab: string,\n): tab is MetricsApplicationTab =>\n\tObject.values(MetricsApplicationTab).includes(tab as MetricsApplicationTab);\n\nexport const getMetricsApplicationKey = (\n\ttab: string | null,\n): MetricsApplicationTab => {\n\tif (tab && isMetricsApplicationTab(tab)) {\n\t\treturn TAB_KEYS_VS_METRICS_APPLICATION_KEY[tab];\n\t}\n\n\treturn MetricsApplicationTab.OVER_METRICS;\n};\n\nexport const onSaveApDexSettings = ({\n\tthresholdValue,\n\trefetchGetApDexSetting,\n\tmutateAsync,\n\tnotifications,\n\thandlePopOverClose,\n\tservicename,\n}: OnSaveApDexSettingsProps) => async (): Promise<void> => {\n\tif (!refetchGetApDexSetting) return;\n\n\ttry {\n\t\tawait mutateAsync({\n\t\t\tservicename,\n\t\t\tthreshold: thresholdValue,\n\t\t\texcludeStatusCode: '',\n\t\t});\n\t\tawait refetchGetApDexSetting();\n\t} catch (err) {\n\t\tnotifications.error({\n\t\t\tmessage: axios.isAxiosError(err) ? err.message : SOMETHING_WENT_WRONG,\n\t\t});\n\t} finally {\n\t\thandlePopOverClose();\n\t}\n};\n","import './ServiceTopLevelOperations.styles.scss';\n\nimport { SyncOutlined } from '@ant-design/icons';\nimport { Alert, Table, Typography } from 'antd';\nimport ROUTES from 'constants/routes';\nimport { IServiceName } from 'container/MetricsApplication/Tabs/types';\nimport useErrorNotification from 'hooks/useErrorNotification';\nimport { useQueryService } from 'hooks/useQueryService';\nimport useResourceAttribute from 'hooks/useResourceAttribute';\nimport { convertRawQueriesToTraceSelectedTags } from 'hooks/useResourceAttribute/utils';\nimport { BarChart2 } from 'lucide-react';\nimport { ReactNode, useEffect, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link, useParams } from 'react-router-dom';\nimport { AppState } from 'store/reducers';\nimport { GlobalReducer } from 'types/reducer/globalTime';\nimport { Tags } from 'types/reducer/trace';\n\nexport default function ServiceTopLevelOperations(): JSX.Element {\n\tconst { servicename: encodedServiceName } = useParams<IServiceName>();\n\tconst { maxTime, minTime, selectedTime } = useSelector<\n\t\tAppState,\n\t\tGlobalReducer\n\t>((state) => state.globalTime);\n\tconst servicename = decodeURIComponent(encodedServiceName);\n\tconst { queries } = useResourceAttribute();\n\tconst selectedTags = useMemo(\n\t\t() => (convertRawQueriesToTraceSelectedTags(queries) as Tags[]) || [],\n\t\t[queries],\n\t);\n\n\tconst [topLevelOperations, setTopLevelOperations] = useState<string[]>([]);\n\n\tconst { data, error, isLoading } = useQueryService({\n\t\tminTime,\n\t\tmaxTime,\n\t\tselectedTime,\n\t\tselectedTags,\n\t});\n\n\tuseErrorNotification(error);\n\n\tuseEffect(() => {\n\t\tconst selectedService = data?.find(\n\t\t\t(service) => service.serviceName === servicename,\n\t\t);\n\n\t\tsetTopLevelOperations(selectedService?.dataWarning?.topLevelOps || []);\n\t}, [servicename, data]);\n\n\tconst alertDesc = (): ReactNode => (\n\t\t<div className=\"\">\n\t\t\tSigNoz calculates the RED metrics for a service using the entry-point spans.\n\t\t\tFor more details, you can check out our\n\t\t\t<a\n\t\t\t\thref=\"https://signoz.io/docs/userguide/metrics/#open-the-services-section\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t\tdocs\n\t\t\t</a>\n\t\t\t. We expect the number of unique entry-point operations to be no more than\n\t\t\t2500. The high number of top level operations might be due to an\n\t\t\tinstrumentation issue in your service. Below table shows the sample top level\n\t\t\toperations. Please refer to official docs for span name guidelines{' '}\n\t\t\t<a\n\t\t\t\thref=\"https://opentelemetry.io/docs/specs/otel/trace/api/#span\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\t{' '}\n\t\t\t\there\n\t\t\t</a>{' '}\n\t\t\tand update the instrumentation to to follow the guidelines. If there are any\n\t\t\tdynamic IDs in the span name, make sure to use the span attributes instead.\n\t\t\tIf you have more questions, please reach out to us via support.\n\t\t</div>\n\t);\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: 'Top Level Operation',\n\t\t\tkey: 'top-level-operation',\n\t\t\trender: (operation: string): JSX.Element => (\n\t\t\t\t<div className=\"top-level-operations-list-item\" key={operation}>\n\t\t\t\t\t<Typography.Text> {operation} </Typography.Text>\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Typography.Title level={5} className=\"top-level-operations-header\">\n\t\t\t\t<Link to={ROUTES.APPLICATION}>\n\t\t\t\t\t<span className=\"breadcrumb\">\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t<BarChart2 size={12} /> services{' '}\n\t\t\t\t\t</span>\n\t\t\t\t</Link>\n\t\t\t\t<div className=\"divider\">/</div>\n\t\t\t\t<Link to={`${ROUTES.APPLICATION}/${servicename}`}>\n\t\t\t\t\t<span className=\"breadcrumb\">{servicename} </span>\n\t\t\t\t</Link>\n\t\t\t</Typography.Title>\n\n\t\t\t<div className=\"info-alert\">\n\t\t\t\t<Alert message={alertDesc()} type=\"info\" showIcon />\n\t\t\t</div>\n\n\t\t\t{isLoading && (\n\t\t\t\t<div className=\"loading-top-level-operations\">\n\t\t\t\t\t<Typography.Title level={5}>\n\t\t\t\t\t\t<SyncOutlined spin /> Loading ...\n\t\t\t\t\t</Typography.Title>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{!isLoading && (\n\t\t\t\t<div className=\"top-level-operations-list\">\n\t\t\t\t\t<Table\n\t\t\t\t\t\tcolumns={columns}\n\t\t\t\t\t\tbordered\n\t\t\t\t\t\ttitle={(): string => 'Top Level Operations'}\n\t\t\t\t\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\tdataSource={topLevelOperations}\n\t\t\t\t\t\tloading={isLoading}\n\t\t\t\t\t\tshowHeader={false}\n\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\tpageSize: 100,\n\t\t\t\t\t\t\thideOnSinglePage: true,\n\t\t\t\t\t\t\tshowTotal: (total: number, range: number[]): string =>\n\t\t\t\t\t\t\t\t`${range[0]}-${range[1]} of ${total}`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".overlay--text-wrap{white-space:pre-wrap}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/components/TextToolTip/TextToolTip.style.scss\"],\"names\":[],\"mappings\":\"AAAA,oBACC,oBAAA\",\"sourcesContent\":[\".overlay--text-wrap {\\n\\twhite-space: pre-wrap;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".graph-controls-panel{position:absolute;z-index:999;display:none;width:150px;padding:5px;border-radius:5px;background:var(--bg-slate-400)}.graph-controls-panel .ant-btn-link{padding:0;margin:0;text-decoration:none;color:var(--bg-vanilla-100);cursor:pointer;display:inline-flex;align-items:center;gap:2px;border:none}.graph-controls-panel .ant-btn-link:hover{color:var(--bg-vanilla-100)}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/MetricsApplication/Tabs/Overview/GraphControlsPanel/GraphControlsPanel.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,sBACC,iBAAA,CACA,WAAA,CACA,YAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,8BAAA,CAEA,oCACC,SAAA,CACA,QAAA,CACA,oBAAA,CACA,2BAAA,CACA,cAAA,CACA,mBAAA,CACA,kBAAA,CACA,OAAA,CACA,WAAA,CAGD,0CACC,2BAAA\",\"sourcesContent\":[\".graph-controls-panel {\\n\\tposition: absolute;\\n\\tz-index: 999;\\n\\tdisplay: none;\\n\\twidth: 150px;\\n\\tpadding: 5px;\\n\\tborder-radius: 5px;\\n\\tbackground: var(--bg-slate-400);\\n\\n\\t.ant-btn-link {\\n\\t\\tpadding: 0;\\n\\t\\tmargin: 0;\\n\\t\\ttext-decoration: none;\\n\\t\\tcolor: var(--bg-vanilla-100);\\n\\t\\tcursor: pointer;\\n\\t\\tdisplay: inline-flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 2px;\\n\\t\\tborder: none;\\n\\t}\\n\\n\\t.ant-btn-link:hover {\\n\\t\\tcolor: var(--bg-vanilla-100);\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".top-operation{position:relative}.top-operation .top-operation--download{position:absolute;top:15px;right:0px;z-index:1}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/container/MetricsApplication/TopOperationsTable.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,eACC,iBAAA,CACA,wCACC,iBAAA,CACA,QAAA,CACA,SAAA,CACA,SAAA\",\"sourcesContent\":[\".top-operation {\\n\\tposition: relative;\\n\\t.top-operation--download {\\n\\t\\tposition: absolute;\\n\\t\\ttop: 15px;\\n\\t\\tright: 0px;\\n\\t\\tz-index: 1;\\n\\t}\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".title{font-weight:500;font-size:14px;margin:16px 0}.info-alert{margin:16px 0}.top-level-operations-header{display:flex;align-items:center;gap:8px}.breadcrumb{display:inline-flex;align-items:center;gap:8px}.top-level-operations-list{margin-top:16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/pages/ServiceTopLevelOperations/ServiceTopLevelOperations.styles.scss\"],\"names\":[],\"mappings\":\"AAAA,OACC,eAAA,CACA,cAAA,CAEA,aAAA,CAGD,YACC,aAAA,CAGD,6BACC,YAAA,CACA,kBAAA,CACA,OAAA,CAGD,YACC,mBAAA,CACA,kBAAA,CACA,OAAA,CAGD,2BACC,eAAA\",\"sourcesContent\":[\".title {\\n\\tfont-weight: 500;\\n\\tfont-size: 14px;\\n\\n\\tmargin: 16px 0;\\n}\\n\\n.info-alert {\\n\\tmargin: 16px 0;\\n}\\n\\n.top-level-operations-header {\\n\\tdisplay: flex;\\n\\talign-items: center;\\n\\tgap: 8px;\\n}\\n\\n.breadcrumb {\\n\\tdisplay: inline-flex;\\n\\talign-items: center;\\n\\tgap: 8px;\\n}\\n\\n.top-level-operations-list {\\n\\tmargin-top: 16px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./TextToolTip.style.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js!../../../../../../node_modules/sass-loader/dist/cjs.js!./GraphControlsPanel.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./TopOperationsTable.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./ServiceTopLevelOperations.styles.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};"],"names":["CloseOutlined","props","ref","A","icon","displayName","QuestionCircleFilled","QuestionCircleOutlined","setApDexSettings","async","servicename","threshold","excludeStatusCode","_ref","axios","post","reactHotLoader","leaveModule","reactHotLoaderGlobal","default","undefined","register","module","getMetricMeta","metricName","ApiV4Instance","get","concat","getTopOperations","start","end","service","tags","selectedTags","data","_default","getApDexSettings","response","httpStatusCode","status","error","ErrorResponseHandlerV2","TextToolTip","text","url","useFilledIcon","urlText","isDarkMode","useIsDarkMode","onClickHandler","event","stopPropagation","overlay","useMemo","_jsxs","className","children","_jsx","onClick","href","rel","target","iconStyle","style","color","themeColors","whiteCream","grey","iconOutlinedStyle","navyBlue","blue","Tooltip","defaultProps","fontSize","apDexToolTipText","apDexToolTipUrl","apDexToolTipUrlText","DisplayThreshold","DisplayThresholdContainer","TypographHeading","Typography","InfoCircleOutlined","HeaderContainer","styled","div","_templateObject","_taggedTemplateLiteral","HeaderContentContainer","span","_templateObject2","ThesholdContainer","_templateObject3","_templateObject4","WidgetHeaderContainer","_templateObject5","ArrowContainer","_templateObject6","hover","TypographyComponent","_templateObject7","_templateObject8","databaseCallsRPS","legend","tagFilterItems","dotMetricsEnabled","autocompleteData","key","WidgetKeys","SignozDBLatencyCount","dataType","DataTypes","Float64","isColumn","type","groupBy","String","Db_system","Db_system_norm","filterItems","id","Service_name","Service_name_norm","MetricsType","Resource","op","OPERATORS","IN","value","legends","dataSource","DataSource","METRICS","timeAggregateOperators","MetricAggregateOperator","RATE","spaceAggregateOperators","SUM","getQueryBuilderQueries","databaseCallsAvgDuration","_ref2","autocompleteDataA","SignozDbLatencySum","autocompleteDataB","additionalItemsA","additionalItems","expressions","FORMULA","DATABASE_CALLS_AVG_DURATION","getQueryBuilderQuerieswithFormula","disabled","legendFormulas","Address","Tag","externalCallErrorPercent","SignozExternalCallLatencyCount","StatusCode","StatusCodeNorm","Int64","additionalItemsB","ERROR_PERCENTAGE","externalCallDuration","SignozExternalCallLatencySum","externalCallRpsByAddress","_ref3","externalCallDurationByAddress","_ref4","latency","isSpanMetricEnable","topLevelOperationsRoute","signozLatencyBucketMetrics","Signoz_latency_bucket","Signoz_latency_bucket_norm","signozMetricsServiceName","newAutoCompleteData","DurationNano","Array","fill","filterItem","ServiceName","Operation","Name","toLowerCase","LATENCY_AGGREGATEOPERATOR","aggregateOperator","LATENCY_AGGREGATEOPERATOR_SPAN_METRICS","TRACES","queryNameAndExpression","QUERYNAME_AND_EXPRESSION","EMPTY","P50","P90","P99","apDexTracesQueryBuilderQueries","threashold","HasError","bool","convertMilSecToNanoSec","GraphTitle","APDEX","APDEX_TRACES","COUNT","apDexMetricsQueryBuilderQueries","delta","metricsBuckets","SignozLatencyCount","SignozLatencyCountNorm","Le","getNearestHighestBucketValue","APDEX_DELTA_SPAN_METRICS","APDEX_CUMULATIVE_SPAN_METRICS","operationPerSec","topLevelOperations","OPERATION_LEGENDS","errorPercentage","_ref5","SignozCallsTotal","topOperationQueries","latencyAutoCompleteData","errorRateAutoCompleteData","numOfCallAutoCompleteData","latencyAndNumberOfCallAdditionalItems","errorRateAdditionalItemsA","errorRateAdditionalItemsB","KeyOperationTableHeader","ERROR_RATE","NUM_OF_CALLS","DBCall","_featureFlags$find","encodedServiceName","useParams","decodeURIComponent","selectedTimeStamp","setSelectedTimeStamp","useState","queries","useResourceAttribute","urlQuery","useUrlQuery","pathname","useLocation","dispatch","useDispatch","onDragSelect","useCallback","startTimestamp","Math","trunc","endTimestamp","set","QueryParams","startTime","toString","endTime","generatedUrl","history","push","UpdateTimeInterval","handleNonInQueryRange","resourceAttributesToTagFilterItems","selectedTraceTags","JSON","stringify","convertRawQueriesToTraceSelectedTags","dbSystemTags","featureFlags","useAppContext","find","flag","name","FeatureKeys","DOT_METRICS_ENABLED","active","databaseCallsRPSWidget","getWidgetQueryBuilder","query","queryType","EQueryType","QUERY_BUILDER","promql","builder","clickhouse_sql","uuid","title","DATABASE_CALLS_RPS","panelTypes","PANEL_TYPES","TIME_SERIES","yAxisUnit","SERVICE_CHART_ID","dbCallsRPS","fillSpans","databaseCallsAverageDurationWidget","stepInterval","getStep","store","getState","globalTime","maxTime","inputFormat","minTime","logEventCalledRef","useRef","useEffect","current","_queries$find","selectedEnvironments","val","tagKey","getResourceDeploymentKeys","tagValue","logEvent","resourceAttributeUsed","length","section","apmToTraceQuery","useGetAPMToTracesQueries","isDBCall","safeNavigate","useSafeNavigate","onGraphClickHandler","useGraphClickHandler","Row","gutter","Col","Button","size","onViewTracePopupClick","timestamp","Card","GraphContainer","Graph","widget","xValue","yValue","mouseX","mouseY","version","ENTITY_VERSION_V4","headerMenuList","MENU_ITEMS","External","selectedData","setSelectedData","externalCallErrorWidget","address","EXTERNAL_CALL_ERROR_PERCENTAGE","externalCallDurationWidget","EXTERNAL_CALL_DURATION","errorApmToTraceQuery","isExternalCall","filters","slice","isJSON","externalCallRPSWidget","EXTERNAL_CALL_RPS_BY_ADDRESS","externalCallDurationAddressWidget","EXTERNAL_CALL_DURATION_BY_ADDRESS","_Fragment","GraphControlsPanel","onViewTracesClick","onViewAPIMonitoringClick","onViewAPIMonitoringPopupClick","domainName","isError","Application","_featureFlags$find2","useSelector","state","search","isSpanMetricEnabled","USE_SPAN_METRICS","handleSetTimeStamp","selectTime","handleGraphClick","topLevelOperationsError","isLoading","topLevelOperationsIsLoading","topLevelOperationsIsError","useQuery","queryKey","queryFn","getTopLevelOperations","defaultTo","operationPerSecWidget","RATE_PER_OPS","rps","errorPercentageWidget","onErrorTrackHandler","isViewLogsClicked","secondsToMilliseconds","urlParams","URLSearchParams","delete","relativeTime","avialableParams","routeConfig","ROUTES","TRACE","queryString","getQueryString","JSONCompositeQuery","encodeURIComponent","newPath","generateExplorerPath","logErrorQuery","useGetAPMToLogsQueries","errorTrackQuery","ServiceOverview","TopLevelOperation","opName","ColApDexContainer","ApDex","ColErrorContainer","onViewLogsClick","TopOperationMetrics","TopOperation","ApDexMetrics","thresholdValue","apDexMetricsWidget","Space","apdex","isQueryEnabled","le","ApDexMetricsApplication","useGetMetricMeta","metricMeta","useErrorNotification","Spinner","height","tip","ApDexApplication","notifications","useNotifications","isRefetching","useGetApDexSettings","message","getErrorCode","description","getErrorMessage","memo","DraftingCompass","Color","BG_VANILLA_100","ScrollText","Binoculars","latencyWidget","LATENCY","apmToLogQuery","Skeleton","padding","ColumnWithLink","record","placement","Link","operation","navigateToTrace","getTableColumnRenderer","columnName","renderFunction","_topLevelOperationsEr","isAxiosError","SOMETHING_WENT_WRONG","topOperationData","TopOperationsTable","_data$payload","selectedTime","globalSelectedInterval","keyOperationWidget","TABLE","updatedQuery","useStepInterval","isEmptyWidget","EMPTY_WIDGET","useGetQueryRange","timePreferance","graphType","variables","keepPreviousData","enabled","refetchOnMount","onError","queryTableData","payload","newResult","result","renderColumnCell","QueryTable","loading","downloadOption","topOperationMetricsDownloadOptions","sticky","searchInput","params","columns","dataIndex","width","filterDropdown","filterIcon","SearchOutlined","onFilter","includes","onFilterDropdownOpenChange","visible","setTimeout","_searchInput$current","select","render","_apmToTraceQuery$buil","opFilters","preparedQuery","queryData","map","item","items","handleOnClick","sorter","a","b","p50","toFixed","p95","p99","numCalls","first","second","getErrorRate","_","downloadableData","convertedTracesToDownloadData","Download","fileName","ResizeTable","showHeader","tableLayout","rowKey","pagination","pageSize","showSizeChanger","hideOnSinglePage","CardComponent","RowComponent","ColComponent","list","errorCount","floor","TRACES_EXPLORER","compositeQuery","buckets","sort","nearestBucket","bucket","originalData","__signature__","useSetApDexSettings","useMutation","mutationKey","mutationFn","refetch","refetchGetApDexSetting","isOpen","setIsOpen","Popover","destroyTooltipOnHide","trigger","showArrow","open","onOpenChange","newOpen","content","ApDexSettings","handlePopOverClose","SettingOutlined","setThresholdValue","isApDexLoading","mutateAsync","Text","white","APPLICATION_SETTINGS","extra","actions","SaveAndCancelContainer","SaveButton","onSaveApDexSettings","AppDexThresholdContainer","InputNumber","onChange","min","step","MetricsApplication","activeKey","useMetricsApplicationTabKey","getRouteUrl","tab","generatePath","SERVICE_METRICS","routes","Component","Overview","TAB_KEY_VS_LABEL","MetricsApplicationTab","OVER_METRICS","route","DB_CALL_METRICS","EXTERNAL_METRICS","ResourceAttributesFilter","RouteTab","TAB_KEYS_VS_METRICS_APPLICATION_KEY","ButtonComponent","ExcludeErrorCodeContainer","getMetricsApplicationKey","isMetricsApplicationTab","Object","values","err","ServiceTopLevelOperations","setTopLevelOperations","useQueryService","_selectedService$data","selectedService","serviceName","dataWarning","topLevelOps","Title","level","to","APPLICATION","BarChart2","Alert","showIcon","SyncOutlined","spin","Table","bordered","showTotal","total","range","___CSS_LOADER_EXPORT___","api","__esModule","options","exports","locals"],"sourceRoot":""}